{"version":3,"file":"ej2-data.min.js","sources":["../../src/query.js","../../src/util.js","../../src/adaptors.js","../../src/manager.js"],"sourcesContent":["/* eslint-disable valid-jsdoc */\n/* eslint-disable security/detect-object-injection */\nimport { DataUtil } from './util';\nimport { isNullOrUndefined } from '@syncfusion/ej2-base';\n/**\n * Query class is used to build query which is used by the DataManager to communicate with datasource.\n */\nvar Query = /** @class */ (function () {\n    /**\n     * Constructor for Query class.\n     *\n     * @param {string|string[]} from?\n     * @param from\n     * @hidden\n     */\n    function Query(from) {\n        /** @hidden */\n        this.subQuery = null;\n        /** @hidden */\n        this.isChild = false;\n        /** @hidden */\n        this.distincts = [];\n        this.queries = [];\n        this.key = '';\n        this.fKey = '';\n        if (typeof from === 'string') {\n            this.fromTable = from;\n        }\n        else if (from && from instanceof Array) {\n            this.lookups = from;\n        }\n        this.expands = [];\n        this.sortedColumns = [];\n        this.groupedColumns = [];\n        this.subQuery = null;\n        this.isChild = false;\n        this.params = [];\n        this.lazyLoad = [];\n        return this;\n    }\n    Object.defineProperty(Query.prototype, \"moduleName\", {\n        /** @hidden */\n        get: function () { return 'query'; },\n        enumerable: true,\n        configurable: true\n    });\n    ;\n    /**\n     * Sets the primary key.\n     *\n     * @param  {string} field - Defines the column field.\n     */\n    Query.prototype.setKey = function (field) {\n        this.key = field;\n        return this;\n    };\n    /**\n     * Sets default DataManager to execute query.\n     *\n     * @param  {DataManager} dataManager - Defines the DataManager.\n     */\n    Query.prototype.using = function (dataManager) {\n        this.dataManager = dataManager;\n        return this;\n    };\n    /**\n     * Executes query with the given DataManager.\n     *\n     * @param  {DataManager} dataManager - Defines the DataManager.\n     * @param  {Function} done - Defines the success callback.\n     * @param  {Function} fail - Defines the failure callback.\n     * @param  {Function} always - Defines the callback which will be invoked on either success or failure.\n     *\n     * <pre>\n     * let dataManager: DataManager = new DataManager([{ ID: '10' }, { ID: '2' }, { ID: '1' }, { ID: '20' }]);\n     * let query: Query = new Query();\n     * query.sortBy('ID', (x: string, y: string): number => { return parseInt(x, 10) - parseInt(y, 10) });\n     * let promise: Promise< Object > = query.execute(dataManager);\n     * promise.then((e: { result: Object }) => { });\n     * </pre>\n     */\n    Query.prototype.execute = function (dataManager, done, fail, always) {\n        dataManager = dataManager || this.dataManager;\n        if (dataManager) {\n            return dataManager.executeQuery(this, done, fail, always);\n        }\n        return DataUtil.throwError('Query - execute() : dataManager needs to be is set using \"using\" function or should be passed as argument');\n    };\n    /**\n     * Executes query with the local datasource.\n     *\n     * @param  {DataManager} dataManager - Defines the DataManager.\n     */\n    Query.prototype.executeLocal = function (dataManager) {\n        dataManager = dataManager || this.dataManager;\n        if (dataManager) {\n            return dataManager.executeLocal(this);\n        }\n        return DataUtil.throwError('Query - executeLocal() : dataManager needs to be is set using \"using\" function or should be passed as argument');\n    };\n    /**\n     * Creates deep copy of the Query object.\n     */\n    Query.prototype.clone = function () {\n        var cloned = new Query();\n        cloned.queries = this.queries.slice(0);\n        cloned.key = this.key;\n        cloned.isChild = this.isChild;\n        cloned.dataManager = this.dataManager;\n        cloned.fromTable = this.fromTable;\n        cloned.params = this.params.slice(0);\n        cloned.expands = this.expands.slice(0);\n        cloned.sortedColumns = this.sortedColumns.slice(0);\n        cloned.groupedColumns = this.groupedColumns.slice(0);\n        cloned.subQuerySelector = this.subQuerySelector;\n        cloned.subQuery = this.subQuery;\n        cloned.fKey = this.fKey;\n        cloned.isCountRequired = this.isCountRequired;\n        cloned.distincts = this.distincts.slice(0);\n        cloned.lazyLoad = this.lazyLoad.slice(0);\n        return cloned;\n    };\n    /**\n     * Specifies the name of table to retrieve data in query execution.\n     *\n     * @param  {string} tableName - Defines the table name.\n     */\n    Query.prototype.from = function (tableName) {\n        this.fromTable = tableName;\n        return this;\n    };\n    /**\n     * Adds additional parameter which will be sent along with the request which will be generated while DataManager execute.\n     *\n     * @param  {string} key - Defines the key of additional parameter.\n     * @param  {Function|string} value - Defines the value for the key.\n     */\n    Query.prototype.addParams = function (key, value) {\n        if (typeof value === 'function') {\n            this.params.push({ key: key, fn: value });\n        }\n        else {\n            this.params.push({ key: key, value: value });\n        }\n        return this;\n    };\n    /**\n     * @param fields\n     * @hidden\n     */\n    Query.prototype.distinct = function (fields) {\n        if (typeof fields === 'string') {\n            this.distincts = [].slice.call([fields], 0);\n        }\n        else {\n            this.distincts = fields.slice(0);\n        }\n        return this;\n    };\n    /**\n     * Expands the related table.\n     *\n     * @param  {string|Object[]} tables\n     */\n    Query.prototype.expand = function (tables) {\n        if (typeof tables === 'string') {\n            this.expands = [].slice.call([tables], 0);\n        }\n        else {\n            this.expands = tables.slice(0);\n        }\n        return this;\n    };\n    /**\n     * Filter data with given filter criteria.\n     *\n     * @param {string|Predicate} fieldName - Defines the column field or Predicate.\n     * @param {string} operator - Defines the operator how to filter data.\n     * @param {string|number|boolean} value - Defines the values to match with data.\n     * @param {boolean} ignoreCase - If ignore case set to false, then filter data with exact match or else\n     * filter data with case insensitive.\n     * @param ignoreAccent\n     * @param matchCase\n     */\n    Query.prototype.where = function (fieldName, operator, value, ignoreCase, ignoreAccent, matchCase) {\n        operator = operator ? (operator).toLowerCase() : null;\n        var predicate = null;\n        if (typeof fieldName === 'string') {\n            predicate = new Predicate(fieldName, operator, value, ignoreCase, ignoreAccent, matchCase);\n        }\n        else if (fieldName instanceof Predicate) {\n            predicate = fieldName;\n        }\n        this.queries.push({\n            fn: 'onWhere',\n            e: predicate\n        });\n        return this;\n    };\n    /**\n     * Search data with given search criteria.\n     *\n     * @param {string|number|boolean} searchKey - Defines the search key.\n     * @param {string|string[]} fieldNames - Defines the collection of column fields.\n     * @param {string} operator - Defines the operator how to search data.\n     * @param {boolean} ignoreCase - If ignore case set to false, then filter data with exact match or else\n     * filter data with case insensitive.\n     * @param ignoreAccent\n     */\n    Query.prototype.search = function (searchKey, fieldNames, operator, ignoreCase, ignoreAccent) {\n        if (typeof fieldNames === 'string') {\n            fieldNames = [fieldNames];\n        }\n        if (!operator || operator === 'none') {\n            operator = 'contains';\n        }\n        var comparer = DataUtil.fnOperators[operator];\n        this.queries.push({\n            fn: 'onSearch',\n            e: {\n                fieldNames: fieldNames,\n                operator: operator,\n                searchKey: searchKey,\n                ignoreCase: ignoreCase,\n                ignoreAccent: ignoreAccent,\n                comparer: comparer\n            }\n        });\n        return this;\n    };\n    /**\n     * Sort the data with given sort criteria.\n     * By default, sort direction is ascending.\n     *\n     * @param {string|string[]} fieldName - Defines the single or collection of column fields.\n     * @param {string|Function} comparer - Defines the sort direction or custom sort comparer function.\n     * @param isFromGroup\n     */\n    Query.prototype.sortBy = function (fieldName, comparer, isFromGroup) {\n        return this.sortByForeignKey(fieldName, comparer, isFromGroup);\n    };\n    /**\n     * Sort the data with given sort criteria.\n     * By default, sort direction is ascending.\n     *\n     * @param {string|string[]} fieldName - Defines the single or collection of column fields.\n     * @param {string|Function} comparer - Defines the sort direction or custom sort comparer function.\n     * @param isFromGroup\n     * @param {string} direction - Defines the sort direction .\n     */\n    Query.prototype.sortByForeignKey = function (fieldName, comparer, isFromGroup, direction) {\n        var order = !isNullOrUndefined(direction) ? direction : 'ascending';\n        var sorts;\n        var temp;\n        if (typeof fieldName === 'string' && DataUtil.endsWith(fieldName.toLowerCase(), ' desc')) {\n            fieldName = fieldName.replace(/ desc$/i, '');\n            comparer = 'descending';\n        }\n        if (!comparer || typeof comparer === 'string') {\n            order = comparer ? comparer.toLowerCase() : 'ascending';\n            comparer = DataUtil.fnSort(comparer);\n        }\n        if (isFromGroup) {\n            sorts = Query.filterQueries(this.queries, 'onSortBy');\n            for (var i = 0; i < sorts.length; i++) {\n                temp = sorts[i].e.fieldName;\n                if (typeof temp === 'string') {\n                    if (temp === fieldName) {\n                        return this;\n                    }\n                }\n                else if (temp instanceof Array) {\n                    for (var j = 0; j < temp.length; j++) {\n                        if (temp[j] === fieldName || fieldName.toLowerCase() === temp[j] + ' desc') {\n                            return this;\n                        }\n                    }\n                }\n            }\n        }\n        this.queries.push({\n            fn: 'onSortBy',\n            e: {\n                fieldName: fieldName,\n                comparer: comparer,\n                direction: order\n            }\n        });\n        return this;\n    };\n    /**\n     * Sorts data in descending order.\n     *\n     * @param  {string} fieldName - Defines the column field.\n     */\n    Query.prototype.sortByDesc = function (fieldName) {\n        return this.sortBy(fieldName, 'descending');\n    };\n    /**\n     * Groups data with the given field name.\n     *\n     * @param {string} fieldName - Defines the column field.\n     * @param fn\n     * @param format\n     */\n    Query.prototype.group = function (fieldName, fn, format) {\n        this.sortBy(fieldName, null, true);\n        this.queries.push({\n            fn: 'onGroup',\n            e: {\n                fieldName: fieldName,\n                comparer: fn ? fn : null,\n                format: format ? format : null\n            }\n        });\n        return this;\n    };\n    /**\n     * Gets data based on the given page index and size.\n     *\n     * @param  {number} pageIndex - Defines the current page index.\n     * @param  {number} pageSize - Defines the no of records per page.\n     */\n    Query.prototype.page = function (pageIndex, pageSize) {\n        this.queries.push({\n            fn: 'onPage',\n            e: {\n                pageIndex: pageIndex,\n                pageSize: pageSize\n            }\n        });\n        return this;\n    };\n    /**\n     * Gets data based on the given start and end index.\n     *\n     * @param  {number} start - Defines the start index of the datasource.\n     * @param  {number} end - Defines the end index of the datasource.\n     */\n    Query.prototype.range = function (start, end) {\n        this.queries.push({\n            fn: 'onRange',\n            e: {\n                start: start,\n                end: end\n            }\n        });\n        return this;\n    };\n    /**\n     * Gets data from the top of the data source based on given number of records count.\n     *\n     * @param  {number} nos - Defines the no of records to retrieve from datasource.\n     */\n    Query.prototype.take = function (nos) {\n        this.queries.push({\n            fn: 'onTake',\n            e: {\n                nos: nos\n            }\n        });\n        return this;\n    };\n    /**\n     * Skips data with given number of records count from the top of the data source.\n     *\n     * @param  {number} nos - Defines the no of records skip in the datasource.\n     */\n    Query.prototype.skip = function (nos) {\n        this.queries.push({\n            fn: 'onSkip',\n            e: { nos: nos }\n        });\n        return this;\n    };\n    /**\n     * Selects specified columns from the data source.\n     *\n     * @param  {string|string[]} fieldNames - Defines the collection of column fields.\n     */\n    Query.prototype.select = function (fieldNames) {\n        if (typeof fieldNames === 'string') {\n            fieldNames = [].slice.call([fieldNames], 0);\n        }\n        this.queries.push({\n            fn: 'onSelect',\n            e: { fieldNames: fieldNames }\n        });\n        return this;\n    };\n    /**\n     * Gets the records in hierarchical relationship from two tables. It requires the foreign key to relate two tables.\n     *\n     * @param  {Query} query - Defines the query to relate two tables.\n     * @param  {Function} selectorFn - Defines the custom function to select records.\n     */\n    Query.prototype.hierarchy = function (query, selectorFn) {\n        this.subQuerySelector = selectorFn;\n        this.subQuery = query;\n        return this;\n    };\n    /**\n     * Sets the foreign key which is used to get data from the related table.\n     *\n     * @param  {string} key - Defines the foreign key.\n     */\n    Query.prototype.foreignKey = function (key) {\n        this.fKey = key;\n        return this;\n    };\n    /**\n     * It is used to get total number of records in the DataManager execution result.\n     */\n    Query.prototype.requiresCount = function () {\n        this.isCountRequired = true;\n        return this;\n    };\n    //type - sum, avg, min, max\n    /**\n     * Aggregate the data with given type and field name.\n     *\n     * @param  {string} type - Defines the aggregate type.\n     * @param  {string} field - Defines the column field to aggregate.\n     */\n    Query.prototype.aggregate = function (type, field) {\n        this.queries.push({\n            fn: 'onAggregates',\n            e: { field: field, type: type }\n        });\n        return this;\n    };\n    /**\n     * Pass array of filterColumn query for performing filter operation.\n     *\n     * @param  {QueryOptions[]} queries\n     * @param  {string} name\n     * @hidden\n     */\n    Query.filterQueries = function (queries, name) {\n        return queries.filter(function (q) {\n            return q.fn === name;\n        });\n    };\n    /**\n     * To get the list of queries which is already filtered in current data source.\n     *\n     * @param  {Object[]} queries\n     * @param  {string[]} singles\n     * @hidden\n     */\n    Query.filterQueryLists = function (queries, singles) {\n        var filtered = queries.filter(function (q) {\n            return singles.indexOf(q.fn) !== -1;\n        });\n        var res = {};\n        for (var i = 0; i < filtered.length; i++) {\n            if (!res[filtered[i].fn]) {\n                res[filtered[i].fn] = filtered[i].e;\n            }\n        }\n        return res;\n    };\n    return Query;\n}());\nexport { Query };\n/**\n * Predicate class is used to generate complex filter criteria.\n * This will be used by DataManager to perform multiple filtering operation.\n */\nvar Predicate = /** @class */ (function () {\n    /**\n     * Constructor for Predicate class.\n     *\n     * @param {string|Predicate} field\n     * @param {string} operator\n     * @param {string|number|boolean|Predicate|Predicate[]} value\n     * @param {boolean=false} ignoreCase\n     * @param ignoreAccent\n     * @param {boolean} matchCase\n     * @hidden\n     */\n    function Predicate(field, operator, value, ignoreCase, ignoreAccent, matchCase) {\n        if (ignoreCase === void 0) { ignoreCase = false; }\n        /** @hidden */\n        this.ignoreAccent = false;\n        /** @hidden */\n        this.isComplex = false;\n        if (typeof field === 'string') {\n            this.field = field;\n            this.operator = operator.toLowerCase();\n            this.value = value;\n            this.matchCase = matchCase;\n            this.ignoreCase = ignoreCase;\n            this.ignoreAccent = ignoreAccent;\n            this.isComplex = false;\n            this.comparer = DataUtil.fnOperators.processOperator(this.operator);\n        }\n        else if (field instanceof Predicate && value instanceof Predicate || value instanceof Array) {\n            this.isComplex = true;\n            this.condition = operator.toLowerCase();\n            this.predicates = [field];\n            this.matchCase = field.matchCase;\n            this.ignoreCase = field.ignoreCase;\n            this.ignoreAccent = field.ignoreAccent;\n            if (value instanceof Array) {\n                [].push.apply(this.predicates, value);\n            }\n            else {\n                this.predicates.push(value);\n            }\n        }\n        return this;\n    }\n    /**\n     * Adds n-number of new predicates on existing predicate with “and” condition.\n     *\n     * @param  {Object[]} args - Defines the collection of predicates.\n     */\n    Predicate.and = function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        return Predicate.combinePredicates([].slice.call(args, 0), 'and');\n    };\n    /**\n     * Adds new predicate on existing predicate with “and” condition.\n     *\n     * @param {string} field - Defines the column field.\n     * @param {string} operator - Defines the operator how to filter data.\n     * @param {string} value - Defines the values to match with data.\n     * @param {boolean} ignoreCase? - If ignore case set to false, then filter data with exact match or else\n     * filter data with case insensitive.\n     * @param ignoreCase\n     * @param ignoreAccent\n     */\n    Predicate.prototype.and = function (field, operator, value, ignoreCase, ignoreAccent) {\n        return Predicate.combine(this, field, operator, value, 'and', ignoreCase, ignoreAccent);\n    };\n    /**\n     * Adds n-number of new predicates on existing predicate with “or” condition.\n     *\n     * @param  {Object[]} args - Defines the collection of predicates.\n     */\n    Predicate.or = function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        return Predicate.combinePredicates([].slice.call(args, 0), 'or');\n    };\n    /**\n     * Adds new predicate on existing predicate with “or” condition.\n     *\n     * @param {string} field - Defines the column field.\n     * @param {string} operator - Defines the operator how to filter data.\n     * @param {string} value - Defines the values to match with data.\n     * @param {boolean} ignoreCase? - If ignore case set to false, then filter data with exact match or else\n     * filter data with case insensitive.\n     * @param ignoreCase\n     * @param ignoreAccent\n     */\n    Predicate.prototype.or = function (field, operator, value, ignoreCase, ignoreAccent) {\n        return Predicate.combine(this, field, operator, value, 'or', ignoreCase, ignoreAccent);\n    };\n    /**\n     * Adds n-number of new predicates on existing predicate with “and not” condition.\n     *\n     * @param  {Object[]} args - Defines the collection of predicates.\n     */\n    Predicate.ornot = function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        return Predicate.combinePredicates([].slice.call(args, 0), 'or not');\n    };\n    /**\n     * Adds new predicate on existing predicate with “and not” condition.\n     *\n     * @param {string} field - Defines the column field.\n     * @param {string} operator - Defines the operator how to filter data.\n     * @param {string} value - Defines the values to match with data.\n     * @param {boolean} ignoreCase? - If ignore case set to false, then filter data with exact match or else\n     * filter data with case insensitive.\n     * @param ignoreCase\n     * @param ignoreAccent\n     */\n    Predicate.prototype.ornot = function (field, operator, value, ignoreCase, ignoreAccent) {\n        return Predicate.combine(this, field, operator, value, 'ornot', ignoreCase, ignoreAccent);\n    };\n    /**\n     * Adds n-number of new predicates on existing predicate with “and not” condition.\n     *\n     * @param  {Object[]} args - Defines the collection of predicates.\n     */\n    Predicate.andnot = function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        return Predicate.combinePredicates([].slice.call(args, 0), 'and not');\n    };\n    /**\n     * Adds new predicate on existing predicate with “and not” condition.\n     *\n     * @param {string} field - Defines the column field.\n     * @param {string} operator - Defines the operator how to filter data.\n     * @param {string} value - Defines the values to match with data.\n     * @param {boolean} ignoreCase? - If ignore case set to false, then filter data with exact match or else\n     * filter data with case insensitive.\n     * @param ignoreCase\n     * @param ignoreAccent\n     */\n    Predicate.prototype.andnot = function (field, operator, value, ignoreCase, ignoreAccent) {\n        return Predicate.combine(this, field, operator, value, 'andnot', ignoreCase, ignoreAccent);\n    };\n    /**\n     * Converts plain JavaScript object to Predicate object.\n     *\n     * @param  {Predicate[]|Predicate} json - Defines single or collection of Predicate.\n     */\n    Predicate.fromJson = function (json) {\n        if (json instanceof Array) {\n            var res = [];\n            for (var i = 0, len = json.length; i < len; i++) {\n                res.push(this.fromJSONData(json[i]));\n            }\n            return res;\n        }\n        var pred = json;\n        return this.fromJSONData(pred);\n    };\n    /**\n     * Validate the record based on the predicates.\n     *\n     * @param  {Object} record - Defines the datasource record.\n     */\n    Predicate.prototype.validate = function (record) {\n        var predicate = this.predicates ? this.predicates : [];\n        var ret;\n        var isAnd;\n        if (!this.isComplex && this.comparer) {\n            if (this.condition && this.condition.indexOf('not') !== -1) {\n                this.condition = this.condition.split('not')[0] === '' ? undefined : this.condition.split('not')[0];\n                return !this.comparer.call(this, DataUtil.getObject(this.field, record), this.value, this.ignoreCase, this.ignoreAccent);\n            }\n            else {\n                return this.comparer.call(this, DataUtil.getObject(this.field, record), this.value, this.ignoreCase, this.ignoreAccent);\n            }\n        }\n        if (this.condition && this.condition.indexOf('not') !== -1) {\n            isAnd = this.condition.indexOf('and') !== -1;\n        }\n        else {\n            isAnd = this.condition === 'and';\n        }\n        for (var i = 0; i < predicate.length; i++) {\n            if (i > 0 && this.condition && this.condition.indexOf('not') !== -1) {\n                predicate[i].condition = predicate[i].condition ? predicate[i].condition + 'not' : 'not';\n            }\n            ret = predicate[i].validate(record);\n            if (isAnd) {\n                if (!ret) {\n                    return false;\n                }\n            }\n            else {\n                if (ret) {\n                    return true;\n                }\n            }\n        }\n        return isAnd;\n    };\n    /**\n     * Converts predicates to plain JavaScript.\n     * This method is uses Json stringify when serializing Predicate object.\n     */\n    Predicate.prototype.toJson = function () {\n        var predicates;\n        var p;\n        if (this.isComplex) {\n            predicates = [];\n            p = this.predicates;\n            for (var i = 0; i < p.length; i++) {\n                predicates.push(p[i].toJson());\n            }\n        }\n        return {\n            isComplex: this.isComplex,\n            field: this.field,\n            operator: this.operator,\n            value: this.value,\n            ignoreCase: this.ignoreCase,\n            ignoreAccent: this.ignoreAccent,\n            condition: this.condition,\n            predicates: predicates,\n            matchCase: this.matchCase\n        };\n    };\n    Predicate.combinePredicates = function (predicates, operator) {\n        if (predicates.length === 1) {\n            if (!(predicates[0] instanceof Array)) {\n                return predicates[0];\n            }\n            predicates = predicates[0];\n        }\n        return new Predicate(predicates[0], operator, predicates.slice(1));\n    };\n    Predicate.combine = function (pred, field, operator, value, condition, ignoreCase, ignoreAccent) {\n        if (field instanceof Predicate) {\n            return Predicate[condition](pred, field);\n        }\n        if (typeof field === 'string') {\n            return Predicate[condition](pred, new Predicate(field, operator, value, ignoreCase, ignoreAccent));\n        }\n        return DataUtil.throwError('Predicate - ' + condition + ' : invalid arguments');\n    };\n    Predicate.fromJSONData = function (json) {\n        var preds = json.predicates || [];\n        var len = preds.length;\n        var predicates = [];\n        var result;\n        for (var i = 0; i < len; i++) {\n            predicates.push(this.fromJSONData(preds[i]));\n        }\n        if (!json.isComplex) {\n            result = new Predicate(json.field, json.operator, json.value, json.ignoreCase, json.ignoreAccent);\n        }\n        else {\n            result = new Predicate(predicates[0], json.condition, predicates.slice(1));\n        }\n        return result;\n    };\n    return Predicate;\n}());\nexport { Predicate };\n","/* eslint-disable valid-jsdoc */\n/* eslint-disable security/detect-object-injection */\nimport { isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { DataManager } from './manager';\nimport { Query, Predicate } from './query';\nvar consts = { GroupGuid: '{271bbba0-1ee7}' };\n/**\n * Data manager common utility methods.\n *\n * @hidden\n */\nvar DataUtil = /** @class */ (function () {\n    function DataUtil() {\n    }\n    /**\n     * Returns the value by invoking the provided parameter function.\n     * If the paramater is not of type function then it will be returned as it is.\n     *\n     * @param {Function|string|string[]|number} value\n     * @param {Object} inst?\n     * @param inst\n     * @hidden\n     */\n    DataUtil.getValue = function (value, inst) {\n        if (typeof value === 'function') {\n            return value.call(inst || {});\n        }\n        return value;\n    };\n    /**\n     * Returns true if the input string ends with given string.\n     *\n     * @param  {string} input\n     * @param  {string} substr\n     */\n    DataUtil.endsWith = function (input, substr) {\n        return input.slice && input.slice(-substr.length) === substr;\n    };\n    /**\n     * Returns true if the input string not ends with given string.\n     *\n     * @param  {string} input\n     * @param  {string} substr\n     */\n    DataUtil.notEndsWith = function (input, substr) {\n        return input.slice && input.slice(-substr.length) !== substr;\n    };\n    /**\n     * Returns true if the input string starts with given string.\n     *\n     * @param {string} str\n     * @param {string} startstr\n     * @param input\n     * @param start\n     */\n    DataUtil.startsWith = function (input, start) {\n        return input.slice(0, start.length) === start;\n    };\n    /**\n     * Returns true if the input string not starts with given string.\n     *\n     * @param {string} str\n     * @param {string} startstr\n     * @param input\n     * @param start\n     */\n    DataUtil.notStartsWith = function (input, start) {\n        return input.slice(0, start.length) !== start;\n    };\n    /**\n     * Returns true if the input string pattern(wildcard) matches with given string.\n     *\n     * @param {string} str\n     * @param {string} startstr\n     * @param input\n     * @param pattern\n     */\n    DataUtil.wildCard = function (input, pattern) {\n        var asteriskSplit;\n        var optionalSplit;\n        // special character allowed search\n        if (pattern.indexOf('[') !== -1) {\n            pattern = pattern.split('[').join('[[]');\n        }\n        if (pattern.indexOf('(') !== -1) {\n            pattern = pattern.split('(').join('[(]');\n        }\n        if (pattern.indexOf(')') !== -1) {\n            pattern = pattern.split(')').join('[)]');\n        }\n        if (pattern.indexOf('\\\\') !== -1) {\n            pattern = pattern.split('\\\\').join('[\\\\\\\\]');\n        }\n        if (pattern.indexOf('*') !== -1) {\n            if (pattern.charAt(0) !== '*') {\n                pattern = '^' + pattern;\n            }\n            if (pattern.charAt(pattern.length - 1) !== '*') {\n                pattern = pattern + '$';\n            }\n            asteriskSplit = pattern.split('*');\n            for (var i = 0; i < asteriskSplit.length; i++) {\n                if (asteriskSplit[i].indexOf('.') === -1) {\n                    asteriskSplit[i] = asteriskSplit[i] + '.*';\n                }\n                else {\n                    asteriskSplit[i] = asteriskSplit[i] + '*';\n                }\n            }\n            pattern = asteriskSplit.join('');\n        }\n        if (pattern.indexOf('%3f') !== -1 || pattern.indexOf('?') !== -1) {\n            optionalSplit = pattern.indexOf('%3f') !== -1 ? pattern.split('%3f') : pattern.split('?');\n            pattern = optionalSplit.join('.');\n        }\n        // eslint-disable-next-line security/detect-non-literal-regexp\n        var regexPattern = new RegExp(pattern, 'g');\n        return regexPattern.test(input);\n    };\n    /**\n     * Returns true if the input string pattern(like) matches with given string.\n     *\n     * @param {string} str\n     * @param {string} startstr\n     * @param input\n     * @param pattern\n     */\n    DataUtil.like = function (input, pattern) {\n        if (pattern.indexOf('%') !== -1) {\n            if (pattern.charAt(0) === '%' && pattern.lastIndexOf('%') < 2) {\n                pattern = pattern.substring(1, pattern.length);\n                return DataUtil.startsWith(DataUtil.toLowerCase(input), DataUtil.toLowerCase(pattern));\n            }\n            else if (pattern.charAt(pattern.length - 1) === '%' && pattern.indexOf('%') > pattern.length - 3) {\n                pattern = pattern.substring(0, pattern.length - 1);\n                return DataUtil.endsWith(DataUtil.toLowerCase(input), DataUtil.toLowerCase(pattern));\n            }\n            else if (pattern.lastIndexOf('%') !== pattern.indexOf('%') && pattern.lastIndexOf('%') > pattern.indexOf('%') + 1) {\n                pattern = pattern.substring(pattern.indexOf('%') + 1, pattern.lastIndexOf('%'));\n                return input.indexOf(pattern) !== -1;\n            }\n            else {\n                return input.indexOf(pattern) !== -1;\n            }\n        }\n        else {\n            return false;\n        }\n    };\n    /**\n     * To return the sorting function based on the string.\n     *\n     * @param  {string} order\n     * @hidden\n     */\n    DataUtil.fnSort = function (order) {\n        order = order ? DataUtil.toLowerCase(order) : 'ascending';\n        if (order === 'ascending') {\n            return this.fnAscending;\n        }\n        return this.fnDescending;\n    };\n    /**\n     * Comparer function which is used to sort the data in ascending order.\n     *\n     * @param  {string|number} x\n     * @param  {string|number} y\n     * @returns number\n     */\n    DataUtil.fnAscending = function (x, y) {\n        if (isNullOrUndefined(x) && isNullOrUndefined(y)) {\n            return -1;\n        }\n        if (y === null || y === undefined) {\n            return -1;\n        }\n        if (typeof x === 'string') {\n            return x.localeCompare(y);\n        }\n        if (x === null || x === undefined) {\n            return 1;\n        }\n        return x - y;\n    };\n    /**\n     * Comparer function which is used to sort the data in descending order.\n     *\n     * @param  {string|number} x\n     * @param  {string|number} y\n     * @returns number\n     */\n    DataUtil.fnDescending = function (x, y) {\n        if (isNullOrUndefined(x) && isNullOrUndefined(y)) {\n            return -1;\n        }\n        if (y === null || y === undefined) {\n            return 1;\n        }\n        if (typeof x === 'string') {\n            return x.localeCompare(y) * -1;\n        }\n        if (x === null || x === undefined) {\n            return -1;\n        }\n        return y - x;\n    };\n    DataUtil.extractFields = function (obj, fields) {\n        var newObj = {};\n        for (var i = 0; i < fields.length; i++) {\n            newObj = this.setValue(fields[i], this.getObject(fields[i], obj), newObj);\n        }\n        return newObj;\n    };\n    /**\n     * Select objects by given fields from jsonArray.\n     *\n     * @param  {Object[]} jsonArray\n     * @param  {string[]} fields\n     */\n    DataUtil.select = function (jsonArray, fields) {\n        var newData = [];\n        for (var i = 0; i < jsonArray.length; i++) {\n            newData.push(this.extractFields(jsonArray[i], fields));\n        }\n        return newData;\n    };\n    /**\n     * Group the input data based on the field name.\n     * It also performs aggregation of the grouped records based on the aggregates paramater.\n     *\n     * @param {Object[]} jsonArray\n     * @param {string} field?\n     * @param {Object[]} agg?\n     * @param {number} level?\n     * @param {Object[]} groupDs?\n     * @param field\n     * @param aggregates\n     * @param level\n     * @param groupDs\n     * @param format\n     * @param isLazyLoad\n     */\n    DataUtil.group = function (jsonArray, field, aggregates, level, groupDs, format, isLazyLoad) {\n        level = level || 1;\n        var jsonData = jsonArray;\n        var guid = 'GroupGuid';\n        if (jsonData.GroupGuid === consts[guid]) {\n            var _loop_1 = function (j) {\n                if (!isNullOrUndefined(groupDs)) {\n                    var indx = -1;\n                    var temp = groupDs.filter(function (e) { return e.key === jsonData[j].key; });\n                    indx = groupDs.indexOf(temp[0]);\n                    jsonData[j].items = this_1.group(jsonData[j].items, field, aggregates, jsonData.level + 1, groupDs[indx].items, format, isLazyLoad);\n                    jsonData[j].count = groupDs[indx].count;\n                }\n                else {\n                    jsonData[j].items = this_1.group(jsonData[j].items, field, aggregates, jsonData.level + 1, null, format, isLazyLoad);\n                    jsonData[j].count = jsonData[j].items.length;\n                }\n            };\n            var this_1 = this;\n            for (var j = 0; j < jsonData.length; j++) {\n                _loop_1(j);\n            }\n            jsonData.childLevels += 1;\n            return jsonData;\n        }\n        var grouped = {};\n        var groupedArray = [];\n        groupedArray.GroupGuid = consts[guid];\n        groupedArray.level = level;\n        groupedArray.childLevels = 0;\n        groupedArray.records = jsonData;\n        var _loop_2 = function (i) {\n            var val = this_2.getVal(jsonData, i, field);\n            if (!isNullOrUndefined(format)) {\n                val = format(val, field);\n            }\n            if (!grouped[val]) {\n                grouped[val] = {\n                    key: val,\n                    count: 0,\n                    items: [],\n                    aggregates: {},\n                    field: field\n                };\n                groupedArray.push(grouped[val]);\n                if (!isNullOrUndefined(groupDs)) {\n                    var tempObj = groupDs.filter(function (e) { return e.key === grouped[val].key; });\n                    grouped[val].count = tempObj[0].count;\n                }\n            }\n            grouped[val].count = !isNullOrUndefined(groupDs) ? grouped[val].count : grouped[val].count += 1;\n            if (!isLazyLoad || (isLazyLoad && aggregates.length)) {\n                grouped[val].items.push(jsonData[i]);\n            }\n        };\n        var this_2 = this;\n        for (var i = 0; i < jsonData.length; i++) {\n            _loop_2(i);\n        }\n        if (aggregates && aggregates.length) {\n            var _loop_3 = function (i) {\n                var res = {};\n                var fn = void 0;\n                var aggs = aggregates;\n                for (var j = 0; j < aggregates.length; j++) {\n                    fn = DataUtil.aggregates[aggregates[j].type];\n                    if (!isNullOrUndefined(groupDs)) {\n                        var temp = groupDs.filter(function (e) { return e.key === groupedArray[i].key; });\n                        if (fn) {\n                            res[aggs[j].field + ' - ' + aggs[j].type] = fn(temp[0].items, aggs[j].field);\n                        }\n                    }\n                    else {\n                        if (fn) {\n                            res[aggs[j].field + ' - ' + aggs[j].type] = fn(groupedArray[i].items, aggs[j].field);\n                        }\n                    }\n                }\n                groupedArray[i].aggregates = res;\n            };\n            for (var i = 0; i < groupedArray.length; i++) {\n                _loop_3(i);\n            }\n        }\n        if (isLazyLoad && groupedArray.length && aggregates.length) {\n            for (var i = 0; i < groupedArray.length; i++) {\n                groupedArray[i].items = [];\n            }\n        }\n        return jsonData.length && groupedArray || jsonData;\n    };\n    /**\n     * It is used to categorize the multiple items based on a specific field in jsonArray.\n     * The hierarchical queries are commonly required when you use foreign key binding.\n     *\n     * @param {string} fKey\n     * @param {string} from\n     * @param {Object[]} source\n     * @param {Group} lookup?\n     * @param {string} pKey?\n     * @param lookup\n     * @param pKey\n     * @hidden\n     */\n    DataUtil.buildHierarchy = function (fKey, from, source, lookup, pKey) {\n        var i;\n        var grp = {};\n        var temp;\n        if (lookup.result) {\n            lookup = lookup.result;\n        }\n        if (lookup.GroupGuid) {\n            this.throwError('DataManager: Do not have support Grouping in hierarchy');\n        }\n        for (i = 0; i < lookup.length; i++) {\n            var fKeyData = this.getObject(fKey, lookup[i]);\n            temp = grp[fKeyData] || (grp[fKeyData] = []);\n            temp.push(lookup[i]);\n        }\n        for (i = 0; i < source.length; i++) {\n            var fKeyData = this.getObject(pKey || fKey, source[i]);\n            source[i][from] = grp[fKeyData];\n        }\n    };\n    /**\n     * The method used to get the field names which started with specified characters.\n     *\n     * @param {Object} obj\n     * @param {string[]} fields?\n     * @param {string} prefix?\n     * @param fields\n     * @param prefix\n     * @hidden\n     */\n    DataUtil.getFieldList = function (obj, fields, prefix) {\n        if (prefix === undefined) {\n            prefix = '';\n        }\n        if (fields === undefined || fields === null) {\n            return this.getFieldList(obj, [], prefix);\n        }\n        var copyObj = obj;\n        var keys = Object.keys(obj);\n        for (var _i = 0, keys_1 = keys; _i < keys_1.length; _i++) {\n            var prop = keys_1[_i];\n            if (typeof copyObj[prop] === 'object' && !(copyObj[prop] instanceof Array)) {\n                this.getFieldList(copyObj[prop], fields, prefix + prop + '.');\n            }\n            else {\n                fields.push(prefix + prop);\n            }\n        }\n        return fields;\n    };\n    /**\n     * Gets the value of the property in the given object.\n     * The complex object can be accessed by providing the field names concatenated with dot(.).\n     *\n     * @param  {string} nameSpace - The name of the property to be accessed.\n     * @param  {Object} from - Defines the source object.\n     */\n    DataUtil.getObject = function (nameSpace, from) {\n        if (!nameSpace) {\n            return from;\n        }\n        if (!from) {\n            return undefined;\n        }\n        if (nameSpace.indexOf('.') === -1) {\n            var lowerCaseNameSpace = nameSpace.charAt(0).toLowerCase() + nameSpace.slice(1);\n            var upperCaseNameSpace = nameSpace.charAt(0).toUpperCase() + nameSpace.slice(1);\n            if (!isNullOrUndefined(from[nameSpace])) {\n                return from[nameSpace];\n            }\n            else {\n                if (!isNullOrUndefined(from[lowerCaseNameSpace])) {\n                    return from[lowerCaseNameSpace];\n                }\n                else if (!isNullOrUndefined(from[upperCaseNameSpace])) {\n                    return from[upperCaseNameSpace];\n                }\n                else {\n                    return null;\n                }\n            }\n        }\n        var value = from;\n        var splits = nameSpace.split('.');\n        for (var i = 0; i < splits.length; i++) {\n            if (value == null) {\n                break;\n            }\n            value = value[splits[i]];\n            if (value === undefined) {\n                var casing = splits[i].charAt(0).toUpperCase() + splits[i].slice(1);\n                value = from[casing] || from[casing.charAt(0).toLowerCase() + casing.slice(1)] || null;\n            }\n            from = value;\n        }\n        return value;\n    };\n    /**\n     * To set value for the nameSpace in desired object.\n     *\n     * @param {string} nameSpace - String value to the get the inner object.\n     * @param {Object} value - Value that you need to set.\n     * @param {Object} obj - Object to get the inner object value.\n     * @return { [key: string]: Object; } | Object\n     * @hidden\n     */\n    DataUtil.setValue = function (nameSpace, value, obj) {\n        var keys = nameSpace.toString().split('.');\n        var start = obj || {};\n        var fromObj = start;\n        var i;\n        var length = keys.length;\n        var key;\n        for (i = 0; i < length; i++) {\n            key = keys[i];\n            if (i + 1 === length) {\n                fromObj[key] = value === undefined ? undefined : value;\n            }\n            else if (isNullOrUndefined(fromObj[key])) {\n                fromObj[key] = {};\n            }\n            fromObj = fromObj[key];\n        }\n        return start;\n    };\n    /**\n     * Sort the given data based on the field and comparer.\n     *\n     * @param  {Object[]} ds - Defines the input data.\n     * @param  {string} field - Defines the field to be sorted.\n     * @param  {Function} comparer - Defines the comparer function used to sort the records.\n     */\n    DataUtil.sort = function (ds, field, comparer) {\n        if (ds.length <= 1) {\n            return ds;\n        }\n        var middle = parseInt((ds.length / 2).toString(), 10);\n        var left = ds.slice(0, middle);\n        var right = ds.slice(middle);\n        left = this.sort(left, field, comparer);\n        right = this.sort(right, field, comparer);\n        return this.merge(left, right, field, comparer);\n    };\n    DataUtil.ignoreDiacritics = function (value) {\n        if (typeof value !== 'string') {\n            return value;\n        }\n        var result = value.split('');\n        var newValue = result.map(function (temp) { return temp in DataUtil.diacritics ? DataUtil.diacritics[temp] : temp; });\n        return newValue.join('');\n    };\n    DataUtil.merge = function (left, right, fieldName, comparer) {\n        var result = [];\n        var current;\n        while (left.length > 0 || right.length > 0) {\n            if (left.length > 0 && right.length > 0) {\n                if (comparer) {\n                    current = comparer(this.getVal(left, 0, fieldName), this.getVal(right, 0, fieldName), left[0], right[0]) <= 0 ? left : right;\n                }\n                else {\n                    current = left[0][fieldName] < left[0][fieldName] ? left : right;\n                }\n            }\n            else {\n                current = left.length > 0 ? left : right;\n            }\n            result.push(current.shift());\n        }\n        return result;\n    };\n    DataUtil.getVal = function (array, index, field) {\n        return field ? this.getObject(field, array[index]) : array[index];\n    };\n    DataUtil.toLowerCase = function (val) {\n        return val ? typeof val === 'string' ? val.toLowerCase() : val.toString() : (val === 0 || val === false) ? val.toString() : '';\n    };\n    /**\n     * To perform the filter operation with specified adaptor and returns the result.\n     *\n     * @param {Object} adaptor\n     * @param {string} fnName\n     * @param {Object} param1?\n     * @param {Object} param2?\n     * @param param1\n     * @param param2\n     * @hidden\n     */\n    DataUtil.callAdaptorFunction = function (adaptor, fnName, param1, param2) {\n        if (fnName in adaptor) {\n            var res = adaptor[fnName](param1, param2);\n            if (!isNullOrUndefined(res)) {\n                param1 = res;\n            }\n        }\n        return param1;\n    };\n    DataUtil.getAddParams = function (adp, dm, query) {\n        var req = {};\n        DataUtil.callAdaptorFunction(adp, 'addParams', {\n            dm: dm,\n            query: query,\n            params: query.params,\n            reqParams: req\n        });\n        return req;\n    };\n    /**\n     * Checks wheather the given input is a plain object or not.\n     *\n     * @param  {Object|Object[]} obj\n     */\n    DataUtil.isPlainObject = function (obj) {\n        return (!!obj) && (obj.constructor === Object);\n    };\n    /**\n     * Returns true when the browser cross origin request.\n     */\n    DataUtil.isCors = function () {\n        var xhr = null;\n        var request = 'XMLHttpRequest';\n        try {\n            xhr = new window[request]();\n        }\n        catch (e) {\n            // No exception handling\n        }\n        return !!xhr && ('withCredentials' in xhr);\n    };\n    /**\n     * Generate random GUID value which will be prefixed with the given value.\n     *\n     * @param  {string} prefix\n     */\n    DataUtil.getGuid = function (prefix) {\n        var hexs = '0123456789abcdef';\n        var rand;\n        return (prefix || '') + '00000000-0000-4000-0000-000000000000'.replace(/0/g, function (val, i) {\n            if ('crypto' in window && 'getRandomValues' in crypto) {\n                var arr = new Uint8Array(1);\n                window.crypto.getRandomValues(arr);\n                rand = arr[0] % 16 | 0;\n            }\n            else {\n                rand = Math.random() * 16 | 0;\n            }\n            return hexs[i === 19 ? rand & 0x3 | 0x8 : rand];\n        });\n    };\n    /**\n     * Checks wheather the given value is null or not.\n     *\n     * @param  {string|Object} val\n     * @returns boolean\n     */\n    DataUtil.isNull = function (val) {\n        return val === undefined || val === null;\n    };\n    /**\n     * To get the required items from collection of objects.\n     *\n     * @param  {Object[]} array\n     * @param  {string} field\n     * @param  {Function} comparer\n     * @returns Object\n     * @hidden\n     */\n    DataUtil.getItemFromComparer = function (array, field, comparer) {\n        var keyVal;\n        var current;\n        var key;\n        var i = 0;\n        var castRequired = typeof DataUtil.getVal(array, 0, field) === 'string';\n        if (array.length) {\n            while (isNullOrUndefined(keyVal) && i < array.length) {\n                keyVal = DataUtil.getVal(array, i, field);\n                key = array[i++];\n            }\n        }\n        for (; i < array.length; i++) {\n            current = DataUtil.getVal(array, i, field);\n            if (isNullOrUndefined(current)) {\n                continue;\n            }\n            if (castRequired) {\n                keyVal = +keyVal;\n                current = +current;\n            }\n            if (comparer(keyVal, current) > 0) {\n                keyVal = current;\n                key = array[i];\n            }\n        }\n        return key;\n    };\n    /**\n     * To get distinct values of Array or Array of Objects.\n     *\n     * @param {Object[]} json\n     * @param {string} field\n     * @param fieldName\n     * @param {boolean} requiresCompleteRecord\n     * @returns Object[]\n     * * distinct array of objects is return when requiresCompleteRecord set as true.\n     * @hidden\n     */\n    DataUtil.distinct = function (json, fieldName, requiresCompleteRecord) {\n        requiresCompleteRecord = isNullOrUndefined(requiresCompleteRecord) ? false : requiresCompleteRecord;\n        var result = [];\n        var val;\n        var tmp = {};\n        json.forEach(function (data, index) {\n            val = typeof (json[index]) === 'object' ? DataUtil.getVal(json, index, fieldName) : json[index];\n            if (!(val in tmp)) {\n                result.push(!requiresCompleteRecord ? val : json[index]);\n                tmp[val] = 1;\n            }\n        });\n        return result;\n    };\n    /**\n     * Process the given records based on the datamanager string.\n     *\n     * @param {string} datamanager\n     * @param dm\n     * @param {Object[]} records\n     */\n    DataUtil.processData = function (dm, records) {\n        var query = this.prepareQuery(dm);\n        var sampledata = new DataManager(records);\n        if (dm.requiresCounts) {\n            query.requiresCount();\n        }\n        /* eslint-disable @typescript-eslint/no-explicit-any */\n        // tslint:disable-next-line:no-any\n        var result = sampledata.executeLocal(query);\n        /* eslint-enable @typescript-eslint/no-explicit-any */\n        var returnValue = {\n            result: dm.requiresCounts ? result.result : result,\n            count: result.count,\n            aggregates: JSON.stringify(result.aggregates)\n        };\n        return dm.requiresCounts ? returnValue : result;\n    };\n    DataUtil.prepareQuery = function (dm) {\n        var _this = this;\n        var query = new Query();\n        if (dm.select) {\n            query.select(dm.select);\n        }\n        if (dm.where) {\n            var where = DataUtil.parse.parseJson(dm.where);\n            where.filter(function (pred) {\n                if (isNullOrUndefined(pred.condition)) {\n                    query.where(pred.field, pred.operator, pred.value, pred.ignoreCase, pred.ignoreAccent);\n                }\n                else {\n                    var predicateList = [];\n                    if (pred.field) {\n                        predicateList.push(new Predicate(pred.field, pred.operator, pred.value, pred.ignoreCase, pred.ignoreAccent));\n                    }\n                    else {\n                        predicateList = predicateList.concat(_this.getPredicate(pred.predicates));\n                    }\n                    if (pred.condition === 'or') {\n                        query.where(Predicate.or(predicateList));\n                    }\n                    else if (pred.condition === 'and') {\n                        query.where(Predicate.and(predicateList));\n                    }\n                }\n            });\n        }\n        if (dm.search) {\n            var search = DataUtil.parse.parseJson(dm.search);\n            // tslint:disable-next-line:no-string-literal\n            search.filter(function (e) { return query.search(e.key, e.fields, e['operator'], \n            // tslint:disable-next-line:no-string-literal\n            e['ignoreCase'], e['ignoreAccent']); });\n        }\n        if (dm.aggregates) {\n            dm.aggregates.filter(function (e) { return query.aggregate(e.type, e.field); });\n        }\n        if (dm.sorted) {\n            dm.sorted.filter(function (e) { return query.sortBy(e.name, e.direction); });\n        }\n        if (dm.skip) {\n            query.skip(dm.skip);\n        }\n        if (dm.take) {\n            query.take(dm.take);\n        }\n        if (dm.group) {\n            dm.group.filter(function (grp) { return query.group(grp); });\n        }\n        return query;\n    };\n    DataUtil.getPredicate = function (pred) {\n        var mainPred = [];\n        for (var i = 0; i < pred.length; i++) {\n            var e = pred[i];\n            if (e.field) {\n                mainPred.push(new Predicate(e.field, e.operator, e.value, e.ignoreCase, e.ignoreAccent));\n            }\n            else {\n                var childPred = [];\n                // tslint:disable-next-line:typedef\n                var cpre = this.getPredicate(e.predicates);\n                for (var _i = 0, _a = Object.keys(cpre); _i < _a.length; _i++) {\n                    var prop = _a[_i];\n                    childPred.push(cpre[prop]);\n                }\n                mainPred.push(e.condition === 'or' ? Predicate.or(childPred) : Predicate.and(childPred));\n            }\n        }\n        return mainPred;\n    };\n    /**\n     * Specifies the value which will be used to adjust the date value to server timezone.\n     *\n     * @default null\n     */\n    DataUtil.serverTimezoneOffset = null;\n    /**\n     * Species whether are not to be parsed with serverTimezoneOffset value.\n     *\n     * @hidden\n     */\n    DataUtil.timeZoneHandling = true;\n    /**\n     * Throw error with the given string as message.\n     *\n     * @param {string} er\n     * @param error\n     */\n    DataUtil.throwError = function (error) {\n        try {\n            throw new Error(error);\n        }\n        catch (e) {\n            // eslint-disable-next-line no-throw-literal\n            throw e.message + '\\n' + e.stack;\n        }\n    };\n    DataUtil.aggregates = {\n        /**\n         * Calculate sum of the given field in the data.\n         *\n         * @param  {Object[]} ds\n         * @param  {string} field\n         */\n        sum: function (ds, field) {\n            var result = 0;\n            var val;\n            var castRequired = typeof DataUtil.getVal(ds, 0, field) !== 'number';\n            for (var i = 0; i < ds.length; i++) {\n                val = DataUtil.getVal(ds, i, field);\n                if (!isNaN(val) && val !== null) {\n                    if (castRequired) {\n                        val = +val;\n                    }\n                    result += val;\n                }\n            }\n            return result;\n        },\n        /**\n         * Calculate average value of the given field in the data.\n         *\n         * @param  {Object[]} ds\n         * @param  {string} field\n         */\n        average: function (ds, field) {\n            return DataUtil.aggregates.sum(ds, field) / ds.length;\n        },\n        /**\n         * Returns the min value of the data based on the field.\n         *\n         * @param  {Object[]} ds\n         * @param  {string|Function} field\n         */\n        min: function (ds, field) {\n            var comparer;\n            if (typeof field === 'function') {\n                comparer = field;\n                field = null;\n            }\n            return DataUtil.getObject(field, DataUtil.getItemFromComparer(ds, field, comparer || DataUtil.fnAscending));\n        },\n        /**\n         * Returns the max value of the data based on the field.\n         *\n         * @param  {Object[]} ds\n         * @param  {string} field\n         * @returns number\n         */\n        max: function (ds, field) {\n            var comparer;\n            if (typeof field === 'function') {\n                comparer = field;\n                field = null;\n            }\n            return DataUtil.getObject(field, DataUtil.getItemFromComparer(ds, field, comparer || DataUtil.fnDescending));\n        },\n        /**\n         * Returns the total number of true value present in the data based on the given boolean field name.\n         *\n         * @param  {Object[]} ds\n         * @param  {string} field\n         */\n        truecount: function (ds, field) {\n            return new DataManager(ds).executeLocal(new Query().where(field, 'equal', true, true)).length;\n        },\n        /**\n         * Returns the total number of false value present in the data based on the given boolean field name.\n         *\n         * @param  {Object[]} ds\n         * @param  {string} field\n         */\n        falsecount: function (ds, field) {\n            return new DataManager(ds).executeLocal(new Query().where(field, 'equal', false, true)).length;\n        },\n        /**\n         * Returns the length of the given data.\n         *\n         * @param {Object[]} ds\n         * @param {string} field?\n         * @param field\n         * @returns number\n         */\n        count: function (ds, field) {\n            return ds.length;\n        }\n    };\n    /**\n     * Specifies the Object with filter operators.\n     */\n    DataUtil.operatorSymbols = {\n        '<': 'lessthan',\n        '>': 'greaterthan',\n        '<=': 'lessthanorequal',\n        '>=': 'greaterthanorequal',\n        '==': 'equal',\n        '!=': 'notequal',\n        '*=': 'contains',\n        '$=': 'endswith',\n        '^=': 'startswith'\n    };\n    /**\n     * Specifies the Object with filter operators which will be used for OData filter query generation.\n     * * It will be used for date/number type filter query.\n     */\n    DataUtil.odBiOperator = {\n        '<': ' lt ',\n        '>': ' gt ',\n        '<=': ' le ',\n        '>=': ' ge ',\n        '==': ' eq ',\n        '!=': ' ne ',\n        'lessthan': ' lt ',\n        'lessthanorequal': ' le ',\n        'greaterthan': ' gt ',\n        'greaterthanorequal': ' ge ',\n        'equal': ' eq ',\n        'notequal': ' ne '\n    };\n    /**\n     * Specifies the Object with filter operators which will be used for OData filter query generation.\n     * It will be used for string type filter query.\n     */\n    DataUtil.odUniOperator = {\n        '$=': 'endswith',\n        '^=': 'startswith',\n        '*=': 'substringof',\n        'endswith': 'endswith',\n        'startswith': 'startswith',\n        'contains': 'substringof',\n        'doesnotendwith': 'not endswith',\n        'doesnotstartwith': 'not startswith',\n        'doesnotcontain': 'not substringof',\n        'wildcard': 'wildcard',\n        'like': 'like'\n    };\n    /**\n     * Specifies the Object with filter operators which will be used for ODataV4 filter query generation.\n     * It will be used for string type filter query.\n     */\n    DataUtil.odv4UniOperator = {\n        '$=': 'endswith',\n        '^=': 'startswith',\n        '*=': 'contains',\n        'endswith': 'endswith',\n        'startswith': 'startswith',\n        'contains': 'contains',\n        'doesnotendwith': 'not endswith',\n        'doesnotstartwith': 'not startswith',\n        'doesnotcontain': 'not contains',\n        'wildcard': 'wildcard',\n        'like': 'like'\n    };\n    DataUtil.diacritics = {\n        '\\u24B6': 'A',\n        '\\uFF21': 'A',\n        '\\u00C0': 'A',\n        '\\u00C1': 'A',\n        '\\u00C2': 'A',\n        '\\u1EA6': 'A',\n        '\\u1EA4': 'A',\n        '\\u1EAA': 'A',\n        '\\u1EA8': 'A',\n        '\\u00C3': 'A',\n        '\\u0100': 'A',\n        '\\u0102': 'A',\n        '\\u1EB0': 'A',\n        '\\u1EAE': 'A',\n        '\\u1EB4': 'A',\n        '\\u1EB2': 'A',\n        '\\u0226': 'A',\n        '\\u01E0': 'A',\n        '\\u00C4': 'A',\n        '\\u01DE': 'A',\n        '\\u1EA2': 'A',\n        '\\u00C5': 'A',\n        '\\u01FA': 'A',\n        '\\u01CD': 'A',\n        '\\u0200': 'A',\n        '\\u0202': 'A',\n        '\\u1EA0': 'A',\n        '\\u1EAC': 'A',\n        '\\u1EB6': 'A',\n        '\\u1E00': 'A',\n        '\\u0104': 'A',\n        '\\u023A': 'A',\n        '\\u2C6F': 'A',\n        '\\uA732': 'AA',\n        '\\u00C6': 'AE',\n        '\\u01FC': 'AE',\n        '\\u01E2': 'AE',\n        '\\uA734': 'AO',\n        '\\uA736': 'AU',\n        '\\uA738': 'AV',\n        '\\uA73A': 'AV',\n        '\\uA73C': 'AY',\n        '\\u24B7': 'B',\n        '\\uFF22': 'B',\n        '\\u1E02': 'B',\n        '\\u1E04': 'B',\n        '\\u1E06': 'B',\n        '\\u0243': 'B',\n        '\\u0182': 'B',\n        '\\u0181': 'B',\n        '\\u24B8': 'C',\n        '\\uFF23': 'C',\n        '\\u0106': 'C',\n        '\\u0108': 'C',\n        '\\u010A': 'C',\n        '\\u010C': 'C',\n        '\\u00C7': 'C',\n        '\\u1E08': 'C',\n        '\\u0187': 'C',\n        '\\u023B': 'C',\n        '\\uA73E': 'C',\n        '\\u24B9': 'D',\n        '\\uFF24': 'D',\n        '\\u1E0A': 'D',\n        '\\u010E': 'D',\n        '\\u1E0C': 'D',\n        '\\u1E10': 'D',\n        '\\u1E12': 'D',\n        '\\u1E0E': 'D',\n        '\\u0110': 'D',\n        '\\u018B': 'D',\n        '\\u018A': 'D',\n        '\\u0189': 'D',\n        '\\uA779': 'D',\n        '\\u01F1': 'DZ',\n        '\\u01C4': 'DZ',\n        '\\u01F2': 'Dz',\n        '\\u01C5': 'Dz',\n        '\\u24BA': 'E',\n        '\\uFF25': 'E',\n        '\\u00C8': 'E',\n        '\\u00C9': 'E',\n        '\\u00CA': 'E',\n        '\\u1EC0': 'E',\n        '\\u1EBE': 'E',\n        '\\u1EC4': 'E',\n        '\\u1EC2': 'E',\n        '\\u1EBC': 'E',\n        '\\u0112': 'E',\n        '\\u1E14': 'E',\n        '\\u1E16': 'E',\n        '\\u0114': 'E',\n        '\\u0116': 'E',\n        '\\u00CB': 'E',\n        '\\u1EBA': 'E',\n        '\\u011A': 'E',\n        '\\u0204': 'E',\n        '\\u0206': 'E',\n        '\\u1EB8': 'E',\n        '\\u1EC6': 'E',\n        '\\u0228': 'E',\n        '\\u1E1C': 'E',\n        '\\u0118': 'E',\n        '\\u1E18': 'E',\n        '\\u1E1A': 'E',\n        '\\u0190': 'E',\n        '\\u018E': 'E',\n        '\\u24BB': 'F',\n        '\\uFF26': 'F',\n        '\\u1E1E': 'F',\n        '\\u0191': 'F',\n        '\\uA77B': 'F',\n        '\\u24BC': 'G',\n        '\\uFF27': 'G',\n        '\\u01F4': 'G',\n        '\\u011C': 'G',\n        '\\u1E20': 'G',\n        '\\u011E': 'G',\n        '\\u0120': 'G',\n        '\\u01E6': 'G',\n        '\\u0122': 'G',\n        '\\u01E4': 'G',\n        '\\u0193': 'G',\n        '\\uA7A0': 'G',\n        '\\uA77D': 'G',\n        '\\uA77E': 'G',\n        '\\u24BD': 'H',\n        '\\uFF28': 'H',\n        '\\u0124': 'H',\n        '\\u1E22': 'H',\n        '\\u1E26': 'H',\n        '\\u021E': 'H',\n        '\\u1E24': 'H',\n        '\\u1E28': 'H',\n        '\\u1E2A': 'H',\n        '\\u0126': 'H',\n        '\\u2C67': 'H',\n        '\\u2C75': 'H',\n        '\\uA78D': 'H',\n        '\\u24BE': 'I',\n        '\\uFF29': 'I',\n        '\\u00CC': 'I',\n        '\\u00CD': 'I',\n        '\\u00CE': 'I',\n        '\\u0128': 'I',\n        '\\u012A': 'I',\n        '\\u012C': 'I',\n        '\\u0130': 'I',\n        '\\u00CF': 'I',\n        '\\u1E2E': 'I',\n        '\\u1EC8': 'I',\n        '\\u01CF': 'I',\n        '\\u0208': 'I',\n        '\\u020A': 'I',\n        '\\u1ECA': 'I',\n        '\\u012E': 'I',\n        '\\u1E2C': 'I',\n        '\\u0197': 'I',\n        '\\u24BF': 'J',\n        '\\uFF2A': 'J',\n        '\\u0134': 'J',\n        '\\u0248': 'J',\n        '\\u24C0': 'K',\n        '\\uFF2B': 'K',\n        '\\u1E30': 'K',\n        '\\u01E8': 'K',\n        '\\u1E32': 'K',\n        '\\u0136': 'K',\n        '\\u1E34': 'K',\n        '\\u0198': 'K',\n        '\\u2C69': 'K',\n        '\\uA740': 'K',\n        '\\uA742': 'K',\n        '\\uA744': 'K',\n        '\\uA7A2': 'K',\n        '\\u24C1': 'L',\n        '\\uFF2C': 'L',\n        '\\u013F': 'L',\n        '\\u0139': 'L',\n        '\\u013D': 'L',\n        '\\u1E36': 'L',\n        '\\u1E38': 'L',\n        '\\u013B': 'L',\n        '\\u1E3C': 'L',\n        '\\u1E3A': 'L',\n        '\\u0141': 'L',\n        '\\u023D': 'L',\n        '\\u2C62': 'L',\n        '\\u2C60': 'L',\n        '\\uA748': 'L',\n        '\\uA746': 'L',\n        '\\uA780': 'L',\n        '\\u01C7': 'LJ',\n        '\\u01C8': 'Lj',\n        '\\u24C2': 'M',\n        '\\uFF2D': 'M',\n        '\\u1E3E': 'M',\n        '\\u1E40': 'M',\n        '\\u1E42': 'M',\n        '\\u2C6E': 'M',\n        '\\u019C': 'M',\n        '\\u24C3': 'N',\n        '\\uFF2E': 'N',\n        '\\u01F8': 'N',\n        '\\u0143': 'N',\n        '\\u00D1': 'N',\n        '\\u1E44': 'N',\n        '\\u0147': 'N',\n        '\\u1E46': 'N',\n        '\\u0145': 'N',\n        '\\u1E4A': 'N',\n        '\\u1E48': 'N',\n        '\\u0220': 'N',\n        '\\u019D': 'N',\n        '\\uA790': 'N',\n        '\\uA7A4': 'N',\n        '\\u01CA': 'NJ',\n        '\\u01CB': 'Nj',\n        '\\u24C4': 'O',\n        '\\uFF2F': 'O',\n        '\\u00D2': 'O',\n        '\\u00D3': 'O',\n        '\\u00D4': 'O',\n        '\\u1ED2': 'O',\n        '\\u1ED0': 'O',\n        '\\u1ED6': 'O',\n        '\\u1ED4': 'O',\n        '\\u00D5': 'O',\n        '\\u1E4C': 'O',\n        '\\u022C': 'O',\n        '\\u1E4E': 'O',\n        '\\u014C': 'O',\n        '\\u1E50': 'O',\n        '\\u1E52': 'O',\n        '\\u014E': 'O',\n        '\\u022E': 'O',\n        '\\u0230': 'O',\n        '\\u00D6': 'O',\n        '\\u022A': 'O',\n        '\\u1ECE': 'O',\n        '\\u0150': 'O',\n        '\\u01D1': 'O',\n        '\\u020C': 'O',\n        '\\u020E': 'O',\n        '\\u01A0': 'O',\n        '\\u1EDC': 'O',\n        '\\u1EDA': 'O',\n        '\\u1EE0': 'O',\n        '\\u1EDE': 'O',\n        '\\u1EE2': 'O',\n        '\\u1ECC': 'O',\n        '\\u1ED8': 'O',\n        '\\u01EA': 'O',\n        '\\u01EC': 'O',\n        '\\u00D8': 'O',\n        '\\u01FE': 'O',\n        '\\u0186': 'O',\n        '\\u019F': 'O',\n        '\\uA74A': 'O',\n        '\\uA74C': 'O',\n        '\\u01A2': 'OI',\n        '\\uA74E': 'OO',\n        '\\u0222': 'OU',\n        '\\u24C5': 'P',\n        '\\uFF30': 'P',\n        '\\u1E54': 'P',\n        '\\u1E56': 'P',\n        '\\u01A4': 'P',\n        '\\u2C63': 'P',\n        '\\uA750': 'P',\n        '\\uA752': 'P',\n        '\\uA754': 'P',\n        '\\u24C6': 'Q',\n        '\\uFF31': 'Q',\n        '\\uA756': 'Q',\n        '\\uA758': 'Q',\n        '\\u024A': 'Q',\n        '\\u24C7': 'R',\n        '\\uFF32': 'R',\n        '\\u0154': 'R',\n        '\\u1E58': 'R',\n        '\\u0158': 'R',\n        '\\u0210': 'R',\n        '\\u0212': 'R',\n        '\\u1E5A': 'R',\n        '\\u1E5C': 'R',\n        '\\u0156': 'R',\n        '\\u1E5E': 'R',\n        '\\u024C': 'R',\n        '\\u2C64': 'R',\n        '\\uA75A': 'R',\n        '\\uA7A6': 'R',\n        '\\uA782': 'R',\n        '\\u24C8': 'S',\n        '\\uFF33': 'S',\n        '\\u1E9E': 'S',\n        '\\u015A': 'S',\n        '\\u1E64': 'S',\n        '\\u015C': 'S',\n        '\\u1E60': 'S',\n        '\\u0160': 'S',\n        '\\u1E66': 'S',\n        '\\u1E62': 'S',\n        '\\u1E68': 'S',\n        '\\u0218': 'S',\n        '\\u015E': 'S',\n        '\\u2C7E': 'S',\n        '\\uA7A8': 'S',\n        '\\uA784': 'S',\n        '\\u24C9': 'T',\n        '\\uFF34': 'T',\n        '\\u1E6A': 'T',\n        '\\u0164': 'T',\n        '\\u1E6C': 'T',\n        '\\u021A': 'T',\n        '\\u0162': 'T',\n        '\\u1E70': 'T',\n        '\\u1E6E': 'T',\n        '\\u0166': 'T',\n        '\\u01AC': 'T',\n        '\\u01AE': 'T',\n        '\\u023E': 'T',\n        '\\uA786': 'T',\n        '\\uA728': 'TZ',\n        '\\u24CA': 'U',\n        '\\uFF35': 'U',\n        '\\u00D9': 'U',\n        '\\u00DA': 'U',\n        '\\u00DB': 'U',\n        '\\u0168': 'U',\n        '\\u1E78': 'U',\n        '\\u016A': 'U',\n        '\\u1E7A': 'U',\n        '\\u016C': 'U',\n        '\\u00DC': 'U',\n        '\\u01DB': 'U',\n        '\\u01D7': 'U',\n        '\\u01D5': 'U',\n        '\\u01D9': 'U',\n        '\\u1EE6': 'U',\n        '\\u016E': 'U',\n        '\\u0170': 'U',\n        '\\u01D3': 'U',\n        '\\u0214': 'U',\n        '\\u0216': 'U',\n        '\\u01AF': 'U',\n        '\\u1EEA': 'U',\n        '\\u1EE8': 'U',\n        '\\u1EEE': 'U',\n        '\\u1EEC': 'U',\n        '\\u1EF0': 'U',\n        '\\u1EE4': 'U',\n        '\\u1E72': 'U',\n        '\\u0172': 'U',\n        '\\u1E76': 'U',\n        '\\u1E74': 'U',\n        '\\u0244': 'U',\n        '\\u24CB': 'V',\n        '\\uFF36': 'V',\n        '\\u1E7C': 'V',\n        '\\u1E7E': 'V',\n        '\\u01B2': 'V',\n        '\\uA75E': 'V',\n        '\\u0245': 'V',\n        '\\uA760': 'VY',\n        '\\u24CC': 'W',\n        '\\uFF37': 'W',\n        '\\u1E80': 'W',\n        '\\u1E82': 'W',\n        '\\u0174': 'W',\n        '\\u1E86': 'W',\n        '\\u1E84': 'W',\n        '\\u1E88': 'W',\n        '\\u2C72': 'W',\n        '\\u24CD': 'X',\n        '\\uFF38': 'X',\n        '\\u1E8A': 'X',\n        '\\u1E8C': 'X',\n        '\\u24CE': 'Y',\n        '\\uFF39': 'Y',\n        '\\u1EF2': 'Y',\n        '\\u00DD': 'Y',\n        '\\u0176': 'Y',\n        '\\u1EF8': 'Y',\n        '\\u0232': 'Y',\n        '\\u1E8E': 'Y',\n        '\\u0178': 'Y',\n        '\\u1EF6': 'Y',\n        '\\u1EF4': 'Y',\n        '\\u01B3': 'Y',\n        '\\u024E': 'Y',\n        '\\u1EFE': 'Y',\n        '\\u24CF': 'Z',\n        '\\uFF3A': 'Z',\n        '\\u0179': 'Z',\n        '\\u1E90': 'Z',\n        '\\u017B': 'Z',\n        '\\u017D': 'Z',\n        '\\u1E92': 'Z',\n        '\\u1E94': 'Z',\n        '\\u01B5': 'Z',\n        '\\u0224': 'Z',\n        '\\u2C7F': 'Z',\n        '\\u2C6B': 'Z',\n        '\\uA762': 'Z',\n        '\\u24D0': 'a',\n        '\\uFF41': 'a',\n        '\\u1E9A': 'a',\n        '\\u00E0': 'a',\n        '\\u00E1': 'a',\n        '\\u00E2': 'a',\n        '\\u1EA7': 'a',\n        '\\u1EA5': 'a',\n        '\\u1EAB': 'a',\n        '\\u1EA9': 'a',\n        '\\u00E3': 'a',\n        '\\u0101': 'a',\n        '\\u0103': 'a',\n        '\\u1EB1': 'a',\n        '\\u1EAF': 'a',\n        '\\u1EB5': 'a',\n        '\\u1EB3': 'a',\n        '\\u0227': 'a',\n        '\\u01E1': 'a',\n        '\\u00E4': 'a',\n        '\\u01DF': 'a',\n        '\\u1EA3': 'a',\n        '\\u00E5': 'a',\n        '\\u01FB': 'a',\n        '\\u01CE': 'a',\n        '\\u0201': 'a',\n        '\\u0203': 'a',\n        '\\u1EA1': 'a',\n        '\\u1EAD': 'a',\n        '\\u1EB7': 'a',\n        '\\u1E01': 'a',\n        '\\u0105': 'a',\n        '\\u2C65': 'a',\n        '\\u0250': 'a',\n        '\\uA733': 'aa',\n        '\\u00E6': 'ae',\n        '\\u01FD': 'ae',\n        '\\u01E3': 'ae',\n        '\\uA735': 'ao',\n        '\\uA737': 'au',\n        '\\uA739': 'av',\n        '\\uA73B': 'av',\n        '\\uA73D': 'ay',\n        '\\u24D1': 'b',\n        '\\uFF42': 'b',\n        '\\u1E03': 'b',\n        '\\u1E05': 'b',\n        '\\u1E07': 'b',\n        '\\u0180': 'b',\n        '\\u0183': 'b',\n        '\\u0253': 'b',\n        '\\u24D2': 'c',\n        '\\uFF43': 'c',\n        '\\u0107': 'c',\n        '\\u0109': 'c',\n        '\\u010B': 'c',\n        '\\u010D': 'c',\n        '\\u00E7': 'c',\n        '\\u1E09': 'c',\n        '\\u0188': 'c',\n        '\\u023C': 'c',\n        '\\uA73F': 'c',\n        '\\u2184': 'c',\n        '\\u24D3': 'd',\n        '\\uFF44': 'd',\n        '\\u1E0B': 'd',\n        '\\u010F': 'd',\n        '\\u1E0D': 'd',\n        '\\u1E11': 'd',\n        '\\u1E13': 'd',\n        '\\u1E0F': 'd',\n        '\\u0111': 'd',\n        '\\u018C': 'd',\n        '\\u0256': 'd',\n        '\\u0257': 'd',\n        '\\uA77A': 'd',\n        '\\u01F3': 'dz',\n        '\\u01C6': 'dz',\n        '\\u24D4': 'e',\n        '\\uFF45': 'e',\n        '\\u00E8': 'e',\n        '\\u00E9': 'e',\n        '\\u00EA': 'e',\n        '\\u1EC1': 'e',\n        '\\u1EBF': 'e',\n        '\\u1EC5': 'e',\n        '\\u1EC3': 'e',\n        '\\u1EBD': 'e',\n        '\\u0113': 'e',\n        '\\u1E15': 'e',\n        '\\u1E17': 'e',\n        '\\u0115': 'e',\n        '\\u0117': 'e',\n        '\\u00EB': 'e',\n        '\\u1EBB': 'e',\n        '\\u011B': 'e',\n        '\\u0205': 'e',\n        '\\u0207': 'e',\n        '\\u1EB9': 'e',\n        '\\u1EC7': 'e',\n        '\\u0229': 'e',\n        '\\u1E1D': 'e',\n        '\\u0119': 'e',\n        '\\u1E19': 'e',\n        '\\u1E1B': 'e',\n        '\\u0247': 'e',\n        '\\u025B': 'e',\n        '\\u01DD': 'e',\n        '\\u24D5': 'f',\n        '\\uFF46': 'f',\n        '\\u1E1F': 'f',\n        '\\u0192': 'f',\n        '\\uA77C': 'f',\n        '\\u24D6': 'g',\n        '\\uFF47': 'g',\n        '\\u01F5': 'g',\n        '\\u011D': 'g',\n        '\\u1E21': 'g',\n        '\\u011F': 'g',\n        '\\u0121': 'g',\n        '\\u01E7': 'g',\n        '\\u0123': 'g',\n        '\\u01E5': 'g',\n        '\\u0260': 'g',\n        '\\uA7A1': 'g',\n        '\\u1D79': 'g',\n        '\\uA77F': 'g',\n        '\\u24D7': 'h',\n        '\\uFF48': 'h',\n        '\\u0125': 'h',\n        '\\u1E23': 'h',\n        '\\u1E27': 'h',\n        '\\u021F': 'h',\n        '\\u1E25': 'h',\n        '\\u1E29': 'h',\n        '\\u1E2B': 'h',\n        '\\u1E96': 'h',\n        '\\u0127': 'h',\n        '\\u2C68': 'h',\n        '\\u2C76': 'h',\n        '\\u0265': 'h',\n        '\\u0195': 'hv',\n        '\\u24D8': 'i',\n        '\\uFF49': 'i',\n        '\\u00EC': 'i',\n        '\\u00ED': 'i',\n        '\\u00EE': 'i',\n        '\\u0129': 'i',\n        '\\u012B': 'i',\n        '\\u012D': 'i',\n        '\\u00EF': 'i',\n        '\\u1E2F': 'i',\n        '\\u1EC9': 'i',\n        '\\u01D0': 'i',\n        '\\u0209': 'i',\n        '\\u020B': 'i',\n        '\\u1ECB': 'i',\n        '\\u012F': 'i',\n        '\\u1E2D': 'i',\n        '\\u0268': 'i',\n        '\\u0131': 'i',\n        '\\u24D9': 'j',\n        '\\uFF4A': 'j',\n        '\\u0135': 'j',\n        '\\u01F0': 'j',\n        '\\u0249': 'j',\n        '\\u24DA': 'k',\n        '\\uFF4B': 'k',\n        '\\u1E31': 'k',\n        '\\u01E9': 'k',\n        '\\u1E33': 'k',\n        '\\u0137': 'k',\n        '\\u1E35': 'k',\n        '\\u0199': 'k',\n        '\\u2C6A': 'k',\n        '\\uA741': 'k',\n        '\\uA743': 'k',\n        '\\uA745': 'k',\n        '\\uA7A3': 'k',\n        '\\u24DB': 'l',\n        '\\uFF4C': 'l',\n        '\\u0140': 'l',\n        '\\u013A': 'l',\n        '\\u013E': 'l',\n        '\\u1E37': 'l',\n        '\\u1E39': 'l',\n        '\\u013C': 'l',\n        '\\u1E3D': 'l',\n        '\\u1E3B': 'l',\n        '\\u017F': 'l',\n        '\\u0142': 'l',\n        '\\u019A': 'l',\n        '\\u026B': 'l',\n        '\\u2C61': 'l',\n        '\\uA749': 'l',\n        '\\uA781': 'l',\n        '\\uA747': 'l',\n        '\\u01C9': 'lj',\n        '\\u24DC': 'm',\n        '\\uFF4D': 'm',\n        '\\u1E3F': 'm',\n        '\\u1E41': 'm',\n        '\\u1E43': 'm',\n        '\\u0271': 'm',\n        '\\u026F': 'm',\n        '\\u24DD': 'n',\n        '\\uFF4E': 'n',\n        '\\u01F9': 'n',\n        '\\u0144': 'n',\n        '\\u00F1': 'n',\n        '\\u1E45': 'n',\n        '\\u0148': 'n',\n        '\\u1E47': 'n',\n        '\\u0146': 'n',\n        '\\u1E4B': 'n',\n        '\\u1E49': 'n',\n        '\\u019E': 'n',\n        '\\u0272': 'n',\n        '\\u0149': 'n',\n        '\\uA791': 'n',\n        '\\uA7A5': 'n',\n        '\\u01CC': 'nj',\n        '\\u24DE': 'o',\n        '\\uFF4F': 'o',\n        '\\u00F2': 'o',\n        '\\u00F3': 'o',\n        '\\u00F4': 'o',\n        '\\u1ED3': 'o',\n        '\\u1ED1': 'o',\n        '\\u1ED7': 'o',\n        '\\u1ED5': 'o',\n        '\\u00F5': 'o',\n        '\\u1E4D': 'o',\n        '\\u022D': 'o',\n        '\\u1E4F': 'o',\n        '\\u014D': 'o',\n        '\\u1E51': 'o',\n        '\\u1E53': 'o',\n        '\\u014F': 'o',\n        '\\u022F': 'o',\n        '\\u0231': 'o',\n        '\\u00F6': 'o',\n        '\\u022B': 'o',\n        '\\u1ECF': 'o',\n        '\\u0151': 'o',\n        '\\u01D2': 'o',\n        '\\u020D': 'o',\n        '\\u020F': 'o',\n        '\\u01A1': 'o',\n        '\\u1EDD': 'o',\n        '\\u1EDB': 'o',\n        '\\u1EE1': 'o',\n        '\\u1EDF': 'o',\n        '\\u1EE3': 'o',\n        '\\u1ECD': 'o',\n        '\\u1ED9': 'o',\n        '\\u01EB': 'o',\n        '\\u01ED': 'o',\n        '\\u00F8': 'o',\n        '\\u01FF': 'o',\n        '\\u0254': 'o',\n        '\\uA74B': 'o',\n        '\\uA74D': 'o',\n        '\\u0275': 'o',\n        '\\u01A3': 'oi',\n        '\\u0223': 'ou',\n        '\\uA74F': 'oo',\n        '\\u24DF': 'p',\n        '\\uFF50': 'p',\n        '\\u1E55': 'p',\n        '\\u1E57': 'p',\n        '\\u01A5': 'p',\n        '\\u1D7D': 'p',\n        '\\uA751': 'p',\n        '\\uA753': 'p',\n        '\\uA755': 'p',\n        '\\u24E0': 'q',\n        '\\uFF51': 'q',\n        '\\u024B': 'q',\n        '\\uA757': 'q',\n        '\\uA759': 'q',\n        '\\u24E1': 'r',\n        '\\uFF52': 'r',\n        '\\u0155': 'r',\n        '\\u1E59': 'r',\n        '\\u0159': 'r',\n        '\\u0211': 'r',\n        '\\u0213': 'r',\n        '\\u1E5B': 'r',\n        '\\u1E5D': 'r',\n        '\\u0157': 'r',\n        '\\u1E5F': 'r',\n        '\\u024D': 'r',\n        '\\u027D': 'r',\n        '\\uA75B': 'r',\n        '\\uA7A7': 'r',\n        '\\uA783': 'r',\n        '\\u24E2': 's',\n        '\\uFF53': 's',\n        '\\u00DF': 's',\n        '\\u015B': 's',\n        '\\u1E65': 's',\n        '\\u015D': 's',\n        '\\u1E61': 's',\n        '\\u0161': 's',\n        '\\u1E67': 's',\n        '\\u1E63': 's',\n        '\\u1E69': 's',\n        '\\u0219': 's',\n        '\\u015F': 's',\n        '\\u023F': 's',\n        '\\uA7A9': 's',\n        '\\uA785': 's',\n        '\\u1E9B': 's',\n        '\\u24E3': 't',\n        '\\uFF54': 't',\n        '\\u1E6B': 't',\n        '\\u1E97': 't',\n        '\\u0165': 't',\n        '\\u1E6D': 't',\n        '\\u021B': 't',\n        '\\u0163': 't',\n        '\\u1E71': 't',\n        '\\u1E6F': 't',\n        '\\u0167': 't',\n        '\\u01AD': 't',\n        '\\u0288': 't',\n        '\\u2C66': 't',\n        '\\uA787': 't',\n        '\\uA729': 'tz',\n        '\\u24E4': 'u',\n        '\\uFF55': 'u',\n        '\\u00F9': 'u',\n        '\\u00FA': 'u',\n        '\\u00FB': 'u',\n        '\\u0169': 'u',\n        '\\u1E79': 'u',\n        '\\u016B': 'u',\n        '\\u1E7B': 'u',\n        '\\u016D': 'u',\n        '\\u00FC': 'u',\n        '\\u01DC': 'u',\n        '\\u01D8': 'u',\n        '\\u01D6': 'u',\n        '\\u01DA': 'u',\n        '\\u1EE7': 'u',\n        '\\u016F': 'u',\n        '\\u0171': 'u',\n        '\\u01D4': 'u',\n        '\\u0215': 'u',\n        '\\u0217': 'u',\n        '\\u01B0': 'u',\n        '\\u1EEB': 'u',\n        '\\u1EE9': 'u',\n        '\\u1EEF': 'u',\n        '\\u1EED': 'u',\n        '\\u1EF1': 'u',\n        '\\u1EE5': 'u',\n        '\\u1E73': 'u',\n        '\\u0173': 'u',\n        '\\u1E77': 'u',\n        '\\u1E75': 'u',\n        '\\u0289': 'u',\n        '\\u24E5': 'v',\n        '\\uFF56': 'v',\n        '\\u1E7D': 'v',\n        '\\u1E7F': 'v',\n        '\\u028B': 'v',\n        '\\uA75F': 'v',\n        '\\u028C': 'v',\n        '\\uA761': 'vy',\n        '\\u24E6': 'w',\n        '\\uFF57': 'w',\n        '\\u1E81': 'w',\n        '\\u1E83': 'w',\n        '\\u0175': 'w',\n        '\\u1E87': 'w',\n        '\\u1E85': 'w',\n        '\\u1E98': 'w',\n        '\\u1E89': 'w',\n        '\\u2C73': 'w',\n        '\\u24E7': 'x',\n        '\\uFF58': 'x',\n        '\\u1E8B': 'x',\n        '\\u1E8D': 'x',\n        '\\u24E8': 'y',\n        '\\uFF59': 'y',\n        '\\u1EF3': 'y',\n        '\\u00FD': 'y',\n        '\\u0177': 'y',\n        '\\u1EF9': 'y',\n        '\\u0233': 'y',\n        '\\u1E8F': 'y',\n        '\\u00FF': 'y',\n        '\\u1EF7': 'y',\n        '\\u1E99': 'y',\n        '\\u1EF5': 'y',\n        '\\u01B4': 'y',\n        '\\u024F': 'y',\n        '\\u1EFF': 'y',\n        '\\u24E9': 'z',\n        '\\uFF5A': 'z',\n        '\\u017A': 'z',\n        '\\u1E91': 'z',\n        '\\u017C': 'z',\n        '\\u017E': 'z',\n        '\\u1E93': 'z',\n        '\\u1E95': 'z',\n        '\\u01B6': 'z',\n        '\\u0225': 'z',\n        '\\u0240': 'z',\n        '\\u2C6C': 'z',\n        '\\uA763': 'z',\n        '\\u0386': '\\u0391',\n        '\\u0388': '\\u0395',\n        '\\u0389': '\\u0397',\n        '\\u038A': '\\u0399',\n        '\\u03AA': '\\u0399',\n        '\\u038C': '\\u039F',\n        '\\u038E': '\\u03A5',\n        '\\u03AB': '\\u03A5',\n        '\\u038F': '\\u03A9',\n        '\\u03AC': '\\u03B1',\n        '\\u03AD': '\\u03B5',\n        '\\u03AE': '\\u03B7',\n        '\\u03AF': '\\u03B9',\n        '\\u03CA': '\\u03B9',\n        '\\u0390': '\\u03B9',\n        '\\u03CC': '\\u03BF',\n        '\\u03CD': '\\u03C5',\n        '\\u03CB': '\\u03C5',\n        '\\u03B0': '\\u03C5',\n        '\\u03C9': '\\u03C9',\n        '\\u03C2': '\\u03C3'\n    };\n    DataUtil.fnOperators = {\n        /**\n         * Returns true when the actual input is equal to the given input.\n         *\n         * @param {string|number|boolean} actual\n         * @param {string|number|boolean} expected\n         * @param {boolean} ignoreCase?\n         * @param {boolean} ignoreAccent?\n         * @param ignoreCase\n         * @param ignoreAccent\n         */\n        equal: function (actual, expected, ignoreCase, ignoreAccent) {\n            if (ignoreAccent) {\n                actual = DataUtil.ignoreDiacritics(actual);\n                expected = DataUtil.ignoreDiacritics(expected);\n            }\n            if (ignoreCase) {\n                return DataUtil.toLowerCase(actual) === DataUtil.toLowerCase(expected);\n            }\n            return actual === expected;\n        },\n        /**\n         * Returns true when the actual input is not equal to the given input.\n         *\n         * @param {string|number|boolean} actual\n         * @param {string|number|boolean} expected\n         * @param {boolean} ignoreCase?\n         * @param ignoreCase\n         * @param ignoreAccent\n         */\n        notequal: function (actual, expected, ignoreCase, ignoreAccent) {\n            if (ignoreAccent) {\n                actual = DataUtil.ignoreDiacritics(actual);\n                expected = DataUtil.ignoreDiacritics(expected);\n            }\n            return !DataUtil.fnOperators.equal(actual, expected, ignoreCase);\n        },\n        /**\n         * Returns true when the actual input is less than to the given input.\n         *\n         * @param {string|number|boolean} actual\n         * @param {string|number|boolean} expected\n         * @param {boolean} ignoreCase?\n         * @param ignoreCase\n         */\n        lessthan: function (actual, expected, ignoreCase) {\n            if (ignoreCase) {\n                return DataUtil.toLowerCase(actual) < DataUtil.toLowerCase(expected);\n            }\n            if (isNullOrUndefined(actual)) {\n                actual = undefined;\n            }\n            return actual < expected;\n        },\n        /**\n         * Returns true when the actual input is greater than to the given input.\n         *\n         * @param {string|number|boolean} actual\n         * @param {string|number|boolean} expected\n         * @param {boolean} ignoreCase?\n         * @param ignoreCase\n         */\n        greaterthan: function (actual, expected, ignoreCase) {\n            if (ignoreCase) {\n                return DataUtil.toLowerCase(actual) > DataUtil.toLowerCase(expected);\n            }\n            return actual > expected;\n        },\n        /**\n         * Returns true when the actual input is less than or equal to the given input.\n         *\n         * @param {string|number|boolean} actual\n         * @param {string|number|boolean} expected\n         * @param {boolean} ignoreCase?\n         * @param ignoreCase\n         */\n        lessthanorequal: function (actual, expected, ignoreCase) {\n            if (ignoreCase) {\n                return DataUtil.toLowerCase(actual) <= DataUtil.toLowerCase(expected);\n            }\n            if (isNullOrUndefined(actual)) {\n                actual = undefined;\n            }\n            return actual <= expected;\n        },\n        /**\n         * Returns true when the actual input is greater than or equal to the given input.\n         *\n         * @param {string|number|boolean} actual\n         * @param {string|number|boolean} expected\n         * @param {boolean} ignoreCase?\n         * @param ignoreCase\n         */\n        greaterthanorequal: function (actual, expected, ignoreCase) {\n            if (ignoreCase) {\n                return DataUtil.toLowerCase(actual) >= DataUtil.toLowerCase(expected);\n            }\n            return actual >= expected;\n        },\n        /**\n         * Returns true when the actual input contains the given string.\n         *\n         * @param {string|number} actual\n         * @param {string|number} expected\n         * @param {boolean} ignoreCase?\n         * @param ignoreCase\n         * @param ignoreAccent\n         */\n        contains: function (actual, expected, ignoreCase, ignoreAccent) {\n            if (ignoreAccent) {\n                actual = DataUtil.ignoreDiacritics(actual);\n                expected = DataUtil.ignoreDiacritics(expected);\n            }\n            if (ignoreCase) {\n                return !isNullOrUndefined(actual) && !isNullOrUndefined(expected) &&\n                    DataUtil.toLowerCase(actual).indexOf(DataUtil.toLowerCase(expected)) !== -1;\n            }\n            return !isNullOrUndefined(actual) && !isNullOrUndefined(expected) &&\n                actual.toString().indexOf(expected) !== -1;\n        },\n        /**\n         * Returns true when the actual input not contains the given string.\n         *\n         * @param  {string|number} actual\n         * @param  {string|number} expected\n         * @param  {boolean} ignoreCase?\n         */\n        doesnotcontain: function (actual, expected, ignoreCase, ignoreAccent) {\n            if (ignoreAccent) {\n                actual = DataUtil.ignoreDiacritics(actual);\n                expected = DataUtil.ignoreDiacritics(expected);\n            }\n            if (ignoreCase) {\n                return !isNullOrUndefined(actual) && !isNullOrUndefined(expected) &&\n                    DataUtil.toLowerCase(actual).indexOf(DataUtil.toLowerCase(expected)) === -1;\n            }\n            return !isNullOrUndefined(actual) && !isNullOrUndefined(expected) &&\n                actual.toString().indexOf(expected) === -1;\n        },\n        /**\n         * Returns true when the given input value is not null.\n         *\n         * @param  {string|number} actual\n         * @returns boolean\n         */\n        isnotnull: function (actual) {\n            return actual !== null && actual !== undefined;\n        },\n        /**\n         * Returns true when the given input value is null.\n         *\n         * @param  {string|number} actual\n         * @returns boolean\n         */\n        isnull: function (actual) {\n            return actual === null || actual === undefined;\n        },\n        /**\n         * Returns true when the actual input starts with the given string\n         *\n         * @param {string} actual\n         * @param {string} expected\n         * @param {boolean} ignoreCase?\n         * @param ignoreCase\n         * @param ignoreAccent\n         */\n        startswith: function (actual, expected, ignoreCase, ignoreAccent) {\n            if (ignoreAccent) {\n                actual = DataUtil.ignoreDiacritics(actual);\n                expected = DataUtil.ignoreDiacritics(expected);\n            }\n            if (ignoreCase) {\n                return actual && expected && DataUtil.startsWith(DataUtil.toLowerCase(actual), DataUtil.toLowerCase(expected));\n            }\n            return actual && expected && DataUtil.startsWith(actual, expected);\n        },\n        /**\n         * Returns true when the actual input not starts with the given string\n         *\n         * @param  {string} actual\n         * @param  {string} expected\n         * @param  {boolean} ignoreCase?\n         */\n        doesnotstartwith: function (actual, expected, ignoreCase, ignoreAccent) {\n            if (ignoreAccent) {\n                actual = DataUtil.ignoreDiacritics(actual);\n                expected = DataUtil.ignoreDiacritics(expected);\n            }\n            if (ignoreCase) {\n                return actual && expected && DataUtil.notStartsWith(DataUtil.toLowerCase(actual), DataUtil.toLowerCase(expected));\n            }\n            return actual && expected && DataUtil.notStartsWith(actual, expected);\n        },\n        /**\n         * Returns true when the actual input like with the given string.\n         *\n         * @param  {string} actual\n         * @param  {string} expected\n         * @param  {boolean} ignoreCase?\n         */\n        like: function (actual, expected, ignoreCase, ignoreAccent) {\n            if (ignoreAccent) {\n                actual = DataUtil.ignoreDiacritics(actual);\n                expected = DataUtil.ignoreDiacritics(expected);\n            }\n            if (ignoreCase) {\n                return actual && expected && DataUtil.like(DataUtil.toLowerCase(actual), DataUtil.toLowerCase(expected));\n            }\n            return actual && expected && DataUtil.like(actual, expected);\n        },\n        /**\n         * Returns true when the given input value is empty.\n         *\n         * @param  {string|number} actual\n         * @returns boolean\n         */\n        isempty: function (actual) {\n            return actual === undefined || actual === '';\n        },\n        /**\n         * Returns true when the given input value is not empty.\n         *\n         * @param  {string|number} actual\n         * @returns boolean\n         */\n        isnotempty: function (actual) {\n            return actual !== undefined && actual !== '';\n        },\n        /**\n         * Returns true when the actual input pattern(wildcard) matches with the given string.\n         *\n         * @param  {string|Date} actual\n         * @param  {string} expected\n         * @param  {boolean} ignoreCase?\n         */\n        wildcard: function (actual, expected, ignoreCase, ignoreAccent) {\n            if (ignoreAccent) {\n                actual = DataUtil.ignoreDiacritics(actual);\n                expected = DataUtil.ignoreDiacritics(expected);\n            }\n            if (ignoreCase) {\n                return (actual || typeof actual === 'boolean') && expected && typeof actual !== 'object' &&\n                    DataUtil.wildCard(DataUtil.toLowerCase(actual), DataUtil.toLowerCase(expected));\n            }\n            return (actual || typeof actual === 'boolean') && expected && DataUtil.wildCard(actual, expected);\n        },\n        /**\n         * Returns true when the actual input ends with the given string.\n         *\n         * @param {string} actual\n         * @param {string} expected\n         * @param {boolean} ignoreCase?\n         * @param ignoreCase\n         * @param ignoreAccent\n         */\n        endswith: function (actual, expected, ignoreCase, ignoreAccent) {\n            if (ignoreAccent) {\n                actual = DataUtil.ignoreDiacritics(actual);\n                expected = DataUtil.ignoreDiacritics(expected);\n            }\n            if (ignoreCase) {\n                return actual && expected && DataUtil.endsWith(DataUtil.toLowerCase(actual), DataUtil.toLowerCase(expected));\n            }\n            return actual && expected && DataUtil.endsWith(actual, expected);\n        },\n        /**\n         * Returns true when the actual input not ends with the given string.\n         *\n         * @param  {string} actual\n         * @param  {string} expected\n         * @param  {boolean} ignoreCase?\n         */\n        doesnotendwith: function (actual, expected, ignoreCase, ignoreAccent) {\n            if (ignoreAccent) {\n                actual = DataUtil.ignoreDiacritics(actual);\n                expected = DataUtil.ignoreDiacritics(expected);\n            }\n            if (ignoreCase) {\n                return actual && expected && DataUtil.notEndsWith(DataUtil.toLowerCase(actual), DataUtil.toLowerCase(expected));\n            }\n            return actual && expected && DataUtil.notEndsWith(actual, expected);\n        },\n        /**\n         * It will return the filter operator based on the filter symbol.\n         *\n         * @param  {string} operator\n         * @hidden\n         */\n        processSymbols: function (operator) {\n            var fnName = DataUtil.operatorSymbols[operator];\n            if (fnName) {\n                var fn = DataUtil.fnOperators[fnName];\n                return fn;\n            }\n            return DataUtil.throwError('Query - Process Operator : Invalid operator');\n        },\n        /**\n         * It will return the valid filter operator based on the specified operators.\n         *\n         * @param  {string} operator\n         * @hidden\n         */\n        processOperator: function (operator) {\n            var fn = DataUtil.fnOperators[operator];\n            if (fn) {\n                return fn;\n            }\n            return DataUtil.fnOperators.processSymbols(operator);\n        }\n    };\n    /**\n     * To perform the parse operation on JSON data, like convert to string from JSON or convert to JSON from string.\n     */\n    DataUtil.parse = {\n        /**\n         * Parse the given string to the plain JavaScript object.\n         *\n         * @param  {string|Object|Object[]} jsonText\n         */\n        parseJson: function (jsonText) {\n            if (typeof jsonText === 'string' && (/^[\\s]*\\[|^[\\s]*\\{(.)+:/g.test(jsonText) || jsonText.indexOf('\"') === -1)) {\n                jsonText = JSON.parse(jsonText, DataUtil.parse.jsonReviver);\n            }\n            else if (jsonText instanceof Array) {\n                DataUtil.parse.iterateAndReviveArray(jsonText);\n            }\n            else if (typeof jsonText === 'object' && jsonText !== null) {\n                DataUtil.parse.iterateAndReviveJson(jsonText);\n            }\n            return jsonText;\n        },\n        /**\n         * It will perform on array of values.\n         *\n         * @param  {string[]|Object[]} array\n         * @hidden\n         */\n        iterateAndReviveArray: function (array) {\n            for (var i = 0; i < array.length; i++) {\n                if (typeof array[i] === 'object' && array[i] !== null) {\n                    DataUtil.parse.iterateAndReviveJson(array[i]);\n                    // eslint-disable-next-line no-useless-escape\n                }\n                else if (typeof array[i] === 'string' && (!/^[\\s]*\\[|^[\\s]*\\{(.)+:|\\\"/g.test(array[i]) ||\n                    array[i].toString().indexOf('\"') === -1)) {\n                    array[i] = DataUtil.parse.jsonReviver('', array[i]);\n                }\n                else {\n                    array[i] = DataUtil.parse.parseJson(array[i]);\n                }\n            }\n        },\n        /**\n         * It will perform on JSON values\n         *\n         * @param  {JSON} json\n         * @hidden\n         */\n        iterateAndReviveJson: function (json) {\n            var value;\n            var keys = Object.keys(json);\n            for (var _i = 0, keys_2 = keys; _i < keys_2.length; _i++) {\n                var prop = keys_2[_i];\n                if (DataUtil.startsWith(prop, '__')) {\n                    continue;\n                }\n                value = json[prop];\n                if (typeof value === 'object') {\n                    if (value instanceof Array) {\n                        DataUtil.parse.iterateAndReviveArray(value);\n                    }\n                    else if (value) {\n                        DataUtil.parse.iterateAndReviveJson(value);\n                    }\n                }\n                else {\n                    json[prop] = DataUtil.parse.jsonReviver(json[prop], value);\n                }\n            }\n        },\n        /**\n         * It will perform on JSON values\n         *\n         * @param  {string} field\n         * @param  {string|Date} value\n         * @hidden\n         */\n        jsonReviver: function (field, value) {\n            if (typeof value === 'string') {\n                // eslint-disable-next-line security/detect-unsafe-regex\n                var ms = /^\\/Date\\(([+-]?[0-9]+)([+-][0-9]{4})?\\)\\/$/.exec(value);\n                var offSet = DataUtil.timeZoneHandling ? DataUtil.serverTimezoneOffset : null;\n                if (ms) {\n                    return DataUtil.dateParse.toTimeZone(new Date(parseInt(ms[1], 10)), offSet, true);\n                    // eslint-disable-next-line no-useless-escape, security/detect-unsafe-regex\n                }\n                else if (/^(\\d{4}\\-\\d\\d\\-\\d\\d([tT][\\d:\\.]*){1})([zZ]|([+\\-])(\\d\\d):?(\\d\\d))?$/.test(value)) {\n                    var isUTC = value.indexOf('Z') > -1 || value.indexOf('z') > -1;\n                    var arr = value.split(/[^0-9.]/);\n                    if (isUTC) {\n                        if (arr[5].indexOf('.') > -1) {\n                            var secondsMs = arr[5].split('.');\n                            arr[5] = secondsMs[0];\n                            arr[6] = new Date(value).getUTCMilliseconds().toString();\n                        }\n                        else {\n                            arr[6] = '00';\n                        }\n                        value = DataUtil.dateParse\n                            .toTimeZone(new Date(parseInt(arr[0], 10), parseInt(arr[1], 10) - 1, parseInt(arr[2], 10), parseInt(arr[3], 10), parseInt(arr[4], 10), parseInt(arr[5] ? arr[5] : '00', 10), parseInt(arr[6], 10)), DataUtil.serverTimezoneOffset, false);\n                    }\n                    else {\n                        var utcFormat = new Date(parseInt(arr[0], 10), parseInt(arr[1], 10) - 1, parseInt(arr[2], 10), parseInt(arr[3], 10), parseInt(arr[4], 10), parseInt(arr[5] ? arr[5] : '00', 10));\n                        var hrs = parseInt(arr[6], 10);\n                        var mins = parseInt(arr[7], 10);\n                        if (isNaN(hrs) && isNaN(mins)) {\n                            return utcFormat;\n                        }\n                        if (value.indexOf('+') > -1) {\n                            utcFormat.setHours(utcFormat.getHours() - hrs, utcFormat.getMinutes() - mins);\n                        }\n                        else {\n                            utcFormat.setHours(utcFormat.getHours() + hrs, utcFormat.getMinutes() + mins);\n                        }\n                        value = DataUtil.dateParse\n                            .toTimeZone(utcFormat, DataUtil.serverTimezoneOffset, false);\n                    }\n                    if (DataUtil.serverTimezoneOffset == null) {\n                        value = DataUtil.dateParse.addSelfOffset(value);\n                    }\n                }\n            }\n            return value;\n        },\n        /**\n         * Check wheather the given value is JSON or not.\n         *\n         * @param  {Object[]} jsonData\n         */\n        isJson: function (jsonData) {\n            if (typeof jsonData[0] === 'string') {\n                return jsonData;\n            }\n            return DataUtil.parse.parseJson(jsonData);\n        },\n        /**\n         * Checks wheather the given value is GUID or not.\n         *\n         * @param  {string} value\n         */\n        isGuid: function (value) {\n            // eslint-disable-next-line security/detect-unsafe-regex\n            var regex = /[A-Fa-f0-9]{8}(?:-[A-Fa-f0-9]{4}){3}-[A-Fa-f0-9]{12}/i;\n            var match = regex.exec(value);\n            return match != null;\n        },\n        /**\n         * The method used to replace the value based on the type.\n         *\n         * @param  {Object} value\n         * @param  {boolean} stringify\n         * @hidden\n         */\n        replacer: function (value, stringify) {\n            if (DataUtil.isPlainObject(value)) {\n                return DataUtil.parse.jsonReplacer(value, stringify);\n            }\n            if (value instanceof Array) {\n                return DataUtil.parse.arrayReplacer(value);\n            }\n            if (value instanceof Date) {\n                return DataUtil.parse.jsonReplacer({ val: value }, stringify).val;\n            }\n            return value;\n        },\n        /**\n         * It will replace the JSON value.\n         *\n         * @param {string} key\n         * @param {Object} val\n         * @param stringify\n         * @hidden\n         */\n        jsonReplacer: function (val, stringify) {\n            var value;\n            var keys = Object.keys(val);\n            for (var _i = 0, keys_3 = keys; _i < keys_3.length; _i++) {\n                var prop = keys_3[_i];\n                value = val[prop];\n                if (!(value instanceof Date)) {\n                    continue;\n                }\n                var d = value;\n                if (DataUtil.serverTimezoneOffset == null) {\n                    val[prop] = DataUtil.dateParse.toTimeZone(d, null).toJSON();\n                }\n                else {\n                    d = new Date(+d + DataUtil.serverTimezoneOffset * 3600000);\n                    val[prop] = DataUtil.dateParse.toTimeZone(DataUtil.dateParse.addSelfOffset(d), null).toJSON();\n                }\n            }\n            return val;\n        },\n        /**\n         * It will replace the Array of value.\n         *\n         * @param  {string} key\n         * @param  {Object[]} val\n         * @hidden\n         */\n        arrayReplacer: function (val) {\n            for (var i = 0; i < val.length; i++) {\n                if (DataUtil.isPlainObject(val[i])) {\n                    val[i] = DataUtil.parse.jsonReplacer(val[i]);\n                }\n                else if (val[i] instanceof Date) {\n                    val[i] = DataUtil.parse.jsonReplacer({ date: val[i] }).date;\n                }\n            }\n            return val;\n        },\n        /**\n         * It will replace the Date object with respective to UTC format value.\n         *\n         * @param  {string} key\n         * @param  {any} value\n         * @hidden\n         */\n        /* eslint-disable @typescript-eslint/no-explicit-any */\n        /* tslint:disable-next-line:no-any */\n        jsonDateReplacer: function (key, value) {\n            /* eslint-enable @typescript-eslint/no-explicit-any */\n            if (key === 'value' && value) {\n                if (typeof value === 'string') {\n                    // eslint-disable-next-line security/detect-unsafe-regex\n                    var ms = /^\\/Date\\(([+-]?[0-9]+)([+-][0-9]{4})?\\)\\/$/.exec(value);\n                    if (ms) {\n                        value = DataUtil.dateParse.toTimeZone(new Date(parseInt(ms[1], 10)), null, true);\n                        // eslint-disable-next-line no-useless-escape, security/detect-unsafe-regex\n                    }\n                    else if (/^(\\d{4}\\-\\d\\d\\-\\d\\d([tT][\\d:\\.]*){1})([zZ]|([+\\-])(\\d\\d):?(\\d\\d))?$/.test(value)) {\n                        var arr = value.split(/[^0-9]/);\n                        value = DataUtil.dateParse\n                            .toTimeZone(new Date(parseInt(arr[0], 10), parseInt(arr[1], 10) - 1, parseInt(arr[2], 10), parseInt(arr[3], 10), parseInt(arr[4], 10), parseInt(arr[5], 10)), null, true);\n                    }\n                }\n                if (value instanceof Date) {\n                    value = DataUtil.dateParse.addSelfOffset(value);\n                    if (DataUtil.serverTimezoneOffset === null) {\n                        return DataUtil.dateParse.toTimeZone(DataUtil.dateParse.addSelfOffset(value), null).toJSON();\n                    }\n                    else {\n                        value = DataUtil.dateParse.toTimeZone(value, ((value.getTimezoneOffset() / 60)\n                            - DataUtil.serverTimezoneOffset), false);\n                        return value.toJSON();\n                    }\n                }\n            }\n            return value;\n        }\n    };\n    /**\n     * @hidden\n     */\n    DataUtil.dateParse = {\n        addSelfOffset: function (input) {\n            return new Date(+input - (input.getTimezoneOffset() * 60000));\n        },\n        toUTC: function (input) {\n            return new Date(+input + (input.getTimezoneOffset() * 60000));\n        },\n        toTimeZone: function (input, offset, utc) {\n            if (offset === null) {\n                return input;\n            }\n            var unix = utc ? DataUtil.dateParse.toUTC(input) : input;\n            return new Date(+unix - (offset * 3600000));\n        },\n        toLocalTime: function (input) {\n            var datefn = input;\n            var timeZone = -datefn.getTimezoneOffset();\n            var differenceString = timeZone >= 0 ? '+' : '-';\n            var localtimefn = function (num) {\n                var norm = Math.floor(Math.abs(num));\n                return (norm < 10 ? '0' : '') + norm;\n            };\n            var val = datefn.getFullYear() + '-' + localtimefn(datefn.getMonth() + 1) + '-' + localtimefn(datefn.getDate()) +\n                'T' + localtimefn(datefn.getHours()) +\n                ':' + localtimefn(datefn.getMinutes()) +\n                ':' + localtimefn(datefn.getSeconds()) +\n                differenceString + localtimefn(timeZone / 60) +\n                ':' + localtimefn(timeZone % 60);\n            return val;\n        }\n    };\n    return DataUtil;\n}());\nexport { DataUtil };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { merge, extend, isNullOrUndefined, setValue, getValue } from '@syncfusion/ej2-base';\nimport { DataUtil } from './util';\nimport { Query, Predicate } from './query';\nvar consts = { GroupGuid: '{271bbba0-1ee7}' };\n/**\n * Adaptors are specific data source type aware interfaces that are used by DataManager to communicate with DataSource.\n * This is the base adaptor class that other adaptors can extend.\n *\n * @hidden\n */\nvar Adaptor = /** @class */ (function () {\n    /**\n     * Constructor for Adaptor class\n     *\n     * @param {DataOptions} ds?\n     * @param ds\n     * @hidden\n     * @returns aggregates\n     */\n    function Adaptor(ds) {\n        // common options for all the adaptors\n        this.options = {\n            from: 'table',\n            requestType: 'json',\n            sortBy: 'sorted',\n            select: 'select',\n            skip: 'skip',\n            group: 'group',\n            take: 'take',\n            search: 'search',\n            count: 'requiresCounts',\n            where: 'where',\n            aggregates: 'aggregates',\n            expand: 'expand'\n        };\n        /**\n         * Specifies the type of adaptor.\n         *\n         * @default Adaptor\n         */\n        this.type = Adaptor;\n        this.dataSource = ds;\n        this.pvt = {};\n    }\n    /**\n     * Returns the data from the query processing.\n     *\n     * @param {Object} data\n     * @param {DataOptions} ds?\n     * @param {Query} query?\n     * @param {Request} xhr?\n     * @param ds\n     * @param query\n     * @param xhr\n     * @returns Object\n     */\n    Adaptor.prototype.processResponse = function (data, ds, query, xhr) {\n        return data;\n    };\n    return Adaptor;\n}());\nexport { Adaptor };\n/**\n * JsonAdaptor is used to process JSON data. It contains methods to process the given JSON data based on the queries.\n *\n * @hidden\n */\nvar JsonAdaptor = /** @class */ (function (_super) {\n    __extends(JsonAdaptor, _super);\n    function JsonAdaptor() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Process the JSON data based on the provided queries.\n     *\n     * @param  {DataManager} dataManager\n     * @param  {Query} query\n     * @returns Object\n     */\n    JsonAdaptor.prototype.processQuery = function (dataManager, query) {\n        var result = dataManager.dataSource.json.slice(0);\n        var count = result.length;\n        var countFlg = true;\n        var ret;\n        var key;\n        var lazyLoad = {};\n        var keyCount = 0;\n        var group = [];\n        var sort = [];\n        var page;\n        for (var i = 0; i < query.lazyLoad.length; i++) {\n            keyCount++;\n            lazyLoad[query.lazyLoad[i].key] = query.lazyLoad[i].value;\n        }\n        var agg = {};\n        var isGroupByFormat = false;\n        if (query.lazyLoad.length) {\n            for (var i = 0; i < query.queries.length; i++) {\n                key = query.queries[i];\n                if (key.fn === 'onGroup' && !isNullOrUndefined(key.e.format)) {\n                    isGroupByFormat = true;\n                    break;\n                }\n            }\n        }\n        for (var i = 0; i < query.queries.length; i++) {\n            key = query.queries[i];\n            if ((key.fn === 'onPage' || key.fn === 'onGroup' || (key.fn === 'onSortBy' && !isGroupByFormat)) && query.lazyLoad.length) {\n                if (key.fn === 'onGroup') {\n                    group.push(key.e);\n                }\n                if (key.fn === 'onPage') {\n                    page = key.e;\n                }\n                if (key.fn === 'onSortBy') {\n                    sort.unshift(key.e);\n                }\n                continue;\n            }\n            ret = this[key.fn].call(this, result, key.e, query);\n            if (key.fn === 'onAggregates') {\n                agg[key.e.field + ' - ' + key.e.type] = ret;\n            }\n            else {\n                result = ret !== undefined ? ret : result;\n            }\n            if (key.fn === 'onPage' || key.fn === 'onSkip' || key.fn === 'onTake' || key.fn === 'onRange') {\n                countFlg = false;\n            }\n            if (countFlg) {\n                count = result.length;\n            }\n        }\n        if (keyCount) {\n            var args = {\n                query: query, lazyLoad: lazyLoad, result: result, group: group, page: page, sort: sort\n            };\n            var lazyLoadData = this.lazyLoadGroup(args);\n            result = lazyLoadData.result;\n            count = lazyLoadData.count;\n        }\n        if (query.isCountRequired) {\n            result = {\n                result: result,\n                count: count,\n                aggregates: agg\n            };\n        }\n        return result;\n    };\n    /**\n     * Perform lazy load grouping in JSON array based on the given query and lazy load details.\n     *\n     * @param  {LazyLoadGroupArgs} args\n     */\n    JsonAdaptor.prototype.lazyLoadGroup = function (args) {\n        var count = 0;\n        var agg = this.getAggregate(args.query);\n        var result = args.result;\n        if (!isNullOrUndefined(args.lazyLoad.onDemandGroupInfo)) {\n            var req = args.lazyLoad.onDemandGroupInfo;\n            for (var i = req.where.length - 1; i >= 0; i--) {\n                result = this.onWhere(result, req.where[i]);\n            }\n            if (args.group.length !== req.level) {\n                var field = args.group[req.level].fieldName;\n                result = DataUtil.group(result, field, agg, null, null, args.group[req.level].comparer, true);\n                if (args.sort.length) {\n                    result = this.onSortBy(result, args.sort[parseInt(req.level.toString(), 10)], args.query, true);\n                }\n            }\n            else {\n                for (var i = args.sort.length - 1; i >= req.level; i--) {\n                    result = this.onSortBy(result, args.sort[parseInt(i.toString(), 10)], args.query, false);\n                }\n            }\n            count = result.length;\n            var data = result;\n            result = result.slice(req.skip);\n            result = result.slice(0, req.take);\n            if (args.group.length !== req.level) {\n                this.formGroupResult(result, data);\n            }\n        }\n        else {\n            var field_1 = args.group[0].fieldName;\n            result = DataUtil.group(result, field_1, agg, null, null, args.group[0].comparer, true);\n            count = result.length;\n            var data = result;\n            if (args.sort.length) {\n                var sort = args.sort.length > 1 ?\n                    args.sort.filter(function (x) { return x.fieldName === field_1; })[0] : args.sort[0];\n                result = this.onSortBy(result, sort, args.query, true);\n            }\n            if (args.page) {\n                result = this.onPage(result, args.page, args.query);\n            }\n            this.formGroupResult(result, data);\n        }\n        return { result: result, count: count };\n    };\n    JsonAdaptor.prototype.formGroupResult = function (result, data) {\n        if (result.length && data.length) {\n            var uid = 'GroupGuid';\n            var childLevel = 'childLevels';\n            var level = 'level';\n            var records = 'records';\n            result[uid] = data[uid];\n            result[childLevel] = data[childLevel];\n            result[level] = data[level];\n            result[records] = data[records];\n        }\n        return result;\n    };\n    /**\n     * Separate the aggregate query from the given queries\n     *\n     * @param  {Query} query\n     */\n    JsonAdaptor.prototype.getAggregate = function (query) {\n        var aggQuery = Query.filterQueries(query.queries, 'onAggregates');\n        var agg = [];\n        if (aggQuery.length) {\n            var tmp = void 0;\n            for (var i = 0; i < aggQuery.length; i++) {\n                tmp = aggQuery[i].e;\n                agg.push({ type: tmp.type, field: DataUtil.getValue(tmp.field, query) });\n            }\n        }\n        return agg;\n    };\n    /**\n     * Performs batch update in the JSON array which add, remove and update records.\n     *\n     * @param  {DataManager} dm\n     * @param  {CrudOptions} changes\n     * @param  {RemoteArgs} e\n     */\n    JsonAdaptor.prototype.batchRequest = function (dm, changes, e) {\n        var i;\n        var deletedRecordsLen = changes.deletedRecords.length;\n        for (i = 0; i < changes.addedRecords.length; i++) {\n            this.insert(dm, changes.addedRecords[i]);\n        }\n        for (i = 0; i < changes.changedRecords.length; i++) {\n            this.update(dm, e.key, changes.changedRecords[i]);\n        }\n        for (i = 0; i < deletedRecordsLen; i++) {\n            this.remove(dm, e.key, changes.deletedRecords[i]);\n        }\n        return changes;\n    };\n    /**\n     * Performs filter operation with the given data and where query.\n     *\n     * @param {Object[]} ds\n     * @param {{validate:Function}} e\n     * @param e.validate\n     */\n    JsonAdaptor.prototype.onWhere = function (ds, e) {\n        if (!ds || !ds.length) {\n            return ds;\n        }\n        return ds.filter(function (obj) {\n            if (e) {\n                return e.validate(obj);\n            }\n        });\n    };\n    /**\n     * Returns aggregate function based on the aggregate type.\n     *\n     * @param {Object[]} ds\n     * @param e\n     * @param {string} } type\n     * @param e.field\n     * @param e.type\n     */\n    JsonAdaptor.prototype.onAggregates = function (ds, e) {\n        var fn = DataUtil.aggregates[e.type];\n        if (!ds || !fn || ds.length === 0) {\n            return null;\n        }\n        return fn(ds, e.field);\n    };\n    /**\n     * Performs search operation based on the given query.\n     *\n     * @param  {Object[]} ds\n     * @param  {QueryOptions} e\n     */\n    JsonAdaptor.prototype.onSearch = function (ds, e) {\n        if (!ds || !ds.length) {\n            return ds;\n        }\n        if (e.fieldNames.length === 0) {\n            DataUtil.getFieldList(ds[0], e.fieldNames);\n        }\n        return ds.filter(function (obj) {\n            for (var j = 0; j < e.fieldNames.length; j++) {\n                if (e.comparer.call(obj, DataUtil.getObject(e.fieldNames[j], obj), e.searchKey, e.ignoreCase, e.ignoreAccent)) {\n                    return true;\n                }\n            }\n            return false;\n        });\n    };\n    /**\n     * Sort the data with given direction and field.\n     *\n     * @param {Object[]} ds\n     * @param e\n     * @param {Object} b\n     * @param e.comparer\n     * @param e.fieldName\n     * @param query\n     * @param isLazyLoadGroupSort\n     */\n    JsonAdaptor.prototype.onSortBy = function (ds, e, query, isLazyLoadGroupSort) {\n        if (!ds || !ds.length) {\n            return ds;\n        }\n        var fnCompare;\n        var field = DataUtil.getValue(e.fieldName, query);\n        if (!field) {\n            return ds.sort(e.comparer);\n        }\n        if (field instanceof Array) {\n            field = field.slice(0);\n            for (var i = field.length - 1; i >= 0; i--) {\n                if (!field[i]) {\n                    continue;\n                }\n                fnCompare = e.comparer;\n                if (DataUtil.endsWith(field[i], ' desc')) {\n                    fnCompare = DataUtil.fnSort('descending');\n                    field[i] = field[i].replace(' desc', '');\n                }\n                ds = DataUtil.sort(ds, field[i], fnCompare);\n            }\n            return ds;\n        }\n        return DataUtil.sort(ds, isLazyLoadGroupSort ? 'key' : field, e.comparer);\n    };\n    /**\n     * Group the data based on the given query.\n     *\n     * @param  {Object[]} ds\n     * @param  {QueryOptions} e\n     * @param  {Query} query\n     */\n    JsonAdaptor.prototype.onGroup = function (ds, e, query) {\n        if (!ds || !ds.length) {\n            return ds;\n        }\n        var agg = this.getAggregate(query);\n        return DataUtil.group(ds, DataUtil.getValue(e.fieldName, query), agg, null, null, e.comparer);\n    };\n    /**\n     * Retrieves records based on the given page index and size.\n     *\n     * @param {Object[]} ds\n     * @param e\n     * @param {number} } pageIndex\n     * @param e.pageSize\n     * @param {Query} query\n     * @param e.pageIndex\n     */\n    JsonAdaptor.prototype.onPage = function (ds, e, query) {\n        var size = DataUtil.getValue(e.pageSize, query);\n        var start = (DataUtil.getValue(e.pageIndex, query) - 1) * size;\n        var end = start + size;\n        if (!ds || !ds.length) {\n            return ds;\n        }\n        return ds.slice(start, end);\n    };\n    /**\n     * Retrieves records based on the given start and end index from query.\n     *\n     * @param {Object[]} ds\n     * @param e\n     * @param {number} } end\n     * @param e.start\n     * @param e.end\n     */\n    JsonAdaptor.prototype.onRange = function (ds, e) {\n        if (!ds || !ds.length) {\n            return ds;\n        }\n        return ds.slice(DataUtil.getValue(e.start), DataUtil.getValue(e.end));\n    };\n    /**\n     * Picks the given count of records from the top of the datasource.\n     *\n     * @param {Object[]} ds\n     * @param {{nos:number}} e\n     * @param e.nos\n     */\n    JsonAdaptor.prototype.onTake = function (ds, e) {\n        if (!ds || !ds.length) {\n            return ds;\n        }\n        return ds.slice(0, DataUtil.getValue(e.nos));\n    };\n    /**\n     * Skips the given count of records from the data source.\n     *\n     * @param {Object[]} ds\n     * @param {{nos:number}} e\n     * @param e.nos\n     */\n    JsonAdaptor.prototype.onSkip = function (ds, e) {\n        if (!ds || !ds.length) {\n            return ds;\n        }\n        return ds.slice(DataUtil.getValue(e.nos));\n    };\n    /**\n     * Selects specified columns from the data source.\n     *\n     * @param {Object[]} ds\n     * @param {{fieldNames:string}} e\n     * @param e.fieldNames\n     */\n    JsonAdaptor.prototype.onSelect = function (ds, e) {\n        if (!ds || !ds.length) {\n            return ds;\n        }\n        return DataUtil.select(ds, DataUtil.getValue(e.fieldNames));\n    };\n    /**\n     * Inserts new record in the table.\n     *\n     * @param {DataManager} dm\n     * @param {Object} data\n     * @param tableName\n     * @param query\n     * @param {number} position\n     */\n    JsonAdaptor.prototype.insert = function (dm, data, tableName, query, position) {\n        if (isNullOrUndefined(position)) {\n            return dm.dataSource.json.push(data);\n        }\n        else {\n            return dm.dataSource.json.splice(position, 0, data);\n        }\n    };\n    /**\n     * Remove the data from the dataSource based on the key field value.\n     *\n     * @param {DataManager} dm\n     * @param {string} keyField\n     * @param {Object} value\n     * @param {string} tableName?\n     * @param tableName\n     * @returns null\n     */\n    JsonAdaptor.prototype.remove = function (dm, keyField, value, tableName) {\n        var ds = dm.dataSource.json;\n        var i;\n        if (typeof value === 'object' && !(value instanceof Date)) {\n            value = DataUtil.getObject(keyField, value);\n        }\n        for (i = 0; i < ds.length; i++) {\n            if (DataUtil.getObject(keyField, ds[i]) === value) {\n                break;\n            }\n        }\n        return i !== ds.length ? ds.splice(i, 1) : null;\n    };\n    /**\n     * Updates existing record and saves the changes to the table.\n     *\n     * @param {DataManager} dm\n     * @param {string} keyField\n     * @param {Object} value\n     * @param {string} tableName?\n     * @param tableName\n     * @returns null\n     */\n    JsonAdaptor.prototype.update = function (dm, keyField, value, tableName) {\n        var ds = dm.dataSource.json;\n        var i;\n        var key;\n        if (!isNullOrUndefined(keyField)) {\n            key = getValue(keyField, value);\n        }\n        for (i = 0; i < ds.length; i++) {\n            if (!isNullOrUndefined(keyField) && (getValue(keyField, ds[i])) === key) {\n                break;\n            }\n        }\n        return i < ds.length ? merge(ds[i], value) : null;\n    };\n    return JsonAdaptor;\n}(Adaptor));\nexport { JsonAdaptor };\n/**\n * URL Adaptor of DataManager can be used when you are required to use remote service to retrieve data.\n * It interacts with server-side for all DataManager Queries and CRUD operations.\n *\n * @hidden\n */\nvar UrlAdaptor = /** @class */ (function (_super) {\n    __extends(UrlAdaptor, _super);\n    function UrlAdaptor() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Process the query to generate request body.\n     *\n     * @param {DataManager} dm\n     * @param {Query} query\n     * @param {Object[]} hierarchyFilters?\n     * @param hierarchyFilters\n     * @returns p\n     */\n    // tslint:disable-next-line:max-func-body-length\n    UrlAdaptor.prototype.processQuery = function (dm, query, hierarchyFilters) {\n        var queries = this.getQueryRequest(query);\n        var singles = Query.filterQueryLists(query.queries, ['onSelect', 'onPage', 'onSkip', 'onTake', 'onRange']);\n        var params = query.params;\n        var url = dm.dataSource.url;\n        var temp;\n        var skip;\n        var take = null;\n        var options = this.options;\n        var request = { sorts: [], groups: [], filters: [], searches: [], aggregates: [] };\n        // calc Paging & Range\n        if ('onPage' in singles) {\n            temp = singles.onPage;\n            skip = DataUtil.getValue(temp.pageIndex, query);\n            take = DataUtil.getValue(temp.pageSize, query);\n            skip = (skip - 1) * take;\n        }\n        else if ('onRange' in singles) {\n            temp = singles.onRange;\n            skip = temp.start;\n            take = temp.end - temp.start;\n        }\n        // Sorting\n        for (var i = 0; i < queries.sorts.length; i++) {\n            temp = DataUtil.getValue(queries.sorts[i].e.fieldName, query);\n            request.sorts.push(DataUtil.callAdaptorFunction(this, 'onEachSort', { name: temp, direction: queries.sorts[i].e.direction }, query));\n        }\n        // hierarchy\n        if (hierarchyFilters) {\n            temp = this.getFiltersFrom(hierarchyFilters, query);\n            if (temp) {\n                request.filters.push(DataUtil.callAdaptorFunction(this, 'onEachWhere', temp.toJson(), query));\n            }\n        }\n        // Filters\n        for (var i = 0; i < queries.filters.length; i++) {\n            var res = DataUtil.callAdaptorFunction(this, 'onEachWhere', queries.filters[i].e.toJson(), query);\n            if ((this.getModuleName &&\n                this.getModuleName() === 'ODataV4Adaptor') &&\n                !isNullOrUndefined(queries.filters[i].e.key) && queries.filters.length > 1) {\n                res = '(' + res + ')';\n            }\n            request.filters.push(res);\n            var keys_3 = typeof request.filters[i] === 'object' ? Object.keys(request.filters[i]) : [];\n            for (var _i = 0, keys_1 = keys_3; _i < keys_1.length; _i++) {\n                var prop = keys_1[_i];\n                if (DataUtil.isNull((request)[prop])) {\n                    delete request[prop];\n                }\n            }\n        }\n        // Searches\n        for (var i = 0; i < queries.searches.length; i++) {\n            temp = queries.searches[i].e;\n            request.searches.push(DataUtil.callAdaptorFunction(this, 'onEachSearch', {\n                fields: temp.fieldNames,\n                operator: temp.operator,\n                key: temp.searchKey,\n                ignoreCase: temp.ignoreCase\n            }, query));\n        }\n        // Grouping\n        for (var i = 0; i < queries.groups.length; i++) {\n            request.groups.push(DataUtil.getValue(queries.groups[i].e.fieldName, query));\n        }\n        // aggregates\n        for (var i = 0; i < queries.aggregates.length; i++) {\n            temp = queries.aggregates[i].e;\n            request.aggregates.push({ type: temp.type, field: DataUtil.getValue(temp.field, query) });\n        }\n        var req = {};\n        this.getRequestQuery(options, query, singles, request, req);\n        // Params\n        DataUtil.callAdaptorFunction(this, 'addParams', { dm: dm, query: query, params: params, reqParams: req });\n        if (query.lazyLoad.length) {\n            for (var i = 0; i < query.lazyLoad.length; i++) {\n                req[query.lazyLoad[i].key] = query.lazyLoad[i].value;\n            }\n        }\n        // cleanup\n        var keys = Object.keys(req);\n        for (var _a = 0, keys_2 = keys; _a < keys_2.length; _a++) {\n            var prop = keys_2[_a];\n            if (DataUtil.isNull(req[prop]) || req[prop] === '' || req[prop].length === 0) {\n                delete req[prop];\n            }\n        }\n        if (!(options.skip in req && options.take in req) && take !== null) {\n            req[options.skip] = DataUtil.callAdaptorFunction(this, 'onSkip', skip, query);\n            req[options.take] = DataUtil.callAdaptorFunction(this, 'onTake', take, query);\n        }\n        var p = this.pvt;\n        this.pvt = {};\n        if (this.options.requestType === 'json') {\n            return {\n                data: JSON.stringify(req, DataUtil.parse.jsonDateReplacer),\n                url: url,\n                pvtData: p,\n                type: 'POST',\n                contentType: 'application/json; charset=utf-8'\n            };\n        }\n        temp = this.convertToQueryString(req, query, dm);\n        temp = (dm.dataSource.url.indexOf('?') !== -1 ? '&' : '/') + temp;\n        return {\n            type: 'GET', url: temp.length ? url.replace(/\\/*$/, temp) : url, pvtData: p\n        };\n    };\n    UrlAdaptor.prototype.getRequestQuery = function (options, query, singles, request, request1) {\n        var param = 'param';\n        var req = request1;\n        req[options.from] = query.fromTable;\n        if (options.apply && query.distincts.length) {\n            req[options.apply] = 'onDistinct' in this ? DataUtil.callAdaptorFunction(this, 'onDistinct', query.distincts) : '';\n        }\n        if (!query.distincts.length && options.expand) {\n            req[options.expand] = 'onExpand' in this && 'onSelect' in singles ?\n                DataUtil.callAdaptorFunction(this, 'onExpand', { selects: DataUtil.getValue(singles.onSelect.fieldNames, query), expands: query.expands }, query) : query.expands;\n        }\n        req[options.select] = 'onSelect' in singles && !query.distincts.length ?\n            DataUtil.callAdaptorFunction(this, 'onSelect', DataUtil.getValue(singles.onSelect.fieldNames, query), query) : '';\n        req[options.count] = query.isCountRequired ? DataUtil.callAdaptorFunction(this, 'onCount', query.isCountRequired, query) : '';\n        req[options.search] = request.searches.length ? DataUtil.callAdaptorFunction(this, 'onSearch', request.searches, query) : '';\n        req[options.skip] = 'onSkip' in singles ?\n            DataUtil.callAdaptorFunction(this, 'onSkip', DataUtil.getValue(singles.onSkip.nos, query), query) : '';\n        req[options.take] = 'onTake' in singles ?\n            DataUtil.callAdaptorFunction(this, 'onTake', DataUtil.getValue(singles.onTake.nos, query), query) : '';\n        req[options.where] = request.filters.length || request.searches.length ?\n            DataUtil.callAdaptorFunction(this, 'onWhere', request.filters, query) : '';\n        req[options.sortBy] = request.sorts.length ? DataUtil.callAdaptorFunction(this, 'onSortBy', request.sorts, query) : '';\n        req[options.group] = request.groups.length ? DataUtil.callAdaptorFunction(this, 'onGroup', request.groups, query) : '';\n        req[options.aggregates] = request.aggregates.length ?\n            DataUtil.callAdaptorFunction(this, 'onAggregates', request.aggregates, query) : '';\n        req[param] = [];\n    };\n    /**\n     * Convert the object from processQuery to string which can be added query string.\n     *\n     * @param {Object} req\n     * @param request\n     * @param {Query} query\n     * @param {DataManager} dm\n     */\n    UrlAdaptor.prototype.convertToQueryString = function (request, query, dm) {\n        return '';\n        // this needs to be overridden\n    };\n    /**\n     * Return the data from the data manager processing.\n     *\n     * @param {DataResult} data\n     * @param {DataOptions} ds?\n     * @param {Query} query?\n     * @param {Request} xhr?\n     * @param {Object} request?\n     * @param {CrudOptions} changes?\n     * @param ds\n     * @param query\n     * @param xhr\n     * @param request\n     * @param changes\n     */\n    UrlAdaptor.prototype.processResponse = function (data, ds, query, xhr, request, changes) {\n        if (xhr && xhr.headers.get('Content-Type') &&\n            xhr.headers.get('Content-Type').indexOf('application/json') !== -1) {\n            var handleTimeZone = DataUtil.timeZoneHandling;\n            if (ds && !ds.timeZoneHandling) {\n                DataUtil.timeZoneHandling = false;\n            }\n            data = DataUtil.parse.parseJson(data);\n            DataUtil.timeZoneHandling = handleTimeZone;\n        }\n        var requests = request;\n        var pvt = requests.pvtData || {};\n        var groupDs = data ? data.groupDs : [];\n        if (xhr && xhr.headers.get('Content-Type') &&\n            xhr.headers.get('Content-Type').indexOf('xml') !== -1) {\n            return (query.isCountRequired ? { result: [], count: 0 } : []);\n        }\n        var d = JSON.parse(requests.data);\n        if (d && d.action === 'batch' && data && data.addedRecords) {\n            changes.addedRecords = data.addedRecords;\n            return changes;\n        }\n        if (data && data.d) {\n            data = data.d;\n        }\n        var args = {};\n        if (data && 'count' in data) {\n            args.count = data.count;\n        }\n        args.result = data && data.result ? data.result : data;\n        var isExpand = false;\n        if (Array.isArray(data.result) && data.result.length) {\n            var key = 'key';\n            var val = 'value';\n            var level = 'level';\n            if (!isNullOrUndefined(data.result[0][key])) {\n                args.result = this.formRemoteGroupedData(args.result, 1, pvt.groups.length - 1);\n            }\n            if (query && query.lazyLoad.length && pvt.groups.length) {\n                for (var i = 0; i < query.lazyLoad.length; i++) {\n                    if (query.lazyLoad[i][key] === 'onDemandGroupInfo') {\n                        var value = query.lazyLoad[i][val][level];\n                        if (pvt.groups.length === value) {\n                            isExpand = true;\n                        }\n                    }\n                }\n            }\n        }\n        if (!isExpand) {\n            this.getAggregateResult(pvt, data, args, groupDs, query);\n        }\n        return DataUtil.isNull(args.count) ? args.result : { result: args.result, count: args.count, aggregates: args.aggregates };\n    };\n    UrlAdaptor.prototype.formRemoteGroupedData = function (data, level, childLevel) {\n        for (var i = 0; i < data.length; i++) {\n            if (data[i].items.length && Object.keys(data[i].items[0]).indexOf('key') > -1) {\n                this.formRemoteGroupedData(data[i].items, level + 1, childLevel - 1);\n            }\n        }\n        var uid = 'GroupGuid';\n        var childLvl = 'childLevels';\n        var lvl = 'level';\n        var records = 'records';\n        data[uid] = consts[uid];\n        data[lvl] = level;\n        data[childLvl] = childLevel;\n        data[records] = data[0].items.length ? this.getGroupedRecords(data, !isNullOrUndefined(data[0].items[records])) : [];\n        return data;\n    };\n    UrlAdaptor.prototype.getGroupedRecords = function (data, hasRecords) {\n        var childGroupedRecords = [];\n        var records = 'records';\n        for (var i = 0; i < data.length; i++) {\n            if (!hasRecords) {\n                for (var j = 0; j < data[i].items.length; j++) {\n                    childGroupedRecords.push(data[i].items[j]);\n                }\n            }\n            else {\n                childGroupedRecords = childGroupedRecords.concat(data[i].items[records]);\n            }\n        }\n        return childGroupedRecords;\n    };\n    /**\n     * Add the group query to the adaptor`s option.\n     *\n     * @param  {Object[]} e\n     * @returns void\n     */\n    UrlAdaptor.prototype.onGroup = function (e) {\n        this.pvt.groups = e;\n        return e;\n    };\n    /**\n     * Add the aggregate query to the adaptor`s option.\n     *\n     * @param  {Aggregates[]} e\n     * @returns void\n     */\n    UrlAdaptor.prototype.onAggregates = function (e) {\n        this.pvt.aggregates = e;\n    };\n    /**\n     * Prepare the request body based on the newly added, removed and updated records.\n     * The result is used by the batch request.\n     *\n     * @param {DataManager} dm\n     * @param {CrudOptions} changes\n     * @param {Object} e\n     * @param query\n     * @param original\n     */\n    UrlAdaptor.prototype.batchRequest = function (dm, changes, e, query, original) {\n        var url;\n        var key;\n        return {\n            type: 'POST',\n            url: dm.dataSource.batchUrl || dm.dataSource.crudUrl || dm.dataSource.removeUrl || dm.dataSource.url,\n            contentType: 'application/json; charset=utf-8',\n            dataType: 'json',\n            data: JSON.stringify(extend({}, {\n                changed: changes.changedRecords,\n                added: changes.addedRecords,\n                deleted: changes.deletedRecords,\n                action: 'batch',\n                table: e[url],\n                key: e[key]\n            }, DataUtil.getAddParams(this, dm, query)))\n        };\n    };\n    /**\n     * Method will trigger before send the request to server side.\n     * Used to set the custom header or modify the request options.\n     *\n     * @param  {DataManager} dm\n     * @param  {Request} request\n     * @param  {Fetch} settings?\n     * @returns void\n     */\n    UrlAdaptor.prototype.beforeSend = function (dm, request, settings) {\n        // need to extend this method\n    };\n    /**\n     * Prepare and returns request body which is used to insert a new record in the table.\n     *\n     * @param {DataManager} dm\n     * @param {Object} data\n     * @param {string} tableName\n     * @param query\n     */\n    UrlAdaptor.prototype.insert = function (dm, data, tableName, query) {\n        return {\n            url: dm.dataSource.insertUrl || dm.dataSource.crudUrl || dm.dataSource.url,\n            data: JSON.stringify(extend({}, {\n                value: data,\n                table: tableName,\n                action: 'insert'\n            }, DataUtil.getAddParams(this, dm, query)))\n        };\n    };\n    /**\n     * Prepare and return request body which is used to remove record from the table.\n     *\n     * @param {DataManager} dm\n     * @param {string} keyField\n     * @param {number|string} value\n     * @param {string} tableName\n     * @param query\n     */\n    UrlAdaptor.prototype.remove = function (dm, keyField, value, tableName, query) {\n        return {\n            type: 'POST',\n            url: dm.dataSource.removeUrl || dm.dataSource.crudUrl || dm.dataSource.url,\n            data: JSON.stringify(extend({}, {\n                key: value,\n                keyColumn: keyField,\n                table: tableName,\n                action: 'remove'\n            }, DataUtil.getAddParams(this, dm, query)))\n        };\n    };\n    /**\n     * Prepare and return request body which is used to update record.\n     *\n     * @param {DataManager} dm\n     * @param {string} keyField\n     * @param {Object} value\n     * @param {string} tableName\n     * @param query\n     */\n    UrlAdaptor.prototype.update = function (dm, keyField, value, tableName, query) {\n        return {\n            type: 'POST',\n            url: dm.dataSource.updateUrl || dm.dataSource.crudUrl || dm.dataSource.url,\n            data: JSON.stringify(extend({}, {\n                value: value,\n                action: 'update',\n                keyColumn: keyField,\n                key: DataUtil.getObject(keyField, value),\n                table: tableName\n            }, DataUtil.getAddParams(this, dm, query)))\n        };\n    };\n    /**\n     * To generate the predicate based on the filtered query.\n     *\n     * @param  {Object[]|string[]|number[]} data\n     * @param  {Query} query\n     * @hidden\n     */\n    UrlAdaptor.prototype.getFiltersFrom = function (data, query) {\n        var key = query.fKey;\n        var value;\n        var prop = key;\n        var pKey = query.key;\n        var predicats = [];\n        if (typeof data[0] !== 'object') {\n            prop = null;\n        }\n        for (var i = 0; i < data.length; i++) {\n            if (typeof data[0] === 'object') {\n                value = DataUtil.getObject(pKey || prop, data[i]);\n            }\n            else {\n                value = data[i];\n            }\n            predicats.push(new Predicate(key, 'equal', value));\n        }\n        return Predicate.or(predicats);\n    };\n    UrlAdaptor.prototype.getAggregateResult = function (pvt, data, args, groupDs, query) {\n        var pData = data;\n        if (data && data.result) {\n            pData = data.result;\n        }\n        if (pvt && pvt.aggregates && pvt.aggregates.length) {\n            var agg = pvt.aggregates;\n            var fn = void 0;\n            var aggregateData = pData;\n            var res = {};\n            if (data.aggregate) {\n                aggregateData = data.aggregate;\n            }\n            for (var i = 0; i < agg.length; i++) {\n                fn = DataUtil.aggregates[agg[i].type];\n                if (fn) {\n                    res[agg[i].field + ' - ' + agg[i].type] = fn(aggregateData, agg[i].field);\n                }\n            }\n            args.aggregates = res;\n        }\n        var key = 'key';\n        var isServerGrouping = Array.isArray(data.result) && data.result.length && !isNullOrUndefined(data.result[0][key]);\n        if (pvt && pvt.groups && pvt.groups.length && !isServerGrouping) {\n            var groups = pvt.groups;\n            for (var i = 0; i < groups.length; i++) {\n                var level = null;\n                if (!isNullOrUndefined(groupDs)) {\n                    groupDs = DataUtil.group(groupDs, groups[i]);\n                }\n                var groupQuery = Query.filterQueries(query.queries, 'onGroup')[i].e;\n                pData = DataUtil.group(pData, groups[i], pvt.aggregates, level, groupDs, groupQuery.comparer);\n            }\n            args.result = pData;\n        }\n        return args;\n    };\n    UrlAdaptor.prototype.getQueryRequest = function (query) {\n        var req = { sorts: [], groups: [], filters: [], searches: [], aggregates: [] };\n        req.sorts = Query.filterQueries(query.queries, 'onSortBy');\n        req.groups = Query.filterQueries(query.queries, 'onGroup');\n        req.filters = Query.filterQueries(query.queries, 'onWhere');\n        req.searches = Query.filterQueries(query.queries, 'onSearch');\n        req.aggregates = Query.filterQueries(query.queries, 'onAggregates');\n        return req;\n    };\n    UrlAdaptor.prototype.addParams = function (options) {\n        var req = options.reqParams;\n        if (options.params.length) {\n            req.params = {};\n        }\n        for (var _i = 0, _a = options.params; _i < _a.length; _i++) {\n            var tmp = _a[_i];\n            if (req[tmp.key]) {\n                throw new Error('Query() - addParams: Custom Param is conflicting other request arguments');\n            }\n            req[tmp.key] = tmp.value;\n            if (tmp.fn) {\n                req[tmp.key] = tmp.fn.call(options.query, tmp.key, options.query, options.dm);\n            }\n            req.params[tmp.key] = req[tmp.key];\n        }\n    };\n    return UrlAdaptor;\n}(Adaptor));\nexport { UrlAdaptor };\n/**\n * OData Adaptor that is extended from URL Adaptor, is used for consuming data through OData Service.\n *\n * @hidden\n */\nvar ODataAdaptor = /** @class */ (function (_super) {\n    __extends(ODataAdaptor, _super);\n    function ODataAdaptor(props) {\n        var _this = _super.call(this) || this;\n        // options replaced the default adaptor options\n        _this.options = extend({}, _this.options, {\n            requestType: 'get',\n            accept: 'application/json;odata=light;q=1,application/json;odata=verbose;q=0.5',\n            multipartAccept: 'multipart/mixed',\n            sortBy: '$orderby',\n            select: '$select',\n            skip: '$skip',\n            take: '$top',\n            count: '$inlinecount',\n            where: '$filter',\n            expand: '$expand',\n            batch: '$batch',\n            changeSet: '--changeset_',\n            batchPre: 'batch_',\n            contentId: 'Content-Id: ',\n            batchContent: 'Content-Type: multipart/mixed; boundary=',\n            changeSetContent: 'Content-Type: application/http\\nContent-Transfer-Encoding: binary ',\n            batchChangeSetContentType: 'Content-Type: application/json; charset=utf-8 ',\n            updateType: 'PUT'\n        });\n        extend(_this.options, props || {});\n        return _this;\n    }\n    ODataAdaptor.prototype.getModuleName = function () {\n        return 'ODataAdaptor';\n    };\n    /**\n     * Generate request string based on the filter criteria from query.\n     *\n     * @param {Predicate} pred\n     * @param {boolean} requiresCast?\n     * @param predicate\n     * @param query\n     * @param requiresCast\n     */\n    ODataAdaptor.prototype.onPredicate = function (predicate, query, requiresCast) {\n        var returnValue = '';\n        var operator;\n        var guid;\n        var val = predicate.value;\n        var type = typeof val;\n        var field = predicate.field ? ODataAdaptor.getField(predicate.field) : null;\n        if (val instanceof Date) {\n            val = 'datetime\\'' + DataUtil.parse.replacer(val) + '\\'';\n        }\n        if (type === 'string') {\n            val = val.replace(/'/g, '\\'\\'');\n            if (predicate.ignoreCase) {\n                val = val.toLowerCase();\n            }\n            if (predicate.operator !== 'like') {\n                val = encodeURIComponent(val);\n            }\n            if (predicate.operator !== 'wildcard' && predicate.operator !== 'like') {\n                val = '\\'' + val + '\\'';\n            }\n            if (requiresCast) {\n                field = 'cast(' + field + ', \\'Edm.String\\')';\n            }\n            if (DataUtil.parse.isGuid(val)) {\n                guid = 'guid';\n            }\n            if (predicate.ignoreCase) {\n                if (!guid) {\n                    field = 'tolower(' + field + ')';\n                }\n                val = val.toLowerCase();\n            }\n        }\n        if (predicate.operator === 'isempty' || predicate.operator === 'isnull' || predicate.operator === 'isnotempty' ||\n            predicate.operator === 'isnotnull') {\n            operator = predicate.operator.indexOf('isnot') !== -1 ? DataUtil.odBiOperator['notequal'] : DataUtil.odBiOperator['equal'];\n            val = predicate.operator === 'isnull' || predicate.operator === 'isnotnull' ? null : '\\'\\'';\n        }\n        else {\n            operator = DataUtil.odBiOperator[predicate.operator];\n        }\n        if (operator) {\n            returnValue += field;\n            returnValue += operator;\n            if (guid) {\n                returnValue += guid;\n            }\n            return returnValue + val;\n        }\n        if (!isNullOrUndefined(this.getModuleName) && this.getModuleName() === 'ODataV4Adaptor') {\n            operator = DataUtil.odv4UniOperator[predicate.operator];\n        }\n        else {\n            operator = DataUtil.odUniOperator[predicate.operator];\n        }\n        if (operator === 'like') {\n            val = val;\n            if (val.indexOf('%') !== -1) {\n                if (val.charAt(0) === '%' && val.lastIndexOf('%') < 2) {\n                    val = val.substring(1, val.length);\n                    operator = !isNullOrUndefined(this.getModuleName) && this.getModuleName() === 'ODataV4Adaptor' ?\n                        DataUtil.odv4UniOperator['startswith'] : DataUtil.odUniOperator['startswith'];\n                }\n                else if (val.charAt(val.length - 1) === '%' && val.indexOf('%') > val.length - 3) {\n                    val = val.substring(0, val.length - 1);\n                    operator = !isNullOrUndefined(this.getModuleName) && this.getModuleName() === 'ODataV4Adaptor' ?\n                        DataUtil.odv4UniOperator['endswith'] : DataUtil.odUniOperator['endswith'];\n                }\n                else if (val.lastIndexOf('%') !== val.indexOf('%') && val.lastIndexOf('%') > val.indexOf('%') + 1) {\n                    val = val.substring(val.indexOf('%') + 1, val.lastIndexOf('%'));\n                    operator = !isNullOrUndefined(this.getModuleName) && this.getModuleName() === 'ODataV4Adaptor' ?\n                        DataUtil.odv4UniOperator['contains'] : DataUtil.odUniOperator['contains'];\n                }\n                else {\n                    operator = !isNullOrUndefined(this.getModuleName) && this.getModuleName() === 'ODataV4Adaptor' ?\n                        DataUtil.odv4UniOperator['contains'] : DataUtil.odUniOperator['contains'];\n                }\n            }\n            val = encodeURIComponent(val);\n            val = '\\'' + val + '\\'';\n        }\n        else if (operator === 'wildcard') {\n            val = val;\n            if (val.indexOf('*') !== -1) {\n                var splittedStringValue = val.split('*');\n                var splittedValue = void 0;\n                var count = 0;\n                if (val.indexOf('*') !== 0 && splittedStringValue[0].indexOf('%3f') === -1 &&\n                    splittedStringValue[0].indexOf('?') === -1) {\n                    splittedValue = splittedStringValue[0];\n                    splittedValue = '\\'' + splittedValue + '\\'';\n                    operator = !isNullOrUndefined(this.getModuleName) && this.getModuleName() === 'ODataV4Adaptor' ?\n                        DataUtil.odv4UniOperator['startswith'] : DataUtil.odUniOperator['startswith'];\n                    returnValue += operator + '(';\n                    returnValue += field + ',';\n                    if (guid) {\n                        returnValue += guid;\n                    }\n                    returnValue += splittedValue + ')';\n                    count++;\n                }\n                if (val.lastIndexOf('*') !== val.length - 1 && splittedStringValue[splittedStringValue.length - 1].indexOf('%3f') === -1 &&\n                    splittedStringValue[splittedStringValue.length - 1].indexOf('?') === -1) {\n                    splittedValue = splittedStringValue[splittedStringValue.length - 1];\n                    splittedValue = '\\'' + splittedValue + '\\'';\n                    operator = !isNullOrUndefined(this.getModuleName) && this.getModuleName() === 'ODataV4Adaptor' ?\n                        DataUtil.odv4UniOperator['endswith'] : DataUtil.odUniOperator['endswith'];\n                    if (count > 0) {\n                        returnValue += ' and ';\n                    }\n                    returnValue += operator + '(';\n                    returnValue += field + ',';\n                    if (guid) {\n                        returnValue += guid;\n                    }\n                    returnValue += splittedValue + ')';\n                    count++;\n                }\n                if (splittedStringValue.length > 2) {\n                    for (var i = 1; i < splittedStringValue.length - 1; i++) {\n                        if (splittedStringValue[i].indexOf('%3f') === -1 && splittedStringValue[i].indexOf('?') === -1) {\n                            splittedValue = splittedStringValue[i];\n                            splittedValue = '\\'' + splittedValue + '\\'';\n                            operator = !isNullOrUndefined(this.getModuleName) && this.getModuleName() === 'ODataV4Adaptor' ?\n                                DataUtil.odv4UniOperator['contains'] : DataUtil.odUniOperator['contains'];\n                            if (count > 0) {\n                                returnValue += ' and ';\n                            }\n                            if (operator === 'substringof' || operator === 'not substringof') {\n                                var temp = splittedValue;\n                                splittedValue = field;\n                                field = temp;\n                            }\n                            returnValue += operator + '(';\n                            returnValue += field + ',';\n                            if (guid) {\n                                returnValue += guid;\n                            }\n                            returnValue += splittedValue + ')';\n                            count++;\n                        }\n                    }\n                }\n                if (count === 0) {\n                    operator = !isNullOrUndefined(this.getModuleName) && this.getModuleName() === 'ODataV4Adaptor' ?\n                        DataUtil.odv4UniOperator['contains'] : DataUtil.odUniOperator['contains'];\n                    if (val.indexOf('?') !== -1 || val.indexOf('%3f') !== -1) {\n                        val = val.indexOf('?') !== -1 ? val.split('?').join('') : val.split('%3f').join('');\n                    }\n                    val = '\\'' + val + '\\'';\n                }\n                else {\n                    operator = 'wildcard';\n                }\n            }\n            else {\n                operator = !isNullOrUndefined(this.getModuleName) && this.getModuleName() === 'ODataV4Adaptor' ?\n                    DataUtil.odv4UniOperator['contains'] : DataUtil.odUniOperator['contains'];\n                if (val.indexOf('?') !== -1 || val.indexOf('%3f') !== -1) {\n                    val = val.indexOf('?') !== -1 ? val.split('?').join('') : val.split('%3f').join('');\n                }\n                val = '\\'' + val + '\\'';\n            }\n        }\n        if (operator === 'substringof' || operator === 'not substringof') {\n            var temp = val;\n            val = field;\n            field = temp;\n        }\n        if (operator !== 'wildcard') {\n            returnValue += operator + '(';\n            returnValue += field + ',';\n            if (guid) {\n                returnValue += guid;\n            }\n            returnValue += val + ')';\n        }\n        return returnValue;\n    };\n    ODataAdaptor.prototype.addParams = function (options) {\n        _super.prototype.addParams.call(this, options);\n        delete options.reqParams.params;\n    };\n    /**\n     * Generate request string based on the multiple filter criteria from query.\n     *\n     * @param {Predicate} pred\n     * @param {boolean} requiresCast?\n     * @param predicate\n     * @param query\n     * @param requiresCast\n     */\n    ODataAdaptor.prototype.onComplexPredicate = function (predicate, query, requiresCast) {\n        var res = [];\n        for (var i = 0; i < predicate.predicates.length; i++) {\n            res.push('(' + this.onEachWhere(predicate.predicates[i], query, requiresCast) + ')');\n        }\n        return res.join(' ' + predicate.condition + ' ');\n    };\n    /**\n     * Generate query string based on the multiple filter criteria from query.\n     *\n     * @param {Predicate} filter\n     * @param {boolean} requiresCast?\n     * @param query\n     * @param requiresCast\n     */\n    ODataAdaptor.prototype.onEachWhere = function (filter, query, requiresCast) {\n        return filter.isComplex ? this.onComplexPredicate(filter, query, requiresCast) : this.onPredicate(filter, query, requiresCast);\n    };\n    /**\n     * Generate query string based on the multiple filter criteria from query.\n     *\n     * @param  {string[]} filters\n     */\n    ODataAdaptor.prototype.onWhere = function (filters) {\n        if (this.pvt.search) {\n            filters.push(this.onEachWhere(this.pvt.search, null, true));\n        }\n        return filters.join(' and ');\n    };\n    /**\n     * Generate query string based on the multiple search criteria from query.\n     *\n     * @param e\n     * @param {string} operator\n     * @param {string} key\n     * @param {boolean} } ignoreCase\n     * @param e.fields\n     * @param e.operator\n     * @param e.key\n     * @param e.ignoreCase\n     */\n    ODataAdaptor.prototype.onEachSearch = function (e) {\n        if (e.fields && e.fields.length === 0) {\n            DataUtil.throwError('Query() - Search : oData search requires list of field names to search');\n        }\n        var filter = this.pvt.search || [];\n        for (var i = 0; i < e.fields.length; i++) {\n            filter.push(new Predicate(e.fields[i], e.operator, e.key, e.ignoreCase));\n        }\n        this.pvt.search = filter;\n    };\n    /**\n     * Generate query string based on the search criteria from query.\n     *\n     * @param  {Object} e\n     */\n    ODataAdaptor.prototype.onSearch = function (e) {\n        this.pvt.search = Predicate.or(this.pvt.search);\n        return '';\n    };\n    /**\n     * Generate query string based on multiple sort criteria from query.\n     *\n     * @param  {QueryOptions} e\n     */\n    ODataAdaptor.prototype.onEachSort = function (e) {\n        var res = [];\n        if (e.name instanceof Array) {\n            for (var i = 0; i < e.name.length; i++) {\n                res.push(ODataAdaptor.getField(e.name[i]) + (e.direction === 'descending' ? ' desc' : ''));\n            }\n        }\n        else {\n            res.push(ODataAdaptor.getField(e.name) + (e.direction === 'descending' ? ' desc' : ''));\n        }\n        return res.join(',');\n    };\n    /**\n     * Returns sort query string.\n     *\n     * @param  {string[]} e\n     */\n    ODataAdaptor.prototype.onSortBy = function (e) {\n        return e.reverse().join(',');\n    };\n    /**\n     * Adds the group query to the adaptor option.\n     *\n     * @param  {Object[]} e\n     * @returns string\n     */\n    ODataAdaptor.prototype.onGroup = function (e) {\n        this.pvt.groups = e;\n        return [];\n    };\n    /**\n     * Returns the select query string.\n     *\n     * @param  {string[]} e\n     */\n    ODataAdaptor.prototype.onSelect = function (e) {\n        for (var i = 0; i < e.length; i++) {\n            e[i] = ODataAdaptor.getField(e[i]);\n        }\n        return e.join(',');\n    };\n    /**\n     * Add the aggregate query to the adaptor option.\n     *\n     * @param  {Object[]} e\n     * @returns string\n     */\n    ODataAdaptor.prototype.onAggregates = function (e) {\n        this.pvt.aggregates = e;\n        return '';\n    };\n    /**\n     * Returns the query string which requests total count from the data source.\n     *\n     * @param  {boolean} e\n     * @returns string\n     */\n    ODataAdaptor.prototype.onCount = function (e) {\n        return e === true ? 'allpages' : '';\n    };\n    /**\n     * Method will trigger before send the request to server side.\n     * Used to set the custom header or modify the request options.\n     *\n     * @param {DataManager} dm\n     * @param {Request} request\n     * @param {Fetch} settings?\n     * @param settings\n     */\n    ODataAdaptor.prototype.beforeSend = function (dm, request, settings) {\n        if (DataUtil.endsWith(settings.url, this.options.batch) && settings.type.toLowerCase() === 'post') {\n            request.headers.set('Accept', this.options.multipartAccept);\n            request.headers.set('DataServiceVersion', '2.0');\n            //request.overrideMimeType('text/plain; charset=x-user-defined');\n        }\n        else {\n            request.headers.set('Accept', this.options.accept);\n        }\n        request.headers.set('DataServiceVersion', '2.0');\n        request.headers.set('MaxDataServiceVersion', '2.0');\n    };\n    /**\n     * Returns the data from the query processing.\n     *\n     * @param {DataResult} data\n     * @param {DataOptions} ds?\n     * @param {Query} query?\n     * @param {Request} xhr?\n     * @param {Fetch} request?\n     * @param {CrudOptions} changes?\n     * @param ds\n     * @param query\n     * @param xhr\n     * @param request\n     * @param changes\n     * @returns aggregateResult\n     */\n    ODataAdaptor.prototype.processResponse = function (data, ds, query, xhr, request, changes) {\n        var metaCheck = 'odata.metadata';\n        if ((request && request.type === 'GET') && !this.rootUrl && data[metaCheck]) {\n            var dataUrls = data[metaCheck].split('/$metadata#');\n            this.rootUrl = dataUrls[0];\n            this.resourceTableName = dataUrls[1];\n        }\n        var pvtData = 'pvtData';\n        if (!isNullOrUndefined(data.d)) {\n            var dataCopy = ((query && query.isCountRequired) ? data.d.results : data.d);\n            var metaData = '__metadata';\n            if (!isNullOrUndefined(dataCopy)) {\n                for (var i = 0; i < dataCopy.length; i++) {\n                    if (!isNullOrUndefined(dataCopy[i][metaData])) {\n                        delete dataCopy[i][metaData];\n                    }\n                }\n            }\n        }\n        var pvt = request && request[pvtData];\n        var emptyAndBatch = this.processBatchResponse(data, query, xhr, request, changes);\n        if (emptyAndBatch) {\n            return emptyAndBatch;\n        }\n        var versionCheck = xhr && request.fetchRequest.headers.get('DataServiceVersion');\n        var count = null;\n        var version = (versionCheck && parseInt(versionCheck, 10)) || 2;\n        if (query && query.isCountRequired) {\n            var oDataCount = '__count';\n            if (data[oDataCount] || data['odata.count']) {\n                count = data[oDataCount] || data['odata.count'];\n            }\n            if (data.d) {\n                data = data.d;\n            }\n            if (data[oDataCount] || data['odata.count']) {\n                count = data[oDataCount] || data['odata.count'];\n            }\n        }\n        if (version === 3 && data.value) {\n            data = data.value;\n        }\n        if (data.d) {\n            data = data.d;\n        }\n        if (version < 3 && data.results) {\n            data = data.results;\n        }\n        var args = {};\n        args.count = count;\n        args.result = data;\n        this.getAggregateResult(pvt, data, args, null, query);\n        return DataUtil.isNull(count) ? args.result : { result: args.result, count: args.count, aggregates: args.aggregates };\n    };\n    /**\n     * Converts the request object to query string.\n     *\n     * @param {Object} req\n     * @param request\n     * @param {Query} query\n     * @param {DataManager} dm\n     * @returns tableName\n     */\n    ODataAdaptor.prototype.convertToQueryString = function (request, query, dm) {\n        var res = [];\n        var table = 'table';\n        var tableName = request[table] || '';\n        var format = '$format';\n        delete request[table];\n        if (dm.dataSource.requiresFormat) {\n            request[format] = 'json';\n        }\n        var keys = Object.keys(request);\n        for (var _i = 0, keys_4 = keys; _i < keys_4.length; _i++) {\n            var prop = keys_4[_i];\n            res.push(prop + '=' + request[prop]);\n        }\n        res = res.join('&');\n        if (dm.dataSource.url && dm.dataSource.url.indexOf('?') !== -1 && !tableName) {\n            return res;\n        }\n        return res.length ? tableName + '?' + res : tableName || '';\n    };\n    ODataAdaptor.prototype.localTimeReplacer = function (key, convertObj) {\n        for (var _i = 0, _a = !isNullOrUndefined(convertObj) ? Object.keys(convertObj) : []; _i < _a.length; _i++) {\n            var prop = _a[_i];\n            if ((convertObj[prop] instanceof Date)) {\n                convertObj[prop] = DataUtil.dateParse.toLocalTime(convertObj[prop]);\n            }\n        }\n        return convertObj;\n    };\n    /**\n     * Prepare and returns request body which is used to insert a new record in the table.\n     *\n     * @param {DataManager} dm\n     * @param {Object} data\n     * @param {string} tableName?\n     * @param tableName\n     */\n    ODataAdaptor.prototype.insert = function (dm, data, tableName) {\n        return {\n            url: (dm.dataSource.insertUrl || dm.dataSource.url).replace(/\\/*$/, tableName ? '/' + tableName : ''),\n            data: JSON.stringify(data, this.options.localTime ? this.localTimeReplacer : null)\n        };\n    };\n    /**\n     * Prepare and return request body which is used to remove record from the table.\n     *\n     * @param {DataManager} dm\n     * @param {string} keyField\n     * @param {number} value\n     * @param {string} tableName?\n     * @param tableName\n     */\n    ODataAdaptor.prototype.remove = function (dm, keyField, value, tableName) {\n        var url;\n        if (typeof value === 'string' && !DataUtil.parse.isGuid(value)) {\n            url = \"('\" + value + \"')\";\n        }\n        else {\n            url = \"(\" + value + \")\";\n        }\n        return {\n            type: 'DELETE',\n            url: (dm.dataSource.removeUrl || dm.dataSource.url).replace(/\\/*$/, tableName ? '/' + tableName : '') + url\n        };\n    };\n    /**\n     * Updates existing record and saves the changes to the table.\n     *\n     * @param {DataManager} dm\n     * @param {string} keyField\n     * @param {Object} value\n     * @param {string} tableName?\n     * @param tableName\n     * @param query\n     * @param original\n     * @returns this\n     */\n    ODataAdaptor.prototype.update = function (dm, keyField, value, tableName, query, original) {\n        if (this.options.updateType === 'PATCH' && !isNullOrUndefined(original)) {\n            value = this.compareAndRemove(value, original, keyField);\n        }\n        var url;\n        if (typeof value[keyField] === 'string' && !DataUtil.parse.isGuid(value[keyField])) {\n            url = \"('\" + value[keyField] + \"')\";\n        }\n        else {\n            url = \"(\" + value[keyField] + \")\";\n        }\n        return {\n            type: this.options.updateType,\n            url: (dm.dataSource.updateUrl || dm.dataSource.url).replace(/\\/*$/, tableName ? '/' + tableName : '') + url,\n            data: JSON.stringify(value, this.options.localTime ? this.localTimeReplacer : null),\n            accept: this.options.accept\n        };\n    };\n    /**\n     * Prepare the request body based on the newly added, removed and updated records.\n     * The result is used by the batch request.\n     *\n     * @param {DataManager} dm\n     * @param {CrudOptions} changes\n     * @param {RemoteArgs} e\n     * @param query\n     * @param original\n     * @returns {Object}\n     */\n    ODataAdaptor.prototype.batchRequest = function (dm, changes, e, query, original) {\n        var initialGuid = e.guid = DataUtil.getGuid(this.options.batchPre);\n        var url = (dm.dataSource.batchUrl || this.rootUrl) ?\n            (dm.dataSource.batchUrl || this.rootUrl) + '/' + this.options.batch :\n            (dm.dataSource.batchUrl || dm.dataSource.url).replace(/\\/*$/, '/' + this.options.batch);\n        e.url = this.resourceTableName ? this.resourceTableName : e.url;\n        var args = {\n            url: e.url,\n            key: e.key,\n            cid: 1,\n            cSet: DataUtil.getGuid(this.options.changeSet)\n        };\n        var req = '--' + initialGuid + '\\n';\n        req += 'Content-Type: multipart/mixed; boundary=' + args.cSet.replace('--', '') + '\\n';\n        this.pvt.changeSet = 0;\n        req += this.generateInsertRequest(changes.addedRecords, args, dm);\n        req += this.generateUpdateRequest(changes.changedRecords, args, dm, original ? original.changedRecords : []);\n        req += this.generateDeleteRequest(changes.deletedRecords, args, dm);\n        req += args.cSet + '--\\n';\n        req += '--' + initialGuid + '--';\n        return {\n            type: 'POST',\n            url: url,\n            dataType: 'json',\n            contentType: 'multipart/mixed; charset=UTF-8;boundary=' + initialGuid,\n            data: req\n        };\n    };\n    /**\n     * Generate the string content from the removed records.\n     * The result will be send during batch update.\n     *\n     * @param {Object[]} arr\n     * @param {RemoteArgs} e\n     * @param dm\n     * @returns this\n     */\n    ODataAdaptor.prototype.generateDeleteRequest = function (arr, e, dm) {\n        if (!arr) {\n            return '';\n        }\n        var req = '';\n        var stat = {\n            'method': 'DELETE ',\n            'url': function (data, i, key) {\n                var url = DataUtil.getObject(key, data[i]);\n                if (typeof url === 'number' || DataUtil.parse.isGuid(url)) {\n                    return '(' + url + ')';\n                }\n                else if (url instanceof Date) {\n                    var dateTime = data[i][key];\n                    return '(' + dateTime.toJSON() + ')';\n                }\n                else {\n                    return \"('\" + url + \"')\";\n                }\n            },\n            'data': function (data, i) { return ''; }\n        };\n        req = this.generateBodyContent(arr, e, stat, dm);\n        return req + '\\n';\n    };\n    /**\n     * Generate the string content from the inserted records.\n     * The result will be send during batch update.\n     *\n     * @param {Object[]} arr\n     * @param {RemoteArgs} e\n     * @param dm\n     */\n    ODataAdaptor.prototype.generateInsertRequest = function (arr, e, dm) {\n        if (!arr) {\n            return '';\n        }\n        var req = '';\n        var stat = {\n            'method': 'POST ',\n            'url': function (data, i, key) { return ''; },\n            'data': function (data, i) { return JSON.stringify(data[i]) + '\\n\\n'; }\n        };\n        req = this.generateBodyContent(arr, e, stat, dm);\n        return req;\n    };\n    /**\n     * Generate the string content from the updated records.\n     * The result will be send during batch update.\n     *\n     * @param {Object[]} arr\n     * @param {RemoteArgs} e\n     * @param dm\n     * @param org\n     */\n    ODataAdaptor.prototype.generateUpdateRequest = function (arr, e, dm, org) {\n        var _this = this;\n        if (!arr) {\n            return '';\n        }\n        var req = '';\n        arr.forEach(function (change) { return change = _this.compareAndRemove(change, org.filter(function (o) { return DataUtil.getObject(e.key, o) === DataUtil.getObject(e.key, change); })[0], e.key); });\n        var stat = {\n            'method': this.options.updateType + ' ',\n            'url': function (data, i, key) {\n                if (typeof data[i][key] === 'number' || DataUtil.parse.isGuid(data[i][key])) {\n                    return '(' + data[i][key] + ')';\n                }\n                else if (data[i][key] instanceof Date) {\n                    var date = data[i][key];\n                    return '(' + date.toJSON() + ')';\n                }\n                else {\n                    return \"('\" + data[i][key] + \"')\";\n                }\n            },\n            'data': function (data, i) { return JSON.stringify(data[i]) + '\\n\\n'; }\n        };\n        req = this.generateBodyContent(arr, e, stat, dm);\n        return req;\n    };\n    ODataAdaptor.getField = function (prop) {\n        return prop.replace(/\\./g, '/');\n    };\n    ODataAdaptor.prototype.generateBodyContent = function (arr, e, stat, dm) {\n        var req = '';\n        for (var i = 0; i < arr.length; i++) {\n            req += '\\n' + e.cSet + '\\n';\n            req += this.options.changeSetContent + '\\n\\n';\n            req += stat.method;\n            if (stat.method === 'POST ') {\n                req += (dm.dataSource.insertUrl || dm.dataSource.crudUrl || e.url) + stat.url(arr, i, e.key) + ' HTTP/1.1\\n';\n            }\n            else if (stat.method === 'PUT ' || stat.method === 'PATCH ') {\n                req += (dm.dataSource.updateUrl || dm.dataSource.crudUrl || e.url) + stat.url(arr, i, e.key) + ' HTTP/1.1\\n';\n            }\n            else if (stat.method === 'DELETE ') {\n                req += (dm.dataSource.removeUrl || dm.dataSource.crudUrl || e.url) + stat.url(arr, i, e.key) + ' HTTP/1.1\\n';\n            }\n            req += 'Accept: ' + this.options.accept + '\\n';\n            req += 'Content-Id: ' + this.pvt.changeSet++ + '\\n';\n            req += this.options.batchChangeSetContentType + '\\n';\n            if (!isNullOrUndefined(arr[i]['@odata.etag'])) {\n                req += 'If-Match: ' + arr[i]['@odata.etag'] + '\\n\\n';\n                delete arr[i]['@odata.etag'];\n            }\n            else {\n                req += '\\n';\n            }\n            req += stat.data(arr, i);\n        }\n        return req;\n    };\n    ODataAdaptor.prototype.processBatchResponse = function (data, query, xhr, request, changes) {\n        if (xhr && xhr.headers.get('Content-Type') && xhr.headers.get('Content-Type').indexOf('xml') !== -1) {\n            return (query.isCountRequired ? { result: [], count: 0 } : []);\n        }\n        if (request && this.options.batch && DataUtil.endsWith(request.url, this.options.batch) && request.type.toLowerCase() === 'post') {\n            var guid = xhr.headers.get('Content-Type');\n            var cIdx = void 0;\n            var jsonObj = void 0;\n            var d = data + '';\n            guid = guid.substring(guid.indexOf('=batchresponse') + 1);\n            d = d.split(guid);\n            if (d.length < 2) {\n                return {};\n            }\n            d = d[1];\n            var exVal = /(?:\\bContent-Type.+boundary=)(changesetresponse.+)/i.exec(d);\n            if (exVal) {\n                d.replace(exVal[0], '');\n            }\n            var changeGuid = exVal ? exVal[1] : '';\n            d = d.split(changeGuid);\n            for (var i = d.length; i > -1; i--) {\n                if (!/\\bContent-ID:/i.test(d[i]) || !/\\bHTTP.+201/.test(d[i])) {\n                    continue;\n                }\n                cIdx = parseInt(/\\bContent-ID: (\\d+)/i.exec(d[i])[1], 10);\n                if (changes.addedRecords[cIdx]) {\n                    jsonObj = DataUtil.parse.parseJson(/^\\{.+\\}/m.exec(d[i])[0]);\n                    extend({}, changes.addedRecords[cIdx], this.processResponse(jsonObj));\n                }\n            }\n            return changes;\n        }\n        return null;\n    };\n    ODataAdaptor.prototype.compareAndRemove = function (data, original, key) {\n        var _this = this;\n        if (isNullOrUndefined(original)) {\n            return data;\n        }\n        Object.keys(data).forEach(function (prop) {\n            if (prop !== key && prop !== '@odata.etag') {\n                if (DataUtil.isPlainObject(data[prop])) {\n                    _this.compareAndRemove(data[prop], original[prop]);\n                    var final = Object.keys(data[prop]).filter(function (data) { return data !== '@odata.etag'; });\n                    if (final.length === 0) {\n                        delete data[prop];\n                    }\n                }\n                else if (data[prop] === original[prop]) {\n                    delete data[prop];\n                }\n                else if (data[prop] && original[prop] && data[prop].valueOf() === original[prop].valueOf()) {\n                    delete data[prop];\n                }\n            }\n        });\n        return data;\n    };\n    return ODataAdaptor;\n}(UrlAdaptor));\nexport { ODataAdaptor };\n/**\n * The OData v4 is an improved version of OData protocols.\n * The DataManager uses the ODataV4Adaptor to consume OData v4 services.\n *\n * @hidden\n */\nvar ODataV4Adaptor = /** @class */ (function (_super) {\n    __extends(ODataV4Adaptor, _super);\n    function ODataV4Adaptor(props) {\n        var _this = _super.call(this, props) || this;\n        // options replaced the default adaptor options\n        _this.options = extend({}, _this.options, {\n            requestType: 'get',\n            accept: 'application/json, text/javascript, */*; q=0.01',\n            multipartAccept: 'multipart/mixed',\n            sortBy: '$orderby',\n            select: '$select',\n            skip: '$skip',\n            take: '$top',\n            count: '$count',\n            search: '$search',\n            where: '$filter',\n            expand: '$expand',\n            batch: '$batch',\n            changeSet: '--changeset_',\n            batchPre: 'batch_',\n            contentId: 'Content-Id: ',\n            batchContent: 'Content-Type: multipart/mixed; boundary=',\n            changeSetContent: 'Content-Type: application/http\\nContent-Transfer-Encoding: binary ',\n            batchChangeSetContentType: 'Content-Type: application/json; charset=utf-8 ',\n            updateType: 'PATCH',\n            localTime: false,\n            apply: '$apply'\n        });\n        extend(_this.options, props || {});\n        return _this;\n    }\n    /**\n     * @hidden\n     */\n    ODataV4Adaptor.prototype.getModuleName = function () {\n        return 'ODataV4Adaptor';\n    };\n    /**\n     * Returns the query string which requests total count from the data source.\n     *\n     * @param  {boolean} e\n     * @returns string\n     */\n    ODataV4Adaptor.prototype.onCount = function (e) {\n        return e === true ? 'true' : '';\n    };\n    /**\n     * Generate request string based on the filter criteria from query.\n     *\n     * @param {Predicate} pred\n     * @param {boolean} requiresCast?\n     * @param predicate\n     * @param query\n     * @param requiresCast\n     */\n    ODataV4Adaptor.prototype.onPredicate = function (predicate, query, requiresCast) {\n        var returnValue = '';\n        var val = predicate.value;\n        var isDate = val instanceof Date;\n        if (query instanceof Query) {\n            var queries = this.getQueryRequest(query);\n            for (var i = 0; i < queries.filters.length; i++) {\n                if (queries.filters[i].e.key === predicate.value) {\n                    requiresCast = true;\n                }\n            }\n        }\n        returnValue = _super.prototype.onPredicate.call(this, predicate, query, requiresCast);\n        if (isDate) {\n            returnValue = returnValue.replace(/datetime'(.*)'$/, '$1');\n        }\n        if (DataUtil.parse.isGuid(val)) {\n            returnValue = returnValue.replace('guid', '').replace(/'/g, '');\n        }\n        return returnValue;\n    };\n    /**\n     * Generate query string based on the multiple search criteria from query.\n     *\n     * @param e\n     * @param {string} operator\n     * @param {string} key\n     * @param {boolean} } ignoreCase\n     * @param e.fields\n     * @param e.operator\n     * @param e.key\n     * @param e.ignoreCase\n     */\n    ODataV4Adaptor.prototype.onEachSearch = function (e) {\n        var search = this.pvt.searches || [];\n        search.push(e.key);\n        this.pvt.searches = search;\n    };\n    /**\n     *  Generate query string based on the search criteria from query.\n     *\n     * @param  {Object} e\n     */\n    ODataV4Adaptor.prototype.onSearch = function (e) {\n        return this.pvt.searches.join(' OR ');\n    };\n    /**\n     * Returns the expand query string.\n     *\n     * @param {string} e\n     * @param e.selects\n     * @param e.expands\n     */\n    ODataV4Adaptor.prototype.onExpand = function (e) {\n        var _this = this;\n        var selected = {};\n        var expanded = {};\n        var expands = e.expands.slice();\n        var exArr = [];\n        var selects = e.selects.filter(function (item) { return item.indexOf('.') > -1; });\n        selects.forEach(function (select) {\n            var splits = select.split('.');\n            if (!(splits[0] in selected)) {\n                selected[splits[0]] = [];\n            }\n            if (splits.length === 2) {\n                if (selected[splits[0]].length && Object.keys(selected).indexOf(splits[0]) !== -1) {\n                    if (selected[splits[0]][0].indexOf('$expand') !== -1 && selected[splits[0]][0].indexOf(';$select=') === -1) {\n                        selected[splits[0]][0] = selected[splits[0]][0] + ';' + '$select=' + splits[1];\n                    }\n                    else {\n                        selected[splits[0]][0] = selected[splits[0]][0] + ',' + splits[1];\n                    }\n                }\n                else {\n                    selected[splits[0]].push('$select=' + splits[1]);\n                }\n            }\n            else {\n                var sel = '$select=' + splits[splits.length - 1];\n                var exp = '';\n                var close_1 = '';\n                for (var i = 1; i < splits.length - 1; i++) {\n                    exp = exp + '$expand=' + splits[i] + '(';\n                    close_1 = close_1 + ')';\n                }\n                var combineVal = exp + sel + close_1;\n                if (selected[splits[0]].length && Object.keys(selected).indexOf(splits[0]) !== -1 &&\n                    _this.expandQueryIndex(selected[splits[0]], true)) {\n                    var idx = _this.expandQueryIndex(selected[splits[0]]);\n                    selected[splits[0]][idx] = selected[splits[0]][idx] + combineVal.replace('$expand=', ',');\n                }\n                else {\n                    selected[splits[0]].push(combineVal);\n                }\n            }\n        });\n        //Auto expand from select query\n        Object.keys(selected).forEach(function (expand) {\n            if ((expands.indexOf(expand) === -1)) {\n                expands.push(expand);\n            }\n        });\n        expands.forEach(function (expand) {\n            expanded[expand] = expand in selected ? expand + \"(\" + selected[expand].join(';') + \")\" : expand;\n        });\n        Object.keys(expanded).forEach(function (ex) { return exArr.push(expanded[ex]); });\n        return exArr.join(',');\n    };\n    ODataV4Adaptor.prototype.expandQueryIndex = function (query, isExpand) {\n        for (var i = 0; i < query.length; i++) {\n            if (query[i].indexOf('$expand') !== -1) {\n                return isExpand ? true : i;\n            }\n        }\n        return isExpand ? false : 0;\n    };\n    /**\n     * Returns the groupby query string.\n     *\n     * @param {string} e\n     * @param distinctFields\n     */\n    ODataV4Adaptor.prototype.onDistinct = function (distinctFields) {\n        var fields = distinctFields.map(function (field) { return ODataAdaptor.getField(field); }).join(',');\n        return \"groupby((\" + fields + \"))\";\n    };\n    /**\n     * Returns the select query string.\n     *\n     * @param  {string[]} e\n     */\n    ODataV4Adaptor.prototype.onSelect = function (e) {\n        return _super.prototype.onSelect.call(this, e.filter(function (item) { return item.indexOf('.') === -1; }));\n    };\n    /**\n     * Method will trigger before send the request to server side.\n     * Used to set the custom header or modify the request options.\n     *\n     * @param  {DataManager} dm\n     * @param  {Request} request\n     * @param  {Fetch} settings\n     * @returns void\n     */\n    ODataV4Adaptor.prototype.beforeSend = function (dm, request, settings) {\n        if (settings.type === 'POST' || settings.type === 'PUT' || settings.type === 'PATCH') {\n            request.headers.set('Prefer', 'return=representation');\n        }\n        request.headers.set('Accept', this.options.accept);\n    };\n    /**\n     * Returns the data from the query processing.\n     *\n     * @param {DataResult} data\n     * @param {DataOptions} ds?\n     * @param {Query} query?\n     * @param {Request} xhr?\n     * @param {Fetch} request?\n     * @param {CrudOptions} changes?\n     * @param ds\n     * @param query\n     * @param xhr\n     * @param request\n     * @param changes\n     * @returns aggregateResult\n     */\n    ODataV4Adaptor.prototype.processResponse = function (data, ds, query, xhr, request, changes) {\n        var metaName = '@odata.context';\n        var metaV4Name = '@context';\n        if ((request && request.type === 'GET') && !this.rootUrl && (data[metaName] || data[metaV4Name])) {\n            var dataUrl = data[metaName] ? data[metaName].split('/$metadata#') : data[metaV4Name].split('/$metadata#');\n            this.rootUrl = dataUrl[0];\n            this.resourceTableName = dataUrl[1];\n        }\n        var pvtData = 'pvtData';\n        var pvt = request && request[pvtData];\n        var emptyAndBatch = _super.prototype.processBatchResponse.call(this, data, query, xhr, request, changes);\n        if (emptyAndBatch) {\n            return emptyAndBatch;\n        }\n        var count = null;\n        var dataCount = '@odata.count';\n        var dataV4Count = '@count';\n        if (query && query.isCountRequired) {\n            if (dataCount in data) {\n                count = data[dataCount];\n            }\n            else if (dataV4Count in data) {\n                count = data[dataV4Count];\n            }\n        }\n        data = !isNullOrUndefined(data.value) ? data.value : data;\n        var args = {};\n        args.count = count;\n        args.result = data;\n        this.getAggregateResult(pvt, data, args, null, query);\n        return DataUtil.isNull(count) ? args.result : { result: args.result, count: count, aggregates: args.aggregates };\n    };\n    return ODataV4Adaptor;\n}(ODataAdaptor));\nexport { ODataV4Adaptor };\n/**\n * The Web API is a programmatic interface to define the request and response messages system that is mostly exposed in JSON or XML.\n * The DataManager uses the WebApiAdaptor to consume Web API.\n * Since this adaptor is targeted to interact with Web API created using OData endpoint, it is extended from ODataAdaptor\n *\n * @hidden\n */\nvar WebApiAdaptor = /** @class */ (function (_super) {\n    __extends(WebApiAdaptor, _super);\n    function WebApiAdaptor() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    WebApiAdaptor.prototype.getModuleName = function () {\n        return 'WebApiAdaptor';\n    };\n    /**\n     * Prepare and returns request body which is used to insert a new record in the table.\n     *\n     * @param {DataManager} dm\n     * @param {Object} data\n     * @param {string} tableName?\n     * @param tableName\n     */\n    WebApiAdaptor.prototype.insert = function (dm, data, tableName) {\n        return {\n            type: 'POST',\n            url: dm.dataSource.url,\n            data: JSON.stringify(data)\n        };\n    };\n    /**\n     * Prepare and return request body which is used to remove record from the table.\n     *\n     * @param {DataManager} dm\n     * @param {string} keyField\n     * @param {number} value\n     * @param {string} tableName?\n     * @param tableName\n     */\n    WebApiAdaptor.prototype.remove = function (dm, keyField, value, tableName) {\n        return {\n            type: 'DELETE',\n            url: dm.dataSource.url + '/' + value,\n            data: JSON.stringify(value)\n        };\n    };\n    /**\n     * Prepare and return request body which is used to update record.\n     *\n     * @param {DataManager} dm\n     * @param {string} keyField\n     * @param {Object} value\n     * @param {string} tableName?\n     * @param tableName\n     */\n    WebApiAdaptor.prototype.update = function (dm, keyField, value, tableName) {\n        return {\n            type: 'PUT',\n            url: dm.dataSource.url,\n            data: JSON.stringify(value)\n        };\n    };\n    WebApiAdaptor.prototype.batchRequest = function (dm, changes, e) {\n        var _this = this;\n        var initialGuid = e.guid = DataUtil.getGuid(this.options.batchPre);\n        var url = dm.dataSource.url.replace(/\\/*$/, '/' + this.options.batch);\n        e.url = this.resourceTableName ? this.resourceTableName : e.url;\n        var req = [];\n        var _loop_1 = function (i, x) {\n            changes.addedRecords.forEach(function (j, d) {\n                var stat = {\n                    'method': 'POST ',\n                    'url': function (data, i, key) { return ''; },\n                    'data': function (data, i) { return JSON.stringify(data[i]) + '\\n\\n'; }\n                };\n                req.push('--' + initialGuid);\n                req.push('Content-Type: application/http; msgtype=request', '');\n                req.push('POST ' + '/api/' + (dm.dataSource.insertUrl || dm.dataSource.crudUrl || e.url)\n                    + stat.url(changes.addedRecords, i, e.key) + ' HTTP/1.1');\n                req.push('Content-Type: ' + 'application/json; charset=utf-8');\n                req.push('Host: ' + location.host);\n                req.push('', j ? JSON.stringify(j) : '');\n            });\n        };\n        //insertion\n        for (var i = 0, x = changes.addedRecords.length; i < x; i++) {\n            _loop_1(i, x);\n        }\n        var _loop_2 = function (i, x) {\n            changes.changedRecords.forEach(function (j, d) {\n                var stat = {\n                    'method': _this.options.updateType + ' ',\n                    'url': function (data, i, key) { return ''; },\n                    'data': function (data, i) { return JSON.stringify(data[i]) + '\\n\\n'; }\n                };\n                req.push('--' + initialGuid);\n                req.push('Content-Type: application/http; msgtype=request', '');\n                req.push('PUT ' + '/api/' + (dm.dataSource.updateUrl || dm.dataSource.crudUrl || e.url)\n                    + stat.url(changes.changedRecords, i, e.key) + ' HTTP/1.1');\n                req.push('Content-Type: ' + 'application/json; charset=utf-8');\n                req.push('Host: ' + location.host);\n                req.push('', j ? JSON.stringify(j) : '');\n            });\n        };\n        //updation\n        for (var i = 0, x = changes.changedRecords.length; i < x; i++) {\n            _loop_2(i, x);\n        }\n        var _loop_3 = function (i, x) {\n            changes.deletedRecords.forEach(function (j, d) {\n                var state = {\n                    'mtd': 'DELETE ',\n                    'url': function (data, i, key) {\n                        var url = DataUtil.getObject(key, data[i]);\n                        if (typeof url === 'number' || DataUtil.parse.isGuid(url)) {\n                            return '/' + url;\n                        }\n                        else if (url instanceof Date) {\n                            var datTime = data[i][key];\n                            return '/' + datTime.toJSON();\n                        }\n                        else {\n                            return \"/'\" + url + \"'\";\n                        }\n                    },\n                    'data': function (data, i) { return ''; }\n                };\n                req.push('--' + initialGuid);\n                req.push('Content-Type: application/http; msgtype=request', '');\n                req.push('DELETE ' + '/api/' + (dm.dataSource.removeUrl || dm.dataSource.crudUrl || e.url)\n                    + state.url(changes.deletedRecords, i, e.key) + ' HTTP/1.1');\n                req.push('Content-Type: ' + 'application/json; charset=utf-8');\n                req.push('Host: ' + location.host);\n                req.push('', j ? JSON.stringify(j) : '');\n            });\n        };\n        //deletion\n        for (var i = 0, x = changes.deletedRecords.length; i < x; i++) {\n            _loop_3(i, x);\n        }\n        req.push('--' + initialGuid + '--', '');\n        return {\n            type: 'POST',\n            url: url,\n            contentType: 'multipart/mixed; boundary=' + initialGuid,\n            data: req.join('\\r\\n')\n        };\n    };\n    /**\n     * Method will trigger before send the request to server side.\n     * Used to set the custom header or modify the request options.\n     *\n     * @param  {DataManager} dm\n     * @param  {Request} request\n     * @param  {Fetch} settings\n     * @returns void\n     */\n    WebApiAdaptor.prototype.beforeSend = function (dm, request, settings) {\n        request.headers.set('Accept', 'application/json, text/javascript, */*; q=0.01');\n    };\n    /**\n     * Returns the data from the query processing.\n     *\n     * @param {DataResult} data\n     * @param {DataOptions} ds?\n     * @param {Query} query?\n     * @param {Request} xhr?\n     * @param {Fetch} request?\n     * @param {CrudOptions} changes?\n     * @param ds\n     * @param query\n     * @param xhr\n     * @param request\n     * @param changes\n     * @returns aggregateResult\n     */\n    WebApiAdaptor.prototype.processResponse = function (data, ds, query, xhr, request, changes) {\n        var pvtData = 'pvtData';\n        var pvt = request && request[pvtData];\n        var count = null;\n        var args = {};\n        if (request && request.type.toLowerCase() !== 'post') {\n            var versionCheck = xhr && request.fetchRequest.headers.get('DataServiceVersion');\n            var version = (versionCheck && parseInt(versionCheck, 10)) || 2;\n            if (query && query.isCountRequired) {\n                if (!DataUtil.isNull(data.Count)) {\n                    count = data.Count;\n                }\n            }\n            if (version < 3 && data.Items) {\n                data = data.Items;\n            }\n            args.count = count;\n            args.result = data;\n            this.getAggregateResult(pvt, data, args, null, query);\n        }\n        args.result = args.result || data;\n        return DataUtil.isNull(count) ? args.result : { result: args.result, count: args.count, aggregates: args.aggregates };\n    };\n    return WebApiAdaptor;\n}(ODataAdaptor));\nexport { WebApiAdaptor };\n/**\n * WebMethodAdaptor can be used by DataManager to interact with web method.\n *\n * @hidden\n */\nvar WebMethodAdaptor = /** @class */ (function (_super) {\n    __extends(WebMethodAdaptor, _super);\n    function WebMethodAdaptor() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Prepare the request body based on the query.\n     * The query information can be accessed at the WebMethod using variable named `value`.\n     *\n     * @param {DataManager} dm\n     * @param {Query} query\n     * @param {Object[]} hierarchyFilters?\n     * @param hierarchyFilters\n     * @returns application\n     */\n    WebMethodAdaptor.prototype.processQuery = function (dm, query, hierarchyFilters) {\n        var obj = new UrlAdaptor().processQuery(dm, query, hierarchyFilters);\n        var getData = 'data';\n        var data = DataUtil.parse.parseJson(obj[getData]);\n        var result = {};\n        var value = 'value';\n        if (data.param) {\n            for (var i = 0; i < data.param.length; i++) {\n                var param = data.param[i];\n                var key = Object.keys(param)[0];\n                result[key] = param[key];\n            }\n        }\n        result[value] = data;\n        var pvtData = 'pvtData';\n        var url = 'url';\n        return {\n            data: JSON.stringify(result, DataUtil.parse.jsonDateReplacer),\n            url: obj[url],\n            pvtData: obj[pvtData],\n            type: 'POST',\n            contentType: 'application/json; charset=utf-8'\n        };\n    };\n    return WebMethodAdaptor;\n}(UrlAdaptor));\nexport { WebMethodAdaptor };\n/**\n * RemoteSaveAdaptor, extended from JsonAdaptor and it is used for binding local data and performs all DataManager queries in client-side.\n * It interacts with server-side only for CRUD operations.\n *\n * @hidden\n */\nvar RemoteSaveAdaptor = /** @class */ (function (_super) {\n    __extends(RemoteSaveAdaptor, _super);\n    /**\n     * @hidden\n     */\n    function RemoteSaveAdaptor() {\n        var _this = _super.call(this) || this;\n        setValue('beforeSend', UrlAdaptor.prototype.beforeSend, _this);\n        return _this;\n    }\n    RemoteSaveAdaptor.prototype.insert = function (dm, data, tableName, query, position) {\n        this.pvt.position = position;\n        this.updateType = 'add';\n        return {\n            url: dm.dataSource.insertUrl || dm.dataSource.crudUrl || dm.dataSource.url,\n            data: JSON.stringify(extend({}, {\n                value: data,\n                table: tableName,\n                action: 'insert'\n            }, DataUtil.getAddParams(this, dm, query)))\n        };\n    };\n    RemoteSaveAdaptor.prototype.remove = function (dm, keyField, val, tableName, query) {\n        _super.prototype.remove.call(this, dm, keyField, val);\n        return {\n            type: 'POST',\n            url: dm.dataSource.removeUrl || dm.dataSource.crudUrl || dm.dataSource.url,\n            data: JSON.stringify(extend({}, {\n                key: val,\n                keyColumn: keyField,\n                table: tableName,\n                action: 'remove'\n            }, DataUtil.getAddParams(this, dm, query)))\n        };\n    };\n    RemoteSaveAdaptor.prototype.update = function (dm, keyField, val, tableName, query) {\n        this.updateType = 'update';\n        this.updateKey = keyField;\n        return {\n            type: 'POST',\n            url: dm.dataSource.updateUrl || dm.dataSource.crudUrl || dm.dataSource.url,\n            data: JSON.stringify(extend({}, {\n                value: val,\n                action: 'update',\n                keyColumn: keyField,\n                key: val[keyField],\n                table: tableName\n            }, DataUtil.getAddParams(this, dm, query)))\n        };\n    };\n    RemoteSaveAdaptor.prototype.processResponse = function (data, ds, query, xhr, request, changes, e) {\n        var i;\n        var newData = request ? JSON.parse(request.data) : data;\n        data = newData.action === 'batch' ? DataUtil.parse.parseJson(data) : data;\n        if (this.updateType === 'add') {\n            _super.prototype.insert.call(this, ds, data, null, null, this.pvt.position);\n        }\n        if (this.updateType === 'update') {\n            _super.prototype.update.call(this, ds, this.updateKey, data);\n        }\n        this.updateType = undefined;\n        if (data.added) {\n            for (i = 0; i < data.added.length; i++) {\n                _super.prototype.insert.call(this, ds, data.added[i]);\n            }\n        }\n        if (data.changed) {\n            for (i = 0; i < data.changed.length; i++) {\n                _super.prototype.update.call(this, ds, e.key, data.changed[i]);\n            }\n        }\n        if (data.deleted) {\n            for (i = 0; i < data.deleted.length; i++) {\n                _super.prototype.remove.call(this, ds, e.key, data.deleted[i]);\n            }\n        }\n        return data;\n    };\n    /**\n     * Prepare the request body based on the newly added, removed and updated records.\n     * Also perform the changes in the locally cached data to sync with the remote data.\n     * The result is used by the batch request.\n     *\n     * @param {DataManager} dm\n     * @param {CrudOptions} changes\n     * @param {RemoteArgs} e\n     * @param query\n     * @param original\n     */\n    RemoteSaveAdaptor.prototype.batchRequest = function (dm, changes, e, query, original) {\n        return {\n            type: 'POST',\n            url: dm.dataSource.batchUrl || dm.dataSource.crudUrl || dm.dataSource.url,\n            contentType: 'application/json; charset=utf-8',\n            dataType: 'json',\n            data: JSON.stringify(extend({}, {\n                changed: changes.changedRecords,\n                added: changes.addedRecords,\n                deleted: changes.deletedRecords,\n                action: 'batch',\n                table: e.url,\n                key: e.key\n            }, DataUtil.getAddParams(this, dm, query)))\n        };\n    };\n    RemoteSaveAdaptor.prototype.addParams = function (options) {\n        var urlParams = new UrlAdaptor();\n        urlParams.addParams(options);\n    };\n    return RemoteSaveAdaptor;\n}(JsonAdaptor));\nexport { RemoteSaveAdaptor };\n/**\n * Fetch Adaptor that is extended from URL Adaptor, is used for handle data operations with user defined functions.\n *\n * @hidden\n */\nvar CustomDataAdaptor = /** @class */ (function (_super) {\n    __extends(CustomDataAdaptor, _super);\n    function CustomDataAdaptor(props) {\n        var _this = _super.call(this) || this;\n        // options replaced the default adaptor options\n        _this.options = extend({}, _this.options, {\n            getData: new Function(),\n            addRecord: new Function(),\n            updateRecord: new Function(),\n            deleteRecord: new Function(),\n            batchUpdate: new Function()\n        });\n        extend(_this.options, props || {});\n        return _this;\n    }\n    CustomDataAdaptor.prototype.getModuleName = function () {\n        return 'CustomDataAdaptor';\n    };\n    return CustomDataAdaptor;\n}(UrlAdaptor));\nexport { CustomDataAdaptor };\n/**\n * The GraphqlAdaptor that is extended from URL Adaptor, is used for retrieving data from the Graphql server.\n * It interacts with the Graphql server with all the DataManager Queries and performs CRUD operations.\n *\n * @hidden\n */\nvar GraphQLAdaptor = /** @class */ (function (_super) {\n    __extends(GraphQLAdaptor, _super);\n    function GraphQLAdaptor(options) {\n        var _this = _super.call(this) || this;\n        _this.opt = options;\n        _this.schema = _this.opt.response;\n        _this.query = _this.opt.query;\n        /* eslint-disable @typescript-eslint/no-empty-function */\n        // tslint:disable-next-line:no-empty\n        _this.getVariables = _this.opt.getVariables ? _this.opt.getVariables : function () { };\n        /* eslint-enable @typescript-eslint/no-empty-function */\n        _this.getQuery = function () { return _this.query; };\n        return _this;\n    }\n    GraphQLAdaptor.prototype.getModuleName = function () {\n        return 'GraphQLAdaptor';\n    };\n    /**\n     * Process the JSON data based on the provided queries.\n     *\n     * @param {DataManager} dm\n     * @param {Query} query?\n     * @param datamanager\n     * @param query\n     */\n    GraphQLAdaptor.prototype.processQuery = function (datamanager, query) {\n        var urlQuery = _super.prototype.processQuery.apply(this, arguments);\n        var dm = JSON.parse(urlQuery.data);\n        // constructing GraphQL parameters\n        var keys = ['skip', 'take', 'sorted', 'table', 'select', 'where',\n            'search', 'requiresCounts', 'aggregates', 'params'];\n        var temp = {};\n        var str = 'searchwhereparams';\n        keys.filter(function (e) {\n            temp[e] = str.indexOf(e) > -1 ? JSON.stringify(dm[e]) : dm[e];\n        });\n        var vars = this.getVariables() || {};\n        // tslint:disable-next-line:no-string-literal\n        vars['datamanager'] = temp;\n        var data = JSON.stringify({\n            query: this.getQuery(),\n            variables: vars\n        });\n        urlQuery.data = data;\n        return urlQuery;\n    };\n    /**\n     * Returns the data from the query processing.\n     * It will also cache the data for later usage.\n     *\n     * @param {DataResult} data\n     * @param {DataManager} ds?\n     * @param {Query} query?\n     * @param {Request} xhr?\n     * @param {Object} request?\n     * @param resData\n     * @param ds\n     * @param query\n     * @param xhr\n     * @param request\n     * @returns DataResult\n     */\n    GraphQLAdaptor.prototype.processResponse = function (resData, ds, query, xhr, request) {\n        var res = resData;\n        var count;\n        var aggregates;\n        var result = getValue(this.schema.result, res.data);\n        if (this.schema.count) {\n            count = getValue(this.schema.count, res.data);\n        }\n        if (this.schema.aggregates) {\n            aggregates = getValue(this.schema.aggregates, res.data);\n            aggregates = !isNullOrUndefined(aggregates) ? DataUtil.parse.parseJson(aggregates) : aggregates;\n        }\n        var pvt = request.pvtData || {};\n        var args = { result: result, aggregates: aggregates };\n        var data = args;\n        if (pvt && pvt.groups && pvt.groups.length) {\n            this.getAggregateResult(pvt, data, args, null, query);\n        }\n        return !isNullOrUndefined(count) ? { result: args.result, count: count, aggregates: aggregates } : args.result;\n    };\n    /**\n     * Prepare and returns request body which is used to insert a new record in the table.\n     */\n    GraphQLAdaptor.prototype.insert = function () {\n        var inserted = _super.prototype.insert.apply(this, arguments);\n        return this.generateCrudData(inserted, 'insert');\n    };\n    /**\n     * Prepare and returns request body which is used to update a new record in the table.\n     */\n    GraphQLAdaptor.prototype.update = function () {\n        var inserted = _super.prototype.update.apply(this, arguments);\n        return this.generateCrudData(inserted, 'update');\n    };\n    /**\n     * Prepare and returns request body which is used to remove a new record in the table.\n     */\n    GraphQLAdaptor.prototype.remove = function () {\n        var inserted = _super.prototype.remove.apply(this, arguments);\n        return this.generateCrudData(inserted, 'remove');\n    };\n    /**\n     * Prepare the request body based on the newly added, removed and updated records.\n     * The result is used by the batch request.\n     *\n     * @param {DataManager} dm\n     * @param {CrudOptions} changes\n     * @param {Object} e\n     * @param e.key\n     * @param {Query} query\n     * @param {Object} original\n     */\n    GraphQLAdaptor.prototype.batchRequest = function (dm, changes, e, query, original) {\n        var batch = _super.prototype.batchRequest.apply(this, arguments);\n        // tslint:disable-next-line:typedef\n        var bData = JSON.parse(batch.data);\n        bData.key = e.key;\n        batch.data = JSON.stringify(bData);\n        return this.generateCrudData(batch, 'batch');\n    };\n    GraphQLAdaptor.prototype.generateCrudData = function (crudData, action) {\n        var parsed = JSON.parse(crudData.data);\n        crudData.data = JSON.stringify({\n            query: this.opt.getMutation(action),\n            variables: parsed\n        });\n        return crudData;\n    };\n    return GraphQLAdaptor;\n}(UrlAdaptor));\nexport { GraphQLAdaptor };\n/**\n * Cache Adaptor is used to cache the data of the visited pages. It prevents new requests for the previously visited pages.\n * You can configure cache page size and duration of caching by using cachingPageSize and timeTillExpiration properties of the DataManager\n *\n * @hidden\n */\nvar CacheAdaptor = /** @class */ (function (_super) {\n    __extends(CacheAdaptor, _super);\n    /**\n     * Constructor for CacheAdaptor class.\n     *\n     * @param {CacheAdaptor} adaptor?\n     * @param {number} timeStamp?\n     * @param {number} pageSize?\n     * @param adaptor\n     * @param timeStamp\n     * @param pageSize\n     * @hidden\n     */\n    function CacheAdaptor(adaptor, timeStamp, pageSize) {\n        var _this = _super.call(this) || this;\n        _this.isCrudAction = false;\n        _this.isInsertAction = false;\n        if (!isNullOrUndefined(adaptor)) {\n            _this.cacheAdaptor = adaptor;\n        }\n        _this.pageSize = pageSize;\n        _this.guidId = DataUtil.getGuid('cacheAdaptor');\n        var obj = { keys: [], results: [] };\n        window.localStorage.setItem(_this.guidId, JSON.stringify(obj));\n        var guid = _this.guidId;\n        if (!isNullOrUndefined(timeStamp)) {\n            setInterval(function () {\n                var data = DataUtil.parse.parseJson(window.localStorage.getItem(guid));\n                var forDel = [];\n                for (var i = 0; i < data.results.length; i++) {\n                    var currentTime = +new Date();\n                    var requestTime = +new Date(data.results[i].timeStamp);\n                    data.results[i].timeStamp = currentTime - requestTime;\n                    if (currentTime - requestTime > timeStamp) {\n                        forDel.push(i);\n                    }\n                }\n                for (var i = 0; i < forDel.length; i++) {\n                    data.results.splice(forDel[i], 1);\n                    data.keys.splice(forDel[i], 1);\n                }\n                window.localStorage.removeItem(guid);\n                window.localStorage.setItem(guid, JSON.stringify(data));\n            }, timeStamp);\n        }\n        return _this;\n    }\n    /**\n     * It will generate the key based on the URL when we send a request to server.\n     *\n     * @param {string} url\n     * @param {Query} query?\n     * @param query\n     * @hidden\n     */\n    CacheAdaptor.prototype.generateKey = function (url, query) {\n        var queries = this.getQueryRequest(query);\n        var singles = Query.filterQueryLists(query.queries, ['onSelect', 'onPage', 'onSkip', 'onTake', 'onRange']);\n        var key = url;\n        var page = 'onPage';\n        if (page in singles) {\n            key += singles[page].pageIndex;\n        }\n        queries.sorts.forEach(function (obj) {\n            key += obj.e.direction + obj.e.fieldName;\n        });\n        queries.groups.forEach(function (obj) {\n            key += obj.e.fieldName;\n        });\n        queries.searches.forEach(function (obj) {\n            key += obj.e.searchKey;\n        });\n        for (var filter = 0; filter < queries.filters.length; filter++) {\n            var currentFilter = queries.filters[filter];\n            if (currentFilter.e.isComplex) {\n                var newQuery = query.clone();\n                newQuery.queries = [];\n                for (var i = 0; i < currentFilter.e.predicates.length; i++) {\n                    newQuery.queries.push({ fn: 'onWhere', e: currentFilter.e.predicates[i], filter: query.queries.filter });\n                }\n                key += currentFilter.e.condition + this.generateKey(url, newQuery);\n            }\n            else {\n                key += currentFilter.e.field + currentFilter.e.operator + currentFilter.e.value;\n            }\n        }\n        return key;\n    };\n    /**\n     * Process the query to generate request body.\n     * If the data is already cached, it will return the cached data.\n     *\n     * @param {DataManager} dm\n     * @param {Query} query?\n     * @param {Object[]} hierarchyFilters?\n     * @param query\n     * @param hierarchyFilters\n     */\n    CacheAdaptor.prototype.processQuery = function (dm, query, hierarchyFilters) {\n        var key = this.generateKey(dm.dataSource.url, query);\n        var cachedItems = DataUtil.parse.parseJson(window.localStorage.getItem(this.guidId));\n        var data = cachedItems ? cachedItems.results[cachedItems.keys.indexOf(key)] : null;\n        if (data != null && !this.isCrudAction && !this.isInsertAction) {\n            return data;\n        }\n        this.isCrudAction = null;\n        this.isInsertAction = null;\n        /* eslint-disable prefer-spread */\n        return this.cacheAdaptor.processQuery.apply(this.cacheAdaptor, [].slice.call(arguments, 0));\n        /* eslint-enable prefer-spread */\n    };\n    /**\n     * Returns the data from the query processing.\n     * It will also cache the data for later usage.\n     *\n     * @param {DataResult} data\n     * @param {DataManager} ds?\n     * @param {Query} query?\n     * @param {Request} xhr?\n     * @param {Fetch} request?\n     * @param {CrudOptions} changes?\n     * @param ds\n     * @param query\n     * @param xhr\n     * @param request\n     * @param changes\n     */\n    CacheAdaptor.prototype.processResponse = function (data, ds, query, xhr, request, changes) {\n        if (this.isInsertAction || (request && this.cacheAdaptor.options.batch &&\n            DataUtil.endsWith(request.url, this.cacheAdaptor.options.batch) && request.type.toLowerCase() === 'post')) {\n            return this.cacheAdaptor.processResponse(data, ds, query, xhr, request, changes);\n        }\n        /* eslint-disable prefer-spread */\n        data = this.cacheAdaptor.processResponse.apply(this.cacheAdaptor, [].slice.call(arguments, 0));\n        /* eslint-enable prefer-spread */\n        var key = query ? this.generateKey(ds.dataSource.url, query) : ds.dataSource.url;\n        var obj = {};\n        obj = DataUtil.parse.parseJson(window.localStorage.getItem(this.guidId));\n        var index = obj.keys.indexOf(key);\n        if (index !== -1) {\n            obj.results.splice(index, 1);\n            obj.keys.splice(index, 1);\n        }\n        obj.results[obj.keys.push(key) - 1] = { keys: key, result: data.result, timeStamp: new Date(), count: data.count };\n        while (obj.results.length > this.pageSize) {\n            obj.results.splice(0, 1);\n            obj.keys.splice(0, 1);\n        }\n        window.localStorage.setItem(this.guidId, JSON.stringify(obj));\n        return data;\n    };\n    /**\n     * Method will trigger before send the request to server side. Used to set the custom header or modify the request options.\n     *\n     * @param {DataManager} dm\n     * @param {Request} request\n     * @param {Fetch} settings?\n     * @param settings\n     */\n    CacheAdaptor.prototype.beforeSend = function (dm, request, settings) {\n        if (!isNullOrUndefined(this.cacheAdaptor.options.batch) && DataUtil.endsWith(settings.url, this.cacheAdaptor.options.batch)\n            && settings.type.toLowerCase() === 'post') {\n            request.headers.set('Accept', this.cacheAdaptor.options.multipartAccept);\n        }\n        if (!dm.dataSource.crossDomain) {\n            request.headers.set('Accept', this.cacheAdaptor.options.accept);\n        }\n    };\n    /**\n     * Updates existing record and saves the changes to the table.\n     *\n     * @param  {DataManager} dm\n     * @param  {string} keyField\n     * @param  {Object} value\n     * @param  {string} tableName\n     */\n    CacheAdaptor.prototype.update = function (dm, keyField, value, tableName) {\n        this.isCrudAction = true;\n        return this.cacheAdaptor.update(dm, keyField, value, tableName);\n    };\n    /**\n     * Prepare and returns request body which is used to insert a new record in the table.\n     *\n     * @param {DataManager} dm\n     * @param {Object} data\n     * @param {string} tableName?\n     * @param tableName\n     */\n    CacheAdaptor.prototype.insert = function (dm, data, tableName) {\n        this.isInsertAction = true;\n        return this.cacheAdaptor.insert(dm, data, tableName);\n    };\n    /**\n     * Prepare and return request body which is used to remove record from the table.\n     *\n     * @param {DataManager} dm\n     * @param {string} keyField\n     * @param {Object} value\n     * @param {string} tableName?\n     * @param tableName\n     */\n    CacheAdaptor.prototype.remove = function (dm, keyField, value, tableName) {\n        this.isCrudAction = true;\n        return this.cacheAdaptor.remove(dm, keyField, value, tableName);\n    };\n    /**\n     * Prepare the request body based on the newly added, removed and updated records.\n     * The result is used by the batch request.\n     *\n     * @param  {DataManager} dm\n     * @param  {CrudOptions} changes\n     * @param  {RemoteArgs} e\n     */\n    CacheAdaptor.prototype.batchRequest = function (dm, changes, e) {\n        return this.cacheAdaptor.batchRequest(dm, changes, e);\n    };\n    return CacheAdaptor;\n}(UrlAdaptor));\nexport { CacheAdaptor };\n","/* eslint-disable valid-jsdoc */\n/* eslint-disable security/detect-object-injection */\nimport { Fetch } from '@syncfusion/ej2-base';\nimport { extend, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { DataUtil } from './util';\nimport { Predicate, Query } from './query';\nimport { ODataAdaptor, JsonAdaptor, CacheAdaptor, RemoteSaveAdaptor, CustomDataAdaptor } from './adaptors';\n/**\n * DataManager is used to manage and manipulate relational data.\n */\nvar DataManager = /** @class */ (function () {\n    /**\n     * Constructor for DataManager class\n     *\n     * @param {DataOptions|JSON[]} dataSource?\n     * @param {Query} query?\n     * @param {AdaptorOptions|string} adaptor?\n     * @param dataSource\n     * @param query\n     * @param adaptor\n     * @hidden\n     */\n    function DataManager(dataSource, query, adaptor) {\n        var _this = this;\n        /** @hidden */\n        this.dateParse = true;\n        /** @hidden */\n        this.timeZoneHandling = true;\n        this.persistQuery = {};\n        this.isInitialLoad = false;\n        this.requests = [];\n        this.isInitialLoad = true;\n        if (!dataSource && !this.dataSource) {\n            dataSource = [];\n        }\n        adaptor = adaptor || dataSource.adaptor;\n        if (dataSource && dataSource.timeZoneHandling === false) {\n            this.timeZoneHandling = dataSource.timeZoneHandling;\n        }\n        var data;\n        if (dataSource instanceof Array) {\n            data = {\n                json: dataSource,\n                offline: true\n            };\n        }\n        else if (typeof dataSource === 'object') {\n            if (!dataSource.json) {\n                dataSource.json = [];\n            }\n            if (!dataSource.enablePersistence) {\n                dataSource.enablePersistence = false;\n            }\n            if (!dataSource.id) {\n                dataSource.id = '';\n            }\n            if (!dataSource.ignoreOnPersist) {\n                dataSource.ignoreOnPersist = [];\n            }\n            data = {\n                url: dataSource.url,\n                insertUrl: dataSource.insertUrl,\n                removeUrl: dataSource.removeUrl,\n                updateUrl: dataSource.updateUrl,\n                crudUrl: dataSource.crudUrl,\n                batchUrl: dataSource.batchUrl,\n                json: dataSource.json,\n                headers: dataSource.headers,\n                accept: dataSource.accept,\n                data: dataSource.data,\n                timeTillExpiration: dataSource.timeTillExpiration,\n                cachingPageSize: dataSource.cachingPageSize,\n                enableCaching: dataSource.enableCaching,\n                requestType: dataSource.requestType,\n                key: dataSource.key,\n                crossDomain: dataSource.crossDomain,\n                jsonp: dataSource.jsonp,\n                dataType: dataSource.dataType,\n                offline: dataSource.offline !== undefined ? dataSource.offline\n                    : dataSource.adaptor instanceof RemoteSaveAdaptor || dataSource.adaptor instanceof CustomDataAdaptor ?\n                        false : dataSource.url ? false : true,\n                requiresFormat: dataSource.requiresFormat,\n                enablePersistence: dataSource.enablePersistence,\n                id: dataSource.id,\n                ignoreOnPersist: dataSource.ignoreOnPersist\n            };\n        }\n        else {\n            DataUtil.throwError('DataManager: Invalid arguments');\n        }\n        if (data.requiresFormat === undefined && !DataUtil.isCors()) {\n            data.requiresFormat = isNullOrUndefined(data.crossDomain) ? true : data.crossDomain;\n        }\n        if (data.dataType === undefined) {\n            data.dataType = 'json';\n        }\n        this.dataSource = data;\n        this.defaultQuery = query;\n        if (this.dataSource.enablePersistence && this.dataSource.id) {\n            window.addEventListener('unload', this.setPersistData.bind(this));\n        }\n        if (data.url && data.offline && !data.json.length) {\n            this.isDataAvailable = false;\n            this.adaptor = adaptor || new ODataAdaptor();\n            this.dataSource.offline = false;\n            this.ready = this.executeQuery(query || new Query());\n            this.ready.then(function (e) {\n                _this.dataSource.offline = true;\n                _this.isDataAvailable = true;\n                data.json = e.result;\n                _this.adaptor = new JsonAdaptor();\n            });\n        }\n        else {\n            this.adaptor = data.offline ? new JsonAdaptor() : new ODataAdaptor();\n        }\n        if (!data.jsonp && this.adaptor instanceof ODataAdaptor) {\n            data.jsonp = 'callback';\n        }\n        this.adaptor = adaptor || this.adaptor;\n        if (data.enableCaching) {\n            this.adaptor = new CacheAdaptor(this.adaptor, data.timeTillExpiration, data.cachingPageSize);\n        }\n        return this;\n    }\n    Object.defineProperty(DataManager.prototype, \"moduleName\", {\n        /** @hidden */\n        get: function () { return 'datamanager'; },\n        enumerable: true,\n        configurable: true\n    });\n    ;\n    /**\n     * Get the queries maintained in the persisted state.\n     * @param {string} id - The identifier of the persisted query to retrieve.\n     * @returns {object} The persisted data object.\n     */\n    DataManager.prototype.getPersistedData = function (id) {\n        var persistedData = localStorage.getItem(id || this.dataSource.id);\n        return JSON.parse(persistedData);\n    };\n    /**\n    * Set the queries to be maintained in the persisted state.\n    * @param {Event} e - The event parameter that triggers the setPersistData method.\n    * @param {string} id - The identifier of the persisted query to set.\n    * @param {object} persistData - The data to be persisted.\n    * @returns {void} .\n    */\n    DataManager.prototype.setPersistData = function (e, id, persistData) {\n        localStorage.setItem(id || this.dataSource.id, JSON.stringify(persistData || this.persistQuery));\n    };\n    DataManager.prototype.setPersistQuery = function (query) {\n        var _this = this;\n        var persistedQuery = this.getPersistedData();\n        if (this.isInitialLoad && persistedQuery && Object.keys(persistedQuery).length) {\n            this.persistQuery = persistedQuery;\n            this.persistQuery.queries = this.persistQuery.queries.filter(function (query) {\n                if (_this.dataSource.ignoreOnPersist && _this.dataSource.ignoreOnPersist.length) {\n                    if (query.fn && _this.dataSource.ignoreOnPersist.some(function (keyword) { return query.fn === keyword; })) {\n                        return false; // Exclude the matching query\n                    }\n                }\n                if (query.fn === 'onWhere') {\n                    var e = query.e;\n                    if (e && e.isComplex && e.predicates instanceof Array) {\n                        var allPredicates = e.predicates.map(function (predicateObj) {\n                            if (predicateObj.predicates && predicateObj.predicates instanceof Array) {\n                                // Process nested predicate array\n                                var nestedPredicates = predicateObj.predicates.map(function (nestedPredicate) {\n                                    var field = nestedPredicate.field, operator = nestedPredicate.operator, value = nestedPredicate.value, ignoreCase = nestedPredicate.ignoreCase, ignoreAccent = nestedPredicate.ignoreAccent, matchCase = nestedPredicate.matchCase;\n                                    return new Predicate(field, operator, value, ignoreCase, ignoreAccent, matchCase);\n                                });\n                                return predicateObj.condition === 'and' ? Predicate.and(nestedPredicates) : Predicate.or(nestedPredicates);\n                            }\n                            else {\n                                // Process individual predicate\n                                var field = predicateObj.field, operator = predicateObj.operator, value = predicateObj.value, ignoreCase = predicateObj.ignoreCase, ignoreAccent = predicateObj.ignoreAccent, matchCase = predicateObj.matchCase;\n                                return new Predicate(field, operator, value, ignoreCase, ignoreAccent, matchCase);\n                            }\n                        });\n                        query.e = new Predicate(allPredicates[0], e.condition, allPredicates.slice(1));\n                    }\n                }\n                return true; // Keep all other queries\n            });\n            var newQuery = extend(new Query(), this.persistQuery);\n            this.isInitialLoad = false;\n            return (newQuery);\n        }\n        else {\n            this.persistQuery = query;\n            this.isInitialLoad = false;\n            return query;\n        }\n    };\n    /**\n     * Overrides DataManager's default query with given query.\n     *\n     * @param  {Query} query - Defines the new default query.\n     */\n    DataManager.prototype.setDefaultQuery = function (query) {\n        this.defaultQuery = query;\n        return this;\n    };\n    /**\n     * Executes the given query with local data source.\n     *\n     * @param  {Query} query - Defines the query to retrieve data.\n     */\n    DataManager.prototype.executeLocal = function (query) {\n        if (!this.defaultQuery && !(query instanceof Query)) {\n            DataUtil.throwError('DataManager - executeLocal() : A query is required to execute');\n        }\n        if (!this.dataSource.json) {\n            DataUtil.throwError('DataManager - executeLocal() : Json data is required to execute');\n        }\n        if (this.dataSource.enablePersistence && this.dataSource.id) {\n            query = this.setPersistQuery(query);\n        }\n        query = query || this.defaultQuery;\n        var result = this.adaptor.processQuery(this, query);\n        if (query.subQuery) {\n            var from = query.subQuery.fromTable;\n            var lookup = query.subQuery.lookups;\n            var res = query.isCountRequired ? result.result :\n                result;\n            if (lookup && lookup instanceof Array) {\n                DataUtil.buildHierarchy(query.subQuery.fKey, from, res, lookup, query.subQuery.key);\n            }\n            for (var j = 0; j < res.length; j++) {\n                if (res[j][from] instanceof Array) {\n                    res[j] = extend({}, {}, res[j]);\n                    res[j][from] = this.adaptor.processResponse(query.subQuery.using(new DataManager(res[j][from].slice(0))).executeLocal(), this, query);\n                }\n            }\n        }\n        return this.adaptor.processResponse(result, this, query);\n    };\n    /**\n     * Executes the given query with either local or remote data source.\n     * It will be executed as asynchronously and returns Promise object which will be resolved or rejected after action completed.\n     *\n     * @param  {Query|Function} query - Defines the query to retrieve data.\n     * @param  {Function} done - Defines the callback function and triggers when the Promise is resolved.\n     * @param  {Function} fail - Defines the callback function and triggers when the Promise is rejected.\n     * @param  {Function} always - Defines the callback function and triggers when the Promise is resolved or rejected.\n     */\n    DataManager.prototype.executeQuery = function (query, done, fail, always) {\n        var _this = this;\n        var makeRequest = 'makeRequest';\n        if (this.dataSource.enablePersistence && this.dataSource.id) {\n            query = this.setPersistQuery(query);\n        }\n        if (typeof query === 'function') {\n            always = fail;\n            fail = done;\n            done = query;\n            query = null;\n        }\n        if (!query) {\n            query = this.defaultQuery;\n        }\n        if (!(query instanceof Query)) {\n            DataUtil.throwError('DataManager - executeQuery() : A query is required to execute');\n        }\n        var deffered = new Deferred();\n        var args = { query: query };\n        if (!this.dataSource.offline && (this.dataSource.url !== undefined && this.dataSource.url !== '')\n            || (!isNullOrUndefined(this.adaptor[makeRequest])) || this.isCustomDataAdaptor(this.adaptor)) {\n            var result = this.adaptor.processQuery(this, query);\n            if (!isNullOrUndefined(this.adaptor[makeRequest])) {\n                this.adaptor[makeRequest](result, deffered, args, query);\n            }\n            else if (!isNullOrUndefined(result.url) || this.isCustomDataAdaptor(this.adaptor)) {\n                this.requests = [];\n                this.makeRequest(result, deffered, args, query);\n            }\n            else {\n                args = DataManager.getDeferedArgs(query, result, args);\n                deffered.resolve(args);\n            }\n        }\n        else {\n            DataManager.nextTick(function () {\n                var res = _this.executeLocal(query);\n                args = DataManager.getDeferedArgs(query, res, args);\n                deffered.resolve(args);\n            });\n        }\n        if (done || fail) {\n            deffered.promise.then(done, fail);\n        }\n        if (always) {\n            deffered.promise.then(always, always);\n        }\n        return deffered.promise;\n    };\n    DataManager.getDeferedArgs = function (query, result, args) {\n        if (query.isCountRequired) {\n            args.result = result.result;\n            args.count = result.count;\n            args.aggregates = result.aggregates;\n        }\n        else {\n            args.result = result;\n        }\n        return args;\n    };\n    DataManager.nextTick = function (fn) {\n        /* eslint-disable @typescript-eslint/no-explicit-any */\n        // tslint:disable-next-line:no-any\n        (window.setImmediate || window.setTimeout)(fn, 0);\n        /* eslint-enable @typescript-eslint/no-explicit-any */\n    };\n    DataManager.prototype.extendRequest = function (url, fnSuccess, fnFail) {\n        return extend({}, {\n            type: 'GET',\n            dataType: this.dataSource.dataType,\n            crossDomain: this.dataSource.crossDomain,\n            jsonp: this.dataSource.jsonp,\n            cache: true,\n            processData: false,\n            onSuccess: fnSuccess,\n            onFailure: fnFail\n        }, url);\n    };\n    // tslint:disable-next-line:max-func-body-length\n    DataManager.prototype.makeRequest = function (url, deffered, args, query) {\n        var _this = this;\n        var isSelector = !!query.subQuerySelector;\n        var fnFail = function (e) {\n            args.error = e;\n            deffered.reject(args);\n        };\n        var process = function (data, count, xhr, request, actual, aggregates, virtualSelectRecords) {\n            args.xhr = xhr;\n            args.count = count ? parseInt(count.toString(), 10) : 0;\n            args.result = data;\n            args.request = request;\n            args.aggregates = aggregates;\n            args.actual = actual;\n            args.virtualSelectRecords = virtualSelectRecords;\n            deffered.resolve(args);\n        };\n        var fnQueryChild = function (data, selector) {\n            var subDeffer = new Deferred();\n            var childArgs = { parent: args };\n            query.subQuery.isChild = true;\n            var subUrl = _this.adaptor.processQuery(_this, query.subQuery, data ? _this.adaptor.processResponse(data) : selector);\n            var childReq = _this.makeRequest(subUrl, subDeffer, childArgs, query.subQuery);\n            if (!isSelector) {\n                subDeffer.then(function (subData) {\n                    if (data) {\n                        DataUtil.buildHierarchy(query.subQuery.fKey, query.subQuery.fromTable, data, subData, query.subQuery.key);\n                        process(data, subData.count, subData.xhr);\n                    }\n                }, fnFail);\n            }\n            return childReq;\n        };\n        var fnSuccess = function (data, request) {\n            if (_this.isGraphQLAdaptor(_this.adaptor)) {\n                // tslint:disable-next-line:no-string-literal\n                if (!isNullOrUndefined(data['errors'])) {\n                    // tslint:disable-next-line:no-string-literal\n                    return fnFail(data['errors'], request);\n                }\n            }\n            if (_this.isCustomDataAdaptor(_this.adaptor)) {\n                request = extend({}, _this.fetchReqOption, request);\n            }\n            if (request.contentType.indexOf('xml') === -1 && _this.dateParse) {\n                data = DataUtil.parse.parseJson(data);\n            }\n            var result = _this.adaptor.processResponse(data, _this, query, request.fetchRequest, request);\n            var count = 0;\n            var aggregates = null;\n            var virtualSelectRecords = 'virtualSelectRecords';\n            var virtualRecords = data[virtualSelectRecords];\n            if (query.isCountRequired) {\n                count = result.count;\n                aggregates = result.aggregates;\n                result = result.result;\n            }\n            if (!query.subQuery) {\n                process(result, count, request.fetchRequest, request.type, data, aggregates, virtualRecords);\n                return;\n            }\n            if (!isSelector) {\n                fnQueryChild(result, request);\n            }\n        };\n        var req = this.extendRequest(url, fnSuccess, fnFail);\n        if (!this.isCustomDataAdaptor(this.adaptor)) {\n            var fetch_1 = new Fetch(req);\n            fetch_1.beforeSend = function () {\n                _this.beforeSend(fetch_1.fetchRequest, fetch_1);\n            };\n            req = fetch_1.send();\n            req.catch(function (e) { return true; }); // to handle failure remote requests.\n            this.requests.push(fetch_1);\n        }\n        else {\n            this.fetchReqOption = req;\n            var request = req;\n            this.adaptor.options.getData({\n                data: request.data,\n                onSuccess: request.onSuccess, onFailure: request.onFailure\n            });\n        }\n        if (isSelector) {\n            var promise = void 0;\n            var res = query.subQuerySelector.call(this, { query: query.subQuery, parent: query });\n            if (res && res.length) {\n                promise = Promise.all([req, fnQueryChild(null, res)]);\n                promise.then(function () {\n                    var args = [];\n                    for (var _i = 0; _i < arguments.length; _i++) {\n                        args[_i] = arguments[_i];\n                    }\n                    var result = args[0];\n                    var pResult = _this.adaptor.processResponse(result[0], _this, query, _this.requests[0].fetchRequest, _this.requests[0]);\n                    var count = 0;\n                    if (query.isCountRequired) {\n                        count = pResult.count;\n                        pResult = pResult.result;\n                    }\n                    var cResult = _this.adaptor.processResponse(result[1], _this, query.subQuery, _this.requests[1].fetchRequest, _this.requests[1]);\n                    count = 0;\n                    if (query.subQuery.isCountRequired) {\n                        count = cResult.count;\n                        cResult = cResult.result;\n                    }\n                    DataUtil.buildHierarchy(query.subQuery.fKey, query.subQuery.fromTable, pResult, cResult, query.subQuery.key);\n                    isSelector = false;\n                    process(pResult, count, _this.requests[0].fetchRequest);\n                });\n            }\n            else {\n                isSelector = false;\n            }\n        }\n        return req;\n    };\n    DataManager.prototype.beforeSend = function (request, settings) {\n        this.adaptor.beforeSend(this, request, settings);\n        var headers = this.dataSource.headers;\n        var props;\n        for (var i = 0; headers && i < headers.length; i++) {\n            props = [];\n            var keys = Object.keys(headers[i]);\n            for (var _i = 0, keys_1 = keys; _i < keys_1.length; _i++) {\n                var prop = keys_1[_i];\n                props.push(prop);\n                request.headers.set(prop, headers[i][prop]);\n            }\n        }\n    };\n    /**\n     * Save bulk changes to the given table name.\n     * User can add a new record, edit an existing record, and delete a record at the same time.\n     * If the datasource from remote, then updated in a single post.\n     *\n     * @param {Object} changes - Defines the CrudOptions.\n     * @param {string} key - Defines the column field.\n     * @param {string|Query} tableName - Defines the table name.\n     * @param {Query} query - Sets default query for the DataManager.\n     * @param original\n     */\n    DataManager.prototype.saveChanges = function (changes, key, tableName, query, original) {\n        var _this = this;\n        if (tableName instanceof Query) {\n            query = tableName;\n            tableName = null;\n        }\n        var args = {\n            url: tableName,\n            key: key || this.dataSource.key\n        };\n        var req = this.adaptor.batchRequest(this, changes, args, query || new Query(), original);\n        var dofetchRequest = 'dofetchRequest';\n        if (this.dataSource.offline) {\n            return req;\n        }\n        if (!isNullOrUndefined(this.adaptor[dofetchRequest])) {\n            return this.adaptor[dofetchRequest](req);\n        }\n        else if (!this.isCustomDataAdaptor(this.adaptor)) {\n            var deff_1 = new Deferred();\n            var fetch_2 = new Fetch(req);\n            fetch_2.beforeSend = function () {\n                _this.beforeSend(fetch_2.fetchRequest, fetch_2);\n            };\n            fetch_2.onSuccess = function (data, request) {\n                if (_this.isGraphQLAdaptor(_this.adaptor)) {\n                    // tslint:disable-next-line:no-string-literal\n                    if (!isNullOrUndefined(data['errors'])) {\n                        // tslint:disable-next-line:no-string-literal\n                        fetch_2.onFailure(JSON.stringify(data['errors']));\n                    }\n                }\n                deff_1.resolve(_this.adaptor.processResponse(data, _this, null, request.fetchRequest, request, changes, args));\n            };\n            fetch_2.onFailure = function (e) {\n                deff_1.reject([{ error: e }]);\n            };\n            fetch_2.send().catch(function (e) { return true; }); // to handle the failure requests.\n            return deff_1.promise;\n        }\n        else {\n            return this.dofetchRequest(req, this.adaptor.options.batchUpdate);\n        }\n    };\n    /**\n     * Inserts new record in the given table.\n     *\n     * @param {Object} data - Defines the data to insert.\n     * @param {string|Query} tableName - Defines the table name.\n     * @param {Query} query - Sets default query for the DataManager.\n     * @param position\n     */\n    DataManager.prototype.insert = function (data, tableName, query, position) {\n        if (tableName instanceof Query) {\n            query = tableName;\n            tableName = null;\n        }\n        var req = this.adaptor.insert(this, data, tableName, query, position);\n        var dofetchRequest = 'dofetchRequest';\n        if (this.dataSource.offline) {\n            return req;\n        }\n        if (!isNullOrUndefined(this.adaptor[dofetchRequest])) {\n            return this.adaptor[dofetchRequest](req);\n        }\n        else {\n            return this.dofetchRequest(req, this.adaptor.options.addRecord);\n        }\n    };\n    /**\n     * Removes data from the table with the given key.\n     *\n     * @param  {string} keyField - Defines the column field.\n     * @param  {Object} value - Defines the value to find the data in the specified column.\n     * @param  {string|Query} tableName - Defines the table name\n     * @param  {Query} query - Sets default query for the DataManager.\n     */\n    DataManager.prototype.remove = function (keyField, value, tableName, query) {\n        if (typeof value === 'object') {\n            value = DataUtil.getObject(keyField, value);\n        }\n        if (tableName instanceof Query) {\n            query = tableName;\n            tableName = null;\n        }\n        var res = this.adaptor.remove(this, keyField, value, tableName, query);\n        var dofetchRequest = 'dofetchRequest';\n        if (this.dataSource.offline) {\n            return res;\n        }\n        if (!isNullOrUndefined(this.adaptor[dofetchRequest])) {\n            return this.adaptor[dofetchRequest](res);\n        }\n        else {\n            var remove = this.adaptor.options.deleteRecord;\n            return this.dofetchRequest(res, remove);\n        }\n    };\n    /**\n     * Updates existing record in the given table.\n     *\n     * @param {string} keyField - Defines the column field.\n     * @param {Object} value - Defines the value to find the data in the specified column.\n     * @param {string|Query} tableName - Defines the table name\n     * @param {Query} query - Sets default query for the DataManager.\n     * @param original\n     */\n    DataManager.prototype.update = function (keyField, value, tableName, query, original) {\n        if (tableName instanceof Query) {\n            query = tableName;\n            tableName = null;\n        }\n        var res = this.adaptor.update(this, keyField, value, tableName, query, original);\n        var dofetchRequest = 'dofetchRequest';\n        if (this.dataSource.offline) {\n            return res;\n        }\n        if (!isNullOrUndefined(this.adaptor[dofetchRequest])) {\n            return this.adaptor[dofetchRequest](res);\n        }\n        else {\n            var update = this.adaptor.options.updateRecord;\n            return this.dofetchRequest(res, update);\n        }\n    };\n    DataManager.prototype.isCustomDataAdaptor = function (dataSource) {\n        return this.adaptor.getModuleName &&\n            this.adaptor.getModuleName() === 'CustomDataAdaptor';\n    };\n    DataManager.prototype.isGraphQLAdaptor = function (dataSource) {\n        return this.adaptor.getModuleName &&\n            this.adaptor.getModuleName() === 'GraphQLAdaptor';\n    };\n    DataManager.prototype.successFunc = function (record, request) {\n        if (this.isGraphQLAdaptor(this.adaptor)) {\n            var data = typeof record === 'object' ? record : JSON.parse(record);\n            // tslint:disable-next-line:no-string-literal\n            if (!isNullOrUndefined(data['errors'])) {\n                // tslint:disable-next-line:no-string-literal\n                this.failureFunc(JSON.stringify(data['errors']));\n            }\n        }\n        if (this.isCustomDataAdaptor(this.adaptor)) {\n            request = extend({}, this.fetchReqOption, request);\n        }\n        try {\n            DataUtil.parse.parseJson(record);\n        }\n        catch (e) {\n            record = [];\n        }\n        record = this.adaptor.processResponse(DataUtil.parse.parseJson(record), this, null, request.fetchRequest, request);\n        this.fetchDeffered.resolve(record);\n    };\n    DataManager.prototype.failureFunc = function (e) {\n        this.fetchDeffered.reject([{ error: e }]);\n    };\n    DataManager.prototype.dofetchRequest = function (res, fetchFunc) {\n        var _this = this;\n        res = extend({}, {\n            type: 'POST',\n            contentType: 'application/json; charset=utf-8',\n            processData: false\n        }, res);\n        this.fetchDeffered = new Deferred();\n        if (!this.isCustomDataAdaptor(this.adaptor)) {\n            var fetch_3 = new Fetch(res);\n            fetch_3.beforeSend = function () {\n                _this.beforeSend(fetch_3.fetchRequest, fetch_3);\n            };\n            fetch_3.onSuccess = this.successFunc.bind(this);\n            fetch_3.onFailure = this.failureFunc.bind(this);\n            fetch_3.send().catch(function (e) { return true; }); // to handle the failure requests.\n        }\n        else {\n            this.fetchReqOption = res;\n            fetchFunc.call(this, {\n                data: res.data, onSuccess: this.successFunc.bind(this),\n                onFailure: this.failureFunc.bind(this)\n            });\n        }\n        return this.fetchDeffered.promise;\n    };\n    DataManager.prototype.clearPersistence = function () {\n        window.removeEventListener('unload', this.setPersistData.bind(this));\n        this.dataSource.enablePersistence = false;\n        this.persistQuery = {};\n        window.localStorage.setItem(this.dataSource.id, '[]');\n    };\n    return DataManager;\n}());\nexport { DataManager };\n/**\n * Deferred is used to handle asynchronous operation.\n */\nvar Deferred = /** @class */ (function () {\n    function Deferred() {\n        var _this = this;\n        /**\n         * Promise is an object that represents a value that may not be available yet, but will be resolved at some point in the future.\n         */\n        this.promise = new Promise(function (resolve, reject) {\n            _this.resolve = resolve;\n            _this.reject = reject;\n        });\n        /**\n         * Defines the callback function triggers when the Deferred object is resolved.\n         */\n        this.then = this.promise.then.bind(this.promise);\n        /**\n         * Defines the callback function triggers when the Deferred object is rejected.\n         */\n        this.catch = this.promise.catch.bind(this.promise);\n    }\n    return Deferred;\n}());\nexport { Deferred };\n"],"names":["Query","from","this","subQuery","isChild","distincts","queries","key","fKey","fromTable","Array","lookups","expands","sortedColumns","groupedColumns","params","lazyLoad","Object","defineProperty","prototype","get","enumerable","configurable","setKey","field","using","dataManager","execute","done","fail","always","executeQuery","DataUtil","throwError","executeLocal","clone","cloned","slice","subQuerySelector","isCountRequired","tableName","addParams","value","push","fn","distinct","fields","call","expand","tables","where","fieldName","operator","ignoreCase","ignoreAccent","matchCase","toLowerCase","predicate","Predicate","e","search","searchKey","fieldNames","comparer","fnOperators","sortBy","isFromGroup","sortByForeignKey","direction","sorts","temp","order","isNullOrUndefined","endsWith","replace","fnSort","filterQueries","i","length","j","sortByDesc","group","format","page","pageIndex","pageSize","range","start","end","take","nos","skip","select","hierarchy","query","selectorFn","foreignKey","requiresCount","aggregate","type","name","filter","q","filterQueryLists","singles","filtered","indexOf","res","isComplex","processOperator","condition","predicates","apply","and","args","_i","arguments","combinePredicates","combine","or","ornot","andnot","fromJson","json","len","fromJSONData","pred","validate","record","ret","isAnd","split","undefined","getObject","toJson","p","preds","consts","GroupGuid","getValue","inst","input","substr","notEndsWith","startsWith","notStartsWith","wildCard","pattern","asteriskSplit","join","charAt","RegExp","test","like","lastIndexOf","substring","fnAscending","fnDescending","x","y","localeCompare","extractFields","obj","newObj","setValue","jsonArray","newData","aggregates","level","groupDs","isLazyLoad","jsonData","this_1","items","count","indx","childLevels","grouped","groupedArray","records","this_2","val","getVal","tempObj","aggs","buildHierarchy","source","lookup","pKey","grp","result","fKeyData","getFieldList","prefix","copyObj","keys_1","keys","prop","nameSpace","lowerCaseNameSpace","upperCaseNameSpace","toUpperCase","splits","casing","toString","fromObj","sort","ds","middle","parseInt","left","right","merge","ignoreDiacritics","map","diacritics","current","shift","array","index","callAdaptorFunction","adaptor","fnName","param1","param2","getAddParams","adp","dm","req","reqParams","isPlainObject","constructor","isCors","xhr","window","getGuid","rand","crypto","arr","Uint8Array","getRandomValues","Math","random","isNull","getItemFromComparer","keyVal","castRequired","requiresCompleteRecord","tmp","forEach","data","processData","prepareQuery","sampledata","DataManager","requiresCounts","returnValue","JSON","stringify","_this","parse","parseJson","predicateList","concat","getPredicate","sorted","mainPred","childPred","cpre","_a","serverTimezoneOffset","timeZoneHandling","error","Error","message","stack","sum","isNaN","average","min","max","truecount","falsecount","operatorSymbols","<",">","<=",">=","==","!=","*=","$=","^=","odBiOperator","lessthan","lessthanorequal","greaterthan","greaterthanorequal","equal","notequal","odUniOperator","endswith","startswith","contains","doesnotendwith","doesnotstartwith","doesnotcontain","wildcard","odv4UniOperator","Ⓐ","Ａ","À","Á","Â","Ầ","Ấ","Ẫ","Ẩ","Ã","Ā","Ă","Ằ","Ắ","Ẵ","Ẳ","Ȧ","Ǡ","Ä","Ǟ","Ả","Å","Ǻ","Ǎ","Ȁ","Ȃ","Ạ","Ậ","Ặ","Ḁ","Ą","Ⱥ","Ɐ","Ꜳ","Æ","Ǽ","Ǣ","Ꜵ","Ꜷ","Ꜹ","Ꜻ","Ꜽ","Ⓑ","Ｂ","Ḃ","Ḅ","Ḇ","Ƀ","Ƃ","Ɓ","Ⓒ","Ｃ","Ć","Ĉ","Ċ","Č","Ç","Ḉ","Ƈ","Ȼ","Ꜿ","Ⓓ","Ｄ","Ḋ","Ď","Ḍ","Ḑ","Ḓ","Ḏ","Đ","Ƌ","Ɗ","Ɖ","Ꝺ","Ǳ","Ǆ","ǲ","ǅ","Ⓔ","Ｅ","È","É","Ê","Ề","Ế","Ễ","Ể","Ẽ","Ē","Ḕ","Ḗ","Ĕ","Ė","Ë","Ẻ","Ě","Ȅ","Ȇ","Ẹ","Ệ","Ȩ","Ḝ","Ę","Ḙ","Ḛ","Ɛ","Ǝ","Ⓕ","Ｆ","Ḟ","Ƒ","Ꝼ","Ⓖ","Ｇ","Ǵ","Ĝ","Ḡ","Ğ","Ġ","Ǧ","Ģ","Ǥ","Ɠ","Ꞡ","Ᵹ","Ꝿ","Ⓗ","Ｈ","Ĥ","Ḣ","Ḧ","Ȟ","Ḥ","Ḩ","Ḫ","Ħ","Ⱨ","Ⱶ","Ɥ","Ⓘ","Ｉ","Ì","Í","Î","Ĩ","Ī","Ĭ","İ","Ï","Ḯ","Ỉ","Ǐ","Ȉ","Ȋ","Ị","Į","Ḭ","Ɨ","Ⓙ","Ｊ","Ĵ","Ɉ","Ⓚ","Ｋ","Ḱ","Ǩ","Ḳ","Ķ","Ḵ","Ƙ","Ⱪ","Ꝁ","Ꝃ","Ꝅ","Ꞣ","Ⓛ","Ｌ","Ŀ","Ĺ","Ľ","Ḷ","Ḹ","Ļ","Ḽ","Ḻ","Ł","Ƚ","Ɫ","Ⱡ","Ꝉ","Ꝇ","Ꞁ","Ǉ","ǈ","Ⓜ","Ｍ","Ḿ","Ṁ","Ṃ","Ɱ","Ɯ","Ⓝ","Ｎ","Ǹ","Ń","Ñ","Ṅ","Ň","Ṇ","Ņ","Ṋ","Ṉ","Ƞ","Ɲ","Ꞑ","Ꞥ","Ǌ","ǋ","Ⓞ","Ｏ","Ò","Ó","Ô","Ồ","Ố","Ỗ","Ổ","Õ","Ṍ","Ȭ","Ṏ","Ō","Ṑ","Ṓ","Ŏ","Ȯ","Ȱ","Ö","Ȫ","Ỏ","Ő","Ǒ","Ȍ","Ȏ","Ơ","Ờ","Ớ","Ỡ","Ở","Ợ","Ọ","Ộ","Ǫ","Ǭ","Ø","Ǿ","Ɔ","Ɵ","Ꝋ","Ꝍ","Ƣ","Ꝏ","Ȣ","Ⓟ","Ｐ","Ṕ","Ṗ","Ƥ","Ᵽ","Ꝑ","Ꝓ","Ꝕ","Ⓠ","Ｑ","Ꝗ","Ꝙ","Ɋ","Ⓡ","Ｒ","Ŕ","Ṙ","Ř","Ȑ","Ȓ","Ṛ","Ṝ","Ŗ","Ṟ","Ɍ","Ɽ","Ꝛ","Ꞧ","Ꞃ","Ⓢ","Ｓ","ẞ","Ś","Ṥ","Ŝ","Ṡ","Š","Ṧ","Ṣ","Ṩ","Ș","Ş","Ȿ","Ꞩ","Ꞅ","Ⓣ","Ｔ","Ṫ","Ť","Ṭ","Ț","Ţ","Ṱ","Ṯ","Ŧ","Ƭ","Ʈ","Ⱦ","Ꞇ","Ꜩ","Ⓤ","Ｕ","Ù","Ú","Û","Ũ","Ṹ","Ū","Ṻ","Ŭ","Ü","Ǜ","Ǘ","Ǖ","Ǚ","Ủ","Ů","Ű","Ǔ","Ȕ","Ȗ","Ư","Ừ","Ứ","Ữ","Ử","Ự","Ụ","Ṳ","Ų","Ṷ","Ṵ","Ʉ","Ⓥ","Ｖ","Ṽ","Ṿ","Ʋ","Ꝟ","Ʌ","Ꝡ","Ⓦ","Ｗ","Ẁ","Ẃ","Ŵ","Ẇ","Ẅ","Ẉ","Ⱳ","Ⓧ","Ｘ","Ẋ","Ẍ","Ⓨ","Ｙ","Ỳ","Ý","Ŷ","Ỹ","Ȳ","Ẏ","Ÿ","Ỷ","Ỵ","Ƴ","Ɏ","Ỿ","Ⓩ","Ｚ","Ź","Ẑ","Ż","Ž","Ẓ","Ẕ","Ƶ","Ȥ","Ɀ","Ⱬ","Ꝣ","ⓐ","ａ","ẚ","à","á","â","ầ","ấ","ẫ","ẩ","ã","ā","ă","ằ","ắ","ẵ","ẳ","ȧ","ǡ","ä","ǟ","ả","å","ǻ","ǎ","ȁ","ȃ","ạ","ậ","ặ","ḁ","ą","ⱥ","ɐ","ꜳ","æ","ǽ","ǣ","ꜵ","ꜷ","ꜹ","ꜻ","ꜽ","ⓑ","ｂ","ḃ","ḅ","ḇ","ƀ","ƃ","ɓ","ⓒ","ｃ","ć","ĉ","ċ","č","ç","ḉ","ƈ","ȼ","ꜿ","ↄ","ⓓ","ｄ","ḋ","ď","ḍ","ḑ","ḓ","ḏ","đ","ƌ","ɖ","ɗ","ꝺ","ǳ","ǆ","ⓔ","ｅ","è","é","ê","ề","ế","ễ","ể","ẽ","ē","ḕ","ḗ","ĕ","ė","ë","ẻ","ě","ȅ","ȇ","ẹ","ệ","ȩ","ḝ","ę","ḙ","ḛ","ɇ","ɛ","ǝ","ⓕ","ｆ","ḟ","ƒ","ꝼ","ⓖ","ｇ","ǵ","ĝ","ḡ","ğ","ġ","ǧ","ģ","ǥ","ɠ","ꞡ","ᵹ","ꝿ","ⓗ","ｈ","ĥ","ḣ","ḧ","ȟ","ḥ","ḩ","ḫ","ẖ","ħ","ⱨ","ⱶ","ɥ","ƕ","ⓘ","ｉ","ì","í","î","ĩ","ī","ĭ","ï","ḯ","ỉ","ǐ","ȉ","ȋ","ị","į","ḭ","ɨ","ı","ⓙ","ｊ","ĵ","ǰ","ɉ","ⓚ","ｋ","ḱ","ǩ","ḳ","ķ","ḵ","ƙ","ⱪ","ꝁ","ꝃ","ꝅ","ꞣ","ⓛ","ｌ","ŀ","ĺ","ľ","ḷ","ḹ","ļ","ḽ","ḻ","ſ","ł","ƚ","ɫ","ⱡ","ꝉ","ꞁ","ꝇ","ǉ","ⓜ","ｍ","ḿ","ṁ","ṃ","ɱ","ɯ","ⓝ","ｎ","ǹ","ń","ñ","ṅ","ň","ṇ","ņ","ṋ","ṉ","ƞ","ɲ","ŉ","ꞑ","ꞥ","ǌ","ⓞ","ｏ","ò","ó","ô","ồ","ố","ỗ","ổ","õ","ṍ","ȭ","ṏ","ō","ṑ","ṓ","ŏ","ȯ","ȱ","ö","ȫ","ỏ","ő","ǒ","ȍ","ȏ","ơ","ờ","ớ","ỡ","ở","ợ","ọ","ộ","ǫ","ǭ","ø","ǿ","ɔ","ꝋ","ꝍ","ɵ","ƣ","ȣ","ꝏ","ⓟ","ｐ","ṕ","ṗ","ƥ","ᵽ","ꝑ","ꝓ","ꝕ","ⓠ","ｑ","ɋ","ꝗ","ꝙ","ⓡ","ｒ","ŕ","ṙ","ř","ȑ","ȓ","ṛ","ṝ","ŗ","ṟ","ɍ","ɽ","ꝛ","ꞧ","ꞃ","ⓢ","ｓ","ß","ś","ṥ","ŝ","ṡ","š","ṧ","ṣ","ṩ","ș","ş","ȿ","ꞩ","ꞅ","ẛ","ⓣ","ｔ","ṫ","ẗ","ť","ṭ","ț","ţ","ṱ","ṯ","ŧ","ƭ","ʈ","ⱦ","ꞇ","ꜩ","ⓤ","ｕ","ù","ú","û","ũ","ṹ","ū","ṻ","ŭ","ü","ǜ","ǘ","ǖ","ǚ","ủ","ů","ű","ǔ","ȕ","ȗ","ư","ừ","ứ","ữ","ử","ự","ụ","ṳ","ų","ṷ","ṵ","ʉ","ⓥ","ｖ","ṽ","ṿ","ʋ","ꝟ","ʌ","ꝡ","ⓦ","ｗ","ẁ","ẃ","ŵ","ẇ","ẅ","ẘ","ẉ","ⱳ","ⓧ","ｘ","ẋ","ẍ","ⓨ","ｙ","ỳ","ý","ŷ","ỹ","ȳ","ẏ","ÿ","ỷ","ẙ","ỵ","ƴ","ɏ","ỿ","ⓩ","ｚ","ź","ẑ","ż","ž","ẓ","ẕ","ƶ","ȥ","ɀ","ⱬ","ꝣ","Ά","Έ","Ή","Ί","Ϊ","Ό","Ύ","Ϋ","Ώ","ά","έ","ή","ί","ϊ","ΐ","ό","ύ","ϋ","ΰ","ω","ς","actual","expected","isnotnull","isnull","isempty","isnotempty","processSymbols","jsonText","iterateAndReviveArray","iterateAndReviveJson","jsonReviver","keys_2","ms","exec","offSet","dateParse","toTimeZone","Date","isUTC","secondsMs","getUTCMilliseconds","utcFormat","hrs","mins","setHours","getHours","getMinutes","addSelfOffset","isJson","isGuid","replacer","jsonReplacer","arrayReplacer","keys_3","d","toJSON","date","jsonDateReplacer","getTimezoneOffset","toUTC","offset","utc","unix","toLocalTime","datefn","timeZone","differenceString","localtimefn","num","norm","floor","abs","getFullYear","getMonth","getDate","getSeconds","__extends","extendStatics","b","setPrototypeOf","__proto__","hasOwnProperty","__","create","Adaptor","options","requestType","dataSource","pvt","processResponse","JsonAdaptor","_super","processQuery","countFlg","keyCount","agg","isGroupByFormat","unshift","lazyLoadData","lazyLoadGroup","getAggregate","onDemandGroupInfo","field_1","onSortBy","onPage","formGroupResult","onWhere","aggQuery","batchRequest","changes","deletedRecordsLen","deletedRecords","addedRecords","insert","changedRecords","update","remove","onAggregates","onSearch","isLazyLoadGroupSort","fnCompare","onGroup","size","onRange","onTake","onSkip","onSelect","position","splice","keyField","UrlAdaptor","hierarchyFilters","getQueryRequest","url","request","groups","filters","searches","getFiltersFrom","getModuleName","getRequestQuery","pvtData","contentType","convertToQueryString","request1","selects","headers","handleTimeZone","requests","action","isExpand","isArray","formRemoteGroupedData","getAggregateResult","childLevel","getGroupedRecords","hasRecords","childGroupedRecords","original","batchUrl","crudUrl","removeUrl","dataType","extend","changed","added","deleted","table","beforeSend","settings","insertUrl","keyColumn","updateUrl","predicats","pData","aggregateData","isServerGrouping","groupQuery","ODataAdaptor","props","accept","multipartAccept","batch","changeSet","batchPre","contentId","batchContent","changeSetContent","batchChangeSetContentType","updateType","onPredicate","requiresCast","guid","getField","encodeURIComponent","splittedStringValue","splittedValue","onComplexPredicate","onEachWhere","onEachSearch","onEachSort","reverse","onCount","set","rootUrl","dataUrls","resourceTableName","dataCopy","results","emptyAndBatch","processBatchResponse","versionCheck","fetchRequest","version","requiresFormat","keys_4","localTimeReplacer","convertObj","localTime","compareAndRemove","initialGuid","cid","cSet","generateInsertRequest","generateUpdateRequest","generateDeleteRequest","stat","method","generateBodyContent","org","change","o","cIdx","jsonObj","exVal","changeGuid","valueOf","ODataV4Adaptor","isDate","onExpand","selected","expanded","exArr","item","sel","exp","close_1","combineVal","expandQueryIndex","idx","ex","onDistinct","distinctFields","dataUrl","WebApiAdaptor","location","host","state","mtd","Count","Items","WebMethodAdaptor","param","RemoteSaveAdaptor","updateKey","CustomDataAdaptor","getData","Function","addRecord","updateRecord","deleteRecord","batchUpdate","GraphQLAdaptor","opt","schema","response","getVariables","getQuery","datamanager","urlQuery","vars","variables","resData","inserted","generateCrudData","bData","crudData","parsed","getMutation","CacheAdaptor","timeStamp","isCrudAction","isInsertAction","cacheAdaptor","guidId","localStorage","setItem","setInterval","getItem","forDel","currentTime","requestTime","removeItem","generateKey","currentFilter","newQuery","cachedItems","crossDomain","persistQuery","isInitialLoad","offline","enablePersistence","id","ignoreOnPersist","timeTillExpiration","cachingPageSize","enableCaching","jsonp","defaultQuery","addEventListener","setPersistData","bind","isDataAvailable","ready","then","getPersistedData","persistedData","persistData","setPersistQuery","persistedQuery","some","keyword","allPredicates","predicateObj","nestedPredicates","nestedPredicate","setDefaultQuery","deffered","Deferred","isCustomDataAdaptor","makeRequest","getDeferedArgs","resolve","nextTick","promise","setImmediate","setTimeout","extendRequest","fnSuccess","fnFail","cache","onSuccess","onFailure","isSelector","reject","process","virtualSelectRecords","fnQueryChild","selector","subDeffer","childArgs","parent","subUrl","childReq","subData","isGraphQLAdaptor","fetchReqOption","virtualRecords","fetch_1","Fetch","send","catch","Promise","all","pResult","cResult","saveChanges","dofetchRequest","deff_1","fetch_2","successFunc","failureFunc","fetchDeffered","fetchFunc","fetch_3","clearPersistence","removeEventListener"],"mappings":"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AAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,KACVC,IAAU,KACVC,IAAU,KACVC,IAAU,KACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,KACVC,IAAU,KACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,KACVC,IAAU,KACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,KACVC,IAAU,KACVC,IAAU,KACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,KACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,KACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,KACVC,IAAU,KACVC,IAAU,KACVC,IAAU,KACVC,IAAU,KACVC,IAAU,KACVC,IAAU,KACVC,IAAU,KACVC,IAAU,KACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,KACVC,IAAU,KACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,KACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,KACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,KACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,KACVC,IAAU,KACVC,IAAU,KACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,KACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,KACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IAC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"}