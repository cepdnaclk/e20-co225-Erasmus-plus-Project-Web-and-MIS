{"version":3,"file":"ej2-excel-export.min.js","sources":["../../src/cell-style.js","../../src/cell.js","../../src/column.js","../../src/row.js","../../src/worksheets.js","../../src/worksheet.js","../../src/image.js","../../src/value-formatter.js","../../src/csv-helper.js","../../src/blob-helper.js","../../src/auto-filters.js","../../src/workbook.js"],"sourcesContent":["/**\n * CellStyle class\n * @private\n */\n/* eslint-disable */\nvar CellStyle = /** @class */ (function () {\n    function CellStyle() {\n        this.numFmtId = 0;\n        this.backColor = 'none';\n        this.fontName = 'Calibri';\n        this.fontSize = 10.5;\n        this.fontColor = '#000000';\n        this.italic = false;\n        this.bold = false;\n        this.underline = false;\n        this.strikeThrough = false;\n        this.wrapText = false;\n        this.hAlign = 'general';\n        this.vAlign = 'bottom';\n        this.indent = 0;\n        this.rotation = 0;\n        this.numberFormat = 'GENERAL';\n        this.type = 'datetime';\n        this.borders = new Borders();\n        this.isGlobalStyle = false;\n    }\n    return CellStyle;\n}());\nexport { CellStyle };\n/**\n * Font Class\n * @private\n */\nvar Font = /** @class */ (function () {\n    function Font() {\n        this.sz = 10.5;\n        this.name = 'Calibri';\n        this.u = false;\n        this.b = false;\n        this.i = false;\n        this.color = 'FF000000';\n        this.strike = false;\n    }\n    return Font;\n}());\nexport { Font };\n/**\n * CellXfs class\n * @private\n */\nvar CellXfs = /** @class */ (function () {\n    function CellXfs() {\n    }\n    return CellXfs;\n}());\nexport { CellXfs };\n/**\n * Alignment class\n * @private\n */\nvar Alignment = /** @class */ (function () {\n    function Alignment() {\n    }\n    return Alignment;\n}());\nexport { Alignment };\n/**\n * CellStyleXfs class\n * @private\n */\nvar CellStyleXfs = /** @class */ (function () {\n    function CellStyleXfs() {\n    }\n    return CellStyleXfs;\n}());\nexport { CellStyleXfs };\n/**\n * CellStyles class\n * @private\n */\nvar CellStyles = /** @class */ (function () {\n    function CellStyles() {\n        this.name = 'Normal';\n        this.xfId = 0;\n    }\n    return CellStyles;\n}());\nexport { CellStyles };\n/**\n * NumFmt class\n * @private\n */\nvar NumFmt = /** @class */ (function () {\n    function NumFmt(id, code) {\n        this.numFmtId = id;\n        this.formatCode = code;\n    }\n    return NumFmt;\n}());\nexport { NumFmt };\n/**\n * Border class\n * @private\n */\nvar Border = /** @class */ (function () {\n    function Border(mLine, mColor) {\n        this.lineStyle = mLine;\n        this.color = mColor;\n    }\n    return Border;\n}());\nexport { Border };\n/**\n * Borders class\n * @private\n */\nvar Borders = /** @class */ (function () {\n    function Borders() {\n        this.left = new Border('none', '#FFFFFF');\n        this.right = new Border('none', '#FFFFFF');\n        this.top = new Border('none', '#FFFFFF');\n        this.bottom = new Border('none', '#FFFFFF');\n        this.all = new Border('none', '#FFFFFF');\n    }\n    return Borders;\n}());\nexport { Borders };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * Worksheet class\n * @private\n */\n/* eslint-disable */\nvar Cell = /** @class */ (function () {\n    function Cell() {\n    }\n    return Cell;\n}());\nexport { Cell };\n/**\n * Cells class\n * @private\n */\nvar Cells = /** @class */ (function (_super) {\n    __extends(Cells, _super);\n    function Cells() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.add = function (cell) {\n            var inserted = false;\n            var count = 0;\n            for (var _i = 0, _a = _this; _i < _a.length; _i++) {\n                var c = _a[_i];\n                if (c.index === cell.index) {\n                    _this[count] = cell;\n                    inserted = true;\n                }\n                count++;\n            }\n            if (!inserted) {\n                _this.push(cell);\n            }\n        };\n        return _this;\n    }\n    return Cells;\n}(Array));\nexport { Cells };\n","/**\n * Column class\n * @private\n */\n/* eslint-disable */\nvar Column = /** @class */ (function () {\n    function Column() {\n    }\n    return Column;\n}());\nexport { Column };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * Row class\n * @private\n */\n/* eslint-disable */\nvar Row = /** @class */ (function () {\n    function Row() {\n    }\n    return Row;\n}());\nexport { Row };\n/**\n * Rows class\n * @private\n */\nvar Rows = /** @class */ (function (_super) {\n    __extends(Rows, _super);\n    function Rows() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.add = function (row) {\n            _this.push(row);\n        };\n        return _this;\n    }\n    return Rows;\n}(Array));\nexport { Rows };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * Worksheets class\n * @private\n */\n/* eslint-disable */\nvar Worksheets = /** @class */ (function (_super) {\n    __extends(Worksheets, _super);\n    function Worksheets() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    return Worksheets;\n}(Array));\nexport { Worksheets };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * Worksheet class\n * @private\n */\n/* eslint-disable */\nvar Worksheet = /** @class */ (function () {\n    function Worksheet() {\n        this.isSummaryRowBelow = true;\n        this.showGridLines = true;\n        this.enableRtl = false;\n    }\n    return Worksheet;\n}());\nexport { Worksheet };\n/**\n * Hyperlink class\n * @private\n */\nvar HyperLink = /** @class */ (function () {\n    function HyperLink() {\n    }\n    return HyperLink;\n}());\nexport { HyperLink };\n/**\n * Grouping class\n * @private\n */\nvar Grouping = /** @class */ (function () {\n    function Grouping() {\n    }\n    return Grouping;\n}());\nexport { Grouping };\n/**\n * FreezePane class\n * @private\n */\nvar FreezePane = /** @class */ (function () {\n    function FreezePane() {\n    }\n    return FreezePane;\n}());\nexport { FreezePane };\n/**\n * MergeCell\n * @private\n */\nvar MergeCell = /** @class */ (function () {\n    function MergeCell() {\n    }\n    return MergeCell;\n}());\nexport { MergeCell };\n/**\n * MergeCells class\n * @private\n */\nvar MergeCells = /** @class */ (function (_super) {\n    __extends(MergeCells, _super);\n    function MergeCells() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.add = function (mergeCell) {\n            var inserted = false;\n            var count = 0;\n            for (var _i = 0, _a = _this; _i < _a.length; _i++) {\n                var mCell = _a[_i];\n                if (MergeCells.isIntersecting(mCell, mergeCell)) {\n                    var intersectingCell = new MergeCell();\n                    intersectingCell.x = Math.min(mCell.x, mergeCell.x);\n                    intersectingCell.y = Math.min(mCell.Y, mergeCell.y);\n                    intersectingCell.width = Math.max(mCell.Width + mCell.X, mergeCell.width + mergeCell.x);\n                    intersectingCell.height = Math.max(mCell.Height + mCell.Y, mergeCell.height + mergeCell.y);\n                    intersectingCell.ref = (_this[count].ref.split(':')[0]) + ':' + (mergeCell.ref.split(':')[1]);\n                    _this[count] = intersectingCell;\n                    mergeCell = intersectingCell;\n                    inserted = true;\n                }\n                count++;\n            }\n            if (!inserted) {\n                _this.push(mergeCell);\n            }\n            return mergeCell;\n        };\n        return _this;\n    }\n    MergeCells.isIntersecting = function (base, compare) {\n        return (base.x <= compare.x + compare.width)\n            && (compare.x <= base.x + base.width)\n            && (base.y <= compare.y + compare.height)\n            && (compare.y <= base.y + base.height);\n    };\n    return MergeCells;\n}(Array));\nexport { MergeCells };\n","/**\n * Image class\n * @private\n */\n/* eslint-disable */\nvar Image = /** @class */ (function () {\n    function Image() {\n    }\n    return Image;\n}());\nexport { Image };\n","import { isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { Internationalization } from '@syncfusion/ej2-base';\n// import { IValueFormatter } from '../base/interface';\n/**\n * ValueFormatter class to globalize the value.\n * @private\n */\n/* eslint-disable */\nvar ValueFormatter = /** @class */ (function () {\n    function ValueFormatter(cultureName) {\n        this.intl = new Internationalization();\n        // if (!isNullOrUndefined(cultureName)) {\n        //     this.intl.culture = cultureName;\n        // }\n    }\n    ValueFormatter.prototype.getFormatFunction = function (format, isServerRendered) {\n        if (format.type) {\n            if (isServerRendered) {\n                format.isServerRendered = true;\n            }\n            return this.intl.getDateFormat(format);\n        }\n        else {\n            return this.intl.getNumberFormat(format);\n        }\n    };\n    // public getParserFunction(format: NumberFormatOptions | DateFormatOptions): Function {\n    //     if ((<DateFormatOptions>format).type) {\n    //         return this.intl.getDateParser(<DateFormatOptions>format);\n    //     } else {\n    //         return this.intl.getNumberParser(<DateFormatOptions>format);\n    //     }\n    // }\n    // public fromView(value: string, format: Function, type?: string): string | number | Date {\n    //     if (type === 'date' || type === 'datetime' || type === 'number') {\n    //         return format(value);\n    //     } else {\n    //         return value;\n    //     }\n    // }\n    ValueFormatter.prototype.toView = function (value, format) {\n        var result = value;\n        if (!isNullOrUndefined(format) && !isNullOrUndefined(value)) {\n            result = format(value);\n        }\n        return result;\n    };\n    // public setCulture(cultureName: string): void {\n    //     if (!isNullOrUndefined(cultureName)) {\n    //         setCulture(cultureName);\n    //     }\n    // }\n    /* tslint:disable:no-any */\n    ValueFormatter.prototype.displayText = function (value, format, isServerRendered) {\n        return this.toView(value, this.getFormatFunction(format, isServerRendered));\n    };\n    return ValueFormatter;\n}());\nexport { ValueFormatter };\n","import { ValueFormatter } from './value-formatter';\nimport { Encoding } from '@syncfusion/ej2-file-utils';\n/**\n * CsvHelper class\n * @private\n */\n/* eslint-disable */\nvar CsvHelper = /** @class */ (function () {\n    /* tslint:disable:no-any */\n    function CsvHelper(json, separator) {\n        this.csvStr = '';\n        if (separator === null || separator === undefined) {\n            this.separator = ',';\n        }\n        else {\n            this.separator = separator;\n        }\n        this.formatter = new ValueFormatter();\n        this.isMicrosoftBrowser = !(!navigator.msSaveBlob);\n        if (json.isServerRendered !== null && json.isServerRendered !== undefined) {\n            this.isServerRendered = json.isServerRendered;\n        }\n        if (json.styles !== null && json.styles !== undefined) {\n            this.globalStyles = new Map();\n            for (var i = 0; i < json.styles.length; i++) {\n                if (json.styles[i].name !== undefined && json.styles[i].numberFormat !== undefined) {\n                    this.globalStyles.set(json.styles[i].name, json.styles[i].numberFormat);\n                }\n            }\n        }\n        // Parses Worksheets data to DOM.        \n        if (json.worksheets !== null && json.worksheets !== undefined) {\n            this.parseWorksheet(json.worksheets[0]);\n        }\n        //this.csvStr = 'a1,a2,a3\\nb1,b2,b3';\n    }\n    CsvHelper.prototype.parseWorksheet = function (json) {\n        //Rows\n        if (json.rows !== null && json.rows !== undefined) {\n            this.parseRows(json.rows);\n        }\n    };\n    /* tslint:disable:no-any */\n    CsvHelper.prototype.parseRows = function (rows) {\n        var count = 1;\n        for (var _i = 0, rows_1 = rows; _i < rows_1.length; _i++) {\n            var row = rows_1[_i];\n            //Row index\n            if (row.index !== null && row.index !== undefined) {\n                while (count < row.index) {\n                    this.csvStr += '\\r\\n';\n                    count++;\n                }\n                this.parseRow(row);\n            }\n            else {\n                throw Error('Row index is missing.');\n            }\n        }\n        this.csvStr += '\\r\\n';\n    };\n    /* tslint:disable:no-any */\n    CsvHelper.prototype.parseRow = function (row) {\n        if (row.cells !== null && row.cells !== undefined) {\n            var count = 1;\n            for (var _i = 0, _a = row.cells; _i < _a.length; _i++) {\n                var cell = _a[_i];\n                //cell index\n                if (cell.index !== null && cell.index !== undefined) {\n                    while (count < cell.index) {\n                        this.csvStr += this.separator;\n                        count++;\n                    }\n                    this.parseCell(cell);\n                }\n                else {\n                    throw Error('Cell index is missing.');\n                }\n            }\n        }\n    };\n    /* tslint:disable:no-any */\n    CsvHelper.prototype.parseCell = function (cell) {\n        var csv = this.csvStr;\n        if (cell.value !== undefined) {\n            if (cell.value instanceof Date) {\n                if (cell.style !== undefined && cell.style.numberFormat !== undefined) {\n                    /* tslint:disable-next-line:max-line-length */\n                    try {\n                        csv += this.parseCellValue(this.formatter.displayText(cell.value, { type: 'dateTime', skeleton: cell.style.numberFormat }, this.isServerRendered));\n                    }\n                    catch (error) {\n                        /* tslint:disable-next-line:max-line-length */\n                        csv += this.parseCellValue(this.formatter.displayText(cell.value, { type: 'dateTime', format: cell.style.numberFormat }, this.isServerRendered));\n                    }\n                }\n                else if (cell.style !== undefined && cell.style.name !== undefined && this.globalStyles.has(cell.style.name)) {\n                    /* tslint:disable-next-line:max-line-length */\n                    try {\n                        csv += this.parseCellValue(this.formatter.displayText(cell.value, { type: 'dateTime', skeleton: this.globalStyles.get(cell.style.name) }, this.isServerRendered));\n                    }\n                    catch (error) {\n                        /* tslint:disable-next-line:max-line-length */\n                        csv += this.parseCellValue(this.formatter.displayText(cell.value, { type: 'dateTime', format: this.globalStyles.get(cell.style.name) }, this.isServerRendered));\n                    }\n                }\n                else {\n                    csv += cell.value;\n                }\n            }\n            else if (typeof (cell.value) === 'boolean') {\n                csv += cell.value ? 'TRUE' : 'FALSE';\n            }\n            else if (typeof (cell.value) === 'number') {\n                if (cell.style !== undefined && cell.style.numberFormat !== undefined) {\n                    /* tslint:disable-next-line:max-line-length */\n                    csv += this.parseCellValue(this.formatter.displayText(cell.value, { format: cell.style.numberFormat, ignoreCurrency: true }, this.isServerRendered));\n                }\n                else if (cell.style !== undefined && cell.style.name !== undefined && this.globalStyles.has(cell.style.name)) {\n                    /* tslint:disable-next-line:max-line-length */\n                    csv += this.parseCellValue(this.formatter.displayText(cell.value, { format: this.globalStyles.get(cell.style.name), ignoreCurrency: true }, this.isServerRendered));\n                }\n                else {\n                    csv += cell.value;\n                }\n            }\n            else {\n                csv += this.parseCellValue(cell.value);\n            }\n        }\n        this.csvStr = csv;\n    };\n    CsvHelper.prototype.parseCellValue = function (value) {\n        var val = '';\n        var length = value.length;\n        for (var start = 0; start < length; start++) {\n            if (value[start] === '\\\"') {\n                val += value[start].replace('\\\"', '\\\"\\\"');\n            }\n            else {\n                val += value[start];\n            }\n        }\n        value = val;\n        if (value.indexOf(this.separator) !== -1 || value.indexOf('\\n') !== -1 || value.indexOf('\\\"') !== -1) {\n            return value = '\\\"' + value + '\\\"';\n        }\n        else {\n            return value;\n        }\n    };\n    /**\n     * Saves the file with specified name and sends the file to client browser\n     * @param  {string} fileName- file name to save.\n     * @param  {Blob} buffer- the content to write in file\n     */\n    CsvHelper.prototype.save = function (fileName) {\n        this.buffer = new Blob(['\\ufeff' + this.csvStr], { type: 'text/csv;charset=UTF-8' });\n        if (this.isMicrosoftBrowser) {\n            navigator.msSaveBlob(this.buffer, fileName);\n        }\n        else {\n            var dataUrl_1 = window.URL.createObjectURL(this.buffer);\n            var dwlLink = document.createElementNS('http://www.w3.org/1999/xhtml', 'a');\n            dwlLink.download = fileName;\n            dwlLink.href = dataUrl_1;\n            var event_1 = document.createEvent('MouseEvent');\n            event_1.initEvent('click', true, true);\n            dwlLink.dispatchEvent(event_1);\n            setTimeout(function () {\n                window.URL.revokeObjectURL(dataUrl_1);\n            });\n        }\n    };\n    /**\n    * Returns a Blob object containing CSV data with optional encoding.\n    * @param {string} [encodingType] - The supported encoding types are \"ansi\", \"unicode\" and \"utf8\".\n    */\n    /* tslint:disable:no-any */\n    CsvHelper.prototype.saveAsBlob = function (encodingType) {\n        if (encodingType != undefined) {\n            var encoding = new Encoding();\n            var encodeString = 'UTF-8';\n            if (encodingType.toUpperCase() == \"ANSI\") {\n                encoding.type = 'Ansi';\n                encodeString = 'ANSI';\n            }\n            else if (encodingType.toUpperCase() == \"UNICODE\") {\n                encoding.type = 'Unicode';\n                encodeString = 'UNICODE';\n            }\n            else {\n                encoding.type = 'Utf8';\n                encodeString = 'UTF-8';\n            }\n            var buffer = encoding.getBytes(this.csvStr, 0, this.csvStr.length);\n            return new Blob([buffer], { type: 'text/csv;charset=' + encodeString });\n        }\n        else\n            return new Blob(['\\ufeff' + this.csvStr], { type: 'text/csv;charset=UTF-8' });\n    };\n    return CsvHelper;\n}());\nexport { CsvHelper };\n","/**\n * BlobHelper class\n * @private\n */\n/* eslint-disable */\nvar BlobHelper = /** @class */ (function () {\n    function BlobHelper() {\n        /* tslint:disable:no-any */\n        this.parts = [];\n    }\n    /* tslint:disable:no-any */\n    BlobHelper.prototype.append = function (part) {\n        this.parts.push(part);\n        this.blob = undefined; // Invalidate the blob\n    };\n    BlobHelper.prototype.getBlob = function () {\n        return new Blob(this.parts, { type: 'text/plain' });\n    };\n    return BlobHelper;\n}());\nexport { BlobHelper };\n","/**\n * AutoFilters class\n * @private\n */\n/* eslint-disable */\nvar AutoFilters = /** @class */ (function () {\n    function AutoFilters() {\n    }\n    return AutoFilters;\n}());\nexport { AutoFilters };\n","import { Worksheets } from './worksheets';\nimport { Worksheet, FreezePane, MergeCell, MergeCells, HyperLink, Grouping } from './worksheet';\nimport { CellStyle, Font, Borders, CellXfs, Alignment, NumFmt, CellStyleXfs, CellStyles } from './cell-style';\nimport { Column } from './column';\nimport { Row, Rows } from './row';\nimport { Image } from './image';\nimport { Cell, Cells } from './cell';\nimport { ZipArchive, ZipArchiveItem } from '@syncfusion/ej2-compression';\nimport { CsvHelper } from './csv-helper';\nimport { Internationalization, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { BlobHelper } from './blob-helper';\nimport { AutoFilters } from './auto-filters';\n/**\n * Workbook class\n */\n/* eslint-disable */\nvar Workbook = /** @class */ (function () {\n    /* tslint:disable:no-any */\n    function Workbook(json, saveType, culture, currencyString, separator) {\n        this.sharedStringCount = 0;\n        this.unitsProportions = [\n            96 / 75.0,\n            96 / 300.0,\n            96,\n            96 / 25.4,\n            96 / 2.54,\n            1,\n            96 / 72.0,\n            96 / 72.0 / 12700,\n        ];\n        /* tslint:disable:no-any */\n        this.hyperlinkStyle = { fontColor: '#0000FF', underline: true };\n        if (culture !== undefined) {\n            this.culture = culture;\n        }\n        else {\n            this.culture = 'en-US';\n        }\n        if (currencyString !== undefined) {\n            this.currency = currencyString;\n        }\n        else {\n            this.currency = 'USD';\n        }\n        this.intl = new Internationalization(this.culture);\n        this.mSaveType = saveType;\n        if (saveType === 'xlsx') {\n            this.mArchive = new ZipArchive();\n            this.sharedString = [];\n            this.mFonts = [];\n            this.mBorders = [];\n            this.mStyles = [];\n            this.printTitles = new Map();\n            this.cellStyles = new Map();\n            this.mNumFmt = new Map();\n            this.mFills = new Map();\n            this.mStyles.push(new CellStyle());\n            this.mFonts.push(new Font());\n            /* tslint:disable */\n            this.cellStyles.set('Normal', new CellStyles());\n            /* tslint:enable */\n            this.mCellXfs = [];\n            this.mCellStyleXfs = [];\n            this.drawingCount = 0;\n            this.imageCount = 0;\n            if (json.styles !== null && json.styles !== undefined) {\n                /* tslint:disable-next-line:no-any */\n                this.globalStyles = new Map();\n                for (var i = 0; i < json.styles.length; i++) {\n                    if (json.styles[i].name !== undefined) {\n                        if (!this.cellStyles.has(json.styles[i].name)) {\n                            var cellStyle = new CellStyle();\n                            cellStyle.isGlobalStyle = true;\n                            this.parserCellStyle(json.styles[i], cellStyle, 'none');\n                            var cellStylesIn = new CellStyles();\n                            cellStylesIn.name = cellStyle.name;\n                            cellStylesIn.xfId = (cellStyle.index - 1);\n                            this.cellStyles.set(cellStylesIn.name, cellStylesIn);\n                            /* tslint:disable-next-line:no-any */\n                            var tFormat = {};\n                            if (json.styles[i].numberFormat !== undefined) {\n                                tFormat.format = json.styles[i].numberFormat;\n                            }\n                            if (json.styles[i].type !== undefined) {\n                                tFormat.type = json.styles[i].type;\n                            }\n                            else {\n                                tFormat.type = 'datetime';\n                            }\n                            if (tFormat.format !== undefined) {\n                                this.globalStyles.set(json.styles[i].name, tFormat);\n                            }\n                        }\n                        else {\n                            throw Error('Style name ' + json.styles[i].name + ' is already existed');\n                        }\n                    }\n                }\n            }\n            // Parses Worksheets data to DOM.        \n            if (json.worksheets !== null && json.worksheets !== undefined) {\n                this.parserWorksheets(json.worksheets);\n            }\n            else {\n                throw Error('Worksheet is expected.');\n            }\n            // Parses the BuiltInProperties data to DOM.        \n            if (json.builtInProperties !== null && json.builtInProperties !== undefined) {\n                this.builtInProperties = new BuiltInProperties();\n                this.parserBuiltInProperties(json.builtInProperties, this.builtInProperties);\n            }\n        }\n        else {\n            this.csvHelper = new CsvHelper(json, separator);\n        }\n    }\n    /* tslint:disable:no-any */\n    Workbook.prototype.parserBuiltInProperties = function (jsonBuiltInProperties, builtInProperties) {\n        //Author\n        if (jsonBuiltInProperties.author !== null && jsonBuiltInProperties.author !== undefined) {\n            builtInProperties.author = jsonBuiltInProperties.author;\n        }\n        //Comments\n        if (jsonBuiltInProperties.comments !== null && jsonBuiltInProperties.comments !== undefined) {\n            builtInProperties.comments = jsonBuiltInProperties.comments;\n        }\n        //Category\n        if (jsonBuiltInProperties.category !== null && jsonBuiltInProperties.category !== undefined) {\n            builtInProperties.category = jsonBuiltInProperties.category;\n        }\n        //Company\n        if (jsonBuiltInProperties.company !== null && jsonBuiltInProperties.company !== undefined) {\n            builtInProperties.company = jsonBuiltInProperties.company;\n        }\n        //Manager\n        if (jsonBuiltInProperties.manager !== null && jsonBuiltInProperties.manager !== undefined) {\n            builtInProperties.manager = jsonBuiltInProperties.manager;\n        }\n        //Subject\n        if (jsonBuiltInProperties.subject !== null && jsonBuiltInProperties.subject !== undefined) {\n            builtInProperties.subject = jsonBuiltInProperties.subject;\n        }\n        //Title\n        if (jsonBuiltInProperties.title !== null && jsonBuiltInProperties.title !== undefined) {\n            builtInProperties.title = jsonBuiltInProperties.title;\n        }\n        //Creation date\n        if (jsonBuiltInProperties.createdDate !== null && jsonBuiltInProperties.createdDate !== undefined) {\n            builtInProperties.createdDate = jsonBuiltInProperties.createdDate;\n        }\n        //Modified date\n        if (jsonBuiltInProperties.modifiedDate !== null && jsonBuiltInProperties.modifiedDate !== undefined) {\n            builtInProperties.modifiedDate = jsonBuiltInProperties.modifiedDate;\n        }\n        //Tags\n        if (jsonBuiltInProperties.tags !== null && jsonBuiltInProperties.tags !== undefined) {\n            builtInProperties.tags = jsonBuiltInProperties.tags;\n        }\n        //Status\n        if (jsonBuiltInProperties.status !== null && jsonBuiltInProperties.status !== undefined) {\n            builtInProperties.status = jsonBuiltInProperties.status;\n        }\n    };\n    /* tslint:disable:no-any */\n    Workbook.prototype.parserWorksheets = function (json) {\n        this.worksheets = new Worksheets();\n        var length = json.length;\n        for (var i = 0; i < length; i++) {\n            var jsonSheet = json[i];\n            var sheet = new Worksheet();\n            this.mergeCells = new MergeCells();\n            this.mergedCellsStyle = new Map();\n            this.mHyperLinks = [];\n            //Name\n            if (jsonSheet.name !== null && jsonSheet.name !== undefined) {\n                sheet.name = jsonSheet.name;\n            }\n            else {\n                sheet.name = 'Sheet' + (i + 1).toString();\n            }\n            if (jsonSheet.enableRtl !== null && jsonSheet.enableRtl !== undefined) {\n                sheet.enableRtl = jsonSheet.enableRtl;\n            }\n            sheet.index = (i + 1);\n            //Columns\n            if (jsonSheet.columns !== null && jsonSheet.columns !== undefined) {\n                this.parserColumns(jsonSheet.columns, sheet);\n            }\n            //Rows\n            if (jsonSheet.rows !== null && jsonSheet.rows !== undefined) {\n                this.parserRows(jsonSheet.rows, sheet);\n            }\n            //showGridLines\n            if (jsonSheet.showGridLines !== null && jsonSheet.showGridLines !== undefined) {\n                sheet.showGridLines = jsonSheet.showGridLines;\n            }\n            //FreezePanes\n            if (jsonSheet.freeze !== null && jsonSheet.freeze !== undefined) {\n                this.parserFreezePanes(jsonSheet.freeze, sheet);\n            }\n            //Print Title\n            if (jsonSheet.printTitle !== null && jsonSheet.printTitle !== undefined) {\n                this.parserPrintTitle(jsonSheet.printTitle, sheet);\n            }\n            if (jsonSheet.pageSetup !== undefined) {\n                if (jsonSheet.pageSetup.isSummaryRowBelow !== undefined) {\n                    sheet.isSummaryRowBelow = jsonSheet.pageSetup.isSummaryRowBelow;\n                }\n            }\n            if (jsonSheet.images !== undefined) {\n                this.parserImages(jsonSheet.images, sheet);\n            }\n            if (jsonSheet.autoFilters !== null && jsonSheet.autoFilters !== undefined) {\n                this.parseFilters(jsonSheet.autoFilters, sheet);\n            }\n            sheet.index = (i + 1);\n            sheet.mergeCells = this.mergeCells;\n            sheet.hyperLinks = this.mHyperLinks;\n            this.worksheets.push(sheet);\n        }\n    };\n    /* tslint:disable:no-any */\n    Workbook.prototype.mergeOptions = function (fromJson, toJson) {\n        /* tslint:disable:no-any */\n        var result = {};\n        this.applyProperties(fromJson, result);\n        this.applyProperties(toJson, result);\n        return result;\n    };\n    /* tslint:disable:no-any */\n    Workbook.prototype.applyProperties = function (sourceJson, destJson) {\n        var keys = Object.keys(sourceJson);\n        for (var index = 0; index < keys.length; index++) {\n            if (keys[index] !== 'name') {\n                destJson[keys[index]] = sourceJson[keys[index]];\n            }\n        }\n    };\n    Workbook.prototype.getCellName = function (row, column) {\n        return this.getColumnName(column) + row.toString();\n    };\n    Workbook.prototype.getColumnName = function (col) {\n        col--;\n        var strColumnName = '';\n        do {\n            var iCurrentDigit = col % 26;\n            col = col / 26 - 1;\n            strColumnName = String.fromCharCode(65 + iCurrentDigit) + strColumnName;\n        } while (col >= 0);\n        return strColumnName;\n    };\n    /* tslint:disable:no-any */\n    Workbook.prototype.parserPrintTitle = function (json, sheet) {\n        var printTitleName = '';\n        var titleRowName;\n        if (json.fromRow !== null && json.fromRow !== undefined) {\n            var fromRow = json.fromRow;\n            var toRow = void 0;\n            if (json.toRow !== null && json.toRow !== undefined) {\n                toRow = json.toRow;\n            }\n            else {\n                toRow = json.fromRow;\n            }\n            titleRowName = '$' + fromRow + ':$' + toRow;\n        }\n        var titleColName;\n        if (json.fromColumn !== null && json.fromColumn !== undefined) {\n            var fromColumn = json.fromColumn;\n            var toColumn = void 0;\n            if (json.toColumn !== null && json.toColumn !== undefined) {\n                toColumn = json.toColumn;\n            }\n            else {\n                toColumn = json.fromColumn;\n            }\n            titleColName = '$' + this.getColumnName(fromColumn) + ':$' + this.getColumnName(toColumn);\n        }\n        if (titleRowName !== undefined) {\n            printTitleName += (sheet.name + '!' + titleRowName);\n        }\n        if (titleColName !== undefined && titleRowName !== undefined) {\n            printTitleName += ',' + (sheet.name + '!' + titleColName);\n        }\n        else if (titleColName !== undefined) {\n            printTitleName += (sheet.name + '!' + titleColName);\n        }\n        if (printTitleName !== '') {\n            this.printTitles.set(sheet.index - 1, printTitleName);\n        }\n    };\n    /* tslint:disable:no-any */\n    Workbook.prototype.parserFreezePanes = function (json, sheet) {\n        sheet.freezePanes = new FreezePane();\n        if (json.row !== null && json.row !== undefined) {\n            sheet.freezePanes.row = json.row;\n        }\n        else {\n            sheet.freezePanes.row = 0;\n        }\n        if (json.column !== null && json.column !== undefined) {\n            sheet.freezePanes.column = json.column;\n        }\n        else {\n            sheet.freezePanes.column = 0;\n        }\n        sheet.freezePanes.leftCell = this.getCellName(sheet.freezePanes.row + 1, sheet.freezePanes.column + 1);\n    };\n    /* tslint:disable:no-any */\n    Workbook.prototype.parserColumns = function (json, sheet) {\n        var columnsLength = json.length;\n        sheet.columns = [];\n        for (var column = 0; column < columnsLength; column++) {\n            var col = new Column();\n            if (json[column].index !== null && json[column].index !== undefined) {\n                col.index = json[column].index;\n            }\n            else {\n                throw Error('Column index is missing.');\n            }\n            if (json[column].width !== null && json[column].width !== undefined) {\n                col.width = json[column].width;\n            }\n            sheet.columns.push(col);\n        }\n    };\n    /* tslint:disable:no-any */\n    Workbook.prototype.parserRows = function (json, sheet) {\n        var rowsLength = json.length;\n        sheet.rows = new Rows();\n        var rowId = 0;\n        for (var r = 0; r < rowsLength; r++) {\n            var row = this.parserRow(json[r], rowId);\n            rowId = row.index;\n            sheet.rows.add(row);\n        }\n        this.insertMergedCellsStyle(sheet);\n    };\n    Workbook.prototype.insertMergedCellsStyle = function (sheet) {\n        var _this = this;\n        if (this.mergeCells.length > 0) {\n            this.mergedCellsStyle.forEach(function (value, key) {\n                var row = sheet.rows.filter(function (item) {\n                    return item.index === value.y;\n                })[0];\n                if (!isNullOrUndefined(row)) {\n                    var cell = row.cells.filter(function (item) {\n                        return item.index === value.x;\n                    })[0];\n                    if (!isNullOrUndefined(cell)) {\n                        cell.styleIndex = value.styleIndex;\n                    }\n                    else {\n                        var cells = row.cells.filter(function (item) {\n                            return item.index <= value.x;\n                        });\n                        var insertIndex = 0;\n                        if (cells.length > 0) {\n                            insertIndex = row.cells.indexOf(cells[cells.length - 1]) + 1;\n                        }\n                        row.cells.splice(insertIndex, 0, _this.createCell(value, key));\n                    }\n                }\n                else {\n                    var rows = sheet.rows.filter(function (item) {\n                        return item.index <= value.y;\n                    });\n                    var rowToInsert = new Row();\n                    rowToInsert.index = value.y;\n                    rowToInsert.cells = new Cells();\n                    rowToInsert.cells.add(_this.createCell(value, key));\n                    var insertIndex = 0;\n                    if (rows.length > 0) {\n                        insertIndex = sheet.rows.indexOf(rows[rows.length - 1]) + 1;\n                    }\n                    sheet.rows.splice(insertIndex, 0, rowToInsert);\n                }\n            });\n        }\n    };\n    Workbook.prototype.createCell = function (value, key) {\n        var cellToInsert = new Cell();\n        cellToInsert.refName = key;\n        cellToInsert.index = value.x;\n        cellToInsert.cellStyle = new CellStyle();\n        cellToInsert.styleIndex = value.styleIndex;\n        return cellToInsert;\n    };\n    /* tslint:disable:no-any */\n    Workbook.prototype.parserRow = function (json, rowIndex) {\n        var row = new Row();\n        //Row Height\n        if (json.height !== null && json.height !== undefined) {\n            row.height = json.height;\n        }\n        //Row index\n        if (json.index !== null && json.index !== undefined) {\n            row.index = json.index;\n        }\n        else {\n            throw Error('Row index is missing.');\n        }\n        if (json.grouping !== null && json.grouping !== undefined) {\n            this.parseGrouping(json.grouping, row);\n        }\n        this.parseCells(json.cells, row);\n        return row;\n    };\n    /* tslint:disable:no-any */\n    Workbook.prototype.parseGrouping = function (json, row) {\n        row.grouping = new Grouping();\n        if (json.outlineLevel !== undefined) {\n            row.grouping.outlineLevel = json.outlineLevel;\n        }\n        if (json.isCollapsed !== undefined) {\n            row.grouping.isCollapsed = json.isCollapsed;\n        }\n        if (json.isHidden !== undefined) {\n            row.grouping.isHidden = json.isHidden;\n        }\n    };\n    /* tslint:disable:no-any */\n    Workbook.prototype.parseCells = function (json, row) {\n        row.cells = new Cells();\n        var cellsLength = json !== undefined ? json.length : 0;\n        var spanMin = 1;\n        var spanMax = 1;\n        var curCellIndex = 0;\n        for (var cellId = 0; cellId < cellsLength; cellId++) {\n            /* tslint:disable:no-any */\n            var jsonCell = json[cellId];\n            var cell = new Cell();\n            //cell index\n            if (jsonCell.index !== null && jsonCell.index !== undefined) {\n                cell.index = jsonCell.index;\n            }\n            else {\n                throw Error('Cell index is missing.');\n            }\n            if (cell.index < spanMin) {\n                spanMin = cell.index;\n            }\n            else if (cell.index > spanMax) {\n                spanMax = cell.index;\n            }\n            //Update the Cell name\n            cell.refName = this.getCellName(row.index, cell.index);\n            //Row span\n            if (jsonCell.rowSpan !== null && jsonCell.rowSpan !== undefined) {\n                cell.rowSpan = jsonCell.rowSpan - 1;\n            }\n            else {\n                cell.rowSpan = 0;\n            }\n            //Column span\n            if (jsonCell.colSpan !== null && jsonCell.colSpan !== undefined) {\n                cell.colSpan = jsonCell.colSpan - 1;\n            }\n            else {\n                cell.colSpan = 0;\n            }\n            //Hyperlink\n            if (jsonCell.hyperlink !== null && jsonCell.hyperlink !== undefined) {\n                var hyperLink = new HyperLink();\n                if (jsonCell.hyperlink.target !== undefined) {\n                    hyperLink.target = jsonCell.hyperlink.target;\n                    if (jsonCell.hyperlink.displayText !== undefined) {\n                        cell.value = jsonCell.hyperlink.displayText;\n                    }\n                    else {\n                        cell.value = jsonCell.hyperlink.target;\n                    }\n                    cell.type = this.getCellValueType(cell.value);\n                    hyperLink.ref = cell.refName;\n                    hyperLink.rId = (this.mHyperLinks.length + 1);\n                    this.mHyperLinks.push(hyperLink);\n                    cell.cellStyle = new CellStyle();\n                    /* tslint:disable-next-line:max-line-length */\n                    this.parserCellStyle((jsonCell.style !== undefined ? this.mergeOptions(jsonCell.style, this.hyperlinkStyle) : this.hyperlinkStyle), cell.cellStyle, 'string');\n                    cell.styleIndex = cell.cellStyle.index;\n                }\n            }\n            // formulas\n            if (jsonCell.formula !== null && jsonCell.formula !== undefined) {\n                cell.formula = jsonCell.formula;\n                cell.type = 'formula';\n            }\n            //Cell value\n            if (jsonCell.value !== null && jsonCell.value !== undefined) {\n                if (cell.formula !== undefined) {\n                    cell.value = 0;\n                }\n                else {\n                    cell.value = jsonCell.value;\n                    cell.type = this.getCellValueType(cell.value);\n                }\n            }\n            if (jsonCell.style !== null && jsonCell.style !== undefined && cell.styleIndex === undefined) {\n                cell.cellStyle = new CellStyle();\n                if (cell.value instanceof Date) {\n                    this.parserCellStyle(jsonCell.style, cell.cellStyle, cell.type, 14);\n                }\n                else {\n                    this.parserCellStyle(jsonCell.style, cell.cellStyle, cell.type);\n                }\n                cell.styleIndex = cell.cellStyle.index;\n            }\n            else if (cell.value instanceof Date) {\n                cell.cellStyle = new CellStyle();\n                this.parserCellStyle({}, cell.cellStyle, cell.type, 14);\n                cell.styleIndex = cell.cellStyle.index;\n            }\n            this.parseCellType(cell);\n            this.mergeCells = this.processMergeCells(cell, row.index, this.mergeCells);\n            row.cells.add(cell);\n            curCellIndex = (cell.index + 1);\n        }\n        row.spans = (spanMin) + ':' + (spanMax);\n    };\n    Workbook.prototype.GetColors = function () {\n        var colors;\n        colors = new Map();\n        /* tslint:disable */\n        colors.set('WHITE', 'FFFFFFFF');\n        /* tslint:disable */\n        colors.set('SILVER', 'FFC0C0C0');\n        /* tslint:disable */\n        colors.set('GRAY', 'FF808080');\n        /* tslint:disable */\n        colors.set('BLACK', 'FF000000');\n        /* tslint:disable */\n        colors.set('RED', 'FFFF0000');\n        /* tslint:disable */\n        colors.set('MAROON', 'FF800000');\n        /* tslint:disable */\n        colors.set('YELLOW', 'FFFFFF00');\n        /* tslint:disable */\n        colors.set('OLIVE', 'FF808000');\n        /* tslint:disable */\n        colors.set('LIME', 'FF00FF00');\n        /* tslint:disable */\n        colors.set('GREEN', 'FF008000');\n        /* tslint:disable */\n        colors.set('AQUA', 'FF00FFFF');\n        /* tslint:disable */\n        colors.set('TEAL', 'FF008080');\n        /* tslint:disable */\n        colors.set('BLUE', 'FF0000FF');\n        /* tslint:disable */\n        colors.set('NAVY', 'FF000080');\n        /* tslint:disable */\n        colors.set('FUCHSIA', 'FFFF00FF');\n        /* tslint:disable */\n        colors.set('PURPLE', 'FF800080');\n        return colors;\n    };\n    Workbook.prototype.processColor = function (colorVal) {\n        if (colorVal.indexOf('#') === 0) {\n            return colorVal.replace('#', 'FF');\n        }\n        colorVal = colorVal.toUpperCase();\n        this.rgbColors = this.GetColors();\n        if (this.rgbColors.has(colorVal)) {\n            colorVal = this.rgbColors.get(colorVal);\n        }\n        else {\n            colorVal = 'FF000000';\n        }\n        return colorVal;\n    };\n    Workbook.prototype.processCellValue = function (value, cell) {\n        var cellValue = value;\n        if (value.indexOf(\"<font\") !== -1 || value.indexOf(\"<a\") !== -1 || value.indexOf(\"<b>\") !== -1 ||\n            value.indexOf(\"<i>\") !== -1 || value.indexOf(\"<u>\") !== -1) {\n            var processedVal = '';\n            var startindex = value.indexOf('<', 0);\n            var endIndex = value.indexOf('>', startindex + 1);\n            if (startindex >= 0 && endIndex >= 0) {\n                if (startindex !== 0) {\n                    processedVal += '<r><t xml:space=\"preserve\">' + this.processString(value.substring(0, startindex)) + '</t></r>';\n                }\n                while (startindex >= 0 && endIndex >= 0) {\n                    endIndex = value.indexOf('>', startindex + 1);\n                    if (endIndex >= 0) {\n                        var subString = value.substring(startindex + 1, endIndex);\n                        startindex = value.indexOf('<', endIndex + 1);\n                        if (startindex < 0) {\n                            startindex = cellValue.length;\n                        }\n                        var text = cellValue.substring(endIndex + 1, startindex);\n                        if (text.length !== 0) {\n                            var subSplit = subString.split(' ');\n                            if (subSplit.length > 0) {\n                                processedVal += '<r><rPr>';\n                            }\n                            if (subSplit.length > 1) {\n                                for (var _i = 0, subSplit_1 = subSplit; _i < subSplit_1.length; _i++) {\n                                    var element = subSplit_1[_i];\n                                    var start = element.trim().substring(0, 5);\n                                    switch (start) {\n                                        case 'size=':\n                                            processedVal += '<sz val=\"' + element.substring(6, element.length - 1) + '\"/>';\n                                            break;\n                                        case 'face=':\n                                            processedVal += '<rFont val=\"' + element.substring(6, element.length - 1) + '\"/>';\n                                            break;\n                                        case 'color':\n                                            processedVal += '<color rgb=\"' + this.processColor(element.substring(7, element.length - 1)) + '\"/>';\n                                            break;\n                                        case 'href=':\n                                            var hyperLink = new HyperLink();\n                                            hyperLink.target = element.substring(6, element.length - 1).trim();\n                                            hyperLink.ref = cell.refName;\n                                            hyperLink.rId = (this.mHyperLinks.length + 1);\n                                            this.mHyperLinks.push(hyperLink);\n                                            processedVal += '<color rgb=\"FF0000FF\"/><u/><b/>';\n                                            break;\n                                    }\n                                }\n                            }\n                            else if (subSplit.length === 1) {\n                                var style = subSplit[0].trim();\n                                switch (style) {\n                                    case 'b':\n                                        processedVal += '<b/>';\n                                        break;\n                                    case 'i':\n                                        processedVal += '<i/>';\n                                        break;\n                                    case 'u':\n                                        processedVal += '<u/>';\n                                        break;\n                                }\n                            }\n                            processedVal += '</rPr><t xml:space=\"preserve\">' + this.processString(text) + '</t></r>';\n                        }\n                    }\n                }\n                if (processedVal === '') {\n                    return cellValue;\n                }\n                return processedVal;\n            }\n            else {\n                return cellValue;\n            }\n        }\n        else {\n            return cellValue;\n        }\n    };\n    Workbook.prototype.applyGlobalStyle = function (json, cellStyle) {\n        var index = 0;\n        if (this.cellStyles.has(json.name)) {\n            cellStyle.index = this.mStyles.filter(function (a) { return (a.name === json.name); })[0].index;\n            cellStyle.name = json.name;\n        }\n    };\n    /* tslint:disable:no-any */\n    Workbook.prototype.parserCellStyle = function (json, cellStyle, cellType, defStyleIndex) {\n        //name\n        if (json.name !== null && json.name !== undefined) {\n            if (cellStyle.isGlobalStyle) {\n                cellStyle.name = json.name;\n            }\n            else {\n                this.applyGlobalStyle(json, cellStyle);\n                return;\n            }\n        }\n        //background color\n        if (json.backColor !== null && json.backColor !== undefined) {\n            cellStyle.backColor = json.backColor;\n        }\n        //borders\n        //leftBorder\n        cellStyle.borders = new Borders();\n        //AllBorder\n        if (json.borders !== null && json.borders !== undefined) {\n            this.parserBorder(json.borders, cellStyle.borders.all);\n        }\n        //leftborder\n        if (json.leftBorder !== null && json.leftBorder !== undefined) {\n            this.parserBorder(json.leftBorder, cellStyle.borders.left);\n        }\n        //rightBorder\n        if (json.rightBorder !== null && json.rightBorder !== undefined) {\n            this.parserBorder(json.rightBorder, cellStyle.borders.right);\n        }\n        //topBorder\n        if (json.topBorder !== null && json.topBorder !== undefined) {\n            this.parserBorder(json.topBorder, cellStyle.borders.top);\n        }\n        //bottomBorder\n        if (json.bottomBorder !== null && json.bottomBorder !== undefined) {\n            this.parserBorder(json.bottomBorder, cellStyle.borders.bottom);\n        }\n        //fontName\n        if (json.fontName !== null && json.fontName !== undefined) {\n            cellStyle.fontName = json.fontName;\n        }\n        //fontSize\n        if (json.fontSize !== null && json.fontSize !== undefined) {\n            cellStyle.fontSize = json.fontSize;\n        }\n        //fontColor\n        if (json.fontColor !== null && json.fontColor !== undefined) {\n            cellStyle.fontColor = json.fontColor;\n        }\n        //italic\n        if (json.italic !== null && json.italic !== undefined) {\n            cellStyle.italic = json.italic;\n        }\n        //bold\n        if (json.bold !== null && json.bold !== undefined) {\n            cellStyle.bold = json.bold;\n        }\n        //hAlign\n        if (json.hAlign !== null && json.hAlign !== undefined) {\n            cellStyle.hAlign = json.hAlign.toLowerCase();\n        }\n        //indent\n        if (json.indent !== null && json.indent !== undefined) {\n            cellStyle.indent = json.indent;\n            if (!(cellStyle.hAlign === 'left' || cellStyle.hAlign === 'right')) {\n                cellStyle.hAlign = 'left';\n            }\n        }\n        if (json.rotation !== null && json.rotation !== undefined) {\n            cellStyle.rotation = json.rotation;\n        }\n        //vAlign\n        if (json.vAlign !== null && json.vAlign !== undefined) {\n            cellStyle.vAlign = json.vAlign.toLowerCase();\n        }\n        //underline\n        if (json.underline !== null && json.underline !== undefined) {\n            cellStyle.underline = json.underline;\n        }\n        //strikeThrough\n        if (json.strikeThrough !== null && json.strikeThrough !== undefined) {\n            cellStyle.strikeThrough = json.strikeThrough;\n        }\n        //wrapText\n        if (json.wrapText !== null && json.wrapText !== undefined) {\n            cellStyle.wrapText = json.wrapText;\n        }\n        //numberFormat\n        if (json.numberFormat !== null && json.numberFormat !== undefined) {\n            if (json.type !== null && json.type !== undefined) {\n                cellStyle.numberFormat = this.getNumberFormat(json.numberFormat, json.type);\n            }\n            else {\n                cellStyle.numberFormat = this.getNumberFormat(json.numberFormat, cellType);\n            }\n        }\n        else if (defStyleIndex !== undefined) {\n            cellStyle.numFmtId = 14;\n            cellStyle.numberFormat = 'GENERAL';\n        }\n        else {\n            cellStyle.numberFormat = 'GENERAL';\n        }\n        cellStyle.index = this.processCellStyle(cellStyle);\n    };\n    Workbook.prototype.switchNumberFormat = function (numberFormat, type) {\n        var format = this.getNumberFormat(numberFormat, type);\n        if (format !== numberFormat) {\n            var numFmt = this.mNumFmt.get(numberFormat);\n            if (numFmt !== undefined) {\n                numFmt.formatCode = format;\n                if (this.mNumFmt.has(format)) {\n                    for (var _i = 0, _a = this.mCellStyleXfs; _i < _a.length; _i++) {\n                        var cellStyleXfs = _a[_i];\n                        if (cellStyleXfs.numFmtId === numFmt.numFmtId) {\n                            cellStyleXfs.numFmtId = this.mNumFmt.get(format).numFmtId;\n                        }\n                    }\n                    for (var _b = 0, _c = this.mCellXfs; _b < _c.length; _b++) {\n                        var cellXfs = _c[_b];\n                        if (cellXfs.numFmtId === numFmt.numFmtId) {\n                            cellXfs.numFmtId = this.mNumFmt.get(format).numFmtId;\n                        }\n                    }\n                }\n            }\n        }\n    };\n    Workbook.prototype.changeNumberFormats = function (value) {\n        if (typeof value == \"string\") {\n            var regex = new RegExp(this.currency, 'g');\n            value = value.replace(regex, '[$' + this.currency + ']');\n        }\n        else if (typeof value == \"object\") {\n            for (var i = 0; i < value.length; i++) {\n                value[i] = value[i].replace(this.currency, '[$' + this.currency + ']');\n            }\n        }\n        return value;\n    };\n    Workbook.prototype.getNumberFormat = function (numberFormat, type) {\n        var returnFormat;\n        switch (type) {\n            case 'number':\n                try {\n                    returnFormat = this.intl.getNumberPattern({ format: numberFormat, currency: this.currency, useGrouping: true }, true);\n                    if (this.currency.length > 1) {\n                        returnFormat = this.changeNumberFormats(returnFormat);\n                    }\n                }\n                catch (error) {\n                    returnFormat = numberFormat;\n                }\n                break;\n            case 'datetime':\n                try {\n                    returnFormat = this.intl.getDatePattern({ skeleton: numberFormat, type: 'dateTime' }, true);\n                }\n                catch (error) {\n                    try {\n                        returnFormat = this.intl.getDatePattern({ format: numberFormat, type: 'dateTime' }, true);\n                    }\n                    catch (error) {\n                        returnFormat = numberFormat;\n                    }\n                }\n                break;\n            case 'date':\n                try {\n                    returnFormat = this.intl.getDatePattern({ skeleton: numberFormat, type: 'date' }, true);\n                }\n                catch (error) {\n                    try {\n                        returnFormat = this.intl.getDatePattern({ format: numberFormat, type: 'date' }, true);\n                    }\n                    catch (error) {\n                        returnFormat = numberFormat;\n                    }\n                }\n                break;\n            case 'time':\n                try {\n                    returnFormat = this.intl.getDatePattern({ skeleton: numberFormat, type: 'time' }, true);\n                }\n                catch (error) {\n                    try {\n                        returnFormat = this.intl.getDatePattern({ format: numberFormat, type: 'time' }, true);\n                    }\n                    catch (error) {\n                        returnFormat = numberFormat;\n                    }\n                }\n                break;\n            default:\n                returnFormat = numberFormat;\n                break;\n        }\n        return returnFormat;\n    };\n    /* tslint:disable:no-any */\n    Workbook.prototype.parserBorder = function (json, border) {\n        if (json.color !== null && json.color !== undefined) {\n            border.color = json.color;\n        }\n        else {\n            border.color = '#000000';\n        }\n        if (json.lineStyle !== null && json.lineStyle !== undefined) {\n            border.lineStyle = json.lineStyle;\n        }\n        else {\n            border.lineStyle = 'thin';\n        }\n    };\n    Workbook.prototype.processCellStyle = function (style) {\n        if (style.isGlobalStyle) {\n            this.processNumFormatId(style);\n            this.mStyles.push(style);\n            return this.mStyles.length;\n        }\n        else {\n            var compareResult = this.compareStyle(style);\n            if (!compareResult.result) {\n                this.processNumFormatId(style);\n                this.mStyles.push(style);\n                return this.mStyles.length;\n            }\n            else {\n                //Return the index of the already existing style.\n                return compareResult.index;\n            }\n        }\n    };\n    Workbook.prototype.processNumFormatId = function (style) {\n        if (style.numberFormat !== 'GENERAL' && !this.mNumFmt.has(style.numberFormat)) {\n            var id = this.mNumFmt.size + 164;\n            this.mNumFmt.set(style.numberFormat, new NumFmt(id, style.numberFormat));\n        }\n    };\n    Workbook.prototype.isNewFont = function (toCompareStyle) {\n        var result = false;\n        var index = 0;\n        for (var _i = 0, _a = this.mFonts; _i < _a.length; _i++) {\n            var font = _a[_i];\n            index++;\n            var fontColor = undefined;\n            if (toCompareStyle.fontColor !== undefined) {\n                fontColor = ('FF' + toCompareStyle.fontColor.replace('#', ''));\n            }\n            result = font.color === fontColor &&\n                font.b === toCompareStyle.bold &&\n                font.i === toCompareStyle.italic &&\n                font.u === toCompareStyle.underline &&\n                font.strike === toCompareStyle.strikeThrough &&\n                font.name === toCompareStyle.fontName &&\n                font.sz === toCompareStyle.fontSize;\n            if (result) {\n                break;\n            }\n        }\n        index = index - 1;\n        return { index: index, result: result };\n    };\n    Workbook.prototype.isNewBorder = function (toCompareStyle) {\n        var bStyle = new CellStyle();\n        if (this.isAllBorder(toCompareStyle.borders)) {\n            return (bStyle.borders.all.color === toCompareStyle.borders.all.color &&\n                bStyle.borders.all.lineStyle === toCompareStyle.borders.all.lineStyle);\n        }\n        else {\n            return (bStyle.borders.left.color === toCompareStyle.borders.left.color &&\n                bStyle.borders.left.lineStyle === toCompareStyle.borders.left.lineStyle &&\n                bStyle.borders.right.color === toCompareStyle.borders.right.color &&\n                bStyle.borders.right.lineStyle === toCompareStyle.borders.right.lineStyle &&\n                bStyle.borders.top.color === toCompareStyle.borders.top.color &&\n                bStyle.borders.top.lineStyle === toCompareStyle.borders.top.lineStyle &&\n                bStyle.borders.bottom.color === toCompareStyle.borders.bottom.color &&\n                bStyle.borders.bottom.lineStyle === toCompareStyle.borders.bottom.lineStyle);\n        }\n    };\n    Workbook.prototype.isAllBorder = function (toCompareBorder) {\n        var allBorderStyle = new CellStyle();\n        return allBorderStyle.borders.all.color !== toCompareBorder.all.color &&\n            allBorderStyle.borders.all.lineStyle !== toCompareBorder.all.lineStyle;\n    };\n    Workbook.prototype.compareStyle = function (toCompareStyle) {\n        var result = true;\n        var index = 0;\n        var globalStyleIndex = 0;\n        for (var _i = 0, _a = this.mStyles; _i < _a.length; _i++) {\n            var baseStyle = _a[_i];\n            result = baseStyle.isGlobalStyle ? false : (baseStyle.backColor === toCompareStyle.backColor &&\n                baseStyle.bold === toCompareStyle.bold &&\n                baseStyle.numFmtId === toCompareStyle.numFmtId &&\n                baseStyle.numberFormat === toCompareStyle.numberFormat &&\n                baseStyle.type === toCompareStyle.type &&\n                baseStyle.fontColor === toCompareStyle.fontColor &&\n                baseStyle.fontName === toCompareStyle.fontName &&\n                baseStyle.fontSize === toCompareStyle.fontSize &&\n                baseStyle.hAlign === toCompareStyle.hAlign &&\n                baseStyle.italic === toCompareStyle.italic &&\n                baseStyle.underline === toCompareStyle.underline &&\n                baseStyle.strikeThrough === toCompareStyle.strikeThrough &&\n                baseStyle.vAlign === toCompareStyle.vAlign &&\n                baseStyle.indent === toCompareStyle.indent &&\n                baseStyle.rotation === toCompareStyle.rotation &&\n                baseStyle.wrapText === toCompareStyle.wrapText &&\n                (baseStyle.borders.all.color === toCompareStyle.borders.all.color &&\n                    baseStyle.borders.all.lineStyle === toCompareStyle.borders.all.lineStyle) &&\n                (baseStyle.borders.left.color === toCompareStyle.borders.left.color &&\n                    baseStyle.borders.left.lineStyle === toCompareStyle.borders.left.lineStyle &&\n                    baseStyle.borders.right.color === toCompareStyle.borders.right.color &&\n                    baseStyle.borders.right.lineStyle === toCompareStyle.borders.right.lineStyle &&\n                    baseStyle.borders.top.color === toCompareStyle.borders.top.color &&\n                    baseStyle.borders.top.lineStyle === toCompareStyle.borders.top.lineStyle &&\n                    baseStyle.borders.bottom.color === toCompareStyle.borders.bottom.color &&\n                    baseStyle.borders.bottom.lineStyle === toCompareStyle.borders.bottom.lineStyle));\n            if (result) {\n                index = baseStyle.index;\n                break;\n            }\n        }\n        return { index: index, result: result };\n    };\n    Workbook.prototype.contains = function (array, item) {\n        var index = array.indexOf(item);\n        return index > -1 && index < array.length;\n    };\n    Workbook.prototype.getCellValueType = function (value) {\n        if (value instanceof Date) {\n            return 'datetime';\n        }\n        else if (typeof (value) === 'boolean') {\n            return 'boolean';\n        }\n        else if (typeof (value) === 'number') {\n            return 'number';\n        }\n        else {\n            return 'string';\n        }\n    };\n    Workbook.prototype.parseCellType = function (cell) {\n        var type = cell.type;\n        var saveType;\n        var value = cell.value;\n        switch (type) {\n            case 'datetime':\n                value = this.toOADate(value);\n                if (cell.cellStyle !== undefined && cell.cellStyle.name !== undefined) {\n                    if (this.globalStyles.has(cell.cellStyle.name)) {\n                        var value_1 = this.globalStyles.get(cell.cellStyle.name);\n                        this.switchNumberFormat(value_1.format, value_1.type);\n                    }\n                }\n                saveType = 'n';\n                break;\n            //TODO: Update the number format index and style\n            case 'boolean':\n                value = value ? 1 : 0;\n                saveType = 'b';\n                break;\n            case 'number':\n                saveType = 'n';\n                if (cell.cellStyle !== undefined && cell.cellStyle.name !== undefined) {\n                    if (this.globalStyles.has(cell.cellStyle.name)) {\n                        this.switchNumberFormat(this.globalStyles.get(cell.cellStyle.name).format, 'number');\n                    }\n                }\n                break;\n            case 'string':\n                this.sharedStringCount++;\n                saveType = 's';\n                var sstvalue = this.processCellValue(value, cell);\n                if (!this.contains(this.sharedString, sstvalue)) {\n                    this.sharedString.push(sstvalue);\n                }\n                value = this.sharedString.indexOf(sstvalue);\n                break;\n            default:\n                break;\n        }\n        cell.saveType = saveType;\n        cell.value = value;\n    };\n    Workbook.prototype.parserImages = function (json, sheet) {\n        var imagesLength = json.length;\n        sheet.images = [];\n        var imageId = 0;\n        for (var p = 0; p < imagesLength; p++) {\n            var image = this.parserImage(json[p]);\n            sheet.images.push(image);\n        }\n    };\n    Workbook.prototype.parseFilters = function (json, sheet) {\n        sheet.autoFilters = new AutoFilters();\n        if (json.row !== null && json.row !== undefined)\n            sheet.autoFilters.row = json.row;\n        else\n            throw new Error('Argument Null Exception: row null or empty');\n        if (json.lastRow !== null && json.lastRow !== undefined)\n            sheet.autoFilters.lastRow = json.lastRow;\n        else\n            throw new Error('Argument Null Exception: lastRow cannot be null or empty');\n        if (json.column !== null && json.column !== undefined)\n            sheet.autoFilters.column = json.column;\n        else\n            throw new Error('Argument Null Exception: column cannot be null or empty');\n        if (json.lastColumn !== null && json.row !== undefined)\n            sheet.autoFilters.lastColumn = json.lastColumn;\n        else\n            throw new Error('Argument Null Exception: lastColumn cannot be null or empty');\n    };\n    Workbook.prototype.parserImage = function (json) {\n        var image = new Image();\n        if (json.image !== null && json.image !== undefined) {\n            image.image = json.image;\n        }\n        if (json.row !== null && json.row !== undefined) {\n            image.row = json.row;\n        }\n        if (json.column !== null && json.column !== undefined) {\n            image.column = json.column;\n        }\n        if (json.lastRow !== null && json.lastRow !== undefined) {\n            image.lastRow = json.lastRow;\n        }\n        if (json.lastColumn !== null && json.lastColumn !== undefined) {\n            image.lastColumn = json.lastColumn;\n        }\n        if (json.width !== null && json.width !== undefined) {\n            image.width = json.width;\n        }\n        if (json.height !== null && json.height !== undefined) {\n            image.height = json.height;\n        }\n        if (json.horizontalFlip !== null && json.horizontalFlip !== undefined) {\n            image.horizontalFlip = json.horizontalFlip;\n        }\n        if (json.verticalFlip !== null && json.verticalFlip !== undefined) {\n            image.verticalFlip = json.verticalFlip;\n        }\n        if (json.rotation !== null && json.rotation !== undefined) {\n            image.rotation = json.rotation;\n        }\n        return image;\n    };\n    /**\n     * Returns a Promise with a Blob based on the specified BlobSaveType and optional encoding.\n     * @param {BlobSaveType} blobSaveType - A string indicating the type of Blob to generate ('text/csv' or other).\n     * @param {string} [encodingType] - The supported encoding types are \"ansi\", \"unicode\" and \"utf8\".\n     */\n    /* tslint:disable:no-any */\n    Workbook.prototype.saveAsBlob = function (blobSaveType, encodingType) {\n        var _this = this;\n        switch (blobSaveType) {\n            case 'text/csv':\n                return new Promise(function (resolve, reject) {\n                    var obj = {};\n                    obj.blobData = _this.csvHelper.saveAsBlob(encodingType);\n                    resolve(obj);\n                });\n            default:\n                return new Promise(function (resolve, reject) {\n                    _this.saveInternal();\n                    _this.mArchive.saveAsBlob().then(function (blob) {\n                        var obj = {};\n                        obj.blobData = new Blob([blob], { type: 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet' });\n                        resolve(obj);\n                    });\n                });\n        }\n    };\n    Workbook.prototype.save = function (fileName, proxyUrl) {\n        var _this = this;\n        if (fileName === null || fileName === undefined || fileName === '') {\n            throw new Error('Argument Null Exception: fileName cannot be null or empty');\n        }\n        var xlsxMatch = fileName.match('.xlsx$');\n        var csvMatch = fileName.match('.csv$');\n        if (xlsxMatch !== null && xlsxMatch[0] === ('.' + this.mSaveType)) {\n            this.saveInternal();\n            this.mArchive.save(fileName).then(function () {\n                _this.mArchive.destroy();\n            });\n        }\n        else if (csvMatch !== null && csvMatch[0] === ('.' + this.mSaveType)) {\n            this.csvHelper.save(fileName);\n        }\n        else {\n            throw Error('Save type and file extension is different.');\n        }\n    };\n    Workbook.prototype.saveInternal = function () {\n        this.saveWorkbook();\n        this.saveWorksheets();\n        this.saveSharedString();\n        this.saveStyles();\n        this.saveApp(this.builtInProperties);\n        this.saveCore(this.builtInProperties);\n        this.saveContentType();\n        this.saveTopLevelRelation();\n        this.saveWorkbookRelation();\n    };\n    Workbook.prototype.saveWorkbook = function () {\n        /* tslint:disable-next-line:max-line-length */\n        var workbookTemp = '<?xml version=\"1.0\" encoding=\"utf-8\"?><workbook xmlns:r = \"http://schemas.openxmlformats.org/officeDocument/2006/relationships\" xmlns= \"http://schemas.openxmlformats.org/spreadsheetml/2006/main\"><workbookPr codeName=\"ThisWorkbook\" defaultThemeVersion= \"153222\"/><bookViews><workbookView activeTab=\"0\"/></bookViews>';\n        var sheets = '<sheets>';\n        var length = this.worksheets.length;\n        for (var i = 0; i < length; i++) {\n            /* tslint:disable-next-line:max-line-length */\n            var sheetName = this.worksheets[i].name;\n            sheetName = sheetName.replace(\"&\", \"&amp;\");\n            sheetName = sheetName.replace(\"<\", \"&lt;\");\n            sheetName = sheetName.replace(\">\", \"&gt;\");\n            sheetName = sheetName.replace(\"\\\"\", \"&quot;\");\n            sheets += '<sheet name=\"' + sheetName + '\" sheetId=\"' + (i + 1).toString() + '\" r:id =\"rId' + (i + 1).toString() + '\" />';\n        }\n        sheets += '</sheets>';\n        workbookTemp += sheets;\n        if (this.printTitles.size > 0) {\n            var printTitle_1 = '<definedNames>';\n            this.printTitles.forEach(function (value, key) {\n                printTitle_1 += '<definedName name=\"_xlnm.Print_Titles\" localSheetId=\"' + key + '\">' + value + '</definedName>';\n            });\n            printTitle_1 += '</definedNames>';\n            workbookTemp += printTitle_1;\n        }\n        this.addToArchive(workbookTemp + '</workbook>', 'xl/workbook.xml');\n    };\n    Workbook.prototype.saveWorksheets = function () {\n        var length = this.worksheets.length;\n        for (var i = 0; i < length; i++) {\n            this.saveWorksheet(this.worksheets[i], i);\n        }\n    };\n    Workbook.prototype.saveWorksheet = function (sheet, index) {\n        var sheetBlob = new BlobHelper();\n        /* tslint:disable-next-line:max-line-length */\n        var sheetString = '<?xml version=\"1.0\" encoding=\"utf-8\" standalone=\"yes\"?><worksheet xmlns:r=\"http://schemas.openxmlformats.org/officeDocument/2006/relationships\" xmlns:x14=\"http://schemas.microsoft.com/office/spreadsheetml/2009/9/main\" xmlns:mc=\"http://schemas.openxmlformats.org/markup-compatibility/2006\" xmlns=\"http://schemas.openxmlformats.org/spreadsheetml/2006/main\">';\n        if (!sheet.isSummaryRowBelow) {\n            sheetString += ('<sheetPr>' + '<outlinePr ' + 'summaryBelow=\"0\" >' + '</outlinePr>' + '</sheetPr>');\n        }\n        else {\n            sheetString += ('<sheetPr />');\n        }\n        sheetString += this.saveSheetView(sheet);\n        if (sheet.columns !== undefined) {\n            var colString = '<cols>';\n            for (var _i = 0, _a = sheet.columns; _i < _a.length; _i++) {\n                var column = _a[_i];\n                /* tslint:disable-next-line:max-line-length */\n                if (column.width !== undefined) {\n                    colString += '<col min=\"' + (column.index) + '\" max=\"' + (column.index) + '\" width=\"' + this.pixelsToColumnWidth(column.width) + '\" customWidth=\"1\" />';\n                }\n                else {\n                    colString += '<col min=\"' + (column.index) + '\" max=\"' + (column.index) + '\" width=\"' + '8.43' + '\" customWidth=\"1\" />';\n                }\n            }\n            sheetString += (colString + '</cols>');\n        }\n        sheetString += ('<sheetData>');\n        sheetBlob.append(sheetString);\n        sheetString = '';\n        if (sheet.rows !== undefined) {\n            for (var _b = 0, _c = sheet.rows; _b < _c.length; _b++) {\n                var row = _c[_b];\n                var rowString = '<row r=\"' + (row.index) + '\" ';\n                if (!isNullOrUndefined(row.spans)) {\n                    rowString += 'spans=\"' + row.spans + '\" ';\n                }\n                if (row.height !== undefined) {\n                    rowString += ('ht=\"' + this.pixelsToRowHeight(row.height) + '\" customHeight=\"1\" ');\n                }\n                if (row.grouping !== undefined) {\n                    if (row.grouping.isHidden) {\n                        rowString += ('hidden=\"1\" ');\n                    }\n                    if (row.grouping.outlineLevel !== undefined) {\n                        rowString += ('outlineLevel=\"' + row.grouping.outlineLevel + '\" ');\n                    }\n                    if (row.grouping.isCollapsed) {\n                        rowString += ('collapsed=\"1\" ');\n                    }\n                }\n                rowString += ('>');\n                for (var _d = 0, _e = row.cells; _d < _e.length; _d++) {\n                    var cell = _e[_d];\n                    if (cell !== undefined && (cell.value !== undefined || cell.cellStyle !== undefined)) {\n                        rowString += ('<c r=\"' + cell.refName + '\" ');\n                        if (cell.saveType !== undefined) {\n                            rowString += ('t=\"' + cell.saveType + '\" ');\n                        }\n                        if (cell.styleIndex !== undefined) {\n                            rowString += ('s=\"' + cell.styleIndex + '\" ');\n                        }\n                        rowString += (' >');\n                        if (cell.formula !== undefined) {\n                            rowString += ('<f>' + cell.formula + '</f>');\n                        }\n                        if (cell.value !== undefined) {\n                            rowString += ('<v>' + cell.value + '</v></c>');\n                        }\n                        else {\n                            rowString += ('</c>');\n                        }\n                    }\n                }\n                rowString += ('</row>');\n                sheetBlob.append(rowString);\n            }\n        }\n        sheetString += ('</sheetData>');\n        /* tslint:disable-next-line:max-line-length */\n        if (sheet.autoFilters !== null && sheet.autoFilters !== undefined)\n            sheetString += ('<autoFilter ref=\"' + this.getCellName(sheet.autoFilters.row, sheet.autoFilters.column) + ':' + this.getCellName(sheet.autoFilters.lastRow, sheet.autoFilters.lastColumn) + '\"/>');\n        if (sheet.mergeCells.length > 0) {\n            sheetString += ('<mergeCells count=\"' + sheet.mergeCells.length + '\">');\n            for (var _f = 0, _g = sheet.mergeCells; _f < _g.length; _f++) {\n                var mCell = _g[_f];\n                sheetString += ('<mergeCell ref=\"' + mCell.ref + '\" />');\n            }\n            sheetString += ('</mergeCells>');\n        }\n        if (sheet.hyperLinks.length > 0) {\n            sheetString += ('<hyperlinks>');\n            for (var _h = 0, _j = sheet.hyperLinks; _h < _j.length; _h++) {\n                var hLink = _j[_h];\n                sheetString += ('<hyperlink ref=\"' + hLink.ref + '\" r:id=\"rId' + hLink.rId + '\" />');\n            }\n            sheetString += ('</hyperlinks>');\n        }\n        /* tslint:disable-next-line:max-line-length */\n        sheetString += ('<pageMargins left=\"0.75\" right=\"0.75\" top=\"1\" bottom=\"1\" header=\"0.5\" footer=\"0.5\" /><headerFooter scaleWithDoc=\"1\" alignWithMargins=\"0\" differentFirst=\"0\" differentOddEven=\"0\" />');\n        if (sheet.images != undefined && sheet.images.length > 0) {\n            this.drawingCount++;\n            this.saveDrawings(sheet, sheet.index);\n            sheetString += '<drawing r:id=\"rId' + (sheet.hyperLinks.length + 1) + '\"/>';\n        }\n        this.addToArchive(this.saveSheetRelations(sheet), ('xl/worksheets/_rels/sheet' + sheet.index + '.xml.rels'));\n        sheetBlob.append(sheetString + '</worksheet>');\n        this.addToArchive(sheetBlob.getBlob(), 'xl/worksheets' + '/sheet' + (index + 1) + '.xml');\n    };\n    Workbook.prototype.saveDrawings = function (sheet, index) {\n        var drawings = new BlobHelper();\n        /* tslint:disable-next-line:max-line-length */\n        var sheetDrawingString = '<xdr:wsDr xmlns:xdr=\"http://schemas.openxmlformats.org/drawingml/2006/spreadsheetDrawing\" xmlns:a=\"http://schemas.openxmlformats.org/drawingml/2006/main\">';\n        if (sheet.images !== undefined) {\n            var imgId = 0;\n            for (var _i = 0, _a = sheet.images; _i < _a.length; _i++) {\n                var pic = _a[_i];\n                if (pic.height !== undefined && pic.width !== undefined) {\n                    this.updatelastRowOffset(sheet, pic);\n                    this.updatelastColumnOffSet(sheet, pic);\n                    pic.lastRow -= 1;\n                    pic.lastColumn -= 1;\n                }\n                else if (pic.lastRow !== undefined && pic.lastColumn !== undefined) {\n                    pic.lastRowOffset = 0;\n                    pic.lastColOffset = 0;\n                }\n                imgId++;\n                sheetDrawingString += '<xdr:twoCellAnchor editAs=\"oneCell\">';\n                sheetDrawingString += '<xdr:from><xdr:col>';\n                //col\n                sheetDrawingString += pic.column - 1;\n                sheetDrawingString += '</xdr:col><xdr:colOff>';\n                //colOff\n                sheetDrawingString += 0;\n                sheetDrawingString += '</xdr:colOff><xdr:row>';\n                //row\n                sheetDrawingString += pic.row - 1;\n                sheetDrawingString += '</xdr:row><xdr:rowOff>';\n                //rowOff\n                sheetDrawingString += 0;\n                sheetDrawingString += '</xdr:rowOff></xdr:from>';\n                sheetDrawingString += '<xdr:to><xdr:col>';\n                //col\n                sheetDrawingString += pic.lastColumn;\n                sheetDrawingString += '</xdr:col><xdr:colOff>';\n                //colOff\n                sheetDrawingString += pic.lastColOffset;\n                sheetDrawingString += '</xdr:colOff><xdr:row>';\n                //row\n                sheetDrawingString += pic.lastRow;\n                sheetDrawingString += '</xdr:row><xdr:rowOff>';\n                //rowOff\n                sheetDrawingString += pic.lastRowOffset;\n                sheetDrawingString += '</xdr:rowOff></xdr:to>';\n                sheetDrawingString += '<xdr:pic>';\n                sheetDrawingString += '<xdr:nvPicPr>';\n                sheetDrawingString += '<xdr:cNvPr id=\"' + imgId + '\" name=\"Picture ' + imgId + '\"> </xdr:cNvPr>';\n                sheetDrawingString += '<xdr:cNvPicPr><a:picLocks noChangeAspect=\"1\"/></xdr:cNvPicPr> </xdr:nvPicPr>';\n                sheetDrawingString += '<xdr:blipFill>';\n                /* tslint:disable-next-line:max-line-length */\n                sheetDrawingString += '<a:blip xmlns:r=\"http://schemas.openxmlformats.org/officeDocument/2006/relationships\" r:embed=\"rId' + imgId + '\" cstate=\"print\">';\n                sheetDrawingString += '</a:blip><a:stretch><a:fillRect /></a:stretch></xdr:blipFill>';\n                sheetDrawingString += '<xdr:spPr>';\n                sheetDrawingString += '<a:xfrm';\n                if (pic.rotation != undefined && pic.rotation <= 3600 && pic.rotation >= -3600) {\n                    sheetDrawingString += ' rot=\"' + (pic.rotation * 60000) + '\"';\n                }\n                if (pic.verticalFlip != undefined && pic.verticalFlip != false) {\n                    sheetDrawingString += ' flipV=\"1\"';\n                }\n                if (pic.horizontalFlip != undefined && pic.horizontalFlip != false) {\n                    sheetDrawingString += ' flipH=\"1\"';\n                }\n                sheetDrawingString += '/>';\n                sheetDrawingString += '<a:prstGeom prst=\"rect\"><a:avLst /></a:prstGeom></xdr:spPr>';\n                sheetDrawingString += '</xdr:pic><xdr:clientData /></xdr:twoCellAnchor>';\n                var imageFile = new BlobHelper();\n                var imageData = this.convertBase64toImage(pic.image);\n                this.imageCount += 1;\n                this.addToArchive(imageData, 'xl/media/image' + this.imageCount + '.png');\n            }\n            drawings.append(sheetDrawingString);\n            drawings.append('</xdr:wsDr>');\n            this.saveDrawingRelations(sheet);\n            this.addToArchive(drawings.getBlob(), 'xl/drawings/drawing' + this.drawingCount + '.xml');\n        }\n    };\n    Workbook.prototype.updatelastRowOffset = function (sheet, picture) {\n        var iCurHeight = picture.height;\n        var iCurRow = picture.row;\n        var iCurOffset = 0;\n        while (iCurHeight >= 0) {\n            var iRowHeight = 0;\n            if (sheet.rows !== undefined && sheet.rows[iCurRow - 1] !== undefined)\n                iRowHeight = this.convertToPixels(sheet.rows[iCurRow - 1].height === undefined ? 15 : sheet.rows[iCurRow - 1].height);\n            else\n                iRowHeight = this.convertToPixels(15);\n            var iSpaceInCell = iRowHeight - (iCurOffset * iRowHeight / 256);\n            if (iSpaceInCell > iCurHeight) {\n                picture.lastRow = iCurRow;\n                picture.lastRowOffset = iCurOffset + (iCurHeight * 256 / iRowHeight);\n                var rowHiddenHeight = 0;\n                if (sheet.rows !== undefined && sheet.rows[iCurRow - 1] !== undefined)\n                    rowHiddenHeight = this.convertToPixels(sheet.rows[iCurRow - 1].height === undefined ? 15 : sheet.rows[iCurRow - 1].height);\n                else\n                    rowHiddenHeight = this.convertToPixels(15);\n                picture.lastRowOffset = (rowHiddenHeight * picture.lastRowOffset) / 256;\n                picture.lastRowOffset = Math.round(picture.lastRowOffset / this.unitsProportions[7]);\n                break;\n            }\n            else {\n                iCurHeight -= iSpaceInCell;\n                iCurRow++;\n                iCurOffset = 0;\n            }\n        }\n    };\n    Workbook.prototype.updatelastColumnOffSet = function (sheet, picture) {\n        var iCurWidth = picture.width;\n        var iCurCol = picture.column;\n        var iCurOffset = 0;\n        while (iCurWidth >= 0) {\n            var iColWidth = 0;\n            if (sheet.columns !== undefined && sheet.columns[iCurCol - 1] !== undefined)\n                iColWidth = this.ColumnWidthToPixels(sheet.columns[iCurCol - 1].width === undefined ? 8.43 : sheet.columns[iCurCol - 1].width);\n            else\n                iColWidth = this.ColumnWidthToPixels(8.43);\n            var iSpaceInCell = iColWidth - (iCurOffset * iColWidth / 1024);\n            if (iSpaceInCell > iCurWidth) {\n                picture.lastColumn = iCurCol;\n                picture.lastColOffset = iCurOffset + (iCurWidth * 1024 / iColWidth);\n                var colHiddenWidth = 0;\n                if (sheet.columns !== undefined && sheet.columns[iCurCol - 1] !== undefined)\n                    colHiddenWidth = this.ColumnWidthToPixels(sheet.columns[iCurCol - 1].width === undefined ? 8.43 : sheet.columns[iCurCol - 1].width);\n                else\n                    colHiddenWidth = this.ColumnWidthToPixels(8.43);\n                picture.lastColOffset = (colHiddenWidth * picture.lastColOffset) / 1024;\n                picture.lastColOffset = Math.round(picture.lastColOffset / this.unitsProportions[7]);\n                break;\n            }\n            else {\n                iCurWidth -= iSpaceInCell;\n                iCurCol++;\n                iCurOffset = 0;\n            }\n        }\n    };\n    Workbook.prototype.convertToPixels = function (value) {\n        return value * this.unitsProportions[6];\n    };\n    Workbook.prototype.convertBase64toImage = function (img) {\n        var byteStr = window.atob(img);\n        var buffer = new ArrayBuffer(byteStr.length);\n        var data = new Uint8Array(buffer);\n        for (var i = 0; i < byteStr.length; i++) {\n            data[i] = byteStr.charCodeAt(i);\n        }\n        var blob = new Blob([data], { type: 'image/png' });\n        return blob;\n    };\n    Workbook.prototype.saveDrawingRelations = function (sheet) {\n        /* tslint:disable-next-line:max-line-length */\n        var drawingRelation = '<?xml version=\"1.0\" encoding=\"utf-8\" standalone=\"yes\"?><Relationships xmlns=\"http://schemas.openxmlformats.org/package/2006/relationships\">';\n        var length = sheet.images.length;\n        var id = this.imageCount - sheet.images.length;\n        for (var i = 1; i <= length; i++) {\n            id++;\n            /* tslint:disable-next-line:max-line-length */\n            drawingRelation += '<Relationship Id=\"rId' + i + '\" Type=\"http://schemas.openxmlformats.org/officeDocument/2006/relationships/image\" Target=\"../media/image' + id + '.png\" />';\n        }\n        this.addToArchive((drawingRelation + '</Relationships>'), 'xl/drawings/_rels/drawing' + this.drawingCount + '.xml.rels');\n    };\n    Workbook.prototype.pixelsToColumnWidth = function (pixels) {\n        var dDigitWidth = 7;\n        var val = (pixels > dDigitWidth + 5) ?\n            this.trunc((pixels - 5) / dDigitWidth * 100 + 0.5) / 100 :\n            pixels / (dDigitWidth + 5);\n        return (val > 1) ?\n            ((val * dDigitWidth + 5) / dDigitWidth * 256.0) / 256.0 :\n            (val * (dDigitWidth + 5) / dDigitWidth * 256.0) / 256.0;\n    };\n    Workbook.prototype.ColumnWidthToPixels = function (val) {\n        var dDigitWidth = 7;\n        var fileWidth = (val > 1) ?\n            ((val * dDigitWidth + 5) / dDigitWidth * 256.0) / 256.0 :\n            (val * (dDigitWidth + 5) / dDigitWidth * 256.0) / 256.0;\n        return this.trunc(((256 * fileWidth + this.trunc(128 / dDigitWidth)) / 256) * dDigitWidth);\n    };\n    Workbook.prototype.trunc = function (x) {\n        var n = x - x % 1;\n        return n === 0 && (x < 0 || (x === 0 && (1 / x !== 1 / 0))) ? -0 : n;\n    };\n    Workbook.prototype.pixelsToRowHeight = function (pixels) {\n        return (pixels * this.unitsProportions[5] / this.unitsProportions[6]);\n    };\n    Workbook.prototype.saveSheetRelations = function (sheet) {\n        /* tslint:disable-next-line:max-line-length */\n        var relStr = '<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?><Relationships xmlns=\"http://schemas.openxmlformats.org/package/2006/relationships\">';\n        for (var _i = 0, _a = sheet.hyperLinks; _i < _a.length; _i++) {\n            var hLink = _a[_i];\n            /* tslint:disable-next-line:max-line-length */\n            relStr += '<Relationship Id=\"rId' + hLink.rId + '\" Type=\"http://schemas.openxmlformats.org/officeDocument/2006/relationships/hyperlink\" Target=\"' + this.processString(hLink.target) + '\" TargetMode=\"External\" />';\n        }\n        if (sheet.images != undefined && sheet.images.length > 0) {\n            /* tslint:disable-next-line:max-line-length */\n            relStr += '<Relationship Id=\"rId' + (sheet.hyperLinks.length + 1) + '\" Type=\"http://schemas.openxmlformats.org/officeDocument/2006/relationships/drawing\" Target=\"../drawings/drawing' + this.drawingCount + '.xml\" />';\n        }\n        relStr += '</Relationships>';\n        return relStr;\n    };\n    Workbook.prototype.saveSheetView = function (sheet) {\n        var paneString = '<sheetViews><sheetView workbookViewId=\"0\" ';\n        if (sheet.enableRtl === true) {\n            paneString += 'rightToLeft=\"1\"';\n        }\n        if (sheet.showGridLines === false) {\n            paneString += 'showGridLines=\"0\" >';\n        }\n        else {\n            paneString += '>';\n        }\n        if (sheet.freezePanes !== undefined) {\n            paneString += '<pane state=\"frozen\"' +\n                ' topLeftCell=\"' + sheet.freezePanes.leftCell + '\" ';\n            if (sheet.freezePanes.row !== 0) {\n                paneString += 'ySplit=\"' + sheet.freezePanes.row + '\" ';\n            }\n            if (sheet.freezePanes.column !== 0) {\n                paneString += 'xSplit=\"' + sheet.freezePanes.column + '\" ';\n            }\n            paneString += '/>';\n        }\n        paneString += '</sheetView></sheetViews > ';\n        return paneString;\n    };\n    Workbook.prototype.saveSharedString = function () {\n        var length = this.sharedString.length;\n        if (length > 0) {\n            /* tslint:disable-next-line:max-line-length */\n            var sstStart = '<?xml version=\"1.0\" encoding=\"utf-8\"?><sst uniqueCount=\"' + length + '\" count=\"' + this.sharedStringCount + '\" xmlns=\"http://schemas.openxmlformats.org/spreadsheetml/2006/main\">';\n            var si = '';\n            for (var i = 0; i < length; i++) {\n                if (this.sharedString[i].indexOf('<r>') !== 0) {\n                    si += '<si><t>';\n                    si += this.processString(this.sharedString[i]);\n                    si += '</t></si>';\n                }\n                else {\n                    si += '<si>';\n                    si += this.sharedString[i];\n                    si += '</si>';\n                }\n            }\n            si += '</sst>';\n            this.addToArchive(sstStart + si, 'xl/sharedStrings.xml');\n        }\n    };\n    Workbook.prototype.processString = function (value) {\n        if (typeof value == \"string\") {\n            if (value.indexOf('&') !== -1) {\n                value = value.replace(/&/g, '&amp;');\n            }\n            if (value.indexOf('<') !== -1) {\n                value = value.replace(/</g, '&lt;');\n            }\n            if (value.indexOf('>') !== -1) {\n                value = value.replace(/>/g, '&gt;');\n            }\n            if (value.indexOf('\\v') !== -1) {\n                value = value.replace(/\\v/g, '_x000B_');\n            }\n        }\n        else if (typeof value == \"object\") {\n            for (var i = 0; i < value.length; i++) {\n                if (value[i].indexOf('&') !== -1) {\n                    value[i] = value[i].replace(/&/g, '&amp;');\n                }\n                if (value[i].indexOf('<') !== -1) {\n                    value[i] = value[i].replace(/</g, '&lt;');\n                }\n                if (value[i].indexOf('>') !== -1) {\n                    value[i] = value[i].replace(/>/g, '&gt;');\n                }\n                if (value[i].indexOf('\\v') !== -1) {\n                    value[i] = value[i].replace(/\\v/g, '_x000B_');\n                }\n            }\n        }\n        return value;\n    };\n    Workbook.prototype.saveStyles = function () {\n        this.updateCellXfsStyleXfs();\n        /* tslint:disable-next-line:max-line-length */\n        var styleTemp = '<?xml version=\"1.0\" encoding=\"utf-8\"?><styleSheet xmlns:mc=\"http://schemas.openxmlformats.org/markup-compatibility/2006\" mc:Ignorable=\"x14ac\" xmlns:x14ac=\"http://schemas.microsoft.com/office/spreadsheetml/2009/9/ac\" xmlns=\"http://schemas.openxmlformats.org/spreadsheetml/2006/main\">';\n        styleTemp += this.saveNumberFormats();\n        styleTemp += this.saveFonts();\n        styleTemp += this.saveFills();\n        styleTemp += this.saveBorders();\n        styleTemp += this.saveCellStyleXfs();\n        styleTemp += this.saveCellXfs();\n        styleTemp += this.saveCellStyles();\n        this.addToArchive(styleTemp + '</styleSheet>', 'xl/styles.xml');\n    };\n    Workbook.prototype.updateCellXfsStyleXfs = function () {\n        for (var _i = 0, _a = this.mStyles; _i < _a.length; _i++) {\n            var style = _a[_i];\n            var cellXfs = undefined;\n            if (style.isGlobalStyle) {\n                cellXfs = new CellStyleXfs();\n                cellXfs.xfId = (style.index - 1);\n            }\n            else {\n                cellXfs = new CellXfs();\n                cellXfs.xfId = 0;\n            }\n            //Add font\n            var compareFontResult = this.isNewFont(style);\n            if (!compareFontResult.result) {\n                var font = new Font();\n                font.b = style.bold;\n                font.i = style.italic;\n                font.name = style.fontName;\n                font.sz = style.fontSize;\n                font.u = style.underline;\n                font.strike = style.strikeThrough;\n                font.color = ('FF' + style.fontColor.replace('#', ''));\n                this.mFonts.push(font);\n                cellXfs.fontId = this.mFonts.length - 1;\n            }\n            else {\n                cellXfs.fontId = compareFontResult.index;\n            }\n            //Add fill\n            if (style.backColor !== 'none') {\n                var backColor = 'FF' + style.backColor.replace('#', '');\n                if (this.mFills.has(backColor)) {\n                    var fillId = this.mFills.get(backColor);\n                    cellXfs.fillId = fillId;\n                }\n                else {\n                    var fillId = this.mFills.size + 2;\n                    this.mFills.set(backColor, fillId);\n                    cellXfs.fillId = (fillId);\n                }\n            }\n            else {\n                cellXfs.fillId = 0;\n            }\n            //Add border            \n            if (!this.isNewBorder(style)) {\n                this.mBorders.push(style.borders);\n                cellXfs.borderId = this.mBorders.length;\n            }\n            else {\n                cellXfs.borderId = 0;\n            }\n            //Add Number Format            \n            if (style.numberFormat !== 'GENERAL') {\n                if (this.mNumFmt.has(style.numberFormat)) {\n                    var numFmt = this.mNumFmt.get(style.numberFormat);\n                    cellXfs.numFmtId = numFmt.numFmtId;\n                }\n                else {\n                    var id = this.mNumFmt.size + 164;\n                    this.mNumFmt.set(style.numberFormat, new NumFmt(id, style.numberFormat));\n                    cellXfs.numFmtId = id;\n                }\n            }\n            else {\n                if (style.numberFormat === 'GENERAL' && style.numFmtId === 14) {\n                    cellXfs.numFmtId = 14;\n                }\n                else {\n                    cellXfs.numFmtId = 0;\n                }\n            }\n            //Add alignment            \n            if (!style.isGlobalStyle) {\n                cellXfs.applyAlignment = 1;\n            }\n            cellXfs.alignment = new Alignment();\n            cellXfs.alignment.indent = style.indent;\n            cellXfs.alignment.horizontal = style.hAlign;\n            cellXfs.alignment.vertical = style.vAlign;\n            cellXfs.alignment.wrapText = style.wrapText ? 1 : 0;\n            cellXfs.alignment.rotation = style.rotation;\n            if (style.isGlobalStyle) {\n                this.mCellStyleXfs.push(cellXfs);\n                this.mCellXfs.push(cellXfs);\n            }\n            else {\n                //Add cellxfs\n                this.mCellXfs.push(cellXfs);\n            }\n        }\n    };\n    Workbook.prototype.saveNumberFormats = function () {\n        if (this.mNumFmt.size >= 1) {\n            var numFmtStyle_1 = '<numFmts count=\"' + (this.mNumFmt.size) + '\">';\n            this.mNumFmt.forEach(function (value, key) {\n                numFmtStyle_1 += '<numFmt numFmtId=\"' + value.numFmtId + '\" formatCode=\"' + value.formatCode.replace(/\"/g, '&quot;') + '\" />';\n            });\n            return (numFmtStyle_1 += '</numFmts>');\n        }\n        else {\n            return '';\n        }\n    };\n    Workbook.prototype.saveFonts = function () {\n        /* tslint:disable-next-line:max-line-length */\n        var fontStyle = '<fonts count=\"' + (this.mFonts.length) + '\">';\n        if (this.mFonts.length >= 1) {\n            for (var _i = 0, _a = this.mFonts; _i < _a.length; _i++) {\n                var font = _a[_i];\n                fontStyle += '<font>';\n                if (font.b) {\n                    fontStyle += '<b />';\n                }\n                if (font.i) {\n                    fontStyle += '<i />';\n                }\n                if (font.u) {\n                    fontStyle += '<u />';\n                }\n                if (font.strike) {\n                    fontStyle += '<strike />';\n                }\n                fontStyle += '<sz val=\"' + font.sz + '\" />';\n                fontStyle += '<color rgb=\"' + font.color + '\" />';\n                fontStyle += '<name val=\"' + font.name + '\" /></font>';\n            }\n        }\n        return fontStyle + '</fonts>';\n    };\n    Workbook.prototype.saveFills = function () {\n        /* tslint:disable-next-line:max-line-length */\n        var fillsStyle = '<fills count=\"' + (this.mFills.size + 2) + '\"><fill><patternFill patternType=\"none\"></patternFill></fill><fill><patternFill patternType=\"gray125\"></patternFill></fill>';\n        if (this.mFills.size >= 1) {\n            this.mFills.forEach(function (value, key) {\n                /* tslint:disable-next-line:max-line-length */\n                fillsStyle += '<fill><patternFill patternType=\"solid\"><fgColor rgb=\"' + key + '\" /><bgColor rgb=\"FFFFFFFF\" /></patternFill></fill>';\n            });\n        }\n        return fillsStyle + '</fills>';\n    };\n    Workbook.prototype.saveBorders = function () {\n        /* tslint:disable-next-line:max-line-length */\n        var bordersStyle = '<borders count=\"' + (this.mBorders.length + 1) + '\"><border><left /><right /><top /><bottom /><diagonal /></border>';\n        if (this.mBorders.length >= 1) {\n            for (var _i = 0, _a = this.mBorders; _i < _a.length; _i++) {\n                var borders = _a[_i];\n                if (this.isAllBorder(borders)) {\n                    var color = borders.all.color.replace('#', '');\n                    var lineStyle = borders.all.lineStyle;\n                    /* tslint:disable-next-line:max-line-length */\n                    bordersStyle += '<border><left style=\"' + lineStyle + '\"><color rgb=\"FF' + color + '\" /></left><right style=\"' + lineStyle + '\"><color rgb=\"FF' + color + '\" /></right><top style=\"' + lineStyle + '\"><color rgb=\"FF' + color + '\" /></top><bottom style=\"' + lineStyle + '\"><color rgb=\"FF' + color + '\" /></bottom></border>';\n                }\n                else {\n                    /* tslint:disable-next-line:max-line-length */\n                    bordersStyle += '<border><left style=\"' + borders.left.lineStyle + '\"><color rgb=\"FF' + borders.left.color.replace('#', '') + '\" /></left><right style=\"' + borders.right.lineStyle + '\"><color rgb=\"FF' + borders.right.color.replace('#', '') + '\" /></right><top style=\"' + borders.top.lineStyle + '\"><color rgb=\"FF' + borders.top.color.replace('#', '') + '\" /></top><bottom style=\"' + borders.bottom.lineStyle + '\"><color rgb=\"FF' + borders.bottom.color.replace('#', '') + '\" /></bottom></border>';\n                }\n            }\n        }\n        return bordersStyle + '</borders>';\n    };\n    Workbook.prototype.saveCellStyles = function () {\n        var _this = this;\n        var cellStyleString = '<cellStyles  count=\"' + (this.cellStyles.size) + '\">';\n        this.cellStyles.forEach(function (value, key) {\n            cellStyleString += '<cellStyle name=\"' + key + '\" xfId=\"' + _this.cellStyles.get(key).xfId + '\"';\n            if (key === 'Normal') {\n                cellStyleString += ' builtinId=\"0\"';\n            }\n            cellStyleString += ' />';\n        });\n        return cellStyleString += '</cellStyles>';\n    };\n    Workbook.prototype.saveCellStyleXfs = function () {\n        /* tslint:disable-next-line:max-line-length */\n        var cellXfsStyle = '<cellStyleXfs count=\"' + (this.mCellStyleXfs.length + 1) + '\"><xf numFmtId=\"0\" fontId=\"0\" fillId=\"0\" borderId=\"0\" />';\n        if (this.mCellStyleXfs.length >= 1) {\n            for (var _i = 0, _a = this.mCellStyleXfs; _i < _a.length; _i++) {\n                var cellStyleXf = _a[_i];\n                /* tslint:disable-next-line:max-line-length */\n                cellXfsStyle += '<xf numFmtId=\"' + cellStyleXf.numFmtId + '\" fontId=\"' + cellStyleXf.fontId + '\" fillId=\"' + cellStyleXf.fillId + '\" borderId=\"' + cellStyleXf.borderId + '\" ';\n                if (cellStyleXf.alignment !== undefined) {\n                    cellXfsStyle += '>' + this.saveAlignment(cellStyleXf) + '</xf>';\n                }\n                else {\n                    cellXfsStyle += ' />';\n                }\n            }\n        }\n        return cellXfsStyle + '</cellStyleXfs>';\n    };\n    Workbook.prototype.saveCellXfs = function () {\n        /* tslint:disable-next-line:max-line-length */\n        var cellXfsStyle = '<cellXfs count=\"' + (this.mCellXfs.length + 1) + '\"><xf numFmtId=\"0\" fontId=\"0\" fillId=\"0\" borderId=\"0\" xfId=\"0\" />';\n        if (this.mCellXfs.length >= 1) {\n            for (var _i = 0, _a = this.mCellXfs; _i < _a.length; _i++) {\n                var cellXf = _a[_i];\n                /* tslint:disable-next-line:max-line-length */\n                cellXfsStyle += '<xf numFmtId=\"' + cellXf.numFmtId + '\" fontId=\"' + cellXf.fontId + '\" fillId=\"' + cellXf.fillId + '\" borderId=\"' + cellXf.borderId + '\" xfId=\"' + cellXf.xfId + '\" ';\n                if (cellXf.applyAlignment === 1) {\n                    cellXfsStyle += 'applyAlignment=\"1\"';\n                }\n                cellXfsStyle += '>' + this.saveAlignment(cellXf) + '</xf>';\n            }\n        }\n        return cellXfsStyle + '</cellXfs>';\n    };\n    Workbook.prototype.saveAlignment = function (cellXf) {\n        var alignString = '<alignment ';\n        if (cellXf.alignment.horizontal !== undefined) {\n            alignString += 'horizontal=\"' + cellXf.alignment.horizontal + '\" ';\n        }\n        if (cellXf.alignment.indent !== undefined && cellXf.alignment.indent !== 0) {\n            alignString += 'indent=\"' + cellXf.alignment.indent + '\" ';\n        }\n        else if (cellXf.alignment.rotation !== undefined && cellXf.alignment.rotation !== 0) {\n            alignString += 'textRotation=\"' + cellXf.alignment.rotation + '\" ';\n        }\n        if (cellXf.alignment.vertical !== undefined) {\n            alignString += 'vertical=\"' + cellXf.alignment.vertical + '\" ';\n        }\n        alignString += 'wrapText=\"' + cellXf.alignment.wrapText + '\" />';\n        return alignString;\n    };\n    Workbook.prototype.saveApp = function (builtInProperties) {\n        /* tslint:disable-next-line:max-line-length */\n        var appString = '<?xml version=\"1.0\" encoding=\"utf-8\" standalone=\"yes\"?><Properties xmlns=\"http://schemas.openxmlformats.org/officeDocument/2006/extended-properties\"><Application>Essential XlsIO</Application>';\n        if (builtInProperties !== undefined) {\n            if (builtInProperties.manager !== undefined) {\n                appString += '<Manager>' + builtInProperties.manager + '</Manager>';\n            }\n            if (builtInProperties.company !== undefined) {\n                appString += '<Company>' + builtInProperties.company + '</Company>';\n            }\n        }\n        this.addToArchive((appString + '</Properties>'), 'docProps/app.xml');\n    };\n    Workbook.prototype.saveCore = function (builtInProperties) {\n        var createdDate = new Date();\n        /* tslint:disable-next-line:max-line-length */\n        var coreString = '<?xml version=\"1.0\" encoding=\"utf-8\" standalone=\"yes\"?><cp:coreProperties xmlns:dc=\"http://purl.org/dc/elements/1.1/\" xmlns:dcterms=\"http://purl.org/dc/terms/\" xmlns:dcmitype=\"http://purl.org/dc/dcmitype/\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:cp=\"http://schemas.openxmlformats.org/package/2006/metadata/core-properties\">';\n        if (this.builtInProperties !== undefined) {\n            if (builtInProperties.author !== undefined) {\n                coreString += '<dc:creator>' + builtInProperties.author + '</dc:creator>';\n            }\n            if (builtInProperties.subject !== undefined) {\n                coreString += '<dc:subject>' + builtInProperties.subject + '</dc:subject>';\n            }\n            if (builtInProperties.category !== undefined) {\n                coreString += '<cp:category>' + builtInProperties.category + '</cp:category>';\n            }\n            if (builtInProperties.comments !== undefined) {\n                coreString += '<dc:description>' + builtInProperties.comments + '</dc:description>';\n            }\n            if (builtInProperties.title !== undefined) {\n                coreString += '<dc:title>' + builtInProperties.title + '</dc:title>';\n            }\n            if (builtInProperties.tags !== undefined) {\n                coreString += '<cp:keywords>' + builtInProperties.tags + '</cp:keywords>';\n            }\n            if (builtInProperties.status !== undefined) {\n                coreString += '<cp:contentStatus>' + builtInProperties.status + '</cp:contentStatus>';\n            }\n            if (builtInProperties.createdDate !== undefined) {\n                /* tslint:disable-next-line:max-line-length */\n                coreString += '<dcterms:created xsi:type=\"dcterms:W3CDTF\">' + builtInProperties.createdDate.toISOString() + '</dcterms:created>';\n            }\n            else {\n                coreString += '<dcterms:created xsi:type=\"dcterms:W3CDTF\">' + createdDate.toISOString() + '</dcterms:created>';\n            }\n            if (builtInProperties.modifiedDate !== undefined) {\n                /* tslint:disable-next-line:max-line-length */\n                coreString += '<dcterms:modified xsi:type=\"dcterms:W3CDTF\">' + builtInProperties.modifiedDate.toISOString() + '</dcterms:modified>';\n            }\n            else {\n                coreString += '<dcterms:modified xsi:type=\"dcterms:W3CDTF\">' + createdDate.toISOString() + '</dcterms:modified>';\n            }\n        }\n        else {\n            coreString += '<dcterms:created xsi:type=\"dcterms:W3CDTF\">' + createdDate.toISOString() + '</dcterms:created>';\n            coreString += '<dcterms:modified xsi:type=\"dcterms:W3CDTF\">' + createdDate.toISOString() + '</dcterms:modified>';\n        }\n        /* tslint:disable-next-line:max-line-length */\n        coreString += '</cp:coreProperties>';\n        this.addToArchive(coreString, 'docProps/core.xml');\n    };\n    Workbook.prototype.saveTopLevelRelation = function () {\n        /* tslint:disable-next-line:max-line-length */\n        var topRelation = '<?xml version=\"1.0\" encoding=\"utf-8\" standalone=\"yes\"?><Relationships xmlns=\"http://schemas.openxmlformats.org/package/2006/relationships\"><Relationship Id=\"rId1\" Type=\"http://schemas.openxmlformats.org/officeDocument/2006/relationships/officeDocument\" Target=\"xl/workbook.xml\" /><Relationship Id=\"rId2\" Type=\"http://schemas.openxmlformats.org/officeDocument/2006/relationships/extended-properties\" Target=\"docProps/app.xml\" /><Relationship Id=\"rId3\" Type=\"http://schemas.openxmlformats.org/package/2006/relationships/metadata/core-properties\" Target=\"docProps/core.xml\" /></Relationships>';\n        this.addToArchive(topRelation, '_rels/.rels');\n    };\n    Workbook.prototype.saveWorkbookRelation = function () {\n        /* tslint:disable-next-line:max-line-length */\n        var wbRelation = '<?xml version=\"1.0\" encoding=\"utf-8\" standalone=\"yes\"?><Relationships xmlns=\"http://schemas.openxmlformats.org/package/2006/relationships\">';\n        var length = this.worksheets.length;\n        var count = 0;\n        for (var i = 0; i < length; i++, count++) {\n            /* tslint:disable-next-line:max-line-length */\n            wbRelation += '<Relationship Id=\"rId' + (i + 1).toString() + '\" Type=\"http://schemas.openxmlformats.org/officeDocument/2006/relationships/worksheet\" Target=\"worksheets/sheet' + (i + 1).toString() + '.xml\" />';\n        }\n        /* tslint:disable-next-line:max-line-length */\n        wbRelation += '<Relationship Id=\"rId' + (++count).toString() + '\" Type=\"http://schemas.openxmlformats.org/officeDocument/2006/relationships/styles\" Target=\"styles.xml\" />';\n        if (this.sharedStringCount > 0) {\n            /* tslint:disable-next-line:max-line-length */\n            wbRelation += '<Relationship Id=\"rId' + (++count).toString() + '\" Type=\"http://schemas.openxmlformats.org/officeDocument/2006/relationships/sharedStrings\" Target=\"sharedStrings.xml\" />';\n        }\n        this.addToArchive((wbRelation + '</Relationships>'), 'xl/_rels/workbook.xml.rels');\n    };\n    Workbook.prototype.saveContentType = function () {\n        /* tslint:disable-next-line:max-line-length */\n        var contentTypeString = '<?xml version=\"1.0\" encoding=\"utf-8\" standalone=\"yes\"?><Types xmlns=\"http://schemas.openxmlformats.org/package/2006/content-types\"><Default Extension=\"xml\" ContentType=\"application/xml\" /><Default Extension=\"rels\" ContentType=\"application/vnd.openxmlformats-package.relationships+xml\" /><Override PartName=\"/xl/styles.xml\" ContentType=\"application/vnd.openxmlformats-officedocument.spreadsheetml.styles+xml\" /><Override PartName=\"/xl/workbook.xml\" ContentType=\"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet.main+xml\" /><Override PartName=\"/docProps/app.xml\" ContentType=\"application/vnd.openxmlformats-officedocument.extended-properties+xml\" /><Override PartName=\"/docProps/core.xml\" ContentType=\"application/vnd.openxmlformats-package.core-properties+xml\" />';\n        var sheetsOverride = '';\n        var length = this.worksheets.length;\n        var drawingIndex = 0;\n        for (var i = 0; i < length; i++) {\n            /* tslint:disable-next-line:max-line-length */\n            sheetsOverride += '<Override PartName=\"/xl/worksheets/sheet' + (i + 1).toString() + '.xml\" ContentType=\"application/vnd.openxmlformats-officedocument.spreadsheetml.worksheet+xml\" />';\n            if (this.worksheets[i].images != undefined && this.worksheets[i].images.length > 0) {\n                drawingIndex++;\n                /* tslint:disable-next-line:max-line-length */\n                sheetsOverride += '<Override PartName=\"/xl/drawings/drawing' + (drawingIndex).toString() + '.xml\" ContentType=\"application/vnd.openxmlformats-officedocument.drawing+xml\" />';\n            }\n        }\n        if (this.imageCount > 0)\n            sheetsOverride += '<Default Extension=\"png\" ContentType=\"image/png\" />';\n        if (this.sharedStringCount > 0) {\n            /* tslint:disable-next-line:max-line-length */\n            contentTypeString += '<Override PartName=\"/xl/sharedStrings.xml\" ContentType=\"application/vnd.openxmlformats-officedocument.spreadsheetml.sharedStrings+xml\" />';\n        }\n        this.addToArchive((contentTypeString + sheetsOverride + '</Types>'), '[Content_Types].xml');\n    };\n    Workbook.prototype.addToArchive = function (xmlString, itemName) {\n        if (typeof (xmlString) === 'string') {\n            var blob = new Blob([xmlString], { type: 'text/plain' });\n            var archiveItem = new ZipArchiveItem(blob, itemName);\n            this.mArchive.addItem(archiveItem);\n        }\n        else {\n            var archiveItem = new ZipArchiveItem(xmlString, itemName);\n            this.mArchive.addItem(archiveItem);\n        }\n    };\n    Workbook.prototype.processMergeCells = function (cell, rowIndex, mergeCells) {\n        if (cell.rowSpan !== 0 || cell.colSpan !== 0) {\n            var mCell = new MergeCell();\n            mCell.x = cell.index;\n            mCell.width = cell.colSpan;\n            mCell.y = rowIndex;\n            mCell.height = cell.rowSpan;\n            var startCell = this.getCellName(mCell.y, mCell.x);\n            var endCell = this.getCellName(rowIndex + mCell.height, cell.index + mCell.width);\n            mCell.ref = startCell + ':' + endCell;\n            var mergedCell = mergeCells.add(mCell);\n            var start = { x: mCell.x, y: mCell.y };\n            var end = {\n                x: (cell.index + mCell.width), y: (rowIndex + mCell.height)\n            };\n            this.updatedMergedCellStyles(start, end, cell);\n        }\n        return mergeCells;\n    };\n    Workbook.prototype.updatedMergedCellStyles = function (sCell, eCell, cell) {\n        for (var x = sCell.x; x <= eCell.x; x++) {\n            for (var y = sCell.y; y <= eCell.y; y++) {\n                this.mergedCellsStyle.set(this.getCellName(y, x), { x: x, y: y, styleIndex: cell.styleIndex });\n            }\n        }\n    };\n    /**\n     * Returns the tick count corresponding to the given year, month, and day.\n     * @param year number value of year\n     * @param month number value of month\n     * @param day number value of day\n     */\n    Workbook.prototype.dateToTicks = function (year, month, day) {\n        var ticksPerDay = 10000 * 1000 * 60 * 60 * 24;\n        var daysToMonth365 = [0, 31, 59, 90, 120, 151, 181, 212, 243, 273, 304, 334, 365];\n        var daysToMonth366 = [0, 31, 60, 91, 121, 152, 182, 213, 244, 274, 305, 335, 366];\n        if (year >= 1 && year <= 9999 && month >= 1 && month <= 12) {\n            var days = this.isLeapYear(year) ? daysToMonth366 : daysToMonth365;\n            var y = year - 1;\n            var n = y * 365 + ((y / 4) | 0) - ((y / 100) | 0) + ((y / 400) | 0) + days[month - 1] + day - 1;\n            return n * ticksPerDay;\n        }\n        throw new Error('Not a valid date');\n    };\n    /**\n     * Return the tick count corresponding to the given hour, minute, second.\n     * @param hour number value of hour\n     * @param minute number value if minute\n     * @param second number value of second\n     */\n    Workbook.prototype.timeToTicks = function (hour, minute, second) {\n        if (hour >= 0 && hour < 24 && minute >= 0 && minute < 60 && second >= 0 && second < 60) {\n            var totalSeconds = hour * 3600 + minute * 60 + second;\n            return totalSeconds * 10000 * 1000;\n        }\n        throw new Error('Not valid time');\n    };\n    /**\n     * Checks if given year is a leap year.\n     * @param year Year value.\n     */\n    Workbook.prototype.isLeapYear = function (year) {\n        return year % 4 === 0 && (year % 100 !== 0 || year % 400 === 0);\n    };\n    /**\n     * Converts `DateTime` to the equivalent OLE Automation date.\n     */\n    Workbook.prototype.toOADate = function (date) {\n        var ticks = 0;\n        /* tslint:disable-next-line:max-line-length */\n        ticks = this.dateToTicks(date.getFullYear(), (date.getMonth() + 1), date.getDate()) + this.timeToTicks(date.getHours(), date.getMinutes(), date.getSeconds());\n        if (ticks === 0) {\n            return 0.0;\n        }\n        var ticksPerDay = 10000 * 1000 * 60 * 60 * 24;\n        var daysTo1899 = (((365 * 4 + 1) * 25 - 1) * 4 + 1) * 4 + ((365 * 4 + 1) * 25 - 1) * 3 - 367;\n        var doubleDateOffset = daysTo1899 * ticksPerDay;\n        var oaDateMinAsTicks = (((365 * 4 + 1) * 25 - 1) - 365) * ticksPerDay;\n        if (ticks < oaDateMinAsTicks) {\n            throw new Error('Arg_OleAutDateInvalid');\n        }\n        var millisPerDay = 1000 * 60 * 60 * 24;\n        return ((ticks - doubleDateOffset) / 10000) / millisPerDay;\n    };\n    return Workbook;\n}());\nexport { Workbook };\n/**\n * BuiltInProperties Class\n * @private\n */\nvar BuiltInProperties = /** @class */ (function () {\n    function BuiltInProperties() {\n    }\n    return BuiltInProperties;\n}());\nexport { BuiltInProperties };\n"],"names":["CellStyle","this","numFmtId","backColor","fontName","fontSize","fontColor","italic","bold","underline","strikeThrough","wrapText","hAlign","vAlign","indent","rotation","numberFormat","type","borders","Borders","isGlobalStyle","Font","sz","name","u","b","i","color","strike","CellXfs","Alignment","CellStyleXfs","CellStyles","xfId","NumFmt","id","code","formatCode","Border","mLine","mColor","lineStyle","left","right","top","bottom","all","__extends","extendStatics","d","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","Cell","Cells","_super","_this","apply","arguments","add","cell","inserted","count","_i","_a","length","index","push","Column","Row","Rows","row","Worksheets","Worksheet","isSummaryRowBelow","showGridLines","enableRtl","HyperLink","Grouping","FreezePane","MergeCell","MergeCells","mergeCell","mCell","isIntersecting","intersectingCell","x","Math","min","y","Y","width","max","Width","X","height","Height","ref","split","base","compare","Image","ValueFormatter","cultureName","intl","Internationalization","getFormatFunction","format","isServerRendered","getDateFormat","getNumberFormat","toView","value","result","isNullOrUndefined","displayText","CsvHelper","json","separator","csvStr","undefined","formatter","isMicrosoftBrowser","navigator","msSaveBlob","styles","globalStyles","Map","set","worksheets","parseWorksheet","rows","parseRows","rows_1","Error","parseRow","cells","parseCell","csv","Date","style","parseCellValue","skeleton","error","has","get","ignoreCurrency","val","start","replace","indexOf","save","fileName","buffer","Blob","dataUrl_1","window","URL","createObjectURL","dwlLink","document","createElementNS","download","href","event_1","createEvent","initEvent","dispatchEvent","setTimeout","revokeObjectURL","saveAsBlob","encodingType","encoding","Encoding","encodeString","toUpperCase","getBytes","BlobHelper","parts","append","part","blob","getBlob","AutoFilters","Workbook","saveType","culture","currencyString","sharedStringCount","unitsProportions","hyperlinkStyle","currency","mSaveType","mArchive","ZipArchive","sharedString","mFonts","mBorders","mStyles","printTitles","cellStyles","mNumFmt","mFills","mCellXfs","mCellStyleXfs","drawingCount","imageCount","cellStyle","parserCellStyle","cellStylesIn","tFormat","parserWorksheets","builtInProperties","BuiltInProperties","parserBuiltInProperties","csvHelper","jsonBuiltInProperties","author","comments","category","company","manager","subject","title","createdDate","modifiedDate","tags","status","jsonSheet","sheet","mergeCells","mergedCellsStyle","mHyperLinks","toString","columns","parserColumns","parserRows","freeze","parserFreezePanes","printTitle","parserPrintTitle","pageSetup","images","parserImages","autoFilters","parseFilters","hyperLinks","mergeOptions","fromJson","toJson","applyProperties","sourceJson","destJson","keys","getCellName","column","getColumnName","col","strColumnName","iCurrentDigit","String","fromCharCode","titleRowName","printTitleName","fromRow","toRow","titleColName","fromColumn","toColumn","freezePanes","leftCell","columnsLength","rowsLength","rowId","r","parserRow","insertMergedCellsStyle","forEach","key","filter","item","rowToInsert","createCell","insertIndex","splice","styleIndex","cellToInsert","refName","rowIndex","grouping","parseGrouping","parseCells","outlineLevel","isCollapsed","isHidden","cellsLength","spanMin","spanMax","cellId","jsonCell","rowSpan","colSpan","hyperlink","hyperLink","target","getCellValueType","rId","formula","parseCellType","processMergeCells","spans","GetColors","colors","processColor","colorVal","rgbColors","processCellValue","cellValue","processedVal","startindex","endIndex","processString","substring","subString","text","subSplit","subSplit_1","element","trim","applyGlobalStyle","a","cellType","defStyleIndex","parserBorder","leftBorder","rightBorder","topBorder","bottomBorder","toLowerCase","processCellStyle","switchNumberFormat","numFmt","cellStyleXfs","_b","_c","cellXfs","changeNumberFormats","regex","RegExp","returnFormat","getNumberPattern","useGrouping","getDatePattern","border","processNumFormatId","compareResult","compareStyle","size","isNewFont","toCompareStyle","font","isNewBorder","bStyle","isAllBorder","toCompareBorder","allBorderStyle","baseStyle","contains","array","toOADate","value_1","sstvalue","imagesLength","image","parserImage","lastRow","lastColumn","horizontalFlip","verticalFlip","blobSaveType","Promise","resolve","reject","obj","blobData","saveInternal","then","proxyUrl","xlsxMatch","match","csvMatch","destroy","saveWorkbook","saveWorksheets","saveSharedString","saveStyles","saveApp","saveCore","saveContentType","saveTopLevelRelation","saveWorkbookRelation","workbookTemp","sheets","sheetName","printTitle_1","addToArchive","saveWorksheet","sheetBlob","sheetString","saveSheetView","colString","pixelsToColumnWidth","rowString","pixelsToRowHeight","_d","_e","_f","_g","_h","_j","hLink","saveDrawings","saveSheetRelations","drawings","sheetDrawingString","imgId","pic","updatelastRowOffset","updatelastColumnOffSet","lastRowOffset","lastColOffset","imageData","convertBase64toImage","saveDrawingRelations","picture","iCurHeight","iCurRow","iCurOffset","iRowHeight","iSpaceInCell","convertToPixels","rowHiddenHeight","round","iCurWidth","iCurCol","iColWidth","ColumnWidthToPixels","colHiddenWidth","img","byteStr","atob","ArrayBuffer","data","Uint8Array","charCodeAt","drawingRelation","pixels","dDigitWidth","trunc","fileWidth","n","relStr","paneString","sstStart","si","updateCellXfsStyleXfs","styleTemp","saveNumberFormats","saveFonts","saveFills","saveBorders","saveCellStyleXfs","saveCellXfs","saveCellStyles","compareFontResult","fontId","fillId","borderId","applyAlignment","alignment","horizontal","vertical","numFmtStyle_1","fontStyle","fillsStyle","bordersStyle","cellStyleString","cellXfsStyle","cellStyleXf","saveAlignment","cellXf","alignString","appString","coreString","toISOString","wbRelation","contentTypeString","sheetsOverride","drawingIndex","xmlString","itemName","archiveItem","ZipArchiveItem","addItem","startCell","endCell","end","updatedMergedCellStyles","sCell","eCell","dateToTicks","year","month","day","daysToMonth365","daysToMonth366","isLeapYear","timeToTicks","hour","minute","second","date","ticks","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","daysTo1899"],"mappings":"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"}