{"version":3,"file":"ej2-lists.min.js","sources":["../../src/common/list-base.js","../../src/sortable/sortable.js","../../src/list-view/list-view.js","../../src/list-view/virtualization.js","../../src/global.js"],"sourcesContent":["/* eslint-disable no-inner-declarations */\nimport { extend, merge, isNullOrUndefined, getValue, SanitizeHtmlHelper } from '@syncfusion/ej2-base';\nimport { attributes, prepend, isVisible, append, addClass } from '@syncfusion/ej2-base';\nimport { compile } from '@syncfusion/ej2-base';\nimport { DataManager, Query } from '@syncfusion/ej2-data';\nexport var cssClass = {\n    li: 'e-list-item',\n    ul: 'e-list-parent e-ul',\n    group: 'e-list-group-item',\n    icon: 'e-list-icon',\n    text: 'e-list-text',\n    check: 'e-list-check',\n    checked: 'e-checked',\n    selected: 'e-selected',\n    expanded: 'e-expanded',\n    textContent: 'e-text-content',\n    hasChild: 'e-has-child',\n    level: 'e-level',\n    url: 'e-list-url',\n    collapsible: 'e-icon-collapsible',\n    disabled: 'e-disabled',\n    image: 'e-list-img',\n    iconWrapper: 'e-icon-wrapper',\n    anchorWrap: 'e-anchor-wrap',\n    navigable: 'e-navigable'\n};\n/**\n * Base List Generator\n */\n// eslint-disable-next-line @typescript-eslint/no-namespace\nexport var ListBase;\n(function (ListBase) {\n    /**\n     *\n     * Default mapped fields.\n     */\n    ListBase.defaultMappedFields = {\n        id: 'id',\n        text: 'text',\n        url: 'url',\n        value: 'value',\n        isChecked: 'isChecked',\n        enabled: 'enabled',\n        expanded: 'expanded',\n        selected: 'selected',\n        iconCss: 'iconCss',\n        child: 'child',\n        isVisible: 'isVisible',\n        hasChildren: 'hasChildren',\n        tooltip: 'tooltip',\n        htmlAttributes: 'htmlAttributes',\n        urlAttributes: 'urlAttributes',\n        imageAttributes: 'imageAttributes',\n        imageUrl: 'imageUrl',\n        groupBy: null,\n        sortBy: null\n    };\n    var defaultAriaAttributes = {\n        level: 1,\n        listRole: 'presentation',\n        itemRole: 'presentation',\n        groupItemRole: 'group',\n        itemText: 'list-item',\n        wrapperRole: 'presentation'\n    };\n    var defaultListBaseOptions = {\n        showCheckBox: false,\n        showIcon: false,\n        enableHtmlSanitizer: false,\n        expandCollapse: false,\n        fields: ListBase.defaultMappedFields,\n        ariaAttributes: defaultAriaAttributes,\n        listClass: '',\n        itemClass: '',\n        processSubChild: false,\n        sortOrder: 'None',\n        template: null,\n        groupTemplate: null,\n        headerTemplate: null,\n        expandIconClass: 'e-icon-collapsible',\n        moduleName: 'list',\n        expandIconPosition: 'Right',\n        itemNavigable: false\n    };\n    /**\n     * Function helps to created and return the UL Li element based on your data.\n     *\n     * @param  {createElementParams} createElement - Specifies an array of JSON data.\n     *\n     * @param  {{Object}[]} dataSource - Specifies an array of JSON data.\n     *\n     * @param  {ListBaseOptions} [options] - Specifies the list options that need to provide.\n     *\n     * @param  {boolean} [isSingleLevel] - Specifies the list options that need to provide.\n     *\n     * @param  {any} [componentInstance] - Specifies the list options that need to provide.\n     *\n     * @returns  {createElement} createListFromJson - Specifies the list options that need to provide.\n     */\n    function createList(createElement, dataSource, options, isSingleLevel, componentInstance) {\n        var curOpt = extend({}, defaultListBaseOptions, options);\n        var ariaAttributes = extend({}, defaultAriaAttributes, curOpt.ariaAttributes);\n        var type = typeofData(dataSource).typeof;\n        if (type === 'string' || type === 'number') {\n            return createListFromArray(createElement, dataSource, isSingleLevel, options, componentInstance);\n        }\n        else {\n            return createListFromJson(createElement, dataSource, options, ariaAttributes.level, isSingleLevel, componentInstance);\n        }\n    }\n    ListBase.createList = createList;\n    /**\n     * Function helps to created an element list based on string array input .\n     *\n     * @param  {createElementParams} createElement - Specifies an array of JSON data.\n     *\n     * @param  {{Object}[]} dataSource - Specifies an array of JSON data.\n     *\n     * @param  {boolean} [isSingleLevel] - Specifies the list options that need to provide.\n     *\n     * @param  {ListBaseOptions} [options] - Specifies the list options that need to provide.\n     *\n     * @param  {any} [componentInstance] - Specifies the list options that need to provide.\n     *\n     * @returns  {createElement} generateUL - returns the list options that need to provide.\n     */\n    function createListFromArray(createElement, dataSource, isSingleLevel, options, componentInstance) {\n        var subChild = createListItemFromArray(createElement, dataSource, isSingleLevel, options, componentInstance);\n        return generateUL(createElement, subChild, null, options);\n    }\n    ListBase.createListFromArray = createListFromArray;\n    /**\n     * Function helps to created an element list based on string array input .\n     *\n     * @param  {createElementParams} createElement - Specifies an array of JSON data.\n     *\n     * @param  {{Object}[]} dataSource - Specifies an array of JSON data.\n     *\n     * @param  {boolean} [isSingleLevel] - Specifies the list options that need to provide.\n     *\n     * @param  {ListBaseOptions} [options] - Specifies the list options that need to provide.\n     *\n     * @param  {any} [componentInstance] - Specifies the list options that need to provide.\n     *\n     * @returns  {HTMLElement[]} subChild - returns the list options that need to provide.\n     */\n    function createListItemFromArray(createElement, dataSource, isSingleLevel, options, componentInstance) {\n        var subChild = [];\n        var curOpt = extend({}, defaultListBaseOptions, options);\n        cssClass = getModuleClass(curOpt.moduleName);\n        var id = generateId(); // generate id for drop-down-list option.\n        for (var i = 0; i < dataSource.length; i++) {\n            if (isNullOrUndefined(dataSource[i])) {\n                continue;\n            }\n            var li = void 0;\n            if (curOpt.itemCreating && typeof curOpt.itemCreating === 'function') {\n                var curData = {\n                    dataSource: dataSource,\n                    curData: dataSource[i],\n                    text: dataSource[i],\n                    options: curOpt\n                };\n                curOpt.itemCreating(curData);\n            }\n            if (isSingleLevel) {\n                li = generateSingleLevelLI(createElement, dataSource[i], undefined, null, null, [], null, id, i, options);\n            }\n            else {\n                li = generateLI(createElement, dataSource[i], undefined, null, null, options, componentInstance);\n            }\n            if (curOpt.itemCreated && typeof curOpt.itemCreated === 'function') {\n                var curData = {\n                    dataSource: dataSource,\n                    curData: dataSource[i],\n                    text: dataSource[i],\n                    item: li,\n                    options: curOpt\n                };\n                curOpt.itemCreated(curData);\n            }\n            subChild.push(li);\n        }\n        return subChild;\n    }\n    ListBase.createListItemFromArray = createListItemFromArray;\n    /**\n     * Function helps to created an element list based on array of JSON input .\n     *\n     * @param  {createElementParams} createElement - Specifies an array of JSON data.\n     *\n     * @param  {{Object}[]} dataSource - Specifies an array of JSON data.\n     *\n     * @param  {ListBaseOptions} [options] - Specifies the list options that need to provide.\n     *\n     * @param  {number} [level] - Specifies the list options that need to provide.\n     *\n     * @param  {boolean} [isSingleLevel] - Specifies the list options that need to provide.\n     *\n     * @param  {any} [componentInstance] - Specifies the list options that need to provide.\n     *\n     * @returns  {HTMLElement[]} child - returns the list options that need to provide.\n     */\n    function createListItemFromJson(createElement, dataSource, options, level, isSingleLevel, componentInstance) {\n        var curOpt = extend({}, defaultListBaseOptions, options);\n        cssClass = getModuleClass(curOpt.moduleName);\n        var fields = (componentInstance &&\n            (componentInstance.getModuleName() === 'listview' || componentInstance.getModuleName() === 'multiselect'))\n            ? curOpt.fields : extend({}, ListBase.defaultMappedFields, curOpt.fields);\n        var ariaAttributes = extend({}, defaultAriaAttributes, curOpt.ariaAttributes);\n        var id;\n        var checkboxElement = [];\n        if (level) {\n            ariaAttributes.level = level;\n        }\n        var child = [];\n        var li;\n        var anchorElement;\n        if (dataSource && dataSource.length && !isNullOrUndefined(typeofData(dataSource).item) &&\n            !Object.prototype.hasOwnProperty.call(typeofData(dataSource).item, fields.id)) {\n            id = generateId(); // generate id for drop-down-list option.\n        }\n        for (var i = 0; i < dataSource.length; i++) {\n            var fieldData = getFieldValues(dataSource[i], fields);\n            if (isNullOrUndefined(dataSource[i])) {\n                continue;\n            }\n            if (curOpt.itemCreating && typeof curOpt.itemCreating === 'function') {\n                var curData = {\n                    dataSource: dataSource,\n                    curData: dataSource[i],\n                    text: fieldData[fields.text],\n                    options: curOpt,\n                    fields: fields\n                };\n                curOpt.itemCreating(curData);\n            }\n            var curItem = dataSource[i];\n            if (curOpt.itemCreating && typeof curOpt.itemCreating === 'function') {\n                fieldData = getFieldValues(dataSource[i], fields);\n            }\n            if (Object.prototype.hasOwnProperty.call(fieldData, fields.id) && !isNullOrUndefined(fieldData[fields.id])) {\n                id = fieldData[fields.id];\n            }\n            var innerEle = [];\n            if (curOpt.showCheckBox) {\n                if (curOpt.itemNavigable && (fieldData[fields.url] || fieldData[fields.urlAttributes])) {\n                    checkboxElement.push(createElement('input', { className: cssClass.check, attrs: { type: 'checkbox' } }));\n                }\n                else {\n                    innerEle.push(createElement('input', { className: cssClass.check, attrs: { type: 'checkbox' } }));\n                }\n            }\n            if (isSingleLevel === true) {\n                if (curOpt.showIcon && Object.prototype.hasOwnProperty.call(fieldData, fields.iconCss)\n                    && !isNullOrUndefined(fieldData[fields.iconCss])) {\n                    innerEle.push(createElement('span', { className: cssClass.icon + ' ' + fieldData[fields.iconCss] }));\n                }\n                li = generateSingleLevelLI(createElement, curItem, fieldData, fields, curOpt.itemClass, innerEle, (Object.prototype.hasOwnProperty.call(curItem, 'isHeader') &&\n                    curItem.isHeader) ? true : false, id, i, options);\n                anchorElement = li.querySelector('.' + cssClass.anchorWrap);\n                if (curOpt.itemNavigable && checkboxElement.length) {\n                    prepend(checkboxElement, li.firstElementChild);\n                }\n            }\n            else {\n                li = generateLI(createElement, curItem, fieldData, fields, curOpt.itemClass, options, componentInstance);\n                li.classList.add(cssClass.level + '-' + ariaAttributes.level);\n                li.setAttribute('aria-level', ariaAttributes.level.toString());\n                if (ariaAttributes.groupItemRole === 'presentation' || ariaAttributes.itemRole === 'presentation') {\n                    li.removeAttribute('aria-level');\n                }\n                anchorElement = li.querySelector('.' + cssClass.anchorWrap);\n                if (Object.prototype.hasOwnProperty.call(fieldData, fields.tooltip)) {\n                    var tooltipText = fieldData[fields.tooltip];\n                    if (options && options.enableHtmlSanitizer) {\n                        tooltipText = SanitizeHtmlHelper.sanitize(tooltipText);\n                    }\n                    else {\n                        var tooltipTextElement = createElement('span', { innerHTML: tooltipText });\n                        tooltipText = tooltipTextElement.innerText;\n                        tooltipTextElement = null;\n                    }\n                    li.setAttribute('title', tooltipText);\n                }\n                if (Object.prototype.hasOwnProperty.call(fieldData, fields.htmlAttributes) && fieldData[fields.htmlAttributes]) {\n                    var htmlAttributes = fieldData[fields.htmlAttributes];\n                    // Check if 'class' attribute is present and not an empty string\n                    if ('class' in htmlAttributes && typeof htmlAttributes['class'] === 'string' && htmlAttributes['class'].trim() === '') {\n                        delete htmlAttributes['class'];\n                    }\n                    setAttribute(li, htmlAttributes);\n                }\n                if (Object.prototype.hasOwnProperty.call(fieldData, fields.enabled) && fieldData[fields.enabled] === false) {\n                    li.classList.add(cssClass.disabled);\n                }\n                if (Object.prototype.hasOwnProperty.call(fieldData, fields.isVisible) && fieldData[fields.isVisible] === false) {\n                    li.style.display = 'none';\n                }\n                if (Object.prototype.hasOwnProperty.call(fieldData, fields.imageUrl) && !isNullOrUndefined(fieldData[fields.imageUrl])\n                    && !curOpt.template) {\n                    var attr = { src: fieldData[fields.imageUrl], alt: !isNullOrUndefined(fieldData.name) ? ('Displaying ' + fieldData.name + ' Image') : 'Displaying Image' };\n                    merge(attr, fieldData[fields.imageAttributes]);\n                    var imageElemnt = createElement('img', { className: cssClass.image, attrs: attr });\n                    if (anchorElement) {\n                        anchorElement.insertAdjacentElement('afterbegin', imageElemnt);\n                    }\n                    else {\n                        prepend([imageElemnt], li.firstElementChild);\n                    }\n                }\n                if (curOpt.showIcon && Object.prototype.hasOwnProperty.call(fieldData, fields.iconCss) &&\n                    !isNullOrUndefined(fieldData[fields.iconCss]) && !curOpt.template) {\n                    var iconElement = createElement('div', { className: cssClass.icon + ' ' + fieldData[fields.iconCss] });\n                    if (anchorElement) {\n                        anchorElement.insertAdjacentElement('afterbegin', iconElement);\n                    }\n                    else {\n                        prepend([iconElement], li.firstElementChild);\n                    }\n                }\n                if (innerEle.length) {\n                    prepend(innerEle, li.firstElementChild);\n                }\n                if (curOpt.itemNavigable && checkboxElement.length) {\n                    prepend(checkboxElement, li.firstElementChild);\n                }\n                processSubChild(createElement, fieldData, fields, dataSource, curOpt, li, ariaAttributes.level);\n            }\n            if (anchorElement) {\n                addClass([li], [cssClass.navigable]);\n            }\n            if (curOpt.itemCreated && typeof curOpt.itemCreated === 'function') {\n                var curData = {\n                    dataSource: dataSource,\n                    curData: dataSource[i],\n                    text: fieldData[fields.text],\n                    item: li,\n                    options: curOpt,\n                    fields: fields\n                };\n                curOpt.itemCreated(curData);\n            }\n            checkboxElement = [];\n            child.push(li);\n        }\n        return child;\n    }\n    ListBase.createListItemFromJson = createListItemFromJson;\n    /**\n     * Function helps to created an element list based on array of JSON input .\n     *\n     * @param  {createElementParams} createElement - Specifies an array of JSON data.\n     *\n     * @param  {{Object}[]} dataSource - Specifies an array of JSON data.\n     *\n     * @param  {ListBaseOptions} [options] - Specifies the list options that need to provide.\n     *\n     * @param  {number} [level] - Specifies the list options that need to provide.\n     *\n     * @param  {boolean} [isSingleLevel] - Specifies the list options that need to provide.\n     *\n     * @param  {any} [componentInstance] - Specifies the list options that need to provide.\n     *\n     * @returns  {createElement} generateUL - Specifies the list options that need to provide.\n     */\n    function createListFromJson(createElement, dataSource, options, level, isSingleLevel, componentInstance) {\n        var curOpt = extend({}, defaultListBaseOptions, options);\n        var li = createListItemFromJson(createElement, dataSource, options, level, isSingleLevel, componentInstance);\n        return generateUL(createElement, li, curOpt.listClass, options);\n    }\n    ListBase.createListFromJson = createListFromJson;\n    /**\n     * Return the next or previous visible element.\n     *\n     * @param  {Element[]|NodeList} elementArray - An element array to find next or previous element.\n     * @param  {Element} element - An element to find next or previous after this element.\n     * @param  {boolean} [isPrevious] - Specify when the need get previous element from array.\n     * @returns {Element|undefined} The next or previous visible element, or undefined if the element array is empty.\n     */\n    function getSiblingLI(elementArray, element, isPrevious) {\n        cssClass = getModuleClass(defaultListBaseOptions.moduleName);\n        if (!elementArray || !elementArray.length) {\n            return void 0;\n        }\n        var siblingLI;\n        var liIndex;\n        var liCollections = Array.prototype.slice.call(elementArray);\n        if (element) {\n            liIndex = indexOf(element, liCollections);\n        }\n        else {\n            liIndex = (isPrevious === true ? liCollections.length : -1);\n        }\n        siblingLI = liCollections[liIndex + (isPrevious === true ? -1 : 1)];\n        while (siblingLI && (!isVisible(siblingLI) || siblingLI.classList.contains(cssClass.disabled))) {\n            liIndex = liIndex + (isPrevious === true ? -1 : 1);\n            siblingLI = liCollections[liIndex];\n        }\n        return siblingLI;\n    }\n    ListBase.getSiblingLI = getSiblingLI;\n    /**\n     * Return the index of the li element\n     *\n     * @param  {Element} item - An element to find next or previous after this element.\n     * @param  {Element[]} elementArray - An element array to find index of given li.\n     * @returns {number} - The index of the item in the element array, or undefined if either parameter is false.\n     */\n    function indexOf(item, elementArray) {\n        if (!elementArray || !item) {\n            return void 0;\n        }\n        else {\n            var liCollections = elementArray;\n            liCollections = Array.prototype.slice.call(elementArray);\n            return liCollections.indexOf(item);\n        }\n    }\n    ListBase.indexOf = indexOf;\n    /**\n     * Returns the grouped data from given dataSource.\n     *\n     * @param  {{Object}[]} dataSource - The JSON data which is necessary to process.\n     * @param  {FieldsMapping} fields - Fields that are mapped from the data source.\n     * @param  {SortOrder} [sortOrder='None'] - Specifies final result sort order. Defaults to 'None'.\n     * @returns {Object[]} - The grouped data.\n     */\n    function groupDataSource(dataSource, fields, sortOrder) {\n        if (sortOrder === void 0) { sortOrder = 'None'; }\n        var curFields = extend({}, ListBase.defaultMappedFields, fields);\n        var cusQuery = new Query().group(curFields.groupBy);\n        // need to remove once sorting issues fixed in DataManager\n        cusQuery = addSorting(sortOrder, 'key', cusQuery);\n        var ds = getDataSource(dataSource, cusQuery);\n        dataSource = [];\n        for (var j = 0; j < ds.length; j++) {\n            var itemObj = ds[j].items;\n            var grpItem = {};\n            var hdr = 'isHeader';\n            grpItem[curFields.text] = ds[j].key;\n            grpItem[\"\" + hdr] = true;\n            var newtext = curFields.text;\n            if (newtext === 'id') {\n                newtext = 'text';\n                grpItem[\"\" + newtext] = ds[j].key;\n            }\n            grpItem._id = 'group-list-item-' + (ds[j].key ?\n                ds[j].key.toString().trim() : 'undefined');\n            grpItem.items = itemObj;\n            dataSource.push(grpItem);\n            for (var k = 0; k < itemObj.length; k++) {\n                dataSource.push(itemObj[k]);\n            }\n        }\n        return dataSource;\n    }\n    ListBase.groupDataSource = groupDataSource;\n    /**\n     * Returns a sorted query object.\n     *\n     * @param  {SortOrder} sortOrder - Specifies that sort order.\n     * @param  {string} sortBy - Specifies sortBy fields.\n     * @param  {Query} query - Pass if any existing query.\n     * @returns {Query} - The updated query object with sorting applied.\n     */\n    function addSorting(sortOrder, sortBy, query) {\n        if (query === void 0) { query = new Query(); }\n        if (sortOrder === 'Ascending') {\n            query.sortBy(sortBy, 'ascending', true);\n        }\n        else if (sortOrder === 'Descending') {\n            query.sortBy(sortBy, 'descending', true);\n        }\n        else {\n            for (var i = 0; i < query.queries.length; i++) {\n                if (query.queries[i].fn === 'onSortBy') {\n                    query.queries.splice(i, 1);\n                }\n            }\n        }\n        return query;\n    }\n    ListBase.addSorting = addSorting;\n    /**\n     * Return an array of JSON Data that processed based on queries.\n     *\n     * @param  {{Object}[]} dataSource - Specifies local JSON data source.\n     *\n     * @param  {Query} query - Specifies query that need to process.\n     *\n     * @returns {Object[]} - An array of objects representing the retrieved data.\n     */\n    function getDataSource(dataSource, query) {\n        return new DataManager(dataSource)\n            .executeLocal(query);\n    }\n    ListBase.getDataSource = getDataSource;\n    /**\n     * Created JSON data based the UL and LI element\n     *\n     * @param  {HTMLElement|Element} element - UL element that need to convert as a JSON\n     * @param  {ListBaseOptions} [options] - Specifies ListBase option for fields.\n     * @returns {Object[]} - An array of objects representing the JSON data.\n     */\n    function createJsonFromElement(element, options) {\n        var curOpt = extend({}, defaultListBaseOptions, options);\n        var fields = extend({}, ListBase.defaultMappedFields, curOpt.fields);\n        var curEle = element.cloneNode(true);\n        var jsonAr = [];\n        curEle.classList.add('json-parent');\n        var childs = curEle.querySelectorAll('.json-parent>li');\n        curEle.classList.remove('json-parent');\n        for (var i = 0; i < childs.length; i++) {\n            var li = childs[i];\n            var anchor = li.querySelector('a');\n            var ul = li.querySelector('ul');\n            var json = {};\n            var childNodes = anchor ? anchor.childNodes : li.childNodes;\n            var keys = Object.keys(childNodes);\n            for (var i_1 = 0; i_1 < childNodes.length; i_1++) {\n                if (!(childNodes[Number(keys[i_1])]).hasChildNodes()) {\n                    json[fields.text] = childNodes[Number(keys[i_1])].textContent;\n                }\n            }\n            var attributes_1 = getAllAttributes(li);\n            if (attributes_1.id) {\n                json[fields.id] = attributes_1.id;\n                delete attributes_1.id;\n            }\n            else {\n                json[fields.id] = generateId();\n            }\n            if (Object.keys(attributes_1).length) {\n                json[fields.htmlAttributes] = attributes_1;\n            }\n            if (anchor) {\n                attributes_1 = getAllAttributes(anchor);\n                if (Object.keys(attributes_1).length) {\n                    json[fields.urlAttributes] = attributes_1;\n                }\n            }\n            if (ul) {\n                json[fields.child] = createJsonFromElement(ul, options);\n            }\n            jsonAr.push(json);\n        }\n        return jsonAr;\n    }\n    ListBase.createJsonFromElement = createJsonFromElement;\n    /**\n     * Determines the type of data in an array of objects, strings, or numbers.\n     *\n     * @param {Object[] | string[] | number[]} data - The array containing objects, strings, or numbers.\n     * @returns {{typeof: (string | null), item: (Object | string | number)}} - An object containing the type of data and the corresponding item.\n     */\n    function typeofData(data) {\n        var match = { typeof: null, item: null };\n        for (var i = 0; i < data.length; i++) {\n            if (!isNullOrUndefined(data[i])) {\n                return match = { typeof: typeof data[i], item: data[i] };\n            }\n        }\n        return match;\n    }\n    /**\n     * Sets attributes on an HTML element.\n     *\n     * @param {HTMLElement} element - The HTML element to set attributes on.\n     * @param {Object.<string, string>} elementAttributes - An object containing attribute names and their corresponding values.\n     * @returns {void}\n     */\n    function setAttribute(element, elementAttributes) {\n        var attr = {};\n        merge(attr, elementAttributes);\n        if (attr.class) {\n            addClass([element], attr.class.split(' '));\n            delete attr.class;\n        }\n        attributes(element, attr);\n    }\n    /**\n     * Retrieves all attributes of an HTML element.\n     *\n     * @param {HTMLElement} element - The HTML element to retrieve attributes from.\n     * @returns {Object.<string, string>} - An object containing attribute names as keys and their corresponding values as values.\n     */\n    function getAllAttributes(element) {\n        var attributes = {};\n        var attr = element.attributes;\n        for (var index = 0; index < attr.length; index++) {\n            attributes[attr[index].nodeName] = attr[index].nodeValue;\n        }\n        return attributes;\n    }\n    /**\n     * Created UL element from content template.\n     *\n     * @param  {createElementParams} createElement - Specifies an array of JSON data.\n     * @param  {string} template - that need to convert and generate li element.\n     * @param  {{Object}[]} dataSource - Specifies local JSON data source.\n     * @param  {FieldsMapping} [fields] - Specifies fields for mapping the dataSource.\n     * @param  {ListBaseOptions} [options] - Specifies ListBase option for fields.\n     * @param  {any} [componentInstance] - Specifies component instance.\n     * @returns {HTMLElement} - The generated LI element.\n     */\n    function renderContentTemplate(createElement, template, dataSource, fields, options, componentInstance) {\n        cssClass = getModuleClass(defaultListBaseOptions.moduleName);\n        var ulElement = createElement('ul', { className: cssClass.ul, attrs: { role: 'presentation' } });\n        var curOpt = extend({}, defaultListBaseOptions, options);\n        var curFields = extend({}, ListBase.defaultMappedFields, fields);\n        var compiledString = compileTemplate(template);\n        var liCollection = [];\n        var value;\n        var id = generateId(); // generate id for drop-down-list option.\n        for (var i = 0; i < dataSource.length; i++) {\n            var fieldData = getFieldValues(dataSource[i], curFields);\n            var curItem = dataSource[i];\n            var isHeader = curItem.isHeader;\n            if (typeof dataSource[i] === 'string' || typeof dataSource[i] === 'number') {\n                value = curItem;\n            }\n            else {\n                value = fieldData[curFields.value];\n            }\n            if (curOpt.itemCreating && typeof curOpt.itemCreating === 'function') {\n                var curData = {\n                    dataSource: dataSource,\n                    curData: curItem,\n                    text: value,\n                    options: curOpt,\n                    fields: curFields\n                };\n                curOpt.itemCreating(curData);\n            }\n            if (curOpt.itemCreating && typeof curOpt.itemCreating === 'function') {\n                fieldData = getFieldValues(dataSource[i], curFields);\n                if (typeof dataSource[i] === 'string' || typeof dataSource[i] === 'number') {\n                    value = curItem;\n                }\n                else {\n                    value = fieldData[curFields.value];\n                }\n            }\n            var li = createElement('li', {\n                id: id + '-' + i,\n                className: isHeader ? cssClass.group : cssClass.li, attrs: { role: 'presentation' }\n            });\n            if (isHeader) {\n                if (typeof dataSource[i] === 'string' || typeof dataSource[i] === 'number') {\n                    li.innerText = curItem;\n                }\n                else {\n                    li.innerText = fieldData[curFields.text];\n                }\n            }\n            else {\n                var currentID = isHeader ? curOpt.groupTemplateID : curOpt.templateID;\n                if (isHeader) {\n                    if (componentInstance && componentInstance.getModuleName() !== 'listview') {\n                        var compiledElement = compiledString(curItem, componentInstance, 'headerTemplate', currentID, !!curOpt.isStringTemplate, null, li);\n                        if (compiledElement) {\n                            append(compiledElement, li);\n                        }\n                    }\n                    else {\n                        append(compiledString(curItem, componentInstance, 'headerTemplate', currentID, !!curOpt.isStringTemplate), li);\n                    }\n                }\n                else {\n                    if (componentInstance && componentInstance.getModuleName() !== 'listview') {\n                        var compiledElement = compiledString(curItem, componentInstance, 'template', currentID, !!curOpt.isStringTemplate, null, li);\n                        if (compiledElement) {\n                            append(compiledElement, li);\n                        }\n                    }\n                    else {\n                        append(compiledString(curItem, componentInstance, 'template', currentID, !!curOpt.isStringTemplate), li);\n                    }\n                }\n                li.setAttribute('data-value', isNullOrUndefined(value) ? 'null' : value);\n                li.setAttribute('role', 'option');\n            }\n            if (curOpt.itemCreated && typeof curOpt.itemCreated === 'function') {\n                var curData = {\n                    dataSource: dataSource,\n                    curData: curItem,\n                    text: value,\n                    item: li,\n                    options: curOpt,\n                    fields: curFields\n                };\n                curOpt.itemCreated(curData);\n            }\n            liCollection.push(li);\n        }\n        append(liCollection, ulElement);\n        return ulElement;\n    }\n    ListBase.renderContentTemplate = renderContentTemplate;\n    /**\n     * Created header items from group template.\n     *\n     * @param  {string | Function} groupTemplate - that need to convert and generate li element.\n     *\n     * @param {{Object}[]} groupDataSource - Specifies local JSON data source.\n     *\n     * @param  {FieldsMapping} fields - Specifies fields for mapping the dataSource.\n     *\n     * @param  {Element[]} headerItems - Specifies ListBase header items.\n     *\n     * @param {ListBaseOptions} [options] - Optional ListBase options.\n     *\n     * @param {*} [componentInstance] - Optional component instance.\n     *\n     * @returns {Element[]} - An array of header elements with the rendered group template content.\n     */\n    function renderGroupTemplate(groupTemplate, \n    // tslint:disable-next-line\n    groupDataSource, fields, headerItems, options, componentInstance) {\n        var compiledString = compileTemplate(groupTemplate);\n        var curFields = extend({}, ListBase.defaultMappedFields, fields);\n        var curOpt = extend({}, defaultListBaseOptions, options);\n        var category = curFields.groupBy;\n        for (var _i = 0, headerItems_1 = headerItems; _i < headerItems_1.length; _i++) {\n            var header = headerItems_1[_i];\n            var headerData = {};\n            headerData[\"\" + category] = header.textContent;\n            header.innerHTML = '';\n            if (componentInstance && componentInstance.getModuleName() !== 'listview') {\n                var compiledElement = compiledString(headerData, componentInstance, 'groupTemplate', curOpt.groupTemplateID, !!curOpt.isStringTemplate, null, header);\n                if (compiledElement) {\n                    append(compiledElement, header);\n                }\n            }\n            else {\n                append(compiledString(headerData, componentInstance, 'groupTemplate', curOpt.groupTemplateID, !!curOpt.isStringTemplate), header);\n            }\n        }\n        return headerItems;\n    }\n    ListBase.renderGroupTemplate = renderGroupTemplate;\n    /**\n     * Generates a random hexadecimal ID string.\n     *\n     * @returns {string} - The generated ID string.\n     */\n    function generateId() {\n        return Math.floor((1 + Math.random()) * 0x10000)\n            .toString(16)\n            .substring(1);\n    }\n    ListBase.generateId = generateId;\n    /**\n     * Processes the sub-child elements and creates corresponding elements based on the provided field data and options.\n     *\n     * @param {Function} createElement - Function for creating elements.\n     * @param {Object} fieldData - Field data containing sub-child information.\n     * @param {FieldsMapping} fields - Field mappings.\n     * @param {Object[]} ds - The data source array containing sub-child elements.\n     * @param {ListBaseOptions} options - ListBase options.\n     * @param {HTMLElement} element - The parent HTML element to append sub-child elements to.\n     * @param {number} level - The level of the sub-child elements.\n     * @returns {void}\n     */\n    function processSubChild(createElement, fieldData, fields, ds, options, element, level) {\n        // Get SubList\n        var subDS = fieldData[fields.child] || [];\n        var hasChildren = fieldData[fields.hasChildren];\n        //Create Sub child\n        if (subDS.length) {\n            hasChildren = true;\n            element.classList.add(cssClass.hasChild);\n            if (options.processSubChild) {\n                var subLi = createListFromJson(createElement, subDS, options, ++level);\n                element.appendChild(subLi);\n            }\n        }\n        // Create expand and collapse node\n        if (!!options.expandCollapse && hasChildren && !options.template) {\n            element.firstElementChild.classList.add(cssClass.iconWrapper);\n            var expandElement = options.expandIconPosition === 'Left' ? prepend : append;\n            expandElement([createElement('div', { className: 'e-icons ' + options.expandIconClass })], element.querySelector('.' + cssClass.textContent));\n        }\n    }\n    /**\n     * Generates a single-level LI (list item) element based on the provided item and field data.\n     *\n     * @param {Function} createElement - Function for creating elements.\n     * @param {string | Object | number} item - The item data.\n     * @param {Object} fieldData - Field data mapped from the item.\n     * @param {FieldsMapping} [fields] - Field mappings.\n     * @param {string} [className] - Optional class name to add to the created LI element.\n     * @param {HTMLElement[]} [innerElements] - Optional array of inner elements to append to the LI element.\n     * @param {boolean} [grpLI] - Indicates if the LI element is a group item.\n     * @param {string} [id] - The ID of the LI element.\n     * @param {number} [index] - The index of the LI element.\n     * @param {ListBaseOptions} [options] - Optional ListBase options.\n     * @returns {HTMLElement} - The generated LI element.\n     */\n    function generateSingleLevelLI(createElement, item, fieldData, fields, className, innerElements, grpLI, id, index, options) {\n        var curOpt = extend({}, defaultListBaseOptions, options);\n        var ariaAttributes = extend({}, defaultAriaAttributes, curOpt.ariaAttributes);\n        var text = item;\n        var value = item;\n        var dataSource;\n        if (typeof item !== 'string' && typeof item !== 'number' && typeof item !== 'boolean') {\n            dataSource = item;\n            text = (typeof fieldData[fields.text] === 'boolean' || typeof fieldData[fields.text] === 'number') ?\n                fieldData[fields.text] : (fieldData[fields.text] || '');\n            value = fieldData[fields.value];\n        }\n        var elementID;\n        if (!isNullOrUndefined(dataSource) && !isNullOrUndefined(fieldData[fields.id])\n            && fieldData[fields.id] !== '') {\n            elementID = id;\n        }\n        else {\n            elementID = id + '-' + index;\n        }\n        var li = createElement('li', {\n            className: (grpLI === true ? cssClass.group : cssClass.li) + ' ' + (isNullOrUndefined(className) ? '' : className),\n            id: elementID, attrs: (ariaAttributes.groupItemRole !== '' && ariaAttributes.itemRole !== '' ?\n                { role: (grpLI === true ? ariaAttributes.groupItemRole : ariaAttributes.itemRole) } : {})\n        });\n        if (dataSource && Object.prototype.hasOwnProperty.call(fieldData, fields.enabled) && fieldData[fields.enabled].toString() === 'false') {\n            li.classList.add(cssClass.disabled);\n        }\n        if (grpLI) {\n            li.innerText = text;\n        }\n        else {\n            li.setAttribute('data-value', isNullOrUndefined(value) ? 'null' : value);\n            li.setAttribute('role', 'option');\n            if (dataSource && Object.prototype.hasOwnProperty.call(fieldData, fields.htmlAttributes) && fieldData[fields.htmlAttributes]) {\n                setAttribute(li, fieldData[fields.htmlAttributes]);\n            }\n            if (innerElements.length && !curOpt.itemNavigable) {\n                append(innerElements, li);\n            }\n            if (dataSource && (fieldData[fields.url] || (fieldData[fields.urlAttributes] &&\n                fieldData[fields.urlAttributes].href))) {\n                li.appendChild(anchorTag(createElement, dataSource, fields, text, innerElements, curOpt.itemNavigable));\n            }\n            else {\n                if (innerElements.length && curOpt.itemNavigable) {\n                    append(innerElements, li);\n                }\n                li.appendChild(document.createTextNode(text));\n            }\n        }\n        return li;\n    }\n    /**\n     * Returns a set of CSS class names based on the provided module name.\n     *\n     * @param {string} moduleName - The name of the module.\n     * @returns {ClassList} - The CSS class names associated with the module.\n     */\n    function getModuleClass(moduleName) {\n        var moduleClass;\n        // eslint-disable-next-line\n        return moduleClass = {\n            li: \"e-\" + moduleName + \"-item\",\n            ul: \"e-\" + moduleName + \"-parent e-ul\",\n            group: \"e-\" + moduleName + \"-group-item\",\n            icon: \"e-\" + moduleName + \"-icon\",\n            text: \"e-\" + moduleName + \"-text\",\n            check: \"e-\" + moduleName + \"-check\",\n            checked: 'e-checked',\n            selected: 'e-selected',\n            expanded: 'e-expanded',\n            textContent: 'e-text-content',\n            hasChild: 'e-has-child',\n            level: 'e-level',\n            url: \"e-\" + moduleName + \"-url\",\n            collapsible: 'e-icon-collapsible',\n            disabled: 'e-disabled',\n            image: \"e-\" + moduleName + \"-img\",\n            iconWrapper: 'e-icon-wrapper',\n            anchorWrap: 'e-anchor-wrap',\n            navigable: 'e-navigable'\n        };\n    }\n    /**\n     * Creates an anchor tag (<a>) element based on the provided data source, fields, and text.\n     *\n     * @param {Function} createElement - Function for creating elements.\n     * @param {object} dataSource - The data source containing URL-related fields.\n     * @param {FieldsMapping} fields - Field mappings for the data source.\n     * @param {string} text - The text content of the anchor tag.\n     * @param {HTMLElement[]} innerElements - Optional array of inner elements to append to the anchor tag.\n     * @param {boolean} isFullNavigation - Indicates whether the anchor tag should be for full navigation.\n     * @returns {HTMLElement} The created anchor tag element.\n     */\n    function anchorTag(createElement, dataSource, fields, text, innerElements, isFullNavigation) {\n        var fieldData = getFieldValues(dataSource, fields);\n        var attr = { href: fieldData[fields.url] };\n        if (Object.prototype.hasOwnProperty.call(fieldData, fields.urlAttributes) && fieldData[fields.urlAttributes]) {\n            merge(attr, fieldData[fields.urlAttributes]);\n            attr.href = fieldData[fields.url] ? fieldData[fields.url] :\n                fieldData[fields.urlAttributes].href;\n        }\n        var anchorTag;\n        if (!isFullNavigation) {\n            anchorTag = createElement('a', { className: cssClass.text + ' ' + cssClass.url, innerHTML: text });\n        }\n        else {\n            anchorTag = createElement('a', { className: cssClass.text + ' ' + cssClass.url });\n            var anchorWrapper = createElement('div', { className: cssClass.anchorWrap });\n            if (innerElements && innerElements.length) {\n                append(innerElements, anchorWrapper);\n            }\n            anchorWrapper.appendChild(document.createTextNode(text));\n            append([anchorWrapper], anchorTag);\n        }\n        setAttribute(anchorTag, attr);\n        return anchorTag;\n    }\n    /**\n     * Generates an LI element based on the provided item and field data.\n     *\n     * @param {Function} createElement - Function for creating elements.\n     * @param {string | Object | number} item - The item data.\n     * @param {Object} fieldData - Field data mapped from the item.\n     * @param {FieldsMapping} fields - Field mappings.\n     * @param {string} [className] - Optional class name to add to the created LI element.\n     * @param {ListBaseOptions} [options] - Optional ListBase options.\n     * @param {*} [componentInstance] - Optional component instance.\n     * @returns {HTMLElement} - The generated LI element.\n     */\n    function generateLI(createElement, item, fieldData, fields, className, options, componentInstance) {\n        var curOpt = extend({}, defaultListBaseOptions, options);\n        var ariaAttributes = extend({}, defaultAriaAttributes, curOpt.ariaAttributes);\n        var text = item;\n        var uID;\n        var grpLI;\n        var dataSource;\n        if (typeof item !== 'string' && typeof item !== 'number') {\n            dataSource = item;\n            text = fieldData[fields.text] || '';\n            uID = (isNullOrUndefined(fieldData['_id'])) ? fieldData[fields.id] : fieldData['_id'];\n            grpLI = (Object.prototype.hasOwnProperty.call(item, 'isHeader') && item.isHeader)\n                ? true : false;\n        }\n        if (options && options.enableHtmlSanitizer) {\n            // eslint-disable-next-line no-self-assign\n            text = text;\n        }\n        var li = createElement('li', {\n            className: (grpLI === true ? cssClass.group : cssClass.li) + ' ' + (isNullOrUndefined(className) ? '' : className),\n            attrs: (ariaAttributes.groupItemRole !== '' && ariaAttributes.itemRole !== '' ?\n                { role: (grpLI === true ? ariaAttributes.groupItemRole : ariaAttributes.itemRole) } : {})\n        });\n        if (!isNullOrUndefined(uID) === true) {\n            li.setAttribute('data-uid', uID);\n        }\n        else {\n            li.setAttribute('data-uid', generateId());\n        }\n        if (grpLI && options && options.groupTemplate) {\n            var compiledString = compileTemplate(options.groupTemplate);\n            if (componentInstance && componentInstance.getModuleName() !== 'listview') {\n                var compiledElement = compiledString(item, componentInstance, 'groupTemplate', curOpt.groupTemplateID, !!curOpt.isStringTemplate, null, li);\n                if (compiledElement) {\n                    append(compiledElement, li);\n                }\n            }\n            else {\n                append(compiledString(item, componentInstance, 'groupTemplate', curOpt.groupTemplateID, !!curOpt.isStringTemplate), li);\n            }\n        }\n        else if (!grpLI && options && options.template) {\n            var compiledString = compileTemplate(options.template);\n            if (componentInstance && componentInstance.getModuleName() !== 'listview') {\n                var compiledElement = compiledString(item, componentInstance, 'template', curOpt.templateID, !!curOpt.isStringTemplate, null, li);\n                if (compiledElement) {\n                    append(compiledElement, li);\n                }\n            }\n            else {\n                append(compiledString(item, componentInstance, 'template', curOpt.templateID, !!curOpt.isStringTemplate), li);\n            }\n        }\n        else {\n            var innerDiv = createElement('div', {\n                className: cssClass.textContent,\n                attrs: (ariaAttributes.wrapperRole !== '' ? { role: ariaAttributes.wrapperRole } : {})\n            });\n            if (dataSource && (fieldData[fields.url] || (fieldData[fields.urlAttributes] &&\n                fieldData[fields.urlAttributes].href))) {\n                innerDiv.appendChild(anchorTag(createElement, dataSource, fields, text, null, curOpt.itemNavigable));\n            }\n            else {\n                var element = createElement('span', {\n                    className: cssClass.text,\n                    attrs: (ariaAttributes.itemText !== '' ? { role: ariaAttributes.itemText } : {})\n                });\n                if (options && options.enableHtmlSanitizer) {\n                    element.innerText = SanitizeHtmlHelper.sanitize(text);\n                }\n                else {\n                    element.innerHTML = text;\n                }\n                innerDiv.appendChild(element);\n            }\n            li.appendChild(innerDiv);\n        }\n        return li;\n    }\n    /**\n     * Returns UL element based on the given LI element.\n     *\n     * @param {Function} createElement - Function for creating elements.\n     *\n     * @param  {HTMLElement[]} liElement - Specifies array of LI element.\n     *\n     * @param  {string} [className] - Specifies class name that need to be added in UL element.\n     *\n     * @param  {ListBaseOptions} [options] - Specifies ListBase options.\n     *\n     * @returns {HTMLElement} - The created UL element.\n     */\n    function generateUL(createElement, liElement, className, options) {\n        var curOpt = extend({}, defaultListBaseOptions, options);\n        var ariaAttributes = extend({}, defaultAriaAttributes, curOpt.ariaAttributes);\n        cssClass = getModuleClass(curOpt.moduleName);\n        var ulElement = createElement('ul', {\n            className: cssClass.ul + ' ' + (isNullOrUndefined(className) ? '' : className),\n            attrs: (ariaAttributes.listRole !== '' ? { role: ariaAttributes.listRole } : {})\n        });\n        append(liElement, ulElement);\n        return ulElement;\n    }\n    ListBase.generateUL = generateUL;\n    /**\n     * Returns LI element with additional DIV tag based on the given LI element.\n     *\n     * @param {Function} createElement - Function for creating elements.\n     *\n     * @param  {liElement} liElement - Specifies LI element.\n     *\n     * @param  {string} [className] - Specifies class name that need to be added in created DIV element.\n     *\n     * @param  {ListBaseOptions} [options] - Specifies ListBase options.\n     *\n     * @returns {HTMLElement} - The modified LI element.\n     */\n    function generateIcon(createElement, liElement, className, options) {\n        var curOpt = extend({}, defaultListBaseOptions, options);\n        cssClass = getModuleClass(curOpt.moduleName);\n        var expandElement = curOpt.expandIconPosition === 'Left' ? prepend : append;\n        expandElement([createElement('div', {\n                className: 'e-icons ' + curOpt.expandIconClass + ' ' +\n                    (isNullOrUndefined(className) ? '' : className)\n            })], liElement.querySelector('.' + cssClass.textContent));\n        return liElement;\n    }\n    ListBase.generateIcon = generateIcon;\n})(ListBase || (ListBase = {}));\n/**\n * Used to get dataSource item from complex data using fields.\n *\n * @param {Object} dataItem - Specifies an  JSON or String data.\n *\n * @param {FieldsMapping} fields - Fields that are mapped from the dataSource.\n * @returns {Object|string|number} - The retrieved field values.\n */\nexport function getFieldValues(dataItem, fields) {\n    var fieldData = {};\n    if (isNullOrUndefined(dataItem) || typeof (dataItem) === 'string' || typeof (dataItem) === 'number'\n        || !isNullOrUndefined(dataItem.isHeader)) {\n        return dataItem;\n    }\n    else {\n        for (var _i = 0, _a = Object.keys(fields); _i < _a.length; _i++) {\n            var field = _a[_i];\n            var dataField = fields[\"\" + field];\n            var value = !isNullOrUndefined(dataField) &&\n                typeof (dataField) === 'string' ? getValue(dataField, dataItem) : undefined;\n            if (!isNullOrUndefined(value)) {\n                fieldData[\"\" + dataField] = value;\n            }\n        }\n    }\n    return fieldData;\n}\n/**\n * Compiles a template string or function into a compiled function.\n *\n * @param {string | Function} template - The template string or function to compile.\n * @returns {Function | undefined} - The compiled function, or undefined if the input is false.\n */\nfunction compileTemplate(template) {\n    if (template) {\n        try {\n            if (typeof template !== 'function' && document.querySelector(template)) {\n                return compile(document.querySelector(template).innerHTML.trim());\n            }\n            else {\n                return compile(template);\n            }\n        }\n        catch (e) {\n            return compile(template);\n        }\n    }\n    return undefined;\n}\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Base, Event, getUniqueID, NotifyPropertyChanges, Property } from '@syncfusion/ej2-base';\nimport { closest, Draggable, remove, compareElementParent } from '@syncfusion/ej2-base';\nimport { addClass, isNullOrUndefined, getComponent, isBlazor, EventHandler } from '@syncfusion/ej2-base';\n/* eslint-disable @typescript-eslint/no-explicit-any */\n/**\n * Sortable Module provides support to enable sortable functionality in Dom Elements.\n * ```html\n * <div id=\"sortable\">\n *   <div>Item 1</div>\n *   <div>Item 2</div>\n *   <div>Item 3</div>\n *   <div>Item 4</div>\n *   <div>Item 5</div>\n * </div>\n * ```\n * ```typescript\n *   let ele: HTMLElement = document.getElementById('sortable');\n *   let sortObj: Sortable = new Sortable(ele, {});\n * ```\n */\nvar Sortable = /** @class */ (function (_super) {\n    __extends(Sortable, _super);\n    function Sortable(element, options) {\n        var _this = _super.call(this, options, element) || this;\n        _this.getHelper = function (e) {\n            var target = _this.getSortableElement(e.sender.target);\n            if (!_this.isValidTarget(target, _this)) {\n                return false;\n            }\n            var element;\n            if (_this.helper) {\n                element = _this.helper({ sender: target, element: e.element });\n            }\n            else {\n                element = target.cloneNode(true);\n                element.style.width = target.offsetWidth + \"px\";\n                element.style.height = target.offsetHeight + \"px\";\n            }\n            addClass([element], ['e-sortableclone']);\n            document.body.appendChild(element);\n            return element;\n        };\n        _this.onDrag = function (e) {\n            if (!e.target) {\n                return;\n            }\n            _this.trigger('drag', { event: e.event, element: _this.element, target: e.target });\n            var newInst = _this.getSortableInstance(e.target);\n            var target = _this.getSortableElement(e.target, newInst);\n            if ((_this.isValidTarget(target, newInst) || (e.target && typeof e.target.className === 'string' && e.target.className.indexOf('e-list-group-item') > -1)) && (_this.curTarget !== target ||\n                !isNullOrUndefined(newInst.placeHolder)) && (newInst.placeHolderElement ? newInst.placeHolderElement !== e.target : true)) {\n                if (e.target.classList.contains('e-list-group-item')) {\n                    target = e.target;\n                }\n                _this.curTarget = target;\n                if (_this.target === target) {\n                    return;\n                }\n                var oldIdx = _this.getIndex(newInst.placeHolderElement, newInst);\n                var placeHolder = _this.getPlaceHolder(target, newInst);\n                var newIdx = void 0;\n                if (placeHolder) {\n                    oldIdx = isNullOrUndefined(oldIdx) ? _this.getIndex(_this.target) : oldIdx;\n                    newIdx = _this.getIndex(target, newInst, e.event);\n                    var isPlaceHolderPresent = _this.isPlaceHolderPresent(newInst);\n                    if (isPlaceHolderPresent && oldIdx === newIdx) {\n                        return;\n                    }\n                    if (isPlaceHolderPresent) {\n                        remove(newInst.placeHolderElement);\n                    }\n                    newInst.placeHolderElement = placeHolder;\n                    if (e.target && typeof e.target.className === 'string' && e.target.className.indexOf('e-list-group-item') > -1) {\n                        newInst.element.insertBefore(newInst.placeHolderElement, newInst.element.children[newIdx]);\n                    }\n                    else if (newInst.element !== _this.element && newIdx === newInst.element.childElementCount) {\n                        newInst.element.appendChild(newInst.placeHolderElement);\n                    }\n                    else {\n                        newInst.element.insertBefore(newInst.placeHolderElement, newInst.element.children[newIdx]);\n                    }\n                    _this.refreshDisabled(oldIdx, newIdx, newInst);\n                }\n                else {\n                    oldIdx = isNullOrUndefined(oldIdx) ? _this.getIndex(_this.target) :\n                        _this.getIndex(target, newInst) < oldIdx || !oldIdx ? oldIdx : oldIdx - 1;\n                    newIdx = _this.getIndex(target, newInst);\n                    var idx = newInst.element !== _this.element ? newIdx : oldIdx < newIdx ? newIdx + 1 : newIdx;\n                    _this.updateItemClass(newInst);\n                    newInst.element.insertBefore(_this.target, newInst.element.children[idx]);\n                    _this.refreshDisabled(oldIdx, newIdx, newInst);\n                    _this.curTarget = _this.target;\n                    _this.trigger('drop', {\n                        droppedElement: _this.target, element: newInst.element, previousIndex: oldIdx, currentIndex: newIdx,\n                        target: e.target, helper: document.getElementsByClassName('e-sortableclone')[0], event: e.event, scope: _this.scope\n                    });\n                }\n            }\n            else if (_this.curTarget !== _this.target && _this.scope && _this.curTarget !== target && !isNullOrUndefined(newInst.placeHolder)) {\n                remove(_this.getSortableInstance(_this.curTarget).placeHolderElement);\n                _this.curTarget = _this.target;\n            }\n            newInst = _this.getSortableInstance(_this.curTarget);\n            if (isNullOrUndefined(target) && e.target !== newInst.placeHolderElement) {\n                if (_this.isPlaceHolderPresent(newInst)) {\n                    _this.removePlaceHolder(newInst);\n                }\n            }\n            else {\n                var placeHolders = [].slice.call(document.getElementsByClassName('e-sortable-placeholder'));\n                var inst_1;\n                placeHolders.forEach(function (placeHolder) {\n                    inst_1 = _this.getSortableInstance(placeHolder);\n                    if (inst_1.element && inst_1 !== newInst) {\n                        _this.removePlaceHolder(inst_1);\n                    }\n                });\n            }\n        };\n        _this.onDragStart = function (e) {\n            _this.target = _this.getSortableElement(e.target);\n            var cancelDrag = false;\n            _this.target.classList.add('e-grabbed');\n            _this.curTarget = _this.target;\n            e.helper = document.getElementsByClassName('e-sortableclone')[0];\n            var args = { cancel: false, element: _this.element, target: _this.target };\n            _this.trigger('beforeDragStart', args, function (observedArgs) {\n                if (observedArgs.cancel) {\n                    cancelDrag = observedArgs.cancel;\n                    _this.onDragStop(e);\n                }\n            });\n            if (cancelDrag) {\n                return;\n            }\n            if (isBlazor) {\n                _this.trigger('dragStart', {\n                    event: e.event, element: _this.element, target: _this.target,\n                    bindEvents: e.bindEvents, dragElement: e.dragElement\n                });\n            }\n            else {\n                _this.trigger('dragStart', { event: e.event, element: _this.element, target: _this.target });\n            }\n        };\n        _this.onDragStop = function (e) {\n            var dropInst = _this.getSortableInstance(_this.curTarget);\n            var curIdx;\n            var prevIdx;\n            var handled;\n            prevIdx = _this.getIndex(_this.target);\n            var isPlaceHolderPresent = _this.isPlaceHolderPresent(dropInst);\n            if (isPlaceHolderPresent) {\n                var curIdx_1 = _this.getIndex(dropInst.placeHolderElement, dropInst);\n                var args = {\n                    previousIndex: prevIdx, currentIndex: curIdx_1, target: e.target, droppedElement: _this.target,\n                    helper: e.helper, cancel: false, handled: false\n                };\n                _this.trigger('beforeDrop', args, function (observedArgs) {\n                    if (!observedArgs.cancel) {\n                        handled = observedArgs.handled;\n                        _this.updateItemClass(dropInst);\n                        if (observedArgs.handled) {\n                            var ele = _this.target.cloneNode(true);\n                            _this.target.classList.remove('e-grabbed');\n                            _this.target = ele;\n                        }\n                        dropInst.element.insertBefore(_this.target, dropInst.placeHolderElement);\n                        var curIdx_2 = _this.getIndex(_this.target, dropInst);\n                        prevIdx = _this === dropInst && (prevIdx - curIdx_2) > 1 ? prevIdx - 1 : prevIdx;\n                        _this.trigger('drop', {\n                            event: e.event, element: dropInst.element, previousIndex: prevIdx, currentIndex: curIdx_2,\n                            target: e.target, helper: e.helper, droppedElement: _this.target, scopeName: _this.scope, handled: handled\n                        });\n                    }\n                    remove(dropInst.placeHolderElement);\n                });\n            }\n            dropInst = _this.getSortableInstance(e.target);\n            curIdx = dropInst.element.childElementCount;\n            prevIdx = _this.getIndex(_this.target);\n            if (dropInst.element.querySelector('.e-list-nrt')) {\n                curIdx = curIdx - 1;\n            }\n            if (_this.curTarget === _this.target && e.target === _this.curTarget) {\n                curIdx = prevIdx;\n            }\n            if (dropInst.element === e.target || (!isPlaceHolderPresent && _this.curTarget === _this.target)) {\n                var beforeDropArgs = {\n                    previousIndex: prevIdx, currentIndex: curIdx,\n                    target: e.target, droppedElement: _this.target, helper: e.helper, cancel: false\n                };\n                _this.trigger('beforeDrop', beforeDropArgs, function (observedArgs) {\n                    if ((dropInst.element === e.target || (typeof e.target.className === 'string' && e.target.className.indexOf('e-list-nrt') > -1) || (typeof e.target.className === 'string' && e.target.className.indexOf('e-list-nr-template') > -1)\n                        || e.target.closest('.e-list-nr-template')) && !observedArgs.cancel) {\n                        _this.updateItemClass(dropInst);\n                        dropInst.element.appendChild(_this.target);\n                        _this.trigger('drop', {\n                            event: e.event, element: dropInst.element, previousIndex: prevIdx, currentIndex: curIdx,\n                            target: e.target, helper: e.helper, droppedElement: _this.target, scopeName: _this.scope\n                        });\n                    }\n                });\n            }\n            _this.target.classList.remove('e-grabbed');\n            _this.target = null;\n            _this.curTarget = null;\n            remove(e.helper);\n            getComponent(_this.element, 'draggable').intDestroy(e.event);\n        };\n        _this.bind();\n        return _this;\n    }\n    Sortable_1 = Sortable;\n    Sortable.prototype.bind = function () {\n        if (!this.element.id) {\n            this.element.id = getUniqueID('sortable');\n        }\n        if (!this.itemClass) {\n            this.itemClass = 'e-sort-item';\n            this.dataBind();\n        }\n        this.initializeDraggable();\n    };\n    Sortable.prototype.initializeDraggable = function () {\n        new Draggable(this.element, {\n            helper: this.getHelper,\n            dragStart: this.onDragStart,\n            drag: this.onDrag,\n            dragStop: this.onDragStop,\n            dragTarget: \".\" + this.itemClass,\n            enableTapHold: true,\n            tapHoldThreshold: 200,\n            queryPositionInfo: this.queryPositionInfo,\n            distance: 1\n        });\n        this.wireEvents();\n    };\n    Sortable.prototype.wireEvents = function () {\n        var wrapper = this.element;\n        EventHandler.add(wrapper, 'keydown', this.keyDownHandler, this);\n    };\n    Sortable.prototype.unwireEvents = function () {\n        var wrapper = this.element;\n        EventHandler.remove(wrapper, 'keydown', this.keyDownHandler);\n    };\n    Sortable.prototype.keyDownHandler = function (e) {\n        if (e.keyCode === 27) {\n            var dragStop = getComponent(this.element, 'draggable');\n            if (dragStop) {\n                dragStop.intDestroy(null);\n            }\n            var dragWrapper = document.getElementsByClassName('e-sortableclone')[0];\n            if (dragWrapper) {\n                dragWrapper.remove();\n            }\n            var dragPlaceholder = document.getElementsByClassName('e-sortable-placeholder')[0];\n            if (dragPlaceholder) {\n                dragPlaceholder.remove();\n            }\n        }\n    };\n    Sortable.prototype.getPlaceHolder = function (target, instance) {\n        if (instance.placeHolder) {\n            var placeHolderElement = instance.placeHolder({ element: instance.element, grabbedElement: this.target, target: target });\n            placeHolderElement.classList.add('e-sortable-placeholder');\n            return placeHolderElement;\n        }\n        return null;\n    };\n    Sortable.prototype.isValidTarget = function (target, instance) {\n        return target && compareElementParent(target, instance.element) && target.classList.contains(instance.itemClass) &&\n            !target.classList.contains('e-disabled');\n    };\n    Sortable.prototype.removePlaceHolder = function (instance) {\n        remove(instance.placeHolderElement);\n        instance.placeHolderElement = null;\n    };\n    Sortable.prototype.updateItemClass = function (instance) {\n        if (this !== instance) {\n            this.target.classList.remove(this.itemClass);\n            this.target.classList.add(instance.itemClass);\n        }\n    };\n    Sortable.prototype.getSortableInstance = function (element) {\n        element = closest(element, \".e-\" + this.getModuleName());\n        if (element) {\n            var inst = getComponent(element, Sortable_1);\n            return inst.scope && this.scope && inst.scope === this.scope ? inst : this;\n        }\n        else {\n            return this;\n        }\n    };\n    Sortable.prototype.refreshDisabled = function (oldIdx, newIdx, instance) {\n        if (instance === this) {\n            var element = void 0;\n            var increased = oldIdx < newIdx;\n            var disabledIdx = void 0;\n            var start = increased ? oldIdx : newIdx;\n            var end = increased ? newIdx : oldIdx;\n            while (start <= end) {\n                element = this.element.children[start];\n                if (element.classList.contains('e-disabled')) {\n                    disabledIdx = this.getIndex(element);\n                    this.element.insertBefore(element, this.element.children[increased ? disabledIdx + 2 : disabledIdx - 1]);\n                    start = increased ? disabledIdx + 2 : disabledIdx + 1;\n                }\n                else {\n                    start++;\n                }\n            }\n        }\n    };\n    Sortable.prototype.getIndex = function (target, instance, e) {\n        if (instance === void 0) { instance = this; }\n        var idx;\n        var placeHolderPresent;\n        [].slice.call(instance.element.children).forEach(function (element, index) {\n            if (element.classList.contains('e-sortable-placeholder')) {\n                placeHolderPresent = true;\n            }\n            if (element === target) {\n                idx = index;\n                if (!isNullOrUndefined(e)) {\n                    if (placeHolderPresent) {\n                        idx -= 1;\n                    }\n                    var offset = target.getBoundingClientRect();\n                    var clientY = offset.bottom - ((offset.bottom - offset.top) / 2);\n                    var cltY = e.changedTouches ? e.changedTouches[0].clientY : e.clientY;\n                    idx = cltY <= clientY ? idx : idx + 1;\n                }\n                return;\n            }\n        });\n        return idx;\n    };\n    Sortable.prototype.getSortableElement = function (element, instance) {\n        if (instance === void 0) { instance = this; }\n        return closest(element, \".\" + instance.itemClass);\n    };\n    Sortable.prototype.queryPositionInfo = function (value) {\n        value.left = pageXOffset ? parseFloat(value.left) - pageXOffset + \"px\" : value.left;\n        value.top = pageYOffset ? parseFloat(value.top) - pageYOffset + \"px\" : value.top;\n        return value;\n    };\n    Sortable.prototype.isPlaceHolderPresent = function (instance) {\n        return instance.placeHolderElement && !!closest(instance.placeHolderElement, \"#\" + instance.element.id);\n    };\n    /**\n     * It is used to sort array of elements from source element to destination element.\n     *\n     * @param destination - Defines the destination element to which the sortable elements needs to be appended.\n     *\n     * If it is null, then the Sortable library element will be considered as destination.\n     * @param targetIndexes - Specifies the sortable elements indexes which needs to be sorted.\n     * @param insertBefore - Specifies the index before which the sortable elements needs to be appended.\n     * If it is null, elements will be appended as last child.\n     * @function moveTo\n     * @returns {void}\n     */\n    Sortable.prototype.moveTo = function (destination, targetIndexes, insertBefore) {\n        moveTo(this.element, destination, targetIndexes, insertBefore);\n    };\n    /**\n     * It is used to destroy the Sortable library.\n     */\n    Sortable.prototype.destroy = function () {\n        this.unwireEvents();\n        if (this.itemClass === 'e-sort-item') {\n            this.itemClass = null;\n            this.dataBind();\n        }\n        getComponent(this.element, Draggable).destroy();\n        _super.prototype.destroy.call(this);\n    };\n    Sortable.prototype.getModuleName = function () {\n        return 'sortable';\n    };\n    Sortable.prototype.onPropertyChanged = function (newProp, oldProp) {\n        for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            switch (prop) {\n                case 'itemClass':\n                    [].slice.call(this.element.children).forEach(function (element) {\n                        if (element.classList.contains(oldProp.itemClass)) {\n                            element.classList.remove(oldProp.itemClass);\n                        }\n                        if (newProp.itemClass) {\n                            element.classList.add(newProp.itemClass);\n                        }\n                    });\n                    break;\n            }\n        }\n    };\n    var Sortable_1;\n    __decorate([\n        Property(false)\n    ], Sortable.prototype, \"enableAnimation\", void 0);\n    __decorate([\n        Property(null)\n    ], Sortable.prototype, \"itemClass\", void 0);\n    __decorate([\n        Property(null)\n    ], Sortable.prototype, \"scope\", void 0);\n    __decorate([\n        Property()\n    ], Sortable.prototype, \"helper\", void 0);\n    __decorate([\n        Property()\n    ], Sortable.prototype, \"placeHolder\", void 0);\n    __decorate([\n        Event()\n    ], Sortable.prototype, \"drag\", void 0);\n    __decorate([\n        Event()\n    ], Sortable.prototype, \"beforeDragStart\", void 0);\n    __decorate([\n        Event()\n    ], Sortable.prototype, \"dragStart\", void 0);\n    __decorate([\n        Event()\n    ], Sortable.prototype, \"beforeDrop\", void 0);\n    __decorate([\n        Event()\n    ], Sortable.prototype, \"drop\", void 0);\n    Sortable = Sortable_1 = __decorate([\n        NotifyPropertyChanges\n    ], Sortable);\n    return Sortable;\n}(Base));\nexport { Sortable };\n/**\n * It is used to sort array of elements from source element to destination element.\n *\n * @param {HTMLElement} from - The source element from which to move elements.\n * @param {HTMLElement} [to=from] - The destination element to which to move elements. Defaults to the source element.\n * @param {number[]} [targetIndexes] - The indexes of elements to move. If not provided, all children of the source element will be moved.\n * @param {number} [insertBefore] - The index before which to insert the moved elements in the destination element. If not provided, elements will be appended to the end of the destination element.\n * @returns {void}\n * @private\n */\nexport function moveTo(from, to, targetIndexes, insertBefore) {\n    var targetElements = [];\n    if (!to) {\n        to = from;\n    }\n    if (targetIndexes && targetIndexes.length) {\n        targetIndexes.forEach(function (index) {\n            targetElements.push(from.children[index]);\n        });\n    }\n    else {\n        targetElements = [].slice.call(from.children);\n    }\n    if (isNullOrUndefined(insertBefore)) {\n        targetElements.forEach(function (target) {\n            to.appendChild(target);\n        });\n    }\n    else {\n        var insertElement_1 = to.children[insertBefore];\n        targetElements.forEach(function (target) {\n            to.insertBefore(target, insertElement_1);\n        });\n    }\n}\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { merge, formatUnit, isNullOrUndefined, append, detach, extend } from '@syncfusion/ej2-base';\nimport { attributes, addClass, removeClass, prepend, closest, remove } from '@syncfusion/ej2-base';\nimport { Component, EventHandler, Property, Complex, Event } from '@syncfusion/ej2-base';\nimport { NotifyPropertyChanges, ChildProperty } from '@syncfusion/ej2-base';\nimport { compile, SanitizeHtmlHelper } from '@syncfusion/ej2-base';\nimport { Animation, rippleEffect, Touch, animationMode } from '@syncfusion/ej2-base';\nimport { DataManager, Query } from '@syncfusion/ej2-data';\nimport { createCheckBox } from '@syncfusion/ej2-buttons';\nimport { ListBase, getFieldValues } from '../common/list-base';\n/* eslint-disable @typescript-eslint/no-explicit-any */\n// Effect Configuration Effect[] =  [fromViewBackward,fromViewForward,toViewBackward,toviewForward];\nvar effectsConfig = {\n    'None': [],\n    'SlideLeft': ['SlideRightOut', 'SlideLeftOut', 'SlideLeftIn', 'SlideRightIn'],\n    'SlideDown': ['SlideTopOut', 'SlideBottomOut', 'SlideBottomIn', 'SlideTopIn'],\n    'Zoom': ['FadeOut', 'FadeZoomOut', 'FadeZoomIn', 'FadeIn'],\n    'Fade': ['FadeOut', 'FadeOut', 'FadeIn', 'FadeIn']\n};\nvar effectsRTLConfig = {\n    'None': [],\n    'SlideLeft': ['SlideLeftOut', 'SlideRightOut', 'SlideRightIn', 'SlideLeftIn'],\n    'SlideDown': ['SlideBottomOut', 'SlideTopOut', 'SlideTopIn', 'SlideBottomIn'],\n    'Zoom': ['FadeZoomOut', 'FadeOut', 'FadeIn', 'FadeZoomIn'],\n    'Fade': ['FadeOut', 'FadeOut', 'FadeIn', 'FadeIn']\n};\n// don't use space in classnames.\nexport var classNames = {\n    root: 'e-listview',\n    hover: 'e-hover',\n    selected: 'e-active',\n    focused: 'e-focused',\n    parentItem: 'e-list-parent',\n    listItem: 'e-list-item',\n    listIcon: 'e-list-icon',\n    textContent: 'e-text-content',\n    listItemText: 'e-list-text',\n    groupListItem: 'e-list-group-item',\n    hasChild: 'e-has-child',\n    view: 'e-view',\n    header: 'e-list-header',\n    headerText: 'e-headertext',\n    headerTemplateText: 'e-headertemplate-text',\n    text: 'e-text',\n    disable: 'e-disabled',\n    container: 'e-list-container',\n    icon: 'e-icons',\n    backIcon: 'e-icon-back',\n    backButton: 'e-back-button',\n    checkboxWrapper: 'e-checkbox-wrapper',\n    checkbox: 'e-checkbox',\n    checked: 'e-check',\n    checklist: 'e-checklist',\n    checkboxIcon: 'e-frame',\n    checkboxRight: 'e-checkbox-right',\n    checkboxLeft: 'e-checkbox-left',\n    listviewCheckbox: 'e-listview-checkbox',\n    itemCheckList: 'e-checklist',\n    virtualElementContainer: 'e-list-virtualcontainer'\n};\nvar LISTVIEW_TEMPLATE_PROPERTY = 'Template';\nvar LISTVIEW_GROUPTEMPLATE_PROPERTY = 'GroupTemplate';\nvar LISTVIEW_HEADERTEMPLATE_PROPERTY = 'HeaderTemplate';\nvar swipeVelocity = 0.5;\n/**\n * Represents the field settings of the ListView.\n */\nvar FieldSettings = /** @class */ (function (_super) {\n    __extends(FieldSettings, _super);\n    function FieldSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('id')\n    ], FieldSettings.prototype, \"id\", void 0);\n    __decorate([\n        Property('text')\n    ], FieldSettings.prototype, \"text\", void 0);\n    __decorate([\n        Property('isChecked')\n    ], FieldSettings.prototype, \"isChecked\", void 0);\n    __decorate([\n        Property('isVisible')\n    ], FieldSettings.prototype, \"isVisible\", void 0);\n    __decorate([\n        Property('enabled')\n    ], FieldSettings.prototype, \"enabled\", void 0);\n    __decorate([\n        Property('iconCss')\n    ], FieldSettings.prototype, \"iconCss\", void 0);\n    __decorate([\n        Property('child')\n    ], FieldSettings.prototype, \"child\", void 0);\n    __decorate([\n        Property('tooltip')\n    ], FieldSettings.prototype, \"tooltip\", void 0);\n    __decorate([\n        Property('groupBy')\n    ], FieldSettings.prototype, \"groupBy\", void 0);\n    __decorate([\n        Property('text')\n    ], FieldSettings.prototype, \"sortBy\", void 0);\n    __decorate([\n        Property('htmlAttributes')\n    ], FieldSettings.prototype, \"htmlAttributes\", void 0);\n    __decorate([\n        Property('tableName')\n    ], FieldSettings.prototype, \"tableName\", void 0);\n    return FieldSettings;\n}(ChildProperty));\nexport { FieldSettings };\n/**\n * Represents the EJ2 ListView control.\n * ```html\n * <div id=\"listview\">\n * <ul>\n * <li>Favorite</li>\n * <li>Documents</li>\n * <li>Downloads</li>\n * </ul>\n * </div>\n * ```\n * ```typescript\n *   var listviewObject = new ListView({});\n *   listviewObject.appendTo(\"#listview\");\n * ```\n */\nvar ListView = /** @class */ (function (_super) {\n    __extends(ListView, _super);\n    /**\n     * Constructor for creating the widget\n     *\n     * @param options\n     *\n     * @param element\n     */\n    function ListView(options, element) {\n        var _this = _super.call(this, options, element) || this;\n        _this.previousSelectedItems = [];\n        _this.hiddenItems = [];\n        _this.enabledItems = [];\n        _this.disabledItems = [];\n        return _this;\n    }\n    /**\n     * @param newProp\n     *\n     * @param oldProp\n     *\n     * @private\n     */\n    ListView.prototype.onPropertyChanged = function (newProp, oldProp) {\n        for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            switch (prop) {\n                case 'htmlAttributes':\n                    this.setHTMLAttribute();\n                    break;\n                case 'cssClass':\n                    this.setCSSClass(oldProp.cssClass);\n                    break;\n                case 'enable':\n                    this.setEnable();\n                    break;\n                case 'width':\n                case 'height':\n                    this.setSize();\n                    break;\n                case 'enableRtl':\n                    this.setEnableRTL();\n                    break;\n                case 'fields':\n                    this.listBaseOption.fields = this.fields.properties;\n                    if (this.enableVirtualization) {\n                        this.virtualizationModule.reRenderUiVirtualization();\n                    }\n                    else {\n                        this.reRender();\n                    }\n                    break;\n                case 'headerTitle':\n                    if (!this.curDSLevel.length) {\n                        this.header(this.headerTitle, false, 'header');\n                    }\n                    break;\n                case 'query':\n                    if (this.enableVirtualization) {\n                        this.virtualizationModule.reRenderUiVirtualization();\n                    }\n                    else {\n                        this.reRender();\n                    }\n                    break;\n                case 'showHeader':\n                    this.header(this.headerTitle, false, 'header');\n                    break;\n                case 'enableVirtualization':\n                    if (!isNullOrUndefined(this.contentContainer)) {\n                        detach(this.contentContainer);\n                    }\n                    this.refresh();\n                    break;\n                case 'showCheckBox':\n                case 'checkBoxPosition':\n                    if (this.enableVirtualization) {\n                        this.virtualizationModule.reRenderUiVirtualization();\n                    }\n                    else {\n                        this.setCheckbox();\n                    }\n                    break;\n                case 'dataSource':\n                    this.previousScrollTop = this.element.scrollTop;\n                    if (this.enableVirtualization) {\n                        this.virtualizationModule.reRenderUiVirtualization();\n                    }\n                    else {\n                        this.reRender();\n                    }\n                    break;\n                case 'sortOrder':\n                case 'template':\n                    if (!this.enableVirtualization) {\n                        this.refresh();\n                    }\n                    break;\n                case 'showIcon':\n                    if (this.enableVirtualization) {\n                        this.virtualizationModule.reRenderUiVirtualization();\n                    }\n                    else {\n                        this.listBaseOption.showIcon = this.showIcon;\n                        this.curViewDS = this.getSubDS();\n                        this.resetCurrentList();\n                    }\n                    break;\n                default:\n                    break;\n            }\n        }\n    };\n    // Model Changes\n    ListView.prototype.setHTMLAttribute = function () {\n        if (!isNullOrUndefined(this.htmlAttributes) && Object.keys(this.htmlAttributes).length) {\n            attributes(this.element, this.htmlAttributes);\n        }\n    };\n    ListView.prototype.setCSSClass = function (oldCSSClass) {\n        if (this.cssClass) {\n            addClass([this.element], this.cssClass.split(' ').filter(function (css) { return css; }));\n        }\n        if (oldCSSClass) {\n            removeClass([this.element], oldCSSClass.split(' ').filter(function (css) { return css; }));\n        }\n    };\n    ListView.prototype.setSize = function () {\n        this.element.style.height = formatUnit(this.height);\n        this.element.style.width = formatUnit(this.width);\n        this.isWindow = this.element.clientHeight ? false : true;\n    };\n    ListView.prototype.setEnable = function () {\n        this.enableElement(this.element, this.enable);\n    };\n    ListView.prototype.setEnableRTL = function () {\n        if (this.enableRtl) {\n            this.element.classList.add('e-rtl');\n        }\n        else {\n            this.element.classList.remove('e-rtl');\n        }\n    };\n    ListView.prototype.enableElement = function (element, isEnabled) {\n        if (isEnabled) {\n            element.classList.remove(classNames.disable);\n        }\n        else {\n            element.classList.add(classNames.disable);\n        }\n    };\n    // Support Component Functions\n    ListView.prototype.header = function (text, showBack, prop) {\n        if (this.headerEle === undefined && this.showHeader) {\n            this.headerEle = this.createElement('div', { className: classNames.header });\n            var innerHeaderEle = this.createElement('span', { className: classNames.headerText });\n            if (this.enableHtmlSanitizer) {\n                this.setProperties({ headerTitle: SanitizeHtmlHelper.sanitize(this.headerTitle) }, true);\n                innerHeaderEle.innerText = this.headerTitle;\n            }\n            else {\n                innerHeaderEle.innerHTML = this.headerTitle;\n            }\n            var textEle = this.createElement('div', { className: classNames.text, innerHTML: innerHeaderEle.outerHTML });\n            var hedBackButton = this.createElement('div', {\n                className: classNames.icon + ' ' + classNames.backIcon + ' ' + classNames.backButton,\n                attrs: { style: 'display:none;' }\n            });\n            this.headerEle.appendChild(hedBackButton);\n            this.headerEle.appendChild(textEle);\n            if (this.headerTemplate) {\n                var compiledString = compile(this.headerTemplate);\n                var headerTemplateEle = this.createElement('div', { className: classNames.headerTemplateText });\n                var compiledElement = compiledString({}, this, prop, this.LISTVIEW_HEADERTEMPLATE_ID, null, null, this.headerEle);\n                if (compiledElement) {\n                    append(compiledElement, headerTemplateEle);\n                }\n                append([headerTemplateEle], this.headerEle);\n                if (this.isReact) {\n                    this.renderReactTemplates();\n                }\n            }\n            if (this.headerTemplate && this.headerTitle) {\n                textEle.classList.add('header');\n            }\n            this.element.classList.add('e-has-header');\n            prepend([this.headerEle], this.element);\n        }\n        else if (this.headerEle) {\n            if (this.showHeader) {\n                this.headerEle.style.display = '';\n                var textEle = this.headerEle.querySelector('.' + classNames.headerText);\n                var hedBackButton = this.headerEle.querySelector('.' + classNames.backIcon);\n                if (this.enableHtmlSanitizer) {\n                    text = SanitizeHtmlHelper.sanitize(text);\n                }\n                textEle.innerHTML = text;\n                if (this.headerTemplate && showBack) {\n                    textEle.parentElement.classList.remove('header');\n                    this.headerEle.querySelector('.' + classNames.headerTemplateText).classList.add('nested-header');\n                }\n                if (this.headerTemplate && !showBack) {\n                    textEle.parentElement.classList.add('header');\n                    this.headerEle.querySelector('.' + classNames.headerTemplateText).classList.remove('nested-header');\n                    this.headerEle.querySelector('.' + classNames.headerTemplateText).classList.add('header');\n                }\n                if (showBack === true) {\n                    hedBackButton.style.display = '';\n                }\n                else {\n                    hedBackButton.style.display = 'none';\n                }\n            }\n            else {\n                this.headerEle.style.display = 'none';\n            }\n        }\n    };\n    // Animation Related Functions\n    ListView.prototype.switchView = function (fromView, toView, reverse) {\n        var _this = this;\n        if (fromView && toView) {\n            var fPos_1 = fromView.style.position;\n            var overflow_1 = (this.element.style.overflow !== 'hidden') ? this.element.style.overflow : '';\n            fromView.style.position = 'absolute';\n            fromView.classList.add('e-view');\n            var anim = void 0;\n            var duration = this.animation.duration;\n            if (this.animation.effect) {\n                anim = (this.enableRtl ? effectsRTLConfig[this.animation.effect] : effectsConfig[this.animation.effect]);\n            }\n            else {\n                var slideLeft = 'SlideLeft';\n                anim = effectsConfig[\"\" + slideLeft];\n                reverse = this.enableRtl;\n                duration = 0;\n            }\n            this.element.style.overflow = 'hidden';\n            this.aniObj.animate(fromView, {\n                name: (reverse === true ? anim[0] : anim[1]),\n                duration: (duration === 0 && animationMode === 'Enable') ? 400 : duration,\n                timingFunction: this.animation.easing,\n                end: function () {\n                    fromView.style.display = 'none';\n                    _this.element.style.overflow = overflow_1;\n                    fromView.style.position = fPos_1;\n                    fromView.classList.remove('e-view');\n                }\n            });\n            toView.style.display = '';\n            this.aniObj.animate(toView, {\n                name: (reverse === true ? anim[2] : anim[3]),\n                duration: (duration === 0 && animationMode === 'Enable') ? 400 : duration,\n                timingFunction: this.animation.easing,\n                end: function () {\n                    _this.trigger('actionComplete');\n                }\n            });\n            this.curUL = toView;\n        }\n    };\n    ListView.prototype.preRender = function () {\n        if (this.template) {\n            try {\n                if (typeof this.template !== 'function' && document.querySelectorAll(this.template).length) {\n                    this.setProperties({ template: document.querySelector(this.template).innerHTML.trim() }, true);\n                }\n            }\n            catch (e) {\n                compile(this.template);\n            }\n        }\n        this.listBaseOption = {\n            template: this.template,\n            headerTemplate: this.headerTemplate,\n            groupTemplate: this.groupTemplate, expandCollapse: true, listClass: '',\n            ariaAttributes: {\n                itemRole: 'listitem', listRole: 'list', itemText: '',\n                groupItemRole: 'presentation', wrapperRole: 'presentation'\n            },\n            fields: (this.fields.properties),\n            sortOrder: this.sortOrder,\n            showIcon: this.showIcon,\n            itemCreated: this.renderCheckbox.bind(this),\n            templateID: \"\" + this.element.id + LISTVIEW_TEMPLATE_PROPERTY,\n            groupTemplateID: \"\" + this.element.id + LISTVIEW_GROUPTEMPLATE_PROPERTY,\n            enableHtmlSanitizer: this.enableHtmlSanitizer\n        };\n        this.initialization();\n    };\n    ListView.prototype.initialization = function () {\n        this.curDSLevel = [];\n        this.animateOptions = {};\n        this.curViewDS = [];\n        this.currentLiElements = [];\n        this.isNestedList = false;\n        this.selectedData = [];\n        this.selectedId = this.enablePersistence ? this.selectedId : [];\n        this.LISTVIEW_TEMPLATE_ID = \"\" + this.element.id + LISTVIEW_TEMPLATE_PROPERTY;\n        this.LISTVIEW_GROUPTEMPLATE_ID = \"\" + this.element.id + LISTVIEW_GROUPTEMPLATE_PROPERTY;\n        this.LISTVIEW_HEADERTEMPLATE_ID = \"\" + this.element.id + LISTVIEW_HEADERTEMPLATE_PROPERTY;\n        this.aniObj = new Animation(this.animateOptions);\n        this.removeElement(this.curUL);\n        this.removeElement(this.ulElement);\n        this.removeElement(this.headerEle);\n        this.removeElement(this.contentContainer);\n        this.curUL = this.ulElement = this.liCollection = this.headerEle = this.contentContainer = undefined;\n    };\n    ListView.prototype.renderCheckbox = function (args) {\n        var _this = this;\n        if (args.item.classList.contains(classNames.hasChild)) {\n            this.isNestedList = true;\n        }\n        if (this.showCheckBox && args.item.classList.contains(classNames.listItem)) {\n            var fieldData_1;\n            var checkboxElement = createCheckBox(this.createElement, false, {\n                checked: false, enableRtl: this.enableRtl,\n                cssClass: classNames.listviewCheckbox\n            });\n            checkboxElement.setAttribute('role', 'checkbox');\n            var frameElement_1 = checkboxElement.querySelector('.' + classNames.checkboxIcon);\n            args.item.classList.add(classNames.itemCheckList);\n            args.item.firstElementChild.classList.add(classNames.checkbox);\n            if (typeof this.dataSource[0] !== 'string' && typeof this.dataSource[0] !== 'number') {\n                fieldData_1 = getFieldValues(args.curData, this.listBaseOption.fields);\n                if (this.enablePersistence && !isNullOrUndefined(this.selectedId)) {\n                    var index = this.selectedId.findIndex(function (e) { return e === fieldData_1[_this.listBaseOption.fields.id].toString(); });\n                    if (index !== -1) {\n                        this.checkInternally(args, checkboxElement);\n                    }\n                }\n                else if (fieldData_1[this.listBaseOption.fields.isChecked]) {\n                    this.checkInternally(args, checkboxElement);\n                }\n            }\n            else if (((typeof this.dataSource[0] === 'string' ||\n                typeof this.dataSource[0] === 'number') && this.selectedData.indexOf(args.text) !== -1)) {\n                this.checkInternally(args, checkboxElement);\n            }\n            checkboxElement.setAttribute('aria-checked', frameElement_1.classList.contains(classNames.checked) ? 'true' : 'false');\n            checkboxElement.setAttribute('aria-label', args.text);\n            if (this.checkBoxPosition === 'Left') {\n                checkboxElement.classList.add(classNames.checkboxLeft);\n                args.item.firstElementChild.classList.add(classNames.checkboxLeft);\n                args.item.firstElementChild.insertBefore(checkboxElement, args.item.firstElementChild.childNodes[0]);\n            }\n            else {\n                checkboxElement.classList.add(classNames.checkboxRight);\n                args.item.firstElementChild.classList.add(classNames.checkboxRight);\n                args.item.firstElementChild.appendChild(checkboxElement);\n            }\n            this.currentLiElements.push(args.item);\n            if (this.checkBoxPosition === 'Left') {\n                this.virtualCheckBox = args.item.firstElementChild.children[0];\n            }\n            else {\n                this.virtualCheckBox = args.item.firstElementChild.lastElementChild;\n            }\n        }\n    };\n    ListView.prototype.checkInternally = function (args, checkboxElement) {\n        args.item.classList.add(classNames.selected);\n        checkboxElement.querySelector('.' + classNames.checkboxIcon).classList.add(classNames.checked);\n        checkboxElement.setAttribute('aria-checked', 'true');\n    };\n    /**\n     * Checks the specific list item by passing the unchecked fields as an argument to this method.\n     *\n     * @param  {Fields | HTMLElement | Element} item - It accepts Fields or HTML list element as an argument.\n     */\n    ListView.prototype.checkItem = function (item) {\n        this.toggleCheckBase(item, true);\n    };\n    ListView.prototype.toggleCheckBase = function (item, checked) {\n        if (this.showCheckBox) {\n            var liElement = item;\n            if (item instanceof Object && item.constructor !== HTMLLIElement) {\n                liElement = this.getLiFromObjOrElement(item);\n            }\n            if (!isNullOrUndefined(liElement)) {\n                var checkboxIcon = liElement.querySelector('.' + classNames.checkboxIcon);\n                if (checked === true) {\n                    liElement.classList.add(classNames.selected);\n                }\n                else {\n                    liElement.classList.remove(classNames.selected);\n                }\n                if (checked === true) {\n                    checkboxIcon.classList.add(classNames.checked);\n                }\n                else {\n                    checkboxIcon.classList.remove(classNames.checked);\n                }\n                checkboxIcon.parentElement.setAttribute('aria-checked', checked ? 'true' : 'false');\n            }\n            this.setSelectedItemData(liElement);\n            this.updateSelectedId();\n        }\n    };\n    /**\n     * Uncheck the specific list item by passing the checked fields as an argument to this method.\n     *\n     * @param  {Fields | HTMLElement | Element} item - It accepts Fields or HTML list element as an argument.\n     */\n    ListView.prototype.uncheckItem = function (item) {\n        this.toggleCheckBase(item, false);\n    };\n    /**\n     * Checks all the unchecked items in the ListView.\n     */\n    ListView.prototype.checkAllItems = function () {\n        this.toggleAllCheckBase(true);\n    };\n    /**\n     * Uncheck all the checked items in ListView.\n     */\n    ListView.prototype.uncheckAllItems = function () {\n        this.toggleAllCheckBase(false);\n    };\n    ListView.prototype.toggleAllCheckBase = function (checked) {\n        if (this.showCheckBox) {\n            for (var i = 0; i < this.liCollection.length; i++) {\n                var checkIcon = this.liCollection[i].querySelector('.' + classNames.checkboxIcon);\n                if (checkIcon) {\n                    if (checked) {\n                        if (!checkIcon.classList.contains(classNames.checked)) {\n                            this.checkItem(this.liCollection[i]);\n                        }\n                    }\n                    else {\n                        if (checkIcon.classList.contains(classNames.checked)) {\n                            this.uncheckItem(this.liCollection[i]);\n                        }\n                    }\n                }\n            }\n            if (this.enableVirtualization) {\n                this.virtualizationModule.checkedItem(checked);\n            }\n            this.updateSelectedId();\n        }\n    };\n    ListView.prototype.setCheckbox = function () {\n        if (this.showCheckBox) {\n            var liCollection = Array.prototype.slice.call(this.element.querySelectorAll('.' + classNames.listItem));\n            var args = {\n                item: undefined, curData: undefined, dataSource: undefined, fields: undefined,\n                options: undefined, text: ''\n            };\n            for (var i = 0; i < liCollection.length; i++) {\n                var element = liCollection[i];\n                args.item = element;\n                args.curData = this.getItemData(element);\n                if (element.querySelector('.' + classNames.checkboxWrapper)) {\n                    this.removeElement(element.querySelector('.' + classNames.checkboxWrapper));\n                }\n                this.renderCheckbox(args);\n                if (args.item.classList.contains(classNames.selected)) {\n                    this.checkInternally(args, args.item.querySelector('.' + classNames.checkboxWrapper));\n                }\n            }\n        }\n        else {\n            var liCollection = Array.prototype.slice.call(this.element.querySelectorAll('.' + classNames.itemCheckList));\n            for (var i = 0; i < liCollection.length; i++) {\n                var element = liCollection[i];\n                element.classList.remove(classNames.selected);\n                element.firstElementChild.classList.remove(classNames.checkbox);\n                this.removeElement(element.querySelector('.' + classNames.checkboxWrapper));\n            }\n            if (this.selectedItems) {\n                this.selectedItems.item.classList.add(classNames.selected);\n            }\n        }\n    };\n    /**\n     * Refresh the height of the list item only on enabling the virtualization property.\n     */\n    ListView.prototype.refreshItemHeight = function () {\n        if (this.virtualizationModule) {\n            this.virtualizationModule.refreshItemHeight();\n        }\n    };\n    ListView.prototype.handleCheckboxState = function (li, checkIcon, checkboxElement, isCheckedBefore, isFocusedBefore, eventArgs, isSetCheckboxLI, textAreaFocus) {\n        this.trigger('select', eventArgs, function (observedArgs) {\n            if (observedArgs.cancel) {\n                if (isSetCheckboxLI ? isCheckedBefore : !isCheckedBefore) {\n                    checkIcon.classList.add(classNames.checked);\n                    li.classList.add(classNames.selected);\n                }\n                else {\n                    checkIcon.classList.remove(classNames.checked);\n                    li.classList.remove(classNames.selected);\n                }\n                checkboxElement.setAttribute('aria-checked', isSetCheckboxLI ? (isCheckedBefore ? 'true' : 'false') : (isCheckedBefore ? 'false' : 'true'));\n                merge(eventArgs, { isChecked: checkIcon.classList.contains(classNames.checked) });\n                if (isFocusedBefore) {\n                    li.classList.remove(classNames.focused);\n                    if (textAreaFocus) {\n                        textAreaFocus.classList.remove('e-focused');\n                    }\n                }\n            }\n        });\n    };\n    ListView.prototype.clickHandler = function (e) {\n        if (Array.isArray(this.dataSource) && this.dataSource.length === 0) {\n            return;\n        }\n        var target = e.target;\n        this.targetElement = target;\n        var classList = target.classList;\n        var closestElement;\n        if (classList.contains(classNames.backIcon) || classList.contains(classNames.headerText)) {\n            if (this.showCheckBox && this.curDSLevel[this.curDSLevel.length - 1]) {\n                this.uncheckAllItems();\n            }\n            this.back();\n        }\n        else {\n            var li = closest(target.parentNode, '.' + classNames.listItem);\n            if (li === null) {\n                li = target;\n            }\n            this.removeFocus();\n            if (this.enable && this.showCheckBox && this.isValidLI(li)) {\n                if (e.target.classList.contains(classNames.checkboxIcon)) {\n                    li.classList.add(classNames.focused);\n                    if (isNullOrUndefined(li.querySelector('.' + classNames.checked))) {\n                        var args = {\n                            curData: undefined, dataSource: undefined, fields: undefined, options: undefined,\n                            text: undefined, item: li\n                        };\n                        this.checkInternally(args, args.item.querySelector('.' + classNames.checkboxWrapper));\n                    }\n                    else {\n                        this.uncheckItem(li);\n                        li.classList.add(classNames.focused);\n                    }\n                    if (this.enableVirtualization) {\n                        this.virtualizationModule.setCheckboxLI(li, e);\n                    }\n                    if (e) {\n                        var eventArgs = this.selectEventData(li, e);\n                        var checkIcon = li.querySelector('.' + classNames.checkboxIcon);\n                        merge(eventArgs, { isChecked: checkIcon.classList.contains(classNames.checked) });\n                        var checkboxElement = li.querySelector('.' + classNames.checkboxWrapper);\n                        var isCheckedBefore = checkIcon.classList.contains(classNames.checked);\n                        var isFocusedBefore = li.classList.contains(classNames.focused);\n                        this.handleCheckboxState(li, checkIcon, checkboxElement, isCheckedBefore, isFocusedBefore, eventArgs, false);\n                    }\n                }\n                else if (li.classList.contains(classNames.hasChild)) {\n                    this.removeHover();\n                    this.removeSelect();\n                    this.removeSelect(li);\n                    this.setSelectLI(li, e);\n                    li.classList.remove(classNames.selected);\n                }\n                else {\n                    this.setCheckboxLI(li, e);\n                    if ((target.nodeName === 'INPUT') || (target.nodeName === 'TEXTAREA')) {\n                        target.classList.add('e-focused');\n                        this.targetElement = target;\n                    }\n                }\n            }\n            else {\n                this.setSelectLI(li, e);\n                if ((target.nodeName === 'INPUT') || (target.nodeName === 'TEXTAREA')) {\n                    target.classList.add('e-focused');\n                    this.targetElement = target;\n                }\n            }\n            closestElement = closest(e.target, 'li');\n            if (!isNullOrUndefined(closestElement)) {\n                if (closestElement.classList.contains('e-has-child') &&\n                    !e.target.parentElement.classList.contains('e-listview-checkbox')) {\n                    closestElement.classList.add(classNames.disable);\n                }\n            }\n        }\n        this.updateSelectedId();\n    };\n    ListView.prototype.removeElement = function (element) {\n        return element && element.parentNode && element.parentNode.removeChild(element);\n    };\n    ListView.prototype.hoverHandler = function (e) {\n        var curLi = closest(e.target.parentNode, '.' + classNames.listItem);\n        this.setHoverLI(curLi);\n    };\n    ListView.prototype.leaveHandler = function () {\n        this.removeHover();\n    };\n    ListView.prototype.homeKeyHandler = function (e, end) {\n        e.preventDefault();\n        if (Object.keys(this.dataSource).length && this.curUL) {\n            var li = this.curUL.querySelectorAll('.' + classNames.listItem);\n            var focusedElement = this.curUL.querySelector('.' + classNames.focused) ||\n                this.curUL.querySelector('.' + classNames.selected);\n            if (focusedElement) {\n                focusedElement.classList.remove(classNames.focused);\n                if (!this.showCheckBox) {\n                    focusedElement.classList.remove(classNames.selected);\n                }\n            }\n            var index = !end ? 0 : li.length - 1;\n            if (li[index].classList.contains(classNames.hasChild) || this.showCheckBox) {\n                li[index].classList.add(classNames.focused);\n            }\n            else {\n                this.setSelectLI(li[index], e);\n            }\n            if (li[index]) {\n                this.element.setAttribute('aria-activedescendant', li[index].id.toString());\n            }\n            else {\n                this.element.removeAttribute('aria-activedescendant');\n            }\n        }\n    };\n    ListView.prototype.onArrowKeyDown = function (e, prev) {\n        var siblingLI;\n        var li;\n        var hasChild = !isNullOrUndefined(this.curUL.querySelector('.' + classNames.hasChild)) ? true : false;\n        if (hasChild || this.showCheckBox) {\n            li = this.curUL.querySelector('.' + classNames.focused) || this.curUL.querySelector('.' + classNames.selected);\n            siblingLI = ListBase.getSiblingLI(this.curUL.querySelectorAll('.' + classNames.listItem), li, prev);\n            if (!isNullOrUndefined(siblingLI)) {\n                if (li) {\n                    li.classList.remove(classNames.focused);\n                    if (!this.showCheckBox) {\n                        li.classList.remove(classNames.selected);\n                    }\n                }\n                if (siblingLI.classList.contains(classNames.hasChild) || this.showCheckBox) {\n                    siblingLI.classList.add(classNames.focused);\n                }\n                else {\n                    this.setSelectLI(siblingLI, e);\n                }\n            }\n        }\n        else {\n            li = this.curUL.querySelector('.' + classNames.selected);\n            siblingLI = ListBase.getSiblingLI(this.curUL.querySelectorAll('.' + classNames.listItem), li, prev);\n            this.setSelectLI(siblingLI, e);\n        }\n        if (siblingLI) {\n            this.element.setAttribute('aria-activedescendant', siblingLI.id.toString());\n        }\n        else {\n            this.element.removeAttribute('aria-activedescendant');\n        }\n        return siblingLI;\n    };\n    ListView.prototype.arrowKeyHandler = function (e, prev) {\n        var _this = this;\n        e.preventDefault();\n        if (Object.keys(this.dataSource).length && this.curUL) {\n            var siblingLI = this.onArrowKeyDown(e, prev);\n            var elementTop = this.element.getBoundingClientRect().top;\n            var elementHeight = this.element.getBoundingClientRect().height;\n            var firstItemBounds = this.curUL.querySelector('.' + classNames.listItem).getBoundingClientRect();\n            var heightDiff = void 0;\n            var groupItemBounds = void 0;\n            if (this.fields.groupBy) {\n                groupItemBounds = this.curUL.querySelector('.' + classNames.groupListItem).getBoundingClientRect();\n            }\n            if (siblingLI) {\n                var siblingTop = siblingLI.getBoundingClientRect().top;\n                var siblingHeight = siblingLI.getBoundingClientRect().height;\n                if (!prev) {\n                    var height = this.isWindow ? window.innerHeight : elementHeight;\n                    heightDiff = this.isWindow ? (siblingTop + siblingHeight) :\n                        ((siblingTop - elementTop) + siblingHeight);\n                    if (heightDiff > height) {\n                        if (this.isWindow === true) {\n                            window.scroll(0, pageYOffset + (heightDiff - height));\n                        }\n                        else {\n                            this.element.scrollTop = this.element.scrollTop + (heightDiff - height);\n                        }\n                    }\n                }\n                else {\n                    heightDiff = this.isWindow ? siblingTop : (siblingTop - elementTop);\n                    if (heightDiff < 0) {\n                        if (this.isWindow === true) {\n                            window.scroll(0, pageYOffset + heightDiff);\n                        }\n                        else {\n                            this.element.scrollTop = this.element.scrollTop + heightDiff;\n                        }\n                    }\n                }\n            }\n            else if (this.enableVirtualization && prev && this.virtualizationModule.uiFirstIndex) {\n                this.onUIScrolled = function () {\n                    _this.onArrowKeyDown(e, prev);\n                    _this.onUIScrolled = undefined;\n                };\n                heightDiff = this.virtualizationModule.listItemHeight;\n                if (this.isWindow === true) {\n                    window.scroll(0, pageYOffset - heightDiff);\n                }\n                else {\n                    this.element.scrollTop = this.element.scrollTop - heightDiff;\n                }\n            }\n            else if (prev) {\n                if (this.showHeader && this.headerEle) {\n                    var topHeight = groupItemBounds ? groupItemBounds.top : firstItemBounds.top;\n                    var headerBounds = this.headerEle.getBoundingClientRect();\n                    heightDiff = headerBounds.top < 0 ? (headerBounds.height - topHeight) : 0;\n                    if (this.isWindow === true) {\n                        window.scroll(0, pageYOffset - heightDiff);\n                    }\n                    else {\n                        this.element.scrollTop = 0;\n                    }\n                }\n                else if (this.fields.groupBy) {\n                    heightDiff = this.isWindow ? (groupItemBounds.top < 0 ? groupItemBounds.top : 0) :\n                        (elementTop - firstItemBounds.top) + groupItemBounds.height;\n                    if (this.isWindow === true) {\n                        window.scroll(0, pageYOffset + heightDiff);\n                    }\n                    else {\n                        this.element.scrollTop = this.element.scrollTop - heightDiff;\n                    }\n                }\n            }\n        }\n    };\n    ListView.prototype.enterKeyHandler = function (e) {\n        if (Object.keys(this.dataSource).length && this.curUL) {\n            var hasChild = !isNullOrUndefined(this.curUL.querySelector('.' + classNames.hasChild)) ? true : false;\n            var li = this.curUL.querySelector('.' + classNames.focused);\n            if (hasChild && li) {\n                li.classList.remove(classNames.focused);\n                if (this.showCheckBox) {\n                    this.removeSelect();\n                    this.removeSelect(li);\n                    this.removeHover();\n                }\n                this.setSelectLI(li, e);\n            }\n        }\n    };\n    ListView.prototype.spaceKeyHandler = function (e) {\n        if (this.enable && this.showCheckBox && Object.keys(this.dataSource).length && this.curUL) {\n            e.preventDefault();\n            var li = this.curUL.querySelector('.' + classNames.focused);\n            var checkboxElement = void 0;\n            var checkIcon = void 0;\n            if (!isNullOrUndefined(li) && isNullOrUndefined(li.querySelector('.' + classNames.checked))) {\n                var args = {\n                    curData: undefined, dataSource: undefined, fields: undefined, options: undefined,\n                    text: undefined, item: li\n                };\n                checkboxElement = args.item.querySelector('.' + classNames.checkboxWrapper);\n                this.checkInternally(args, checkboxElement);\n                checkIcon = checkboxElement.querySelector('.' + classNames.checkboxIcon + '.' + classNames.icon);\n            }\n            else {\n                this.uncheckItem(li);\n            }\n            var eventArgs = this.selectEventData(li, e);\n            merge(eventArgs, { isChecked: checkIcon ? checkIcon.classList.contains(classNames.checked) : false });\n            if (!isNullOrUndefined(li)) {\n                var cbElement = li.querySelector('.' + classNames.checkboxWrapper);\n                var checkboxIcon = li.querySelector('.' + classNames.checkboxIcon);\n                var isCheckedBefore = checkboxIcon.classList.contains(classNames.checked);\n                var isFocusedBefore = li.classList.contains(classNames.focused);\n                this.handleCheckboxState(li, checkboxIcon, cbElement, isCheckedBefore, isFocusedBefore, eventArgs, false);\n            }\n            this.updateSelectedId();\n        }\n    };\n    ListView.prototype.keyActionHandler = function (e) {\n        switch (e.keyCode) {\n            case 36:\n                this.homeKeyHandler(e);\n                break;\n            case 35:\n                this.homeKeyHandler(e, true);\n                break;\n            case 40:\n                this.arrowKeyHandler(e);\n                break;\n            case 38:\n                this.arrowKeyHandler(e, true);\n                break;\n            case 13:\n                this.enterKeyHandler(e);\n                break;\n            case 8:\n                if (this.showCheckBox && this.curDSLevel[this.curDSLevel.length - 1]) {\n                    this.uncheckAllItems();\n                }\n                this.back();\n                break;\n            case 32:\n                if (isNullOrUndefined(this.targetElement) || !(this.targetElement.classList.contains('e-focused'))) {\n                    this.spaceKeyHandler(e);\n                }\n                break;\n        }\n    };\n    ListView.prototype.swipeActionHandler = function (e) {\n        if (e.swipeDirection === 'Right' && e.velocity > swipeVelocity && e.originalEvent.type === 'touchend') {\n            if (this.showCheckBox && this.curDSLevel[this.curDSLevel.length - 1]) {\n                this.uncheckAllItems();\n            }\n            this.back();\n        }\n    };\n    ListView.prototype.focusout = function () {\n        if (Object.keys(this.dataSource).length && this.curUL) {\n            var focusedElement = this.curUL.querySelector('.' + classNames.focused);\n            if (focusedElement) {\n                focusedElement.classList.remove(classNames.focused);\n                if (!this.showCheckBox && !isNullOrUndefined(this.selectedLI)) {\n                    this.selectedLI.classList.add(classNames.selected);\n                }\n            }\n        }\n    };\n    ListView.prototype.wireEvents = function () {\n        EventHandler.add(this.element, 'keydown', this.keyActionHandler, this);\n        EventHandler.add(this.element, 'click', this.clickHandler, this);\n        EventHandler.add(this.element, 'mouseover', this.hoverHandler, this);\n        EventHandler.add(this.element, 'mouseout', this.leaveHandler, this);\n        EventHandler.add(this.element, 'focusout', this.focusout, this);\n        this.touchModule = new Touch(this.element, { swipe: this.swipeActionHandler.bind(this) });\n        if (!isNullOrUndefined(this.scroll)) {\n            EventHandler.add(this.element, 'scroll', this.onListScroll, this);\n        }\n    };\n    ListView.prototype.unWireEvents = function () {\n        EventHandler.remove(this.element, 'keydown', this.keyActionHandler);\n        EventHandler.remove(this.element, 'click', this.clickHandler);\n        EventHandler.remove(this.element, 'mouseover', this.hoverHandler);\n        EventHandler.remove(this.element, 'mouseout', this.leaveHandler);\n        EventHandler.remove(this.element, 'mouseover', this.hoverHandler);\n        EventHandler.remove(this.element, 'mouseout', this.leaveHandler);\n        EventHandler.remove(this.element, 'focusout', this.focusout);\n        if (!isNullOrUndefined(this.scroll)) {\n            EventHandler.remove(this.element, 'scroll', this.onListScroll);\n        }\n        if (this.touchModule) {\n            this.touchModule.destroy();\n        }\n        this.touchModule = null;\n    };\n    ListView.prototype.removeFocus = function () {\n        var focusedLI = this.element.querySelectorAll('.' + classNames.focused);\n        for (var _i = 0, focusedLI_1 = focusedLI; _i < focusedLI_1.length; _i++) {\n            var ele = focusedLI_1[_i];\n            ele.classList.remove(classNames.focused);\n        }\n    };\n    ListView.prototype.removeHover = function () {\n        var hoverLI = this.element.querySelector('.' + classNames.hover);\n        if (hoverLI) {\n            hoverLI.classList.remove(classNames.hover);\n        }\n    };\n    ListView.prototype.removeSelect = function (li) {\n        if (isNullOrUndefined(li)) {\n            var selectedLI = this.element.querySelectorAll('.' + classNames.selected);\n            for (var _i = 0, selectedLI_1 = selectedLI; _i < selectedLI_1.length; _i++) {\n                var ele = selectedLI_1[_i];\n                if (this.showCheckBox && ele.querySelector('.' + classNames.checked)) {\n                    continue;\n                }\n                else {\n                    ele.classList.remove(classNames.selected);\n                }\n            }\n        }\n        else {\n            li.classList.remove(classNames.selected);\n        }\n    };\n    ListView.prototype.isValidLI = function (li) {\n        return (li && li.classList.contains(classNames.listItem)\n            && !li.classList.contains(classNames.groupListItem)\n            && !li.classList.contains(classNames.disable));\n    };\n    ListView.prototype.setCheckboxLI = function (li, e) {\n        if (this.isValidLI(li) && this.enable && this.showCheckBox) {\n            if (this.curUL.querySelector('.' + classNames.focused)) {\n                this.curUL.querySelector('.' + classNames.focused).classList.remove(classNames.focused);\n            }\n            var textAreaFocus = li.querySelector('textarea') || li.querySelector('input');\n            li.classList.add(classNames.focused);\n            if (!isNullOrUndefined(e)) {\n                if (e.target === textAreaFocus) {\n                    textAreaFocus.classList.add('e-focused');\n                }\n            }\n            var checkboxElement = li.querySelector('.' + classNames.checkboxWrapper);\n            var checkIcon = checkboxElement.querySelector('.' + classNames.checkboxIcon + '.' + classNames.icon);\n            this.removeHover();\n            var isCheckedBefore = checkIcon.classList.contains(classNames.checked);\n            var isFocusedBefore = li.classList.contains(classNames.focused);\n            if (!isCheckedBefore) {\n                checkIcon.classList.add(classNames.checked);\n                li.classList.add(classNames.selected);\n            }\n            else {\n                checkIcon.classList.remove(classNames.checked);\n                li.classList.remove(classNames.selected);\n            }\n            checkboxElement.setAttribute('aria-checked', checkIcon.classList.contains(classNames.checked) ?\n                'true' : 'false');\n            var eventArgs = this.selectEventData(li, e);\n            merge(eventArgs, { isChecked: checkIcon.classList.contains(classNames.checked) });\n            if (this.enableVirtualization) {\n                this.virtualizationModule.setCheckboxLI(li, e);\n            }\n            this.handleCheckboxState(li, checkIcon, checkboxElement, isCheckedBefore, isFocusedBefore, eventArgs, true, textAreaFocus);\n            this.setSelectedItemData(li);\n            this.renderSubList(li);\n        }\n    };\n    ListView.prototype.selectEventData = function (li, e) {\n        var data = this.getItemData(li);\n        var fieldData = getFieldValues(data, this.listBaseOption.fields);\n        var selectedItem;\n        if (!isNullOrUndefined(data)\n            && typeof this.dataSource[0] === 'string' || typeof this.dataSource[0] === 'number') {\n            selectedItem = { item: li, text: li && li.innerText.trim(), data: this.dataSource };\n        }\n        else {\n            selectedItem =\n                {\n                    item: li, text: fieldData && fieldData[this.listBaseOption.fields.text],\n                    data: data\n                };\n        }\n        var eventArgs = {};\n        merge(eventArgs, selectedItem);\n        if (e) {\n            merge(eventArgs, {\n                isInteracted: true,\n                event: e,\n                cancel: false,\n                index: this.curUL && Array.prototype.indexOf.call(this.curUL.children, li)\n            });\n        }\n        return eventArgs;\n    };\n    ListView.prototype.setSelectedItemData = function (li) {\n        var data = this.getItemData(li);\n        var fieldData = getFieldValues(data, this.listBaseOption.fields);\n        if (!isNullOrUndefined(data) && ((typeof this.dataSource[0] === 'string') ||\n            (typeof this.dataSource[0] === 'number'))) {\n            this.selectedItems = {\n                item: li,\n                text: li && li.innerText.trim(),\n                data: this.dataSource\n            };\n        }\n        else {\n            this.selectedItems = {\n                item: li,\n                text: fieldData && fieldData[this.listBaseOption.fields.text],\n                data: data\n            };\n        }\n    };\n    ListView.prototype.setSelectLI = function (li, e) {\n        var _this = this;\n        if (this.isValidLI(li) && !li.classList.contains(classNames.selected) && this.enable) {\n            if (!this.showCheckBox) {\n                this.removeSelect();\n            }\n            li.classList.add(classNames.selected);\n            this.removeHover();\n            this.setSelectedItemData(li);\n            if (this.enableVirtualization) {\n                this.virtualizationModule.setSelectLI(li, e);\n            }\n            var eventArgs = this.selectEventData(li, e);\n            this.trigger('select', eventArgs, function (observedArgs) {\n                if (!observedArgs.cancel) {\n                    _this.selectedLI = li;\n                    _this.renderSubList(li);\n                }\n                else {\n                    li.classList.remove(classNames.selected);\n                    _this.selectedLI = li;\n                }\n            });\n        }\n    };\n    ListView.prototype.setHoverLI = function (li) {\n        if (this.isValidLI(li) && !li.classList.contains(classNames.hover) && this.enable) {\n            var lastLi = this.element.querySelectorAll('.' + classNames.hover);\n            if (lastLi && lastLi.length) {\n                removeClass(lastLi, classNames.hover);\n            }\n            if (!li.classList.contains(classNames.selected) || this.showCheckBox) {\n                li.classList.add(classNames.hover);\n            }\n        }\n    };\n    //Data Source Related Functions\n    ListView.prototype.getSubDS = function () {\n        var levelKeys = this.curDSLevel;\n        if (levelKeys.length) {\n            var ds = this.localData;\n            for (var _i = 0, levelKeys_1 = levelKeys; _i < levelKeys_1.length; _i++) {\n                var key = levelKeys_1[_i];\n                var field = {};\n                field[this.fields.id] = key;\n                this.curDSJSON = this.findItemFromDS(ds, field);\n                var fieldData = getFieldValues(this.curDSJSON, this.listBaseOption.fields);\n                ds = this.curDSJSON ? fieldData[this.fields.child] : ds;\n            }\n            return ds;\n        }\n        return this.localData;\n    };\n    ListView.prototype.getItemData = function (li) {\n        var dataSource = this.dataSource instanceof DataManager ?\n            this.localData : this.dataSource;\n        var fields = this.getElementUID(li);\n        var curDS;\n        if (isNullOrUndefined(this.element.querySelector('.' + classNames.hasChild)) && this.fields.groupBy) {\n            curDS = this.curViewDS;\n        }\n        else {\n            curDS = dataSource;\n        }\n        return this.findItemFromDS(curDS, fields);\n    };\n    ListView.prototype.findItemFromDS = function (dataSource, fields, parent) {\n        var _this = this;\n        var resultJSON;\n        if (dataSource && dataSource.length && fields) {\n            dataSource.some(function (data) {\n                var fieldData = getFieldValues(data, _this.listBaseOption.fields);\n                //(!(fid) || id === fid) && (!(ftext) || text === ftext) && (!!fid || !!ftext)\n                if ((fields[_this.fields.id] || fields[_this.fields.text]) &&\n                    (!fields[_this.fields.id] || (!isNullOrUndefined(fieldData[_this.fields.id]) &&\n                        fieldData[_this.fields.id].toString()) === fields[_this.fields.id].toString()) &&\n                    (!fields[_this.fields.text] || fieldData[_this.fields.text] === fields[_this.fields.text])) {\n                    resultJSON = (parent ? dataSource : data);\n                }\n                else if (typeof data !== 'object' && dataSource.indexOf(data) !== -1) {\n                    resultJSON = (parent ? dataSource : data);\n                }\n                else if (!isNullOrUndefined(fields[_this.fields.id]) && isNullOrUndefined(fieldData[_this.fields.id])) {\n                    var li = _this.element.querySelector('[data-uid=\"'\n                        + fields[_this.fields.id] + '\"]');\n                    if (li && li.innerText.trim() === fieldData[_this.fields.text]) {\n                        resultJSON = data;\n                    }\n                }\n                else if (Object.prototype.hasOwnProperty.call(fieldData, _this.fields.child) &&\n                    fieldData[_this.fields.child].length) {\n                    resultJSON = _this.findItemFromDS(fieldData[_this.fields.child], fields, parent);\n                }\n                return !!resultJSON;\n            });\n        }\n        else {\n            resultJSON = dataSource;\n        }\n        return resultJSON;\n    };\n    ListView.prototype.getQuery = function () {\n        var columns = [];\n        var query = (this.query ? this.query : new Query());\n        if (!this.query) {\n            for (var _i = 0, _a = Object.keys(this.fields.properties); _i < _a.length; _i++) {\n                var column = _a[_i];\n                if (column !== 'tableName' && !!(this.fields[\"\" + column]) &&\n                    this.fields[\"\" + column] !==\n                        ListBase.defaultMappedFields[\"\" + column]\n                    && columns.indexOf(this.fields[\"\" + column]) === -1) {\n                    columns.push(this.fields[\"\" + column]);\n                }\n            }\n            query.select(columns);\n            if (Object.prototype.hasOwnProperty.call(this.fields.properties, 'tableName')) {\n                query.from(this.fields.tableName);\n            }\n        }\n        return query;\n    };\n    ListView.prototype.setViewDataSource = function (dataSource) {\n        if (dataSource === void 0) { dataSource = this.localData; }\n        var fieldValue = (isNullOrUndefined(this.fields.sortBy)) ? this.fields.text : this.fields.sortBy;\n        var query = ListBase.addSorting(this.sortOrder, fieldValue);\n        if (dataSource && this.fields.groupBy) {\n            if (this.sortOrder !== 'None') {\n                this.curViewDS = ListBase.groupDataSource(ListBase.getDataSource(dataSource, query), this.listBaseOption.fields, this.sortOrder);\n            }\n            else {\n                this.curViewDS = ListBase.groupDataSource(dataSource, this.listBaseOption.fields, this.sortOrder);\n            }\n        }\n        else if (dataSource && this.sortOrder !== 'None') {\n            this.curViewDS = ListBase.getDataSource(dataSource, query);\n        }\n        else {\n            this.curViewDS = dataSource;\n        }\n    };\n    ListView.prototype.isInAnimation = function () {\n        return this.curUL.classList.contains('.e-animate');\n    };\n    ListView.prototype.renderRemoteLists = function (e, listViewComponent) {\n        if (this.isDestroyed) {\n            return;\n        }\n        this.localData = e.result;\n        listViewComponent.removeElement(listViewComponent.contentContainer);\n        this.renderList();\n        this.trigger('actionComplete', e);\n    };\n    ListView.prototype.triggerActionFailure = function (e) {\n        if (this.isDestroyed) {\n            return;\n        }\n        this.trigger('actionFailure', e);\n    };\n    ListView.prototype.setLocalData = function () {\n        var _this = this;\n        this.trigger('actionBegin');\n        if (this.dataSource instanceof DataManager) {\n            if (this.dataSource.ready) {\n                this.dataSource.ready.then(function (e) {\n                    _this.isOffline = _this.dataSource.dataSource.offline;\n                    if (_this.dataSource instanceof DataManager && _this.isOffline) {\n                        _this.renderRemoteLists(e, _this);\n                    }\n                }).catch(function (e) {\n                    _this.triggerActionFailure(e);\n                });\n            }\n            else {\n                this.dataSource.executeQuery(this.getQuery()).then(function (e) {\n                    _this.renderRemoteLists(e, _this);\n                }).catch(function (e) {\n                    _this.triggerActionFailure(e);\n                });\n            }\n        }\n        else if (!this.dataSource || !this.dataSource.length) {\n            var ul = this.element.querySelector('ul');\n            if (ul) {\n                remove(ul);\n                this.setProperties({ dataSource: ListBase.createJsonFromElement(ul) }, true);\n                this.localData = this.dataSource;\n                this.renderList();\n                this.trigger('actionComplete', { data: this.localData });\n            }\n        }\n        else {\n            this.localData = this.dataSource;\n            this.renderList();\n            this.trigger('actionComplete', { data: this.localData });\n        }\n    };\n    ListView.prototype.reRender = function () {\n        this.removeElement(this.headerEle);\n        this.removeElement(this.ulElement);\n        this.removeElement(this.contentContainer);\n        if (this.isReact) {\n            this.clearTemplate();\n        }\n        if (Object.keys(window).indexOf('ejsInterop') === -1) {\n            this.element.innerHTML = '';\n        }\n        this.headerEle = this.ulElement = this.liCollection = undefined;\n        this.header();\n        this.setLocalData();\n    };\n    ListView.prototype.resetCurrentList = function () {\n        this.setViewDataSource(this.curViewDS);\n        this.contentContainer.innerHTML = '';\n        this.createList();\n        this.renderIntoDom(this.curUL);\n    };\n    ListView.prototype.setAttributes = function (liElements) {\n        for (var i = 0; i < liElements.length; i++) {\n            var element = liElements[parseInt(i.toString(), 10)];\n            if (element.classList.contains('e-list-item')) {\n                element.setAttribute('id', this.element.id + '_' + element.getAttribute('data-uid'));\n                element.setAttribute('tabindex', '-1');\n            }\n        }\n    };\n    ListView.prototype.createList = function () {\n        this.currentLiElements = [];\n        this.isNestedList = false;\n        this.ulElement = this.curUL = ListBase.createList(this.createElement, this.curViewDS, this.listBaseOption, null, this);\n        this.liCollection = this.curUL.querySelectorAll('.' + classNames.listItem);\n        this.setAttributes(this.liCollection);\n    };\n    ListView.prototype.renderSubList = function (li) {\n        this.liElement = li;\n        var uID = li.getAttribute('data-uid');\n        if (li.classList.contains(classNames.hasChild) && uID) {\n            var ul = closest(li.parentNode, '.' + classNames.parentItem);\n            var ele = this.element.querySelector('[pid=\\'' + uID + '\\']');\n            this.curDSLevel.push(uID);\n            this.setViewDataSource(this.getSubDS());\n            if (this.enableVirtualization) {\n                this.virtualizationModule.updateDOMItemCount();\n            }\n            if (!ele) {\n                var data = this.curViewDS;\n                ele = ListBase.createListFromJson(this.createElement, data, this.listBaseOption, this.curDSLevel.length, null, this);\n                if (this.isReact) {\n                    this.renderReactTemplates();\n                }\n                var lists = ele.querySelectorAll('.' + classNames.listItem);\n                this.setAttributes(lists);\n                ele.setAttribute('pID', uID);\n                ele.style.display = 'none';\n                this.renderIntoDom(ele);\n            }\n            this.switchView(ul, ele);\n            this.liCollection = this.curUL.querySelectorAll('.' + classNames.listItem);\n            if (this.selectedItems) {\n                var fieldData = getFieldValues(this.selectedItems.data, this.listBaseOption.fields);\n                this.header((fieldData[this.listBaseOption.fields.text]), true, 'header');\n            }\n            this.selectedLI = undefined;\n        }\n    };\n    ListView.prototype.renderIntoDom = function (ele) {\n        this.contentContainer.appendChild(ele);\n    };\n    ListView.prototype.renderList = function (data) {\n        this.setViewDataSource(data);\n        if (this.enableVirtualization) {\n            if (Object.keys(this.dataSource).length) {\n                if ((this.template || this.groupTemplate) && !this.virtualizationModule.isNgTemplate()) {\n                    this.listBaseOption.itemCreated = this.virtualizationModule.createUIItem.bind(this.virtualizationModule);\n                }\n            }\n            this.virtualizationModule.uiVirtualization();\n        }\n        else {\n            this.createList();\n            this.contentContainer = this.createElement('div', { className: classNames.container });\n            this.element.appendChild(this.contentContainer);\n            this.renderIntoDom(this.ulElement);\n            if (this.isReact) {\n                this.renderReactTemplates();\n            }\n        }\n    };\n    ListView.prototype.getElementUID = function (obj) {\n        var fields = {};\n        if (obj instanceof Element) {\n            fields[this.fields.id] = obj.getAttribute('data-uid');\n        }\n        else {\n            fields = obj;\n        }\n        return fields;\n    };\n    /**\n     * Initializes the ListView component rendering.\n     */\n    ListView.prototype.render = function () {\n        this.element.classList.add(classNames.root);\n        attributes(this.element, { tabindex: '0' });\n        this.setCSSClass();\n        this.setEnableRTL();\n        this.setEnable();\n        this.setSize();\n        this.wireEvents();\n        this.header();\n        this.setLocalData();\n        this.setHTMLAttribute();\n        this.rippleFn = rippleEffect(this.element, {\n            selector: '.' + classNames.listItem\n        });\n        this.renderComplete();\n        this.previousScrollTop = this.element.scrollTop;\n    };\n    /**\n     * It is used to destroy the ListView component.\n     */\n    ListView.prototype.destroy = function () {\n        if (this.isReact) {\n            this.clearTemplate();\n        }\n        this.unWireEvents();\n        var classAr = [classNames.root, classNames.disable, 'e-rtl',\n            'e-has-header', 'e-lib'].concat(this.cssClass ? this.cssClass.split(' ').filter(function (css) { return css; }) : []);\n        removeClass([this.element], classAr);\n        this.element.removeAttribute('role');\n        this.element.removeAttribute('tabindex');\n        this.curUL = this.ulElement = this.liCollection = this.headerEle = undefined;\n        this.element.innerHTML = '';\n        this.contentContainer = null;\n        this.selectedItems = null;\n        this.selectedLI = null;\n        this.liElement = null;\n        this.targetElement = null;\n        this.currentLiElements = null;\n        this.virtualCheckBox = null;\n        _super.prototype.destroy.call(this);\n    };\n    /**\n     * Switches back from the navigated sub list item.\n     */\n    ListView.prototype.back = function () {\n        var pID = this.curDSLevel[this.curDSLevel.length - 1];\n        if (pID === undefined || this.isInAnimation()) {\n            return;\n        }\n        this.curDSLevel.pop();\n        this.setViewDataSource(this.getSubDS());\n        if (this.enableVirtualization) {\n            this.virtualizationModule.updateDOMItemCount();\n        }\n        var toUL = this.element.querySelector('[data-uid=\\'' + pID + '\\']');\n        var fromUL = this.curUL;\n        if (!toUL) {\n            this.createList();\n            this.renderIntoDom(this.ulElement);\n            toUL = this.curUL;\n        }\n        else {\n            toUL = toUL.parentElement;\n        }\n        var fieldData = getFieldValues(this.curDSJSON, this.listBaseOption.fields);\n        var text = fieldData[this.fields.text];\n        this.switchView(fromUL, toUL, true);\n        this.removeFocus();\n        var li = this.element.querySelector('[data-uid=\\'' + pID + '\\']');\n        li.classList.remove(classNames.disable);\n        li.classList.add(classNames.focused);\n        if (!(this.showCheckBox && li.querySelector('.' + classNames.checkboxIcon).classList.contains(classNames.checked))) {\n            li.classList.remove(classNames.selected);\n        }\n        this.liCollection = this.curUL.querySelectorAll('.' + classNames.listItem);\n        if (this.enableHtmlSanitizer) {\n            this.setProperties({ headerTitle: SanitizeHtmlHelper.sanitize(this.headerTitle) }, true);\n        }\n        this.header((this.curDSLevel.length ? text : this.headerTitle), (this.curDSLevel.length ? true : false), 'header');\n    };\n    /**\n     * Selects the list item from the ListView by passing the elements or field object.\n     *\n     * @param  {Fields | HTMLElement | Element} item - We can pass element Object or Fields as Object with ID and Text fields.\n     */\n    ListView.prototype.selectItem = function (item) {\n        if (this.enableVirtualization) {\n            this.virtualizationModule.selectItem(item);\n        }\n        else if (this.showCheckBox) {\n            this.setCheckboxLI(this.getLiFromObjOrElement(item));\n        }\n        else {\n            if (isNullOrUndefined(item) === true) {\n                this.removeSelect();\n            }\n            else {\n                this.setSelectLI(this.getLiFromObjOrElement(item));\n            }\n        }\n    };\n    /**\n     * This method allows for deselecting a list item within the ListView. The item to be deselected can be specified by passing the element or field object.\n     *\n     * @param  {Fields | HTMLElement | Element} item - We can pass an element Object or Fields as an Object with ID and Text fields.\n     */\n    ListView.prototype.unselectItem = function (item) {\n        if (isNullOrUndefined(item)) {\n            this.removeSelect();\n        }\n        else {\n            var li = this.getLiFromObjOrElement(item);\n            if (!isNullOrUndefined(li)) {\n                this.removeSelect(li);\n            }\n        }\n    };\n    ListView.prototype.getLiFromObjOrElement = function (obj) {\n        var li;\n        var dataSource = this.dataSource instanceof DataManager ?\n            this.localData : this.dataSource;\n        if (!isNullOrUndefined(obj)) {\n            if (typeof dataSource[0] === 'string' || typeof dataSource[0] === 'number') {\n                if (obj instanceof Element) {\n                    var uid = obj.getAttribute('data-uid').toString();\n                    for (var i = 0; i < this.liCollection.length; i++) {\n                        if (this.liCollection[parseInt(i.toString(), 10)].getAttribute('data-uid').toString() === uid) {\n                            li = this.liCollection[parseInt(i.toString(), 10)];\n                            break;\n                        }\n                    }\n                }\n                else {\n                    Array.prototype.some.call(this.curUL.querySelectorAll('.' + classNames.listItem), function (item) {\n                        if (item.innerText.trim() === obj.toString()) {\n                            li = item;\n                            return true;\n                        }\n                        else {\n                            return false;\n                        }\n                    });\n                }\n            }\n            else {\n                var resultJSON = this.getItemData(obj);\n                var fieldData = getFieldValues(resultJSON, this.listBaseOption.fields);\n                if (resultJSON) {\n                    li = this.element.querySelector('[data-uid=\"'\n                        + fieldData[this.fields.id] + '\"]');\n                    if (!this.enableVirtualization && isNullOrUndefined(li)) {\n                        var curLi = this.element.querySelectorAll('.' + classNames.listItem);\n                        for (var i = 0; i < curLi.length; i++) {\n                            if (curLi[parseInt(i.toString(), 10)].innerText.trim() ===\n                                fieldData[this.fields.text]) {\n                                li = curLi[parseInt(i.toString(), 10)];\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        return li;\n    };\n    /**\n     * Selects multiple list items from the ListView.\n     *\n     * @param  {Fields[] | HTMLElement[] | Element[]} item - We can pass array of\n     *  elements or array of fields Object with ID and Text fields.\n     */\n    ListView.prototype.selectMultipleItems = function (item) {\n        if (!isNullOrUndefined(item)) {\n            for (var i = 0; i < item.length; i++) {\n                if (!isNullOrUndefined(item[parseInt(i.toString(), 10)])) {\n                    this.selectItem(item[parseInt(i.toString(), 10)]);\n                }\n            }\n        }\n    };\n    ListView.prototype.getParentId = function () {\n        var parentId = [];\n        if (this.isNestedList) {\n            for (var i = this.curDSLevel.length - 1; i >= 0; i--) {\n                parentId.push(this.curDSLevel[parseInt(i.toString(), 10)]);\n            }\n        }\n        return parentId;\n    };\n    ListView.prototype.updateSelectedId = function () {\n        this.selectedId = [];\n        var liCollection = this.curUL.getElementsByClassName(classNames.selected);\n        for (var i = 0; i < liCollection.length; i++) {\n            var tempData = this.getItemData(liCollection[parseInt(i.toString(), 10)]);\n            if (!isNullOrUndefined(tempData) && tempData[this.listBaseOption.fields.id]) {\n                this.selectedId.push(tempData[this.listBaseOption.fields.id]);\n            }\n        }\n    };\n    /**\n     * Gets the details of the currently selected item from the list items.\n     *\n     */\n    ListView.prototype.getSelectedItems = function () {\n        var finalValue;\n        var isCompleted = false;\n        this.selectedId = [];\n        var dataSource = this.dataSource instanceof DataManager ?\n            this.localData : this.dataSource;\n        if (this.enableVirtualization && !isCompleted) {\n            finalValue = this.virtualizationModule.getSelectedItems();\n            isCompleted = true;\n        }\n        else if (this.showCheckBox && !isCompleted) {\n            var liCollection = this.curUL.getElementsByClassName(classNames.selected);\n            var liTextCollection = [];\n            var liDataCollection = [];\n            this.selectedId = [];\n            var dataParent = [];\n            for (var i = 0; i < liCollection.length; i++) {\n                if (typeof dataSource[0] === 'string' || typeof dataSource[0] === 'number') {\n                    liTextCollection.push(liCollection[parseInt(i.toString(), 10)].innerText.trim());\n                }\n                else {\n                    var tempData = this.getItemData(liCollection[parseInt(i.toString(), 10)]);\n                    var fieldData = getFieldValues(tempData, this.listBaseOption.fields);\n                    if (this.isNestedList) {\n                        dataParent.push({ data: tempData, parentId: this.getParentId() });\n                    }\n                    else {\n                        liDataCollection.push(tempData);\n                    }\n                    if (fieldData) {\n                        liTextCollection.push(fieldData[this.listBaseOption.fields.text]);\n                        this.selectedId.push(fieldData[this.listBaseOption.fields.id]);\n                    }\n                    else {\n                        liTextCollection.push(undefined);\n                        this.selectedId.push(undefined);\n                    }\n                }\n            }\n            if ((typeof dataSource[0] === 'string'\n                || typeof dataSource[0] === 'number')\n                && !isCompleted) {\n                finalValue = { item: liCollection, data: dataSource, text: liTextCollection };\n                isCompleted = true;\n            }\n            if (this.isNestedList && !isCompleted) {\n                finalValue = { item: liCollection, data: dataParent, text: liTextCollection };\n                isCompleted = true;\n            }\n            else if (!isCompleted) {\n                finalValue = { item: liCollection, data: liDataCollection, text: liTextCollection };\n                isCompleted = true;\n            }\n        }\n        else if (!isCompleted) {\n            var liElement = this.element.getElementsByClassName(classNames.selected)[0];\n            var fieldData = getFieldValues(this.getItemData(liElement), this.listBaseOption.fields);\n            if ((typeof dataSource[0] === 'string'\n                || typeof dataSource[0] === 'number')\n                && !isCompleted) {\n                finalValue = (!isNullOrUndefined(liElement)) ? {\n                    item: liElement, data: dataSource,\n                    text: liElement.innerText.trim()\n                } : undefined;\n                isCompleted = true;\n            }\n            else if (!isCompleted) {\n                if (isNullOrUndefined(fieldData) || isNullOrUndefined(liElement)) {\n                    finalValue = undefined;\n                    isCompleted = true;\n                }\n                else {\n                    this.selectedId.push(fieldData[this.listBaseOption.fields.id]);\n                    finalValue = {\n                        text: fieldData[this.listBaseOption.fields.text], item: liElement,\n                        data: this.getItemData(liElement)\n                    };\n                    isCompleted = true;\n                }\n            }\n        }\n        return finalValue;\n    };\n    /**\n     * Finds out an item details from the current list.\n     *\n     * @param  {Fields | HTMLElement | Element} item - We can pass element Object or Fields as Object with ID and Text fields.\n     */\n    ListView.prototype.findItem = function (item) {\n        return this.getItemData(item);\n    };\n    /**\n     * Enables the disabled list items by passing the Id and text fields.\n     *\n     * @param  {Fields | HTMLElement | Element} item - We can pass element Object or Fields as Object with ID and Text fields.\n     */\n    ListView.prototype.enableItem = function (item) {\n        this.setItemState(item, true);\n        if (this.enableVirtualization) {\n            this.virtualizationModule.enableItem(item);\n        }\n    };\n    /**\n     * Disables the list items by passing the Id and text fields.\n     *\n     * @param  {Fields | HTMLElement | Element} item - We can pass element Object or Fields as Object with ID and Text fields.\n     */\n    ListView.prototype.disableItem = function (item) {\n        this.setItemState(item, false);\n        if (this.enableVirtualization) {\n            this.virtualizationModule.disableItem(item);\n        }\n    };\n    //A function that used to set state of the list item like enable, disable.\n    ListView.prototype.setItemState = function (item, isEnable) {\n        var resultJSON = this.getItemData(item);\n        var fieldData = getFieldValues(resultJSON, this.listBaseOption.fields);\n        if (resultJSON) {\n            var li = this.element.querySelector('[data-uid=\"' + fieldData[this.fields.id] + '\"]');\n            if (isEnable) {\n                if (li) {\n                    li.classList.remove(classNames.disable);\n                }\n                delete resultJSON[this.fields.enabled];\n            }\n            else if (!isEnable) {\n                if (li) {\n                    li.classList.add(classNames.disable);\n                }\n                resultJSON[this.fields.enabled] = false;\n            }\n        }\n    };\n    /**\n     * Shows the hide list item from the ListView.\n     *\n     * @param  {Fields | HTMLElement | Element} item - We can pass element Object or Fields as Object with ID and Text fields.\n     */\n    ListView.prototype.showItem = function (item) {\n        this.showHideItem(item, false, '');\n        if (this.enableVirtualization) {\n            this.virtualizationModule.showItem(item);\n        }\n    };\n    /**\n     * Hides an list item from the ListView.\n     *\n     * @param  {Fields | HTMLElement | Element} item - We can pass element Object or Fields as Object with ID and Text fields.\n     */\n    ListView.prototype.hideItem = function (item) {\n        this.showHideItem(item, true, 'none');\n        if (this.enableVirtualization) {\n            this.virtualizationModule.hideItem(item);\n        }\n    };\n    ListView.prototype.showHideItem = function (obj, isHide, display) {\n        var resultJSON = this.getItemData(obj);\n        var fieldData = getFieldValues(resultJSON, this.listBaseOption.fields);\n        if (resultJSON) {\n            var li = this.element.querySelector('[data-uid=\"' + fieldData[this.fields.id] + '\"]');\n            if (li) {\n                li.style.display = display;\n            }\n            if (isHide) {\n                resultJSON[this.fields.isVisible] = false;\n            }\n            else {\n                delete resultJSON[this.fields.isVisible];\n            }\n        }\n    };\n    /**\n     * Adds the new list item(s) to the current ListView.\n     * To add a new list item(s) in the ListView, we need to pass the `data` as an array of items that need\n     * to be added and `fields` as the target item to which we need to add the given item(s) as its children.\n     * For example fields: { text: 'Name', tooltip: 'Name', id:'id'}\n     *\n     * @param  {{Object}[]} data - JSON Array Data that need to add.\n     *\n     * @param  {Fields} fields - Target item to add the given data as its children (can be null).\n     *\n     * @param {number} index - Indicates the index where the data to be added.\n     */\n    ListView.prototype.addItem = function (data, fields, index) {\n        if (fields === void 0) { fields = undefined; }\n        var dataSource = this.dataSource instanceof DataManager\n            ? this.localData : this.dataSource;\n        this.addItemInternally(data, fields, dataSource, index);\n    };\n    ListView.prototype.addItemInternally = function (data, fields, dataSource, index) {\n        if (data instanceof Array) {\n            if (this.enableVirtualization) {\n                this.virtualizationModule.addItem(data, fields, dataSource, index);\n            }\n            else {\n                var ds = this.findItemFromDS(dataSource, fields);\n                var child = void 0;\n                if (ds) {\n                    var fieldData = getFieldValues(ds, this.listBaseOption.fields);\n                    child = fieldData[this.fields.child];\n                    if (!child) {\n                        child = [];\n                    }\n                    child = child.concat(data);\n                }\n                // check for whether target is nested level or top level in list\n                if (ds instanceof Array) {\n                    for (var i = 0; i < data.length; i++) {\n                        dataSource = this.addItemAtIndex(index, dataSource, data[parseInt(i.toString(), 10)]);\n                        this.setViewDataSource(dataSource);\n                        // since it is top level target, get the content container's first child\n                        // as it is always the top level UL\n                        var targetUL = this.contentContainer\n                            ? this.contentContainer.children[0]\n                            : null;\n                        // check for whether the list was previously empty or not, if it is\n                        // proceed to call initial render\n                        if (this.contentContainer && targetUL) {\n                            this.addItemIntoDom(data[parseInt(i.toString(), 10)], targetUL, this.curViewDS);\n                        }\n                        else {\n                            this.reRender();\n                        }\n                    }\n                    this.liCollection = this.curUL.querySelectorAll('.' + classNames.listItem);\n                }\n                else {\n                    // proceed as target item is in nested level, only if it is a valid target ds\n                    if (ds) {\n                        ds[this.fields.child] = child;\n                        this.addItemInNestedList(ds, data);\n                    }\n                }\n            }\n        }\n    };\n    ListView.prototype.addItemAtIndex = function (index, newDataSource, itemData) {\n        var isIndexValid = !(isNullOrUndefined(index)) && index >= 0 &&\n            index < newDataSource.length && isNullOrUndefined(this.listBaseOption.fields.groupBy);\n        if (isIndexValid) {\n            newDataSource.splice(index, 0, itemData);\n        }\n        else {\n            newDataSource.push(itemData);\n        }\n        return newDataSource;\n    };\n    ListView.prototype.addItemInNestedList = function (targetItemData, itemQueue) {\n        var targetItemId = targetItemData[this.fields.id];\n        var targetChildDS = targetItemData[this.fields.child];\n        var isAlreadyRenderedUL = this.element.querySelector('[pid=\\'' + targetItemId + '\\']');\n        var targetLi = this.element.querySelector('[data-uid=\\'' + targetItemId + '\\']');\n        var targetUL = isAlreadyRenderedUL\n            ? isAlreadyRenderedUL\n            : targetLi\n                ? closest(targetLi, 'ul')\n                : null;\n        var targetDS = isAlreadyRenderedUL ? targetChildDS : [targetItemData];\n        var isTargetEmptyChild = targetLi ? !targetLi.classList.contains(classNames.hasChild) : false;\n        // if li element is already rendered, that element needs to be refreshed so that\n        // it becomes child viewable due to new child items are added now\n        if (isTargetEmptyChild) {\n            var targetRefreshedElement = ListBase.createListItemFromJson(this.createElement, targetDS, this.listBaseOption, null, null, this);\n            this.setAttributes(targetRefreshedElement);\n            targetUL.insertBefore(targetRefreshedElement[0], targetLi);\n            detach(targetLi);\n        }\n        // if it is already rendered element, we need to create and append new elements\n        if (isAlreadyRenderedUL && itemQueue) {\n            for (var i = 0; i < itemQueue.length; i++) {\n                targetDS.push(itemQueue[parseInt(i.toString(), 10)]);\n                this.addItemIntoDom(itemQueue[parseInt(i.toString(), 10)], targetUL, targetDS);\n            }\n        }\n    };\n    ListView.prototype.addItemIntoDom = function (currentItem, targetUL, curViewDS) {\n        var index = curViewDS.indexOf(currentItem);\n        this.addListItem(currentItem, index, targetUL, curViewDS);\n        var curItemDS = curViewDS[index - 1];\n        if (curItemDS && curItemDS.isHeader && curItemDS.items.length === 1) {\n            this.addListItem(curItemDS, (index - 1), targetUL, curViewDS);\n        }\n    };\n    ListView.prototype.addListItem = function (dataSource, index, ulElement, curViewDS) {\n        var target = this.getLiFromObjOrElement(curViewDS[index + 1]) ||\n            this.getLiFromObjOrElement(curViewDS[index + 2]) || null;\n        var li = ListBase.createListItemFromJson(this.createElement, [dataSource], this.listBaseOption, null, null, this);\n        this.setAttributes(li);\n        if (this.template && this.isReact) {\n            this.renderReactTemplates();\n        }\n        if (this.fields.groupBy && curViewDS[index + 1] && curViewDS[index + 1].isHeader) {\n            var targetEle = this.getLiFromObjOrElement(curViewDS[index - 1]);\n            if (targetEle) {\n                target = targetEle.nextElementSibling;\n            }\n        }\n        ulElement.insertBefore(li[0], target);\n    };\n    /**\n     * Removes the list item from the data source based on a passed\n     *  element like fields: { text: 'Name', tooltip: 'Name', id:'id'}\n     *\n     * @param  {Fields | HTMLElement | Element} item - We can pass element Object or Fields as Object with ID and Text fields.\n     */\n    ListView.prototype.removeItem = function (item) {\n        var listDataSource = this.dataSource instanceof DataManager\n            ? this.localData : this.dataSource;\n        if (this.enableVirtualization) {\n            this.virtualizationModule.removeItem(item);\n        }\n        else {\n            this.removeItemFromList(item, listDataSource);\n        }\n    };\n    ListView.prototype.removeItemFromList = function (obj, listDataSource) {\n        var _this = this;\n        var curViewDS = this.curViewDS;\n        var fields = obj instanceof Element ? this.getElementUID(obj) : obj;\n        var dataSource = this.findItemFromDS(listDataSource, fields, true);\n        if (dataSource) {\n            var data_1 = this.findItemFromDS(dataSource, fields);\n            var index = curViewDS.indexOf(data_1);\n            var li = this.getLiFromObjOrElement(obj);\n            var groupLi = void 0;\n            this.validateNestedView(li);\n            if (this.fields.groupBy && this.curViewDS[index - 1] &&\n                curViewDS[index - 1].isHeader &&\n                curViewDS[index - 1].items.length === 1) {\n                if (li && li.previousElementSibling.classList.contains(classNames.groupListItem) &&\n                    (isNullOrUndefined(li.nextElementSibling) || (li.nextElementSibling &&\n                        li.nextElementSibling.classList.contains(classNames.groupListItem)))) {\n                    groupLi = li.previousElementSibling;\n                }\n            }\n            if (li) {\n                detach(li);\n            }\n            if (groupLi) {\n                detach(groupLi);\n            }\n            var foundData = (dataSource.length - 1) <= 0\n                ? this.findParent(this.localData, this.fields.id, function (value) { return value === data_1[_this.fields.id]; }, null) : null;\n            var dsIndex = dataSource.indexOf(data_1);\n            dataSource.splice(dsIndex, 1);\n            this.setViewDataSource(listDataSource);\n            if (foundData\n                && foundData.parent\n                && Array.isArray(foundData.parent[this.fields.child])\n                && foundData.parent[this.fields.child].length <= 0) {\n                var parentLi = this.getLiFromObjOrElement(foundData.parent);\n                if (parentLi) {\n                    var li_1 = ListBase.createListItemFromJson(this.createElement, [foundData.parent], this.listBaseOption, null, null, this);\n                    this.setAttributes(li_1);\n                    parentLi.parentElement.insertBefore(li_1[0], parentLi);\n                    parentLi.parentElement.removeChild(parentLi);\n                }\n            }\n            if (dataSource.length <= 0) {\n                this.back();\n            }\n            this.liCollection = Array.prototype.slice.call(this.element.querySelectorAll('.' + classNames.listItem));\n        }\n    };\n    // validate before removing an element whether the current view is inside target element's child view\n    ListView.prototype.validateNestedView = function (li) {\n        var liID = li ? li.getAttribute('data-uid').toString().toLowerCase() : null;\n        if (liID && this.curDSLevel && this.curDSLevel.length > 0) {\n            while (this.curDSLevel.some(function (id) { return id.toString().toLowerCase() === liID; })) {\n                this.back();\n            }\n        }\n    };\n    /**\n     * Removes multiple items from the ListView by passing the array of elements or array of field objects.\n     *\n     * @param  {Fields[] | HTMLElement[] | Element[]} item - We can pass array of elements or array of field Object with ID and Text fields.\n     */\n    ListView.prototype.removeMultipleItems = function (item) {\n        if (item.length) {\n            for (var i = 0; i < item.length; i++) {\n                this.removeItem(item[parseInt(i.toString(), 10)]);\n            }\n        }\n    };\n    ListView.prototype.findParent = function (dataSource, id, callback, parent) {\n        if (Object.prototype.hasOwnProperty.call(dataSource, id) && callback(dataSource[id]) === true) {\n            return extend({}, dataSource);\n        }\n        for (var i = 0; i < Object.keys(dataSource).length; i++) {\n            if (dataSource[Object.keys(dataSource)[parseInt(i.toString(), 10)]]\n                && typeof dataSource[Object.keys(dataSource)[parseInt(i.toString(), 10)]] === 'object') {\n                var result = this.findParent(dataSource[Object.keys(dataSource)[parseInt(i.toString(), 10)]], id, callback, dataSource);\n                if (result != null) {\n                    if (!result.parent) {\n                        result.parent = parent;\n                    }\n                    return result;\n                }\n            }\n        }\n        return null;\n    };\n    // Module Required function\n    ListView.prototype.getModuleName = function () {\n        return 'listview';\n    };\n    ListView.prototype.requiredModules = function () {\n        var modules = [];\n        if (this.enableVirtualization) {\n            modules.push({ args: [this], member: 'virtualization', name: 'Virtualization' });\n        }\n        return modules;\n    };\n    ListView.prototype.onListScroll = function (e) {\n        var args = { originalEvent: e, scrollDirection: 'Bottom', distanceY: this.element.scrollHeight - this.element.scrollTop };\n        var currentScrollTop = this.element.scrollTop;\n        if (currentScrollTop > this.previousScrollTop) {\n            args.scrollDirection = 'Bottom';\n            args.distanceY = this.element.scrollHeight - this.element.clientHeight - this.element.scrollTop;\n            this.trigger('scroll', args);\n        }\n        else if (this.previousScrollTop > currentScrollTop) {\n            args.scrollDirection = 'Top';\n            args.distanceY = this.element.scrollTop;\n            this.trigger('scroll', args);\n        }\n        this.previousScrollTop = currentScrollTop;\n    };\n    /**\n     * Get the properties to be maintained in the persisted state.\n     */\n    ListView.prototype.getPersistData = function () {\n        return this.addOnPersist(['cssClass', 'enableRtl', 'htmlAttributes',\n            'enable', 'fields', 'animation', 'headerTitle',\n            'sortOrder', 'showIcon', 'height', 'width', 'showCheckBox', 'checkBoxPosition', 'selectedId']);\n    };\n    __decorate([\n        Property('')\n    ], ListView.prototype, \"cssClass\", void 0);\n    __decorate([\n        Property(false)\n    ], ListView.prototype, \"enableVirtualization\", void 0);\n    __decorate([\n        Property({})\n    ], ListView.prototype, \"htmlAttributes\", void 0);\n    __decorate([\n        Property(true)\n    ], ListView.prototype, \"enable\", void 0);\n    __decorate([\n        Property([])\n    ], ListView.prototype, \"dataSource\", void 0);\n    __decorate([\n        Property()\n    ], ListView.prototype, \"query\", void 0);\n    __decorate([\n        Complex(ListBase.defaultMappedFields, FieldSettings)\n    ], ListView.prototype, \"fields\", void 0);\n    __decorate([\n        Property({ effect: 'SlideLeft', duration: 400, easing: 'ease' })\n    ], ListView.prototype, \"animation\", void 0);\n    __decorate([\n        Property('None')\n    ], ListView.prototype, \"sortOrder\", void 0);\n    __decorate([\n        Property(false)\n    ], ListView.prototype, \"showIcon\", void 0);\n    __decorate([\n        Property(false)\n    ], ListView.prototype, \"showCheckBox\", void 0);\n    __decorate([\n        Property('Left')\n    ], ListView.prototype, \"checkBoxPosition\", void 0);\n    __decorate([\n        Property('')\n    ], ListView.prototype, \"headerTitle\", void 0);\n    __decorate([\n        Property(false)\n    ], ListView.prototype, \"showHeader\", void 0);\n    __decorate([\n        Property(true)\n    ], ListView.prototype, \"enableHtmlSanitizer\", void 0);\n    __decorate([\n        Property('')\n    ], ListView.prototype, \"height\", void 0);\n    __decorate([\n        Property('')\n    ], ListView.prototype, \"width\", void 0);\n    __decorate([\n        Property(null)\n    ], ListView.prototype, \"template\", void 0);\n    __decorate([\n        Property(null)\n    ], ListView.prototype, \"headerTemplate\", void 0);\n    __decorate([\n        Property(null)\n    ], ListView.prototype, \"groupTemplate\", void 0);\n    __decorate([\n        Event()\n    ], ListView.prototype, \"select\", void 0);\n    __decorate([\n        Event()\n    ], ListView.prototype, \"actionBegin\", void 0);\n    __decorate([\n        Event()\n    ], ListView.prototype, \"actionComplete\", void 0);\n    __decorate([\n        Event()\n    ], ListView.prototype, \"actionFailure\", void 0);\n    __decorate([\n        Event()\n    ], ListView.prototype, \"scroll\", void 0);\n    ListView = __decorate([\n        NotifyPropertyChanges\n    ], ListView);\n    return ListView;\n}(Component));\nexport { ListView };\n","import { classNames } from './list-view';\nimport { EventHandler, append, isNullOrUndefined, detach, compile, formatUnit, select } from '@syncfusion/ej2-base';\nimport { ListBase } from '../common/list-base';\nimport { DataManager } from '@syncfusion/ej2-data';\nvar listElementCount = 1.5;\nvar windowElementCount = 3;\nvar Virtualization = /** @class */ (function () {\n    function Virtualization(instance) {\n        this.elementDifference = 0;\n        this.listViewInstance = instance;\n    }\n    /**\n     * For internal use only.\n     *\n     * @private\n     */\n    Virtualization.prototype.isNgTemplate = function () {\n        return !isNullOrUndefined(this.listViewInstance.templateRef) && typeof this.listViewInstance.templateRef !== 'string';\n    };\n    /**\n     * Checks if the platform is a Vue and its template property is a function type.\n     *\n     * @returns {boolean} indicating the result of the check\n     */\n    Virtualization.prototype.isVueFunctionTemplate = function () {\n        return this.listViewInstance.isVue && typeof this.listViewInstance.template === 'function';\n    };\n    /**\n     * For internal use only.\n     *\n     * @private\n     */\n    Virtualization.prototype.uiVirtualization = function () {\n        this.wireScrollEvent(false);\n        var isRendered = this.listViewInstance.isRendered;\n        var firstIndex = isRendered && !isNullOrUndefined(this.uiFirstIndex) ? this.uiFirstIndex : 0;\n        var curViewDS = this.listViewInstance.curViewDS;\n        var firstDs = curViewDS.slice(firstIndex, firstIndex + 1);\n        this.listViewInstance.ulElement = this.listViewInstance.curUL = ListBase.createList(this.listViewInstance.createElement, firstDs, this.listViewInstance.listBaseOption, null, this.listViewInstance);\n        this.listViewInstance.contentContainer = this.listViewInstance.createElement('div', { className: classNames.container });\n        this.listViewInstance.element.appendChild(this.listViewInstance.contentContainer);\n        this.listViewInstance.contentContainer.appendChild(this.listViewInstance.ulElement);\n        this.listItemHeight = this.listViewInstance.ulElement.firstElementChild.getBoundingClientRect().height;\n        this.expectedDomItemCount = this.ValidateItemCount(10000);\n        this.updateDOMItemCount();\n        var lastIndex = isRendered && !isNullOrUndefined(this.uiLastIndex) ? this.uiLastIndex : this.domItemCount - 1;\n        this.uiFirstIndex = firstIndex;\n        this.uiLastIndex = lastIndex;\n        var otherDs = curViewDS.slice(firstIndex + 1, lastIndex + 1);\n        var listItems = ListBase.createListItemFromJson(this.listViewInstance.createElement, otherDs, this.listViewInstance.listBaseOption, null, null, this.listViewInstance);\n        append(listItems, this.listViewInstance.ulElement);\n        this.listViewInstance.liCollection = this.listViewInstance.curUL.querySelectorAll('li');\n        this.topElement = this.listViewInstance.createElement('div');\n        this.listViewInstance.ulElement.insertBefore(this.topElement, this.listViewInstance.ulElement.firstElementChild);\n        this.bottomElement = this.listViewInstance.createElement('div');\n        this.listViewInstance.ulElement.insertBefore(this.bottomElement, null);\n        this.totalHeight = (Object.keys(curViewDS).length * this.listItemHeight) - (this.domItemCount * this.listItemHeight);\n        this.topElement.style.height = isRendered ? this.topElementHeight + 'px' : '0px';\n        this.bottomElement.style.height = isRendered ? (this.totalHeight - this.topElementHeight) + 'px' : this.totalHeight + 'px';\n        this.topElementHeight = isRendered ? this.topElementHeight : 0;\n        this.bottomElementHeight = isRendered ? (this.totalHeight - this.topElementHeight) : this.totalHeight;\n        this.listDiff = isRendered ? this.listDiff : 0;\n        if (isRendered) {\n            this.listViewInstance.element.scrollTop = this.listViewInstance.previousScrollTop;\n        }\n        this.uiIndicesInitialization();\n    };\n    Virtualization.prototype.wireScrollEvent = function (destroy) {\n        if (!destroy) {\n            if (this.listViewInstance.isWindow) {\n                this.onVirtualScroll = this.onVirtualUiScroll.bind(this);\n                window.addEventListener('scroll', this.onVirtualScroll);\n            }\n            else {\n                EventHandler.add(this.listViewInstance.element, 'scroll', this.onVirtualUiScroll, this);\n            }\n        }\n        else {\n            if (this.listViewInstance.isWindow === true) {\n                window.removeEventListener('scroll', this.onVirtualScroll);\n                window.removeEventListener('scroll', this.updateUl);\n            }\n            else {\n                EventHandler.remove(this.listViewInstance.element, 'scroll', this.onVirtualUiScroll);\n            }\n        }\n    };\n    Virtualization.prototype.ValidateItemCount = function (dataSourceLength) {\n        var height = parseFloat(formatUnit(this.listViewInstance.height));\n        var itemCount;\n        if (this.listViewInstance.isWindow) {\n            itemCount = Math.round((window.innerHeight / this.listItemHeight) * windowElementCount);\n        }\n        else {\n            if (typeof this.listViewInstance.height === 'string' && this.listViewInstance.height.indexOf('%') !== -1) {\n                itemCount = Math.round((this.listViewInstance.element.getBoundingClientRect().height / this.listItemHeight) * listElementCount);\n            }\n            else {\n                itemCount = Math.round((height / this.listItemHeight) * listElementCount);\n            }\n        }\n        if (itemCount > dataSourceLength) {\n            itemCount = dataSourceLength;\n        }\n        return itemCount;\n    };\n    Virtualization.prototype.updateDOMItemCount = function () {\n        this.domItemCount = this.ValidateItemCount(Object.keys(this.listViewInstance.curViewDS).length);\n    };\n    Virtualization.prototype.uiIndicesInitialization = function () {\n        this.uiIndices = { 'activeIndices': [], 'disabledItemIndices': [], 'hiddenItemIndices': [] };\n        var data = this.listViewInstance.curViewDS;\n        for (var i = 0; i < data.length; i++) {\n            if (this.listViewInstance.showCheckBox && data[i][this.listViewInstance.fields.isChecked]) {\n                this.uiIndices.activeIndices.push(i);\n            }\n            if (!isNullOrUndefined(data[parseInt(i.toString(), 10)][this.listViewInstance.fields.enabled]) &&\n                !data[i][this.listViewInstance.fields.enabled]) {\n                (this.uiIndices.disabledItemIndices.push(i));\n            }\n        }\n        if (this.isNgTemplate()) {\n            var items = this.listViewInstance.element.querySelectorAll('.' + classNames.listItem);\n            for (var index = 0; index < items.length; index++) {\n                items[index].context = this.listViewInstance.viewContainerRef.get(index).context;\n            }\n        }\n    };\n    Virtualization.prototype.refreshItemHeight = function () {\n        if (this.listViewInstance.curViewDS.length) {\n            var curViewDS = this.listViewInstance.curViewDS;\n            this.listItemHeight = this.topElement.nextSibling.getBoundingClientRect().height;\n            this.totalHeight = (Object.keys(curViewDS).length * this.listItemHeight) - (this.domItemCount * this.listItemHeight);\n            this.bottomElementHeight = this.totalHeight;\n            this.bottomElement.style.height = this.totalHeight + 'px';\n        }\n    };\n    Virtualization.prototype.getscrollerHeight = function (startingHeight) {\n        return this.listViewInstance.isWindow ? (((pageYOffset - startingHeight) <= 0) ? 0 :\n            (pageYOffset - startingHeight)) : ((this.listViewInstance.element.scrollTop - startingHeight) <= 0) ? 0 :\n            (this.listViewInstance.element.scrollTop - startingHeight);\n    };\n    Virtualization.prototype.onVirtualUiScroll = function () {\n        var _a;\n        var startingHeight;\n        var curViewDS = this.listViewInstance.curViewDS;\n        this.listItemHeight = select('.e-list-item', this.listViewInstance.element).getBoundingClientRect().height;\n        this.totalHeight = (Object.keys(curViewDS).length * this.listItemHeight) - (this.domItemCount * this.listItemHeight);\n        if (this.listViewInstance.isWindow) {\n            startingHeight = this.listViewInstance.ulElement.getBoundingClientRect().top -\n                document.documentElement.getBoundingClientRect().top;\n        }\n        else {\n            startingHeight = this.listViewInstance.headerEle ? this.listViewInstance.headerEle.getBoundingClientRect().height : 0;\n        }\n        this.scrollPosition = isNullOrUndefined(this.scrollPosition) ? 0 : this.scrollPosition;\n        var scroll = this.getscrollerHeight(startingHeight);\n        this.topElementHeight = this.listItemHeight * Math.floor(scroll / this.listItemHeight);\n        this.bottomElementHeight = this.totalHeight - this.topElementHeight;\n        _a = scroll <= this.totalHeight ?\n            [this.topElementHeight, this.bottomElementHeight] : [this.totalHeight, 0], this.topElementHeight = _a[0], this.bottomElementHeight = _a[1];\n        if (this.topElementHeight !== parseFloat(this.topElement.style.height)) {\n            this.topElement.style.height = this.topElementHeight + 'px';\n            this.bottomElement.style.height = this.bottomElementHeight + 'px';\n            if (scroll > this.scrollPosition) {\n                var listDiff = Math.round(((this.topElementHeight / this.listItemHeight) - this.listDiff));\n                if (listDiff > (this.expectedDomItemCount + 5)) {\n                    this.onLongScroll(listDiff, true);\n                }\n                else {\n                    this.onNormalScroll(listDiff, true);\n                }\n            }\n            else {\n                var listDiff = Math.round((this.listDiff - (this.topElementHeight / this.listItemHeight)));\n                if (listDiff > (this.expectedDomItemCount + 5)) {\n                    this.onLongScroll(listDiff, false);\n                }\n                else {\n                    this.onNormalScroll(listDiff, false);\n                }\n            }\n        }\n        this.listDiff = Math.round(this.topElementHeight / this.listItemHeight);\n        if (typeof this.listViewInstance.onUIScrolled === 'function') {\n            this.listViewInstance.onUIScrolled();\n        }\n        this.scrollPosition = scroll;\n    };\n    Virtualization.prototype.onLongScroll = function (listDiff, isScrollingDown) {\n        var index = isScrollingDown ? (this.uiFirstIndex + listDiff) : (this.uiFirstIndex - listDiff);\n        var elements = this.listViewInstance.ulElement.querySelectorAll('li');\n        for (var i = 0; i < elements.length; i++) {\n            this.updateUI(elements[i], index);\n            index++;\n        }\n        this.uiLastIndex = isScrollingDown ? (this.uiLastIndex + listDiff) : (this.uiLastIndex - listDiff);\n        this.uiFirstIndex = isScrollingDown ? (this.uiFirstIndex + listDiff) : (this.uiFirstIndex - listDiff);\n    };\n    Virtualization.prototype.onNormalScroll = function (listDiff, isScrollingDown) {\n        if (isScrollingDown) {\n            for (var i = 0; i < listDiff; i++) {\n                var index = ++this.uiLastIndex;\n                this.updateUI(this.topElement.nextElementSibling, index, this.bottomElement);\n                this.uiFirstIndex++;\n            }\n        }\n        else {\n            for (var i = 0; i < listDiff; i++) {\n                var index = --this.uiFirstIndex;\n                var target = this.topElement.nextSibling;\n                this.updateUI(this.bottomElement.previousElementSibling, index, target);\n                this.uiLastIndex--;\n            }\n        }\n    };\n    Virtualization.prototype.updateUiContent = function (element, index) {\n        var curViewDs = this.listViewInstance.curViewDS;\n        if (typeof this.listViewInstance.dataSource[0] === 'string' ||\n            typeof this.listViewInstance.dataSource[0] === 'number') {\n            element.dataset.uid = ListBase.generateId();\n            element.getElementsByClassName(classNames.listItemText)[0].innerHTML =\n                this.listViewInstance.curViewDS[index].toString();\n        }\n        else {\n            element.dataset.uid = (curViewDs[parseInt(index.toString(), 10)][this.listViewInstance.fields.id]) ?\n                (curViewDs[parseInt(index.toString(), 10)][this.listViewInstance.fields.id]) : ListBase.generateId();\n            element.getElementsByClassName(classNames.listItemText)[0].innerHTML =\n                (curViewDs[parseInt(index.toString(), 10)][this.listViewInstance.fields.text]);\n        }\n        if (this.listViewInstance.showIcon) {\n            if (element.querySelector('.' + classNames.listIcon)) {\n                detach(element.querySelector('.' + classNames.listIcon));\n            }\n            if (this.listViewInstance.curViewDS[index][this.listViewInstance.fields.iconCss]) {\n                var textContent = element.querySelector('.' + classNames.textContent);\n                var curViewDS = this.listViewInstance.curViewDS[index];\n                var iconCss = curViewDS[this.listViewInstance.fields.iconCss].toString();\n                var target = this.listViewInstance.createElement('div', {\n                    className: classNames.listIcon + ' ' + iconCss\n                });\n                textContent.insertBefore(target, element.querySelector('.' + classNames.listItemText));\n            }\n        }\n        if (this.listViewInstance.showCheckBox && this.listViewInstance.fields.groupBy) {\n            if (!this.checkListWrapper) {\n                this.checkListWrapper = this.listViewInstance.curUL.querySelector('.' + classNames.checkboxWrapper).cloneNode(true);\n            }\n            var textContent = element.querySelector('.' + classNames.textContent);\n            if (this.listViewInstance.curViewDS[index].isHeader) {\n                if (element.querySelector('.' + classNames.checkboxWrapper)) {\n                    element.classList.remove(classNames.checklist);\n                    textContent.classList.remove(classNames.checkbox);\n                    detach(element.querySelector('.' + classNames.checkboxWrapper));\n                }\n            }\n            else {\n                if (!element.querySelector('.' + classNames.checkboxWrapper)) {\n                    element.classList.add(classNames.checklist);\n                    textContent.classList.add(classNames.checkbox);\n                    if (this.listViewInstance.checkBoxPosition === 'Left') {\n                        textContent.classList.add('e-checkbox-left');\n                    }\n                    else {\n                        textContent.classList.add('e-checkbox-right');\n                    }\n                    textContent.append(this.checkListWrapper.cloneNode(true));\n                }\n            }\n        }\n    };\n    Virtualization.prototype.changeElementAttributes = function (element, index) {\n        element.classList.remove(classNames.disable);\n        if (this.uiIndices.disabledItemIndices.length && this.uiIndices.disabledItemIndices.indexOf(index) !== -1) {\n            element.classList.add(classNames.disable);\n        }\n        element.style.display = '';\n        if (this.uiIndices.hiddenItemIndices.length && this.uiIndices.hiddenItemIndices.indexOf(index) !== -1) {\n            element.style.display = 'none';\n        }\n        if (this.listViewInstance.showCheckBox) {\n            var checklistElement = element.querySelector('.' + classNames.checkboxWrapper);\n            element.classList.remove(classNames.selected);\n            element.classList.remove(classNames.focused);\n            if (checklistElement) {\n                checklistElement.removeAttribute('aria-checked');\n                checklistElement.firstElementChild.classList.remove(classNames.checked);\n            }\n            if (this.uiIndices.activeIndices.length && this.uiIndices.activeIndices.indexOf(index) !== -1 &&\n                !this.listViewInstance.curUL.querySelector(classNames.selected)) {\n                element.classList.add(classNames.selected);\n                checklistElement.firstElementChild.classList.add(classNames.checked);\n                checklistElement.setAttribute('aria-checked', 'true');\n                if (this.activeIndex === index) {\n                    element.classList.add(classNames.focused);\n                }\n            }\n        }\n        else {\n            element.classList.remove(classNames.selected);\n            element.removeAttribute('aria-selected');\n            if (!isNullOrUndefined(this.activeIndex) && this.activeIndex === index &&\n                !this.listViewInstance.curUL.querySelector(classNames.selected)) {\n                element.classList.add(classNames.selected);\n                element.setAttribute('aria-selected', 'true');\n            }\n        }\n        if (this.listViewInstance.fields.groupBy) {\n            if (this.listViewInstance.curViewDS[index].isHeader) {\n                if (element.classList.contains(classNames.listItem)) {\n                    element.classList.remove(classNames.listItem);\n                    element.setAttribute('role', 'group');\n                    element.classList.add(classNames.groupListItem);\n                }\n            }\n            else {\n                if (element.classList.contains(classNames.groupListItem)) {\n                    element.classList.remove(classNames.groupListItem);\n                    element.setAttribute('role', 'listitem');\n                    element.classList.add(classNames.listItem);\n                }\n            }\n        }\n    };\n    Virtualization.prototype.findDSAndIndexFromId = function (ds, fields) {\n        var _this = this;\n        var resultJSON = {};\n        fields = this.listViewInstance.getElementUID(fields);\n        if (!isNullOrUndefined(fields)) {\n            ds.some(function (data, index) {\n                if ((fields[_this.listViewInstance.fields.id] &&\n                    fields[_this.listViewInstance.fields.id]\n                        === (data[_this.listViewInstance.fields.id] && data[_this.listViewInstance.fields.id]) || fields === data)) {\n                    resultJSON.index = index;\n                    resultJSON.data = data;\n                    return true;\n                }\n                else {\n                    return false;\n                }\n            });\n        }\n        return resultJSON;\n    };\n    Virtualization.prototype.getSelectedItems = function () {\n        var _this = this;\n        if (!isNullOrUndefined(this.activeIndex) || (this.listViewInstance.showCheckBox && this.uiIndices.activeIndices.length)) {\n            var dataCollection = [];\n            var textCollection = [];\n            if (typeof this.listViewInstance.dataSource[0] === 'string' ||\n                typeof this.listViewInstance.dataSource[0] === 'number') {\n                var curViewDS_1 = this.listViewInstance.curViewDS;\n                if (this.listViewInstance.showCheckBox) {\n                    var indices = this.uiIndices.activeIndices;\n                    for (var i = 0; i < indices.length; i++) {\n                        dataCollection.push(curViewDS_1[indices[i]]);\n                    }\n                    return {\n                        text: dataCollection,\n                        data: dataCollection,\n                        index: this.uiIndices.activeIndices.map(function (index) {\n                            return _this.listViewInstance.dataSource.indexOf(curViewDS_1[index]);\n                        })\n                    };\n                }\n                else {\n                    return {\n                        text: curViewDS_1[this.activeIndex],\n                        data: curViewDS_1[this.activeIndex],\n                        index: this.listViewInstance.dataSource.indexOf(curViewDS_1[this.activeIndex])\n                    };\n                }\n            }\n            else {\n                var curViewDS_2 = this.listViewInstance.curViewDS;\n                var text = this.listViewInstance.fields.text;\n                if (this.listViewInstance.showCheckBox) {\n                    var indexArray = this.uiIndices.activeIndices;\n                    for (var i = 0; i < indexArray.length; i++) {\n                        textCollection.push(curViewDS_2[indexArray[i]][\"\" + text]);\n                        dataCollection.push(curViewDS_2[indexArray[parseInt(i.toString(), 10)]]);\n                    }\n                    var dataSource_1 = this.listViewInstance.dataSource instanceof DataManager\n                        ? curViewDS_2 : this.listViewInstance.dataSource;\n                    return {\n                        text: textCollection,\n                        data: dataCollection,\n                        index: this.uiIndices.activeIndices.map(function (index) {\n                            return dataSource_1.indexOf(curViewDS_2[index]);\n                        })\n                    };\n                }\n                else {\n                    var dataSource = this.listViewInstance.dataSource instanceof DataManager\n                        ? curViewDS_2 : this.listViewInstance.dataSource;\n                    return {\n                        text: curViewDS_2[this.activeIndex][this.listViewInstance.fields.text],\n                        data: curViewDS_2[this.activeIndex],\n                        index: dataSource.indexOf(curViewDS_2[this.activeIndex])\n                    };\n                }\n            }\n        }\n        else {\n            return undefined;\n        }\n    };\n    Virtualization.prototype.selectItem = function (obj) {\n        var _this = this;\n        var resutJSON = this.findDSAndIndexFromId(this.listViewInstance.curViewDS, obj);\n        if (Object.keys(resutJSON).length) {\n            var isSelected = this.activeIndex === resutJSON.index;\n            var isChecked_1;\n            this.activeIndex = resutJSON.index;\n            if (this.listViewInstance.showCheckBox) {\n                if (this.uiIndices.activeIndices.indexOf(resutJSON.index) === -1) {\n                    isChecked_1 = true;\n                    this.uiIndices.activeIndices.push(resutJSON.index);\n                }\n                else {\n                    isChecked_1 = false;\n                    this.uiIndices.activeIndices.splice(this.uiIndices.activeIndices.indexOf(resutJSON.index), 1);\n                }\n                if (this.listViewInstance.curUL.querySelector('.' + classNames.focused)) {\n                    this.listViewInstance.curUL.querySelector('.' + classNames.focused).classList.remove(classNames.focused);\n                }\n            }\n            if (this.listViewInstance.getLiFromObjOrElement(obj)) {\n                if (this.listViewInstance.showCheckBox) {\n                    this.listViewInstance.setCheckboxLI(this.listViewInstance.getLiFromObjOrElement(obj));\n                }\n                else {\n                    this.listViewInstance.setSelectLI(this.listViewInstance.getLiFromObjOrElement(obj));\n                }\n            }\n            else {\n                var eventArgs_1;\n                if (typeof this.listViewInstance.dataSource[0] === 'string' ||\n                    typeof this.listViewInstance.dataSource[0] === 'number') {\n                    eventArgs_1 = {\n                        text: this.listViewInstance.curViewDS[this.activeIndex],\n                        data: this.listViewInstance.curViewDS[this.activeIndex],\n                        index: this.activeIndex\n                    };\n                }\n                else {\n                    var curViewDS = this.listViewInstance.curViewDS;\n                    eventArgs_1 = {\n                        text: curViewDS[this.activeIndex][this.listViewInstance.fields.text],\n                        data: curViewDS[this.activeIndex],\n                        index: this.activeIndex\n                    };\n                }\n                if (this.listViewInstance.showCheckBox) {\n                    this.listViewInstance.trigger('select', eventArgs_1, function (observedArgs) {\n                        if (observedArgs.cancel) {\n                            if (!isChecked_1) {\n                                eventArgs_1.isChecked = isChecked_1;\n                                _this.uiIndices.activeIndices.push(resutJSON.index);\n                            }\n                            else {\n                                eventArgs_1.isChecked = !isChecked_1;\n                                _this.uiIndices.activeIndices.splice(_this.uiIndices.activeIndices.indexOf(resutJSON.index), 1);\n                            }\n                        }\n                    });\n                }\n                else if (!isSelected) {\n                    this.listViewInstance.removeSelect();\n                    this.listViewInstance.trigger('select', eventArgs_1, function (observedArgs) {\n                        if (observedArgs.cancel) {\n                            _this.activeIndex = undefined;\n                        }\n                    });\n                }\n            }\n        }\n        else if (isNullOrUndefined(obj) && !this.listViewInstance.showCheckBox) {\n            this.listViewInstance.removeSelect();\n            this.activeIndex = undefined;\n        }\n    };\n    Virtualization.prototype.enableItem = function (obj) {\n        var resutJSON = this.findDSAndIndexFromId(this.listViewInstance.curViewDS, obj);\n        if (Object.keys(resutJSON).length) {\n            this.uiIndices.disabledItemIndices.splice(this.uiIndices.disabledItemIndices.indexOf(resutJSON.index), 1);\n        }\n    };\n    Virtualization.prototype.disableItem = function (obj) {\n        var resutJSON = this.findDSAndIndexFromId(this.listViewInstance.curViewDS, obj);\n        if (Object.keys(resutJSON).length && this.uiIndices.disabledItemIndices.indexOf(resutJSON.index) === -1) {\n            this.uiIndices.disabledItemIndices.push(resutJSON.index);\n        }\n    };\n    Virtualization.prototype.showItem = function (obj) {\n        var resutJSON = this.findDSAndIndexFromId(this.listViewInstance.curViewDS, obj);\n        if (Object.keys(resutJSON).length) {\n            this.uiIndices.hiddenItemIndices.splice(this.uiIndices.hiddenItemIndices.indexOf(resutJSON.index), 1);\n        }\n    };\n    Virtualization.prototype.hideItem = function (obj) {\n        var resutJSON = this.findDSAndIndexFromId(this.listViewInstance.curViewDS, obj);\n        if (Object.keys(resutJSON).length && this.uiIndices.hiddenItemIndices.indexOf(resutJSON.index) === -1) {\n            this.uiIndices.hiddenItemIndices.push(resutJSON.index);\n        }\n    };\n    Virtualization.prototype.removeItem = function (obj) {\n        var dataSource;\n        var curViewDS = this.listViewInstance.curViewDS;\n        var resutJSON = this.findDSAndIndexFromId(curViewDS, obj);\n        if (Object.keys(resutJSON).length) {\n            dataSource = resutJSON.data;\n            if (curViewDS[resutJSON.index - 1] &&\n                curViewDS[resutJSON.index - 1].isHeader &&\n                (curViewDS[resutJSON.index - 1])\n                    .items.length === 1) {\n                this.removeUiItem(resutJSON.index - 1);\n                this.removeUiItem(resutJSON.index - 1);\n            }\n            else {\n                this.removeUiItem(resutJSON.index);\n            }\n        }\n        var listDataSource = this.listViewInstance.dataSource instanceof DataManager\n            ? this.listViewInstance.localData : this.listViewInstance.dataSource;\n        var index = listDataSource.indexOf(dataSource);\n        if (index !== -1) {\n            listDataSource.splice(index, 1);\n            this.listViewInstance.setViewDataSource(listDataSource);\n        }\n        // recollect all the list item into collection\n        this.listViewInstance.liCollection =\n            this.listViewInstance.curUL.querySelectorAll('li');\n    };\n    // eslint-disable-next-line\n    Virtualization.prototype.setCheckboxLI = function (li, e) {\n        var index = Array.prototype.indexOf.call(this.listViewInstance.curUL.querySelectorAll('li'), li) + this.uiFirstIndex;\n        this.activeIndex = Array.prototype.indexOf.call(this.listViewInstance.curUL.querySelectorAll('li'), li) + this.uiFirstIndex;\n        if (li.classList.contains(classNames.selected)) {\n            if (this.uiIndices.activeIndices.indexOf(index) === -1) {\n                this.uiIndices.activeIndices.push(index);\n            }\n        }\n        else {\n            this.uiIndices.activeIndices.splice(this.uiIndices.activeIndices.indexOf(index), 1);\n        }\n    };\n    // eslint-disable-next-line\n    Virtualization.prototype.setSelectLI = function (li, e) {\n        this.activeIndex = Array.prototype.indexOf.call(this.listViewInstance.curUL.querySelectorAll('li'), li) + this.uiFirstIndex;\n    };\n    Virtualization.prototype.checkedItem = function (checked) {\n        if (checked) {\n            this.uiIndices.activeIndices = [];\n            this.activeIndex = undefined;\n            var data = this.listViewInstance.curViewDS;\n            for (var index = 0; index < data.length; index++) {\n                if (!data[index].isHeader) {\n                    this.uiIndices.activeIndices.push(index);\n                }\n            }\n        }\n        else {\n            this.activeIndex = undefined;\n            this.uiIndices.activeIndices = [];\n        }\n    };\n    Virtualization.prototype.addUiItem = function (index) {\n        // virtually new add list item based on the scollbar position\n        // if the scroll bar is at the top, just pretend the new item has been added since no UI\n        // change is required for the item that has been added at last but when scroll bar is at the bottom\n        // just detach top and inject into bottom to mimic new item is added\n        var curViewDs = this.listViewInstance.curViewDS;\n        this.changeUiIndices(index, true);\n        if (this.activeIndex && this.activeIndex >= index) {\n            this.activeIndex++;\n        }\n        if (this.listViewInstance.showCheckBox &&\n            curViewDs[index][this.listViewInstance.fields.isChecked]) {\n            this.uiIndices.activeIndices.push(index);\n        }\n        if (!parseFloat(this.bottomElement.style.height) && !parseFloat(this.topElement.style.height)) {\n            this.bottomElement.style.height = parseFloat(this.bottomElement.style.height) + this.listItemHeight + 'px';\n        }\n        if (parseFloat(this.bottomElement.style.height)) {\n            var liItem = this.listViewInstance.curUL.lastElementChild.previousSibling;\n            var target = this.listViewInstance.getLiFromObjOrElement(curViewDs[index + 1]) ||\n                this.listViewInstance.getLiFromObjOrElement(curViewDs[index + 2]);\n            if (target) {\n                this.bottomElement.style.height = parseFloat(this.bottomElement.style.height) + this.listItemHeight + 'px';\n                this.updateUI(liItem, index, target);\n            }\n        }\n        else {\n            var liItem = this.listViewInstance.curUL.firstElementChild.nextSibling;\n            var target = void 0;\n            if ((Object.keys(this.listViewInstance.curViewDS).length - 1) === index) {\n                target = this.listViewInstance.curUL.lastElementChild;\n            }\n            else {\n                target = this.listViewInstance.getLiFromObjOrElement(curViewDs[index + 1]) ||\n                    this.listViewInstance.getLiFromObjOrElement(curViewDs[index + 2]);\n            }\n            this.topElement.style.height = parseFloat(this.topElement.style.height) + this.listItemHeight + 'px';\n            this.uiFirstIndex++;\n            this.uiLastIndex++;\n            if (target) {\n                this.updateUI(liItem, index, target);\n                if (this.listViewInstance.isWindow === true) {\n                    window.scrollTo(0, (pageYOffset + this.listItemHeight));\n                }\n                else {\n                    this.listViewInstance.element.scrollTop += this.listItemHeight;\n                }\n            }\n        }\n        this.totalHeight += this.listItemHeight;\n        this.listDiff = Math.round(parseFloat(this.topElement.style.height) / this.listItemHeight);\n    };\n    Virtualization.prototype.removeUiItem = function (index) {\n        this.totalHeight -= this.listItemHeight;\n        var curViewDS = this.listViewInstance.curViewDS[index];\n        var liItem = this.listViewInstance.getLiFromObjOrElement(curViewDS);\n        this.listViewInstance.curViewDS.splice(index, 1);\n        if (this.activeIndex && this.activeIndex >= index) {\n            this.activeIndex--;\n        }\n        if (liItem) {\n            if (this.domItemCount > Object.keys(this.listViewInstance.curViewDS).length) {\n                detach(liItem);\n                this.domItemCount--;\n                this.uiLastIndex--;\n                this.totalHeight = 0;\n            }\n            else {\n                if (liItem.classList.contains(classNames.disable)) {\n                    liItem.classList.remove(classNames.disable);\n                    this.uiIndices.disabledItemIndices.splice(this.uiIndices.disabledItemIndices.indexOf(index), 1);\n                }\n                if (liItem.style.display === 'none') {\n                    liItem.style.display = '';\n                    this.uiIndices.hiddenItemIndices.splice(this.uiIndices.hiddenItemIndices.indexOf(index), 1);\n                }\n                if (this.listViewInstance.showCheckBox && liItem.classList.contains(classNames.selected)) {\n                    this.listViewInstance.removeSelect();\n                    this.uiIndices.activeIndices.splice(this.uiIndices.activeIndices.indexOf(index), 1);\n                    var checklistElement = liItem.querySelector('.' + classNames.checkboxWrapper);\n                    checklistElement.removeAttribute('aria-checked');\n                    checklistElement.firstElementChild.classList.remove(classNames.checked);\n                    if (liItem.classList.contains(classNames.focused)) {\n                        liItem.classList.remove(classNames.focused);\n                        this.activeIndex = undefined;\n                    }\n                }\n                else if (liItem.classList.contains(classNames.selected)) {\n                    this.listViewInstance.removeSelect();\n                    this.activeIndex = undefined;\n                }\n                if (!parseFloat(this.bottomElement.style.height) && !parseFloat(this.topElement.style.height)) {\n                    this.updateUI(liItem, this.uiLastIndex, this.bottomElement);\n                }\n                else if (parseFloat(this.bottomElement.style.height)) {\n                    this.bottomElement.style.height = parseFloat(this.bottomElement.style.height) - this.listItemHeight + 'px';\n                    this.updateUI(liItem, this.uiLastIndex, this.bottomElement);\n                }\n                else {\n                    this.topElement.style.height = parseFloat(this.topElement.style.height) - this.listItemHeight + 'px';\n                    this.updateUI(liItem, (this.uiFirstIndex - 1), this.topElement.nextSibling);\n                    this.uiLastIndex--;\n                    this.uiFirstIndex--;\n                }\n            }\n        }\n        this.changeUiIndices(index, false);\n        this.listDiff = Math.round(parseFloat(this.topElement.style.height) / this.listItemHeight);\n    };\n    Virtualization.prototype.changeUiIndices = function (index, increment) {\n        var keys = Object.keys(this.uiIndices);\n        for (var ind = 0; ind < keys.length; ind++) {\n            this.uiIndices[keys[ind]] = this.uiIndices[keys[ind]].map(function (i) {\n                if (i >= index) {\n                    return increment ? ++i : --i;\n                }\n                else {\n                    return i;\n                }\n            });\n        }\n    };\n    Virtualization.prototype.addItem = function (data, fields, dataSource, index) {\n        for (var i = 0; i < data.length; i++) {\n            var currentItem = data[i];\n            // push the given data to main data array\n            dataSource = this.listViewInstance.addItemAtIndex(index, dataSource, currentItem);\n            // recalculate all the group data or other datasource related things\n            this.listViewInstance.setViewDataSource(dataSource);\n            // render list items for first time due to no datasource present earlier\n            if (!this.domItemCount) {\n                // fresh rendering for first time\n                if ((this.listViewInstance.template || this.listViewInstance.groupTemplate) && !this.isNgTemplate()) {\n                    this.listViewInstance.listBaseOption.template = null;\n                    this.listViewInstance.listBaseOption.groupTemplate = null;\n                    this.listViewInstance.listBaseOption.itemCreated = this.createUIItem.bind(this);\n                }\n                this.uiVirtualization();\n                // when expected expected DOM count doesn't meet the condition we need to create and inject new item into DOM\n            }\n            else if (this.domItemCount < this.expectedDomItemCount) {\n                var ds = this.listViewInstance.findItemFromDS(dataSource, fields);\n                if (ds instanceof Array) {\n                    if (this.listViewInstance.ulElement) {\n                        var index_1 = this.listViewInstance.curViewDS.indexOf(currentItem);\n                        // inject new list item into DOM\n                        this.createAndInjectNewItem(currentItem, index_1);\n                        // check for group header item\n                        var curViewDS = this.listViewInstance.curViewDS[index_1 - 1];\n                        if (curViewDS && curViewDS.isHeader && curViewDS.items.length === 1) {\n                            // target group item index in datasource\n                            --index_1;\n                            // inject new group header into DOM for previously created list item\n                            this.createAndInjectNewItem(curViewDS, index_1);\n                        }\n                    }\n                    // recollect all the list item into collection\n                    this.listViewInstance.liCollection =\n                        this.listViewInstance.curUL.querySelectorAll('li');\n                }\n            }\n            else {\n                var index_2 = this.listViewInstance.curViewDS.indexOf(currentItem);\n                // virtually new add list item based on the scollbar position\n                this.addUiItem(index_2);\n                // check for group header item needs to be added\n                var curViewDS = this.listViewInstance.curViewDS[index_2 - 1];\n                if (curViewDS && curViewDS.isHeader && curViewDS.items.length === 1) {\n                    this.addUiItem(index_2 - 1);\n                }\n            }\n        }\n    };\n    Virtualization.prototype.createAndInjectNewItem = function (itemData, index) {\n        // generate li item for given datasource\n        var target;\n        var li = ListBase.createListItemFromJson(this.listViewInstance.createElement, [itemData], this.listViewInstance.listBaseOption, null, null, this.listViewInstance);\n        // check for target element whether to insert before last item or group item\n        if ((Object.keys(this.listViewInstance.curViewDS).length - 1) === index) {\n            target = this.listViewInstance.curUL.lastElementChild;\n        }\n        else {\n            // target group header's first child item to append its header\n            target = this.listViewInstance.getLiFromObjOrElement(this.listViewInstance.curViewDS[index + 1]) ||\n                this.listViewInstance.getLiFromObjOrElement(this.listViewInstance.curViewDS[index + 2]);\n        }\n        if (this.listViewInstance.fields.groupBy\n            && this.listViewInstance.curViewDS[index + 1]\n            && this.listViewInstance.curViewDS[index + 1].isHeader) {\n            var targetEle = this.listViewInstance.getLiFromObjOrElement(this.listViewInstance.curViewDS[index - 1]);\n            if (targetEle) {\n                target = targetEle.nextElementSibling;\n            }\n        }\n        // insert before the target element\n        this.listViewInstance.ulElement.insertBefore(li[0], target);\n        // increment internal DOM count, last index count for new element\n        this.domItemCount++;\n        if (this.bottomElementHeight <= 0) {\n            this.uiLastIndex++;\n        }\n        // recalculate the current item height, to avoid jumpy scroller\n        this.refreshItemHeight();\n    };\n    Virtualization.prototype.createUIItem = function (args) {\n        if (!args.item.classList.contains('e-list-group-item')) {\n            this.templateData = args.curData.isHeader ? args.curData.items[0] :\n                args.curData;\n            if (this.listViewInstance.showCheckBox) {\n                this.listViewInstance.renderCheckbox(args);\n                if ((!isNullOrUndefined(this.listViewInstance.virtualCheckBox)) &&\n                    (!isNullOrUndefined(this.listViewInstance.virtualCheckBox.outerHTML))) {\n                    var div_1 = document.createElement('div');\n                    var commonTemplate = '<div class=\"e-text-content\" role=\"presentation\"> ' +\n                        '<span class=\"e-list-text\"> ${' + this.listViewInstance.fields.text + '} </span></div>';\n                    var templateFunction = compile(this.listViewInstance.template || commonTemplate, this.listViewInstance);\n                    var nodes = templateFunction(this.templateData, this.listViewInstance);\n                    if (this.listViewInstance.template && this.listViewInstance.isReact) {\n                        this.listViewInstance.renderReactTemplates();\n                    }\n                    [].slice.call(nodes).forEach(function (ele) {\n                        div_1.appendChild(ele);\n                    });\n                    if (div_1.children && div_1.children[0]) {\n                        div_1.children[0].classList.add('e-checkbox');\n                        if (this.listViewInstance.checkBoxPosition === 'Left') {\n                            div_1.children[0].classList.add('e-checkbox-left');\n                        }\n                        else {\n                            div_1.children[0].classList.add('e-checkbox-right');\n                        }\n                        if (this.listViewInstance.checkBoxPosition === 'Left') {\n                            div_1.children[0].insertBefore(this.listViewInstance.virtualCheckBox, div_1.childNodes[0].children[0]);\n                        }\n                        else {\n                            div_1.children[0].appendChild(this.listViewInstance.virtualCheckBox);\n                        }\n                        while (args.item.lastChild) {\n                            args.item.removeChild(args.item.lastChild);\n                        }\n                        [].slice.call(div_1.children).forEach(function (ele) {\n                            args.item.appendChild(ele);\n                        });\n                    }\n                }\n            }\n        }\n    };\n    Virtualization.prototype.reRenderUiVirtualization = function () {\n        this.wireScrollEvent(true);\n        if (this.listViewInstance.contentContainer) {\n            detach(this.listViewInstance.contentContainer);\n        }\n        this.listViewInstance.preRender();\n        // resetting the dom count to 0, to avoid edge case of dataSource suddenly becoming zero\n        // and then manually adding item using addItem API\n        this.domItemCount = 0;\n        this.listViewInstance.header();\n        this.listViewInstance.setLocalData();\n    };\n    Virtualization.prototype.updateUI = function (element, index, targetElement) {\n        var onChange = this.isNgTemplate() ? this.onNgChange : this.onChange;\n        if (this.listViewInstance.template || this.listViewInstance.groupTemplate) {\n            var curViewDS = this.listViewInstance.curViewDS[index];\n            element.dataset.uid = (curViewDS[this.listViewInstance.fields.id]) ?\n                (curViewDS[this.listViewInstance.fields.id]) : ListBase.generateId();\n            onChange(curViewDS, element, this);\n        }\n        else {\n            this.updateUiContent(element, index);\n        }\n        this.changeElementAttributes(element, index);\n        if (targetElement) {\n            this.listViewInstance.ulElement.insertBefore(element, targetElement);\n        }\n    };\n    /**\n     * Handles the UI change in vue for the list view.\n     *\n     * @param {DataSource} newData - The new data source for the list view.\n     * @param {ElementContext} listElement - The HTML element context for the list view.\n     * @param {Virtualization} virtualThis - The virtualization context for the list view.\n     * @returns {void}\n     */\n    Virtualization.prototype.onChange = function (newData, listElement, virtualThis) {\n        var liItem = ListBase.createListItemFromJson(virtualThis.listViewInstance.createElement, [newData], virtualThis.listViewInstance.listBaseOption, null, null, virtualThis.listViewInstance);\n        if (virtualThis.listViewInstance.isReact) {\n            virtualThis.listViewInstance.renderReactTemplates();\n        }\n        while (listElement.lastChild) {\n            listElement.removeChild(listElement.lastChild);\n        }\n        [].slice.call(liItem[0].children).forEach(function (ele) {\n            listElement.appendChild(ele);\n        });\n    };\n    Virtualization.prototype.onNgChange = function (newData, listElement, virtualThis) {\n        // compile given target element with template for new data\n        var templateCompiler = compile(virtualThis.listViewInstance.template);\n        var resultElement = templateCompiler(newData);\n        while (listElement.lastChild) {\n            listElement.removeChild(listElement.lastChild);\n        }\n        listElement.appendChild(resultElement[0]);\n    };\n    Virtualization.prototype.getModuleName = function () {\n        return 'virtualization';\n    };\n    Virtualization.prototype.destroy = function () {\n        this.wireScrollEvent(true);\n        this.topElement = null;\n        this.bottomElement = null;\n    };\n    return Virtualization;\n}());\nexport { Virtualization };\n","import * as index from './index';\nindex.ListView.Inject(index.Virtualization);\nexport * from './index';\n"],"names":["getFieldValues","dataItem","fields","fieldData","isNullOrUndefined","isHeader","_i","_a","Object","keys","length","dataField","value","undefined","getValue","compileTemplate","template","document","querySelector","compile","innerHTML","trim","e","moveTo","from","to","targetIndexes","insertBefore","targetElements","forEach","index","push","children","slice","call","target","appendChild","insertElement_1","li","ul","group","icon","text","check","checked","selected","expanded","textContent","hasChild","level","url","collapsible","disabled","image","iconWrapper","anchorWrap","navigable","ListBase","createList","createElement","dataSource","options","isSingleLevel","componentInstance","curOpt","extend","defaultListBaseOptions","ariaAttributes","defaultAriaAttributes","type","typeofData","typeof","createListFromArray","createListFromJson","generateUL","createListItemFromArray","subChild","cssClass","getModuleClass","moduleName","id","generateId","i","itemCreating","curData","generateSingleLevelLI","generateLI","itemCreated","item","createListItemFromJson","getModuleName","defaultMappedFields","checkboxElement","anchorElement","child","prototype","hasOwnProperty","curItem","innerEle","showCheckBox","itemNavigable","urlAttributes","className","attrs","showIcon","iconCss","itemClass","prepend","firstElementChild","classList","add","setAttribute","toString","groupItemRole","itemRole","removeAttribute","tooltip","tooltipText","enableHtmlSanitizer","SanitizeHtmlHelper","sanitize","tooltipTextElement","innerText","htmlAttributes","enabled","isVisible","style","display","imageUrl","attr","src","alt","name","merge","imageAttributes","imageElemnt","insertAdjacentElement","iconElement","processSubChild","addClass","listClass","getSiblingLI","elementArray","element","isPrevious","siblingLI","liIndex","liCollections","Array","indexOf","contains","groupDataSource","sortOrder","curFields","cusQuery","Query","groupBy","ds","getDataSource","addSorting","j","itemObj","items","grpItem","key","newtext","_id","k","sortBy","query","queries","fn","splice","DataManager","executeLocal","createJsonFromElement","curEle","cloneNode","jsonAr","childs","querySelectorAll","remove","anchor","json","childNodes","i_1","Number","hasChildNodes","attributes_1","getAllAttributes","data","match","elementAttributes","class","split","attributes","nodeName","nodeValue","renderContentTemplate","ulElement","role","compiledString","liCollection","currentID","groupTemplateID","templateID","compiledElement","isStringTemplate","append","renderGroupTemplate","groupTemplate","headerItems","category","headerItems_1","header","headerData","Math","floor","random","substring","subDS","hasChildren","subLi","expandCollapse","expandIconPosition","expandIconClass","innerElements","grpLI","elementID","href","anchorTag","createTextNode","isFullNavigation","anchorWrapper","uID","innerDiv","wrapperRole","itemText","liElement","listRole","generateIcon","isChecked","headerTemplate","__extends","extendStatics","d","b","setPrototypeOf","__proto__","p","__","this","constructor","create","__decorate","decorators","desc","c","arguments","r","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","effectsConfig","None","SlideLeft","SlideDown","Zoom","Fade","effectsRTLConfig","classNames","root","hover","focused","parentItem","listItem","listIcon","listItemText","groupListItem","view","headerText","headerTemplateText","disable","container","backIcon","backButton","checkboxWrapper","checkbox","checklist","checkboxIcon","checkboxRight","checkboxLeft","listviewCheckbox","itemCheckList","virtualElementContainer","FieldSettings","_super","apply","Property","ChildProperty","ListView","_this","previousSelectedItems","hiddenItems","enabledItems","disabledItems","onPropertyChanged","newProp","oldProp","setHTMLAttribute","setCSSClass","setEnable","setSize","setEnableRTL","listBaseOption","properties","enableVirtualization","virtualizationModule","reRenderUiVirtualization","reRender","curDSLevel","headerTitle","contentContainer","detach","refresh","setCheckbox","previousScrollTop","scrollTop","curViewDS","getSubDS","resetCurrentList","oldCSSClass","filter","css","removeClass","height","formatUnit","width","isWindow","clientHeight","enableElement","enable","enableRtl","isEnabled","showBack","prop","headerEle","showHeader","innerHeaderEle","setProperties","textEle","outerHTML","hedBackButton","headerTemplateEle","LISTVIEW_HEADERTEMPLATE_ID","isReact","renderReactTemplates","parentElement","switchView","fromView","toView","reverse","fPos_1","position","overflow_1","overflow","anim","duration","animation","effect","aniObj","animate","animationMode","timingFunction","easing","end","trigger","curUL","preRender","renderCheckbox","bind","initialization","animateOptions","currentLiElements","isNestedList","selectedData","selectedId","enablePersistence","LISTVIEW_TEMPLATE_ID","LISTVIEW_GROUPTEMPLATE_ID","Animation","removeElement","args","fieldData_1","createCheckBox","frameElement_1","findIndex","checkInternally","checkBoxPosition","virtualCheckBox","lastElementChild","checkItem","toggleCheckBase","HTMLLIElement","getLiFromObjOrElement","setSelectedItemData","updateSelectedId","uncheckItem","checkAllItems","toggleAllCheckBase","uncheckAllItems","checkIcon","checkedItem","getItemData","selectedItems","refreshItemHeight","handleCheckboxState","isCheckedBefore","isFocusedBefore","eventArgs","isSetCheckboxLI","textAreaFocus","observedArgs","cancel","clickHandler","isArray","targetElement","closestElement","back","closest","parentNode","removeFocus","isValidLI","setCheckboxLI","selectEventData","removeHover","removeSelect","setSelectLI","removeChild","hoverHandler","curLi","setHoverLI","leaveHandler","homeKeyHandler","preventDefault","focusedElement","onArrowKeyDown","prev","arrowKeyHandler","elementTop","getBoundingClientRect","top","elementHeight","firstItemBounds","heightDiff","groupItemBounds","siblingTop","siblingHeight","window","scroll","pageYOffset","innerHeight","uiFirstIndex","onUIScrolled","listItemHeight","topHeight","headerBounds","enterKeyHandler","spaceKeyHandler","cbElement","keyActionHandler","keyCode","swipeActionHandler","swipeDirection","velocity","originalEvent","focusout","selectedLI","wireEvents","EventHandler","touchModule","Touch","swipe","onListScroll","unWireEvents","destroy","focusedLI_1","hoverLI","selectedLI_1","ele","renderSubList","selectedItem","isInteracted","event","lastLi","levelKeys","localData","levelKeys_1","field","curDSJSON","findItemFromDS","curDS","getElementUID","parent","resultJSON","some","getQuery","columns","column","select","tableName","setViewDataSource","fieldValue","isInAnimation","renderRemoteLists","listViewComponent","isDestroyed","result","renderList","triggerActionFailure","setLocalData","ready","then","isOffline","offline","catch","executeQuery","clearTemplate","renderIntoDom","setAttributes","liElements","parseInt","getAttribute","updateDOMItemCount","lists","isNgTemplate","createUIItem","uiVirtualization","obj","Element","render","tabindex","rippleFn","rippleEffect","selector","renderComplete","classAr","concat","pID","pop","toUL","fromUL","selectItem","unselectItem","uid","selectMultipleItems","getParentId","parentId","getElementsByClassName","tempData","getSelectedItems","finalValue","isCompleted","liTextCollection","liDataCollection","dataParent","findItem","enableItem","setItemState","disableItem","isEnable","showItem","showHideItem","hideItem","isHide","addItem","addItemInternally","addItemAtIndex","targetUL","addItemIntoDom","addItemInNestedList","newDataSource","itemData","targetItemData","itemQueue","targetItemId","targetChildDS","isAlreadyRenderedUL","targetLi","targetDS","targetRefreshedElement","currentItem","addListItem","curItemDS","targetEle","nextElementSibling","removeItem","listDataSource","removeItemFromList","data_1","groupLi","validateNestedView","previousElementSibling","foundData","findParent","dsIndex","parentLi","li_1","liID","toLowerCase","removeMultipleItems","callback","requiredModules","modules","member","scrollDirection","distanceY","scrollHeight","currentScrollTop","getPersistData","addOnPersist","Complex","Event","NotifyPropertyChanges","Component","Virtualization","instance","elementDifference","listViewInstance","templateRef","isVueFunctionTemplate","isVue","wireScrollEvent","isRendered","firstIndex","firstDs","expectedDomItemCount","ValidateItemCount","lastIndex","uiLastIndex","domItemCount","otherDs","listItems","topElement","bottomElement","totalHeight","topElementHeight","bottomElementHeight","listDiff","uiIndicesInitialization","removeEventListener","onVirtualScroll","updateUl","onVirtualUiScroll","addEventListener","dataSourceLength","itemCount","parseFloat","round","uiIndices","activeIndices","disabledItemIndices","hiddenItemIndices","context","viewContainerRef","get","nextSibling","getscrollerHeight","startingHeight","documentElement","scrollPosition","onLongScroll","onNormalScroll","isScrollingDown","elements","updateUI","updateUiContent","curViewDs","dataset","checkListWrapper","changeElementAttributes","checklistElement","activeIndex","findDSAndIndexFromId","dataCollection","textCollection","curViewDS_1","indices","map","curViewDS_2","indexArray","dataSource_1","resutJSON","isChecked_1","isSelected","eventArgs_1","removeUiItem","addUiItem","changeUiIndices","liItem","previousSibling","scrollTo","increment","ind","index_1","createAndInjectNewItem","index_2","templateData","div_1","commonTemplate","nodes","lastChild","onChange","onNgChange","newData","listElement","virtualThis","resultElement","Sortable","getHelper","getSortableElement","sender","isValidTarget","helper","offsetWidth","offsetHeight","body","onDrag","newInst","getSortableInstance","curTarget","placeHolder","placeHolderElement","scope","oldIdx","getIndex","getPlaceHolder","newIdx","isPlaceHolderPresent","childElementCount","refreshDisabled","idx","updateItemClass","droppedElement","previousIndex","currentIndex","removePlaceHolder","inst_1","onDragStart","cancelDrag","onDragStop","isBlazor","bindEvents","dragElement","curIdx","prevIdx","handled","dropInst","curIdx_1","curIdx_2","scopeName","beforeDropArgs","getComponent","intDestroy","Sortable_1","getUniqueID","dataBind","initializeDraggable","Draggable","dragStart","drag","dragStop","dragTarget","enableTapHold","tapHoldThreshold","queryPositionInfo","distance","wrapper","keyDownHandler","unwireEvents","dragWrapper","dragPlaceholder","grabbedElement","compareElementParent","inst","increased","disabledIdx","start","placeHolderPresent","offset","clientY","bottom","cltY","changedTouches","left","pageXOffset","destination","Base","Inject","index.Virtualization"],"mappings":"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"}