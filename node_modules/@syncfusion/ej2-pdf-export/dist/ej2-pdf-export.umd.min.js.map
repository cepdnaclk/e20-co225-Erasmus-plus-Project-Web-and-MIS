{"version":3,"file":"ej2-pdf-export.umd.min.js","sources":["../src/implementation/collections/utils.js","../src/implementation/collections/dictionary.js","../src/implementation/primitives/pdf-name.js","../src/implementation/input-output/pdf-operators.js","../src/implementation/input-output/pdf-dictionary-properties.js","../src/implementation/primitives/pdf-dictionary.js","../src/implementation/primitives/pdf-number.js","../src/implementation/primitives/pdf-array.js","../src/implementation/primitives/pdf-stream.js","../src/implementation/primitives/pdf-string.js","../src/implementation/primitives/pdf-reference.js","../src/implementation/actions/action.js","../src/implementation/actions/uri-action.js","../src/implementation/graphics/enum.js","../src/implementation/graphics/pdf-color.js","../src/implementation/drawing/pdf-drawing.js","../src/implementation/graphics/brushes/pdf-brush.js","../src/implementation/graphics/brushes/pdf-solid-brush.js","../src/implementation/graphics/fonts/enum.js","../src/implementation/graphics/fonts/pdf-string-format.js","../src/implementation/graphics/fonts/string-tokenizer.js","../src/implementation/graphics/fonts/string-layouter.js","../src/implementation/graphics/fonts/pdf-font.js","../src/implementation/input-output/pdf-writer.js","../src/implementation/input-output/enum.js","../src/implementation/input-output/pdf-main-object-collection.js","../src/implementation/document/pdf-document-base.js","../src/implementation/input-output/cross-table.js","../src/implementation/primitives/pdf-boolean.js","../src/implementation/document/pdf-viewer-preferences.js","../src/implementation/document/pdf-catalog.js","../src/implementation/input-output/pdf-cross-table.js","../src/implementation/pages/pdf-page-size.js","../src/implementation/pages/enum.js","../src/implementation/graphics/pdf-margins.js","../src/implementation/pages/pdf-page-settings.js","../src/implementation/input-output/pdf-stream-writer.js","../src/implementation/graphics/pdf-pen.js","../src/implementation/graphics/pdf-transformation-matrix.js","../src/implementation/graphics/constants.js","../src/implementation/collections/object-object-pair/dictionary.js","../src/implementation/graphics/pdf-transparency.js","../src/implementation/document/automatic-fields/automatic-field-info-collection.js","../src/implementation/graphics/figures/base/graphics-element.js","../src/implementation/document/automatic-fields/automatic-field.js","../src/implementation/document/automatic-fields/automatic-field-info.js","../src/implementation/graphics/images/byte-array.js","../src/implementation/graphics/images/image-decoder.js","../src/implementation/graphics/unit-convertor.js","../src/implementation/graphics/images/pdf-image.js","../src/implementation/graphics/images/pdf-bitmap.js","../src/implementation/graphics/fonts/ttf-table-info.js","../src/implementation/graphics/fonts/ttf-name-table.js","../src/implementation/graphics/fonts/ttf-name-record.js","../src/implementation/graphics/fonts/ttf-head-table.js","../src/implementation/graphics/fonts/ttf-metrics.js","../src/implementation/graphics/fonts/ttf-horizontal-header-table.js","../src/implementation/graphics/fonts/ttf-OS2-Table.js","../src/implementation/graphics/fonts/ttf-post-table.js","../src/implementation/graphics/fonts/ttf-long-hor-metric.js","../src/implementation/graphics/fonts/ttf-cmap-sub-table.js","../src/implementation/graphics/fonts/ttf-cmap-table.js","../src/implementation/graphics/fonts/ttf-glyph-info.js","../src/implementation/graphics/fonts/ttf-loca-table.js","../src/implementation/graphics/fonts/ttf-apple-cmap-sub-table.js","../src/implementation/graphics/fonts/ttf-microsoft-cmap-sub-table.js","../src/implementation/graphics/fonts/ttf-trimmed-cmap-sub-table.js","../src/implementation/graphics/fonts/ttf-glyph-header.js","../src/implementation/input-output/big-endian-writer.js","../src/implementation/graphics/fonts/ttf-reader.js","../src/implementation/graphics/fonts/pdf-font-metrics.js","../src/implementation/graphics/fonts/unicode-true-type-font.js","../src/implementation/graphics/fonts/rtl/rtl-text-shape.js","../src/implementation/graphics/fonts/rtl/rtl-bidirectional.js","../src/implementation/graphics/fonts/rtl-renderer.js","../src/implementation/graphics/figures/enum.js","../src/implementation/graphics/brushes/pdf-gradient-brush.js","../src/implementation/graphics/figures/pdf-template.js","../src/implementation/graphics/pdf-resources.js","../src/implementation/graphics/brushes/pdf-tiling-brush.js","../src/implementation/graphics/pdf-graphics.js","../src/implementation/pages/pdf-page-layer.js","../src/implementation/general/pdf-collection.js","../src/implementation/pages/pdf-page-layer-collection.js","../src/implementation/pages/pdf-page-base.js","../src/implementation/annotations/annotation-collection.js","../src/implementation/pages/pdf-page.js","../src/implementation/pages/page-added-event-arguments.js","../src/implementation/pages/pdf-section-page-collection.js","../src/implementation/document/pdf-document-template.js","../src/implementation/pages/pdf-section-templates.js","../src/implementation/pages/pdf-section.js","../src/implementation/pages/pdf-section-collection.js","../src/implementation/pages/pdf-document-page-collection.js","../src/implementation/general/pdf-cache-collection.js","../src/implementation/document/pdf-document.js","../src/implementation/graphics/fonts/pdf-standard-font-metrics-factory.js","../src/implementation/graphics/fonts/pdf-standard-font.js","../src/implementation/annotations/annotation.js","../src/implementation/annotations/link-annotation.js","../src/implementation/annotations/action-link-annotation.js","../src/implementation/annotations/document-link-annotation.js","../src/implementation/graphics/figures/base/element-layouter.js","../src/implementation/structured-elements/grid/styles/pdf-borders.js","../src/implementation/graphics/figures/layout-element.js","../src/implementation/graphics/figures/base/text-layouter.js","../src/implementation/graphics/figures/text-element.js","../src/implementation/annotations/uri-annotation.js","../src/implementation/annotations/pdf-text-web-link.js","../src/implementation/document/automatic-fields/pdf-numbers-convertor.js","../src/implementation/document/automatic-fields/pdf-template-value-pair.js","../src/implementation/document/automatic-fields/multiple-value-field.js","../src/implementation/document/automatic-fields/pdf-page-number-field.js","../src/implementation/document/automatic-fields/composite-field.js","../src/implementation/document/automatic-fields/single-value-field.js","../src/implementation/document/automatic-fields/page-count-field.js","../src/implementation/general/enum.js","../src/implementation/general/pdf-destination.js","../src/implementation/general/functions/pdf-function.js","../src/implementation/general/functions/pdf-sampled-function.js","../src/implementation/graphics/brushes/enum.js","../src/implementation/graphics/brushes/pdf-brushes.js","../src/implementation/graphics/brushes/pdf-blend.js","../src/implementation/graphics/brushes/pdf-color-blend.js","../src/implementation/graphics/brushes/pdf-linear-gradient-brush.js","../src/implementation/graphics/brushes/pdf-radial-gradient-brush.js","../src/implementation/structured-elements/tables/light-tables/enum.js","../src/implementation/structured-elements/grid/styles/style.js","../src/implementation/structured-elements/grid/pdf-grid-cell.js","../src/implementation/structured-elements/grid/pdf-grid-column.js","../src/implementation/structured-elements/grid/pdf-grid-row.js","../src/implementation/structured-elements/grid/pdf-grid.js","../src/implementation/structured-elements/grid/layout/grid-layouter.js","../src/implementation/graphics/figures/base/shape-layouter.js","../src/implementation/graphics/figures/base/pdf-shape-element.js","../src/implementation/graphics/figures/base/draw-element.js","../src/implementation/graphics/figures/base/fill-element.js","../src/implementation/graphics/figures/path.js","../src/implementation/graphics/figures/rectangle-area.js","../src/implementation/graphics/figures/ellipse-part.js","../src/implementation/graphics/figures/arc.js","../src/implementation/graphics/fonts/pdf-true-type-font.js","../src/implementation/pages/pdf-page-template-element.js"],"sourcesContent":["/**\n * @private\n * @hidden\n */\nexport function defaultToString(item) {\n    // if (item === null) {\n    //     return 'COLLECTION_NULL';\n    // } else if (typeof item === 'undefined') {\n    //     return 'COLLECTION_UNDEFINED';\n    // } else if (Object.prototype.toString.call(item) === '[object String]') {\n    if (Object.prototype.toString.call(item) === '[object String]') {\n        return '$s' + item;\n    }\n    else {\n        return '$o' + item.toString();\n    }\n}\n","/**\n * Dictionary.ts class for EJ2-PDF\n * @private\n * @hidden\n */\nimport { defaultToString } from './utils';\n/**\n * @private\n * @hidden\n */\nvar Dictionary = /** @class */ (function () {\n    /**\n     * @private\n     * @hidden\n     */\n    function Dictionary(toStringFunction) {\n        this.table = {};\n        this.nElements = 0;\n        this.toStr = toStringFunction || defaultToString;\n    }\n    /**\n     * @private\n     * @hidden\n     */\n    Dictionary.prototype.getValue = function (key) {\n        var pair = this.table['$' + this.toStr(key)];\n        if (typeof pair === 'undefined') {\n            return undefined;\n        }\n        return pair.value;\n    };\n    /**\n     * @private\n     * @hidden\n     */\n    Dictionary.prototype.setValue = function (key, value) {\n        // if (typeof key === 'undefined' || typeof value === 'undefined') {\n        //     return undefined;\n        // }\n        var ret;\n        var k = '$' + this.toStr(key);\n        var previousElement = this.table[k];\n        // if (typeof previousElement === 'undefined') {\n        this.nElements++;\n        ret = undefined;\n        // }\n        this.table[k] = {\n            key: key,\n            value: value\n        };\n        return ret;\n    };\n    /**\n     * @private\n     * @hidden\n     */\n    Dictionary.prototype.remove = function (key) {\n        var k = '$' + this.toStr(key);\n        var previousElement = this.table[k];\n        // if (typeof previousElement !== 'undefined') {\n        delete this.table[k];\n        this.nElements--;\n        return previousElement.value;\n        // }\n        // return undefined;\n    };\n    /**\n     * @private\n     * @hidden\n     */\n    Dictionary.prototype.keys = function () {\n        var keysArray = [];\n        var namesOfKeys = Object.keys(this.table);\n        for (var index1 = 0; index1 < namesOfKeys.length; index1++) {\n            // if (Object.prototype.hasOwnProperty.call(this.table, namesOfKeys[index1])) {\n            var pair1 = this.table[namesOfKeys[index1]];\n            keysArray.push(pair1.key);\n            // }\n        }\n        return keysArray;\n    };\n    /**\n     * @private\n     * @hidden\n     */\n    Dictionary.prototype.values = function () {\n        var valuesArray = [];\n        var namesOfValues = Object.keys(this.table);\n        for (var index2 = 0; index2 < namesOfValues.length; index2++) {\n            // if (Object.prototype.hasOwnProperty.call(this.table, namesOfValues[index2])) {\n            var pair2 = this.table[namesOfValues[index2]];\n            valuesArray.push(pair2.value);\n            // }\n        }\n        return valuesArray;\n    };\n    /**\n     * @private\n     * @hidden\n     */\n    Dictionary.prototype.containsKey = function (key) {\n        var retutnValue = true;\n        if (typeof this.getValue(key) === 'undefined') {\n            retutnValue = true;\n        }\n        else {\n            retutnValue = false;\n        }\n        return !retutnValue;\n    };\n    /**\n     * @private\n     * @hidden\n     */\n    Dictionary.prototype.clear = function () {\n        this.table = {};\n        this.nElements = 0;\n    };\n    /**\n     * @private\n     * @hidden\n     */\n    Dictionary.prototype.size = function () {\n        return this.nElements;\n    };\n    return Dictionary;\n}()); // End of dictionary\nexport { Dictionary };\n","/**\n * `PdfName` class is used to perform name (element names) related primitive operations.\n * @private\n */\nvar PdfName = /** @class */ (function () {\n    function PdfName(value) {\n        /**\n         * `Start symbol` of the name object.\n         * @default /\n         * @private\n         */\n        this.stringStartMark = '/';\n        /**\n         * `Value` of the element.\n         * @private\n         */\n        this.internalValue = '';\n        /**\n         * Indicates if the object is currently in `saving state or not`.\n         * @default false\n         * @private\n         */\n        this.isSaving6 = false;\n        /**\n         * Internal variable to store the `position`.\n         * @default -1\n         * @private\n         */\n        this.position6 = -1;\n        this.internalValue = this.normalizeValue(value);\n    }\n    Object.defineProperty(PdfName.prototype, \"status\", {\n        //property\n        /**\n         * Gets or sets the `Status` of the specified object.\n         * @private\n         */\n        get: function () {\n            return this.status6;\n        },\n        set: function (value) {\n            this.status6 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfName.prototype, \"isSaving\", {\n        /**\n         * Gets or sets a value indicating whether this document `is saving` or not.\n         * @private\n         */\n        get: function () {\n            return this.isSaving6;\n        },\n        set: function (value) {\n            this.isSaving6 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfName.prototype, \"objectCollectionIndex\", {\n        /**\n         * Gets or sets the `index` value of the specified object.\n         * @private\n         */\n        get: function () {\n            return this.index6;\n        },\n        set: function (value) {\n            this.index6 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfName.prototype, \"position\", {\n        /**\n         * Gets or sets the `position` of the object.\n         * @private\n         */\n        get: function () {\n            return this.position6;\n        },\n        set: function (value) {\n            this.position6 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfName.prototype, \"clonedObject\", {\n        /**\n         * Returns `cloned object`.\n         * @private\n         */\n        get: function () {\n            return null;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfName.prototype, \"value\", {\n        /**\n         * Gets or sets the `value` of the object.\n         * @private\n         */\n        get: function () {\n            return this.internalValue;\n        },\n        set: function (value) {\n            // if (value !== this.value) {\n            var val = value;\n            if (value !== null && value.length > 0) {\n                // val = (value.substring(0, 1) === this.stringStartMark) ? value.substring(1) : value;\n                val = value;\n                this.internalValue = this.normalizeValue(val);\n            }\n            else {\n                this.internalValue = val;\n            }\n            // }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    //public methods\n    /**\n     * `Saves` the name using the specified writer.\n     * @private\n     */\n    PdfName.prototype.save = function (writer) {\n        // if (writer === null) {\n        //     throw new Error('ArgumentNullException : writer');\n        // }\n        writer.write(this.toString());\n    };\n    /**\n     * Gets `string` representation of the primitive.\n     * @private\n     */\n    PdfName.prototype.toString = function () {\n        return (this.stringStartMark + this.escapeString(this.value));\n    };\n    /**\n     * Creates a `copy of PdfName`.\n     * @private\n     */\n    PdfName.prototype.clone = function (crossTable) {\n        var newName = new PdfName();\n        newName.value = this.internalValue;\n        return newName;\n    };\n    /**\n     * Replace some characters with its `escape sequences`.\n     * @private\n     */\n    PdfName.prototype.escapeString = function (stringValue) {\n        // if (str === null) {\n        //     throw new Error('ArgumentNullException : str');\n        // }\n        // if (str === '') {\n        //     return str;\n        // }\n        var result = '';\n        var len = 0;\n        for (var i = 0, len_1 = stringValue.length; i < len_1; i++) {\n            var ch = stringValue[i];\n            var index = PdfName.delimiters.indexOf(ch);\n            // switch (ch) {\n            //     case '\\r' :\n            //         result = result + '\\\\r';\n            //         break;\n            //     case '\\n' :\n            //         result = result + '\\n';\n            //         break;\n            //     case '(' :\n            //     case ')' :\n            //     case '\\\\' :\n            //         //result.Append( '\\\\' ).Append( ch );\n            //         result = result + ch;\n            //         break;\n            //     default :\n            //         result = result + ch;\n            //         break;\n            // }\n            result = result + ch;\n        }\n        return result;\n    };\n    //methiods\n    /**\n     * Replace a symbol with its code with the precedence of the `sharp sign`.\n     * @private\n     */\n    PdfName.prototype.normalizeValue = function (value, c) {\n        // if (typeof c === undefined) {\n        //     let str : string = value;\n        //     for (let i : number = 0; i < PdfName.replacements.length; i++) {\n        //         str = this.normalizeValue(str, c);\n        //     }\n        //     return str;\n        // } else {\n        var strFormat = '#{0:X}';\n        //return value.replace(c.toString(),String.format(strFormat,c));\n        return value;\n        // }\n    };\n    /**\n     * PDF `special characters`.\n     * @private\n     */\n    PdfName.delimiters = '()<>[]{}/%}';\n    /**\n     * The symbols that are not allowed in PDF names and `should be replaced`.\n     * @private\n     */\n    PdfName.replacements = [' ', '\\t', '\\n', '\\r'];\n    return PdfName;\n}());\nexport { PdfName };\n","/**\n * PdfOperators.ts class for EJ2-PDF\n * Class of string PDF common operators.\n * @private\n */\nvar Operators = /** @class */ (function () {\n    /**\n     * Create an instance of `PdfOperator` class.\n     * @private\n     */\n    function Operators() {\n        /**\n         * Specifies the value of `test`.\n         * @private\n         */\n        this.forTest = 'test';\n        this.forTest = Operators.obj;\n    }\n    /**\n     * Specifies the value of `obj`.\n     * @private\n     */\n    Operators.obj = 'obj';\n    /**\n     * Specifies the value of `endObj`.\n     * @private\n     */\n    Operators.endObj = 'endobj';\n    /**\n     * Specifies the value of `R`.\n     * @private\n     */\n    Operators.r = 'R';\n    /**\n     * Specifies the value of ` `.\n     * @private\n     */\n    Operators.whiteSpace = ' ';\n    /**\n     * Specifies the value of `/`.\n     * @private\n     */\n    Operators.slash = '/';\n    /**\n     * Specifies the value of `\\r\\n`.\n     * @private\n     */\n    Operators.newLine = '\\r\\n';\n    /**\n     * Specifies the value of `stream`.\n     * @private\n     */\n    Operators.stream = 'stream';\n    /**\n     * Specifies the value of `endStream`.\n     * @private\n     */\n    Operators.endStream = 'endstream';\n    /**\n     * Specifies the value of `xref`.\n     * @private\n     */\n    Operators.xref = 'xref';\n    /**\n     * Specifies the value of `f`.\n     * @private\n     */\n    Operators.f = 'f';\n    /**\n     * Specifies the value of `n`.\n     * @private\n     */\n    Operators.n = 'n';\n    /**\n     * Specifies the value of `trailer`.\n     * @private\n     */\n    Operators.trailer = 'trailer';\n    /**\n     * Specifies the value of `startxref`.\n     * @private\n     */\n    Operators.startxref = 'startxref';\n    /**\n     * Specifies the value of `eof`.\n     * @private\n     */\n    Operators.eof = '%%EOF';\n    /**\n     * Specifies the value of `header`.\n     * @private\n     */\n    Operators.header = '%PDF-1.5';\n    /**\n     * Specifies the value of `beginText`.\n     * @private\n     */\n    Operators.beginText = 'BT';\n    /**\n     * Specifies the value of `endText`.\n     * @private\n     */\n    Operators.endText = 'ET';\n    /**\n     * Specifies the value of `m`.\n     * @private\n     */\n    Operators.beginPath = 'm';\n    /**\n     * Specifies the value of `l`.\n     * @private\n     */\n    Operators.appendLineSegment = 'l';\n    /**\n     * Specifies the value of `S`.\n     * @private\n     */\n    Operators.stroke = 'S';\n    /**\n     * Specifies the value of `f`.\n     * @private\n     */\n    Operators.fill = 'f';\n    /**\n     * Specifies the value of `f*`.\n     * @private\n     */\n    Operators.fillEvenOdd = 'f*';\n    /**\n     * Specifies the value of `B`.\n     * @private\n     */\n    Operators.fillStroke = 'B';\n    /**\n     * Specifies the value of `B*`.\n     * @private\n     */\n    Operators.fillStrokeEvenOdd = 'B*';\n    /**\n     * Specifies the value of `c`.\n     * @private\n     */\n    Operators.appendbeziercurve = 'c';\n    /**\n     * Specifies the value of `re`.\n     * @private\n     */\n    Operators.appendRectangle = 're';\n    /**\n     * Specifies the value of `q`.\n     * @private\n     */\n    Operators.saveState = 'q';\n    /**\n     * Specifies the value of `Q`.\n     * @private\n     */\n    Operators.restoreState = 'Q';\n    /**\n     * Specifies the value of `Do`.\n     * @private\n     */\n    Operators.paintXObject = 'Do';\n    /**\n     * Specifies the value of `cm`.\n     * @private\n     */\n    Operators.modifyCtm = 'cm';\n    /**\n     * Specifies the value of `Tm`.\n     * @private\n     */\n    Operators.modifyTM = 'Tm';\n    /**\n     * Specifies the value of `w`.\n     * @private\n     */\n    Operators.setLineWidth = 'w';\n    /**\n     * Specifies the value of `J`.\n     * @private\n     */\n    Operators.setLineCapStyle = 'J';\n    /**\n     * Specifies the value of `j`.\n     * @private\n     */\n    Operators.setLineJoinStyle = 'j';\n    /**\n     * Specifies the value of `d`.\n     * @private\n     */\n    Operators.setDashPattern = 'd';\n    /**\n     * Specifies the value of `i`.\n     * @private\n     */\n    Operators.setFlatnessTolerance = 'i';\n    /**\n     * Specifies the value of `h`.\n     * @private\n     */\n    Operators.closePath = 'h';\n    /**\n     * Specifies the value of `s`.\n     * @private\n     */\n    Operators.closeStrokePath = 's';\n    /**\n     * Specifies the value of `b`.\n     * @private\n     */\n    Operators.closeFillStrokePath = 'b';\n    /**\n     * Specifies the value of `setCharacterSpace`.\n     * @private\n     */\n    Operators.setCharacterSpace = 'Tc';\n    /**\n     * Specifies the value of `setWordSpace`.\n     * @private\n     */\n    Operators.setWordSpace = 'Tw';\n    /**\n     * Specifies the value of `setHorizontalScaling`.\n     * @private\n     */\n    Operators.setHorizontalScaling = 'Tz';\n    /**\n     * Specifies the value of `setTextLeading`.\n     * @private\n     */\n    Operators.setTextLeading = 'TL';\n    /**\n     * Specifies the value of `setFont`.\n     * @private\n     */\n    Operators.setFont = 'Tf';\n    /**\n     * Specifies the value of `setRenderingMode`.\n     * @private\n     */\n    Operators.setRenderingMode = 'Tr';\n    /**\n     * Specifies the value of `setTextRise`.\n     * @private\n     */\n    Operators.setTextRise = 'Ts';\n    /**\n     * Specifies the value of `setTextScaling`.\n     * @private\n     */\n    Operators.setTextScaling = 'Tz';\n    /**\n     * Specifies the value of `setCoords`.\n     * @private\n     */\n    Operators.setCoords = 'Td';\n    /**\n     * Specifies the value of `goToNextLine`.\n     * @private\n     */\n    Operators.goToNextLine = 'T*';\n    /**\n     * Specifies the value of `setText`.\n     * @private\n     */\n    Operators.setText = 'Tj';\n    /**\n     * Specifies the value of `setTextWithFormatting`.\n     * @private\n     */\n    Operators.setTextWithFormatting = 'TJ';\n    /**\n     * Specifies the value of `setTextOnNewLine`.\n     * @private\n     */\n    Operators.setTextOnNewLine = '\\'';\n    /**\n     * Specifies the value of `selectcolorspaceforstroking`.\n     * @private\n     */\n    Operators.selectcolorspaceforstroking = 'CS';\n    /**\n     * Specifies the value of `selectcolorspacefornonstroking`.\n     * @private\n     */\n    Operators.selectcolorspacefornonstroking = 'cs';\n    /**\n     * Specifies the value of `setrbgcolorforstroking`.\n     * @private\n     */\n    Operators.setrbgcolorforstroking = 'RG';\n    /**\n     * Specifies the value of `setrbgcolorfornonstroking`.\n     * @private\n     */\n    Operators.setrbgcolorfornonstroking = 'rg';\n    /**\n     * Specifies the value of `K`.\n     * @private\n     */\n    Operators.setcmykcolorforstroking = 'K';\n    /**\n     * Specifies the value of `k`.\n     * @private\n     */\n    Operators.setcmykcolorfornonstroking = 'k';\n    /**\n     * Specifies the value of `G`.\n     * @private\n     */\n    Operators.setgraycolorforstroking = 'G';\n    /**\n     * Specifies the value of `g`.\n     * @private\n     */\n    Operators.setgraycolorfornonstroking = 'g';\n    /**\n     * Specifies the value of `W`.\n     * @private\n     */\n    Operators.clipPath = 'W';\n    /**\n     * Specifies the value of `clipPathEvenOdd`.\n     * @private\n     */\n    Operators.clipPathEvenOdd = 'W*';\n    /**\n     * Specifies the value of `n`.\n     * @private\n     */\n    Operators.endPath = 'n';\n    /**\n     * Specifies the value of `setGraphicsState`.\n     * @private\n     */\n    Operators.setGraphicsState = 'gs';\n    /**\n     * Specifies the value of `%`.\n     * @private\n     */\n    Operators.comment = '%';\n    /**\n     * Specifies the value of `*`.\n     * @private\n     */\n    Operators.evenOdd = '*';\n    /**\n     * Specifies the value of `M`.\n     * @private\n     */\n    Operators.setMiterLimit = 'M';\n    /**\n     * Same as SC, but also supports Pattern, Separation, DeviceN, and ICCBased color spaces. For non-stroking operations.\n     * @public\n     */\n    Operators.setColorAndPattern = 'scn';\n    /**\n     * Same as SC, but also supports Pattern, Separation, DeviceN, and ICCBased color spaces. For stroking.\n     */\n    Operators.setColorAndPatternStroking = 'SCN';\n    return Operators;\n}());\nexport { Operators };\n","/**\n * dictionaryProperties.ts class for EJ2-PDF\n * PDF dictionary properties.\n * @private\n */\nvar DictionaryProperties = /** @class */ (function () {\n    /**\n     * Initialize an instance for `PdfDictionaryProperties` class.\n     * @private\n     */\n    function DictionaryProperties() {\n        /**\n         * Specifies the value of `Pages`.\n         * @private\n         */\n        this.pages = 'Pages';\n        /**\n         * Specifies the value of `Kids`.\n         * @private\n         */\n        this.kids = 'Kids';\n        /**\n         * Specifies the value of `Count`.\n         * @private\n         */\n        this.count = 'Count';\n        /**\n         * Specifies the value of `Resources`.\n         * @private\n         */\n        this.resources = 'Resources';\n        /**\n         * Specifies the value of `Type`.\n         * @private\n         */\n        this.type = 'Type';\n        /**\n         * Specifies the value of `Size`.\n         * @private\n         */\n        this.size = 'Size';\n        /**\n         * Specifies the value of `MediaBox`.\n         * @private\n         */\n        this.mediaBox = 'MediaBox';\n        /**\n         * Specifies the value of `Parent`.\n         * @private\n         */\n        this.parent = 'Parent';\n        /**\n         * Specifies the value of `Root`.\n         * @private\n         */\n        this.root = 'Root';\n        /**\n         * Specifies the value of `DecodeParms`.\n         * @private\n         */\n        this.decodeParms = 'DecodeParms';\n        /**\n         * Specifies the value of `Filter`.\n         * @private\n         */\n        this.filter = 'Filter';\n        /**\n         * Specifies the value of `Font`.\n         * @private\n         */\n        this.font = 'Font';\n        /**\n         * Specifies the value of `Type1`.\n         * @private\n         */\n        this.type1 = 'Type1';\n        /**\n         * Specifies the value of `BaseFont`.\n         * @private\n         */\n        this.baseFont = 'BaseFont';\n        /**\n         * Specifies the value of `Encoding`.\n         * @private\n         */\n        this.encoding = 'Encoding';\n        /**\n         * Specifies the value of `Subtype`.\n         * @private\n         */\n        this.subtype = 'Subtype';\n        /**\n         * Specifies the value of `Contents`.\n         * @private\n         */\n        this.contents = 'Contents';\n        /**\n         * Specifies the value of `ProcSet`.\n         * @private\n         */\n        this.procset = 'ProcSet';\n        /**\n         * Specifies the value of `ColorSpace`.\n         * @private\n         */\n        this.colorSpace = 'ColorSpace';\n        /**\n         * Specifies the value of `ExtGState`.\n         * @private\n         */\n        this.extGState = 'ExtGState';\n        /**\n         * Specifies the value of `Pattern`.\n         * @private\n         */\n        this.pattern = 'Pattern';\n        /**\n         * Specifies the value of `XObject`.\n         * @private\n         */\n        this.xObject = 'XObject';\n        /**\n         * Specifies the value of `Length`.\n         * @private\n         */\n        this.length = 'Length';\n        /**\n         * Specifies the value of `Width`.\n         * @private\n         */\n        this.width = 'Width';\n        /**\n         * Specifies the value of `Height`.\n         * @private\n         */\n        this.height = 'Height';\n        /**\n         * Specifies the value of `BitsPerComponent`.\n         * @private\n         */\n        this.bitsPerComponent = 'BitsPerComponent';\n        /**\n         * Specifies the value of `Image`.\n         * @private\n         */\n        this.image = 'Image';\n        /**\n         * Specifies the value of `dctdecode`.\n         * @private\n         */\n        this.dctdecode = 'DCTDecode';\n        /**\n         * Specifies the value of `Columns`.\n         * @private\n         */\n        this.columns = 'Columns';\n        /**\n         * Specifies the value of `BlackIs1`.\n         * @private\n         */\n        this.blackIs1 = 'BlackIs1';\n        /**\n         * Specifies the value of `K`.\n         * @private\n         */\n        this.k = 'K';\n        /**\n         * Specifies the value of `S`.\n         * @private\n         */\n        this.s = 'S';\n        /**\n         * Specifies the value of `Predictor`.\n         * @private\n         */\n        this.predictor = 'Predictor';\n        /**\n         * Specifies the value of `DeviceRGB`.\n         * @private\n         */\n        this.deviceRgb = 'DeviceRGB';\n        /**\n         * Specifies the value of `Next`.\n         * @private\n         */\n        this.next = 'Next';\n        /**\n         * Specifies the value of `Action`.\n         * @private\n         */\n        this.action = 'Action';\n        /**\n         * Specifies the value of `Link`.\n         * @private\n         */\n        this.link = 'Link';\n        /**\n         *\n         * Specifies the value of `A`.\n         * @private\n         */\n        this.a = 'A';\n        /**\n         * Specifies the value of `Annot`.\n         * @private\n         */\n        this.annot = 'Annot';\n        /**\n         * Specifies the value of `P`.\n         * @private\n         */\n        this.p = 'P';\n        /**\n         * Specifies the value of `C`.\n         * @private\n         */\n        this.c = 'C';\n        /**\n         * Specifies the value of `Rect`.\n         * @private\n         */\n        this.rect = 'Rect';\n        /**\n         * Specifies the value of `URI`.\n         * @private\n         */\n        this.uri = 'URI';\n        /**\n         * Specifies the value of `Annots`.\n         * @private\n         */\n        this.annots = 'Annots';\n        /**\n         * Specifies the value of `ca`.\n         * @private\n         */\n        this.ca = 'ca';\n        /**\n         * Specifies the value of `CA`.\n         * @private\n         */\n        this.CA = 'CA';\n        /**\n         * Specifies the value of `XYZ`.\n         * @private\n         */\n        this.xyz = 'XYZ';\n        /**\n         * Specifies the value of `Fit`.\n         * @private\n         */\n        this.fit = 'Fit';\n        /**\n         * Specifies the value of `Dest`.\n         * @private\n         */\n        this.dest = 'Dest';\n        /**\n         * Specifies the value of `BM`.\n         * @private\n         */\n        this.BM = 'BM';\n        /**\n         * Specifies the value of `flatedecode`.\n         * @private\n         */\n        this.flatedecode = 'FlateDecode';\n        /**\n         * Specifies the value of `Rotate`.\n         * @private\n         */\n        this.rotate = 'Rotate';\n        /**\n         * Specifies the value of 'bBox'.\n         * @private\n         */\n        this.bBox = 'BBox';\n        /**\n         * Specifies the value of 'form'.\n         * @private\n         */\n        this.form = 'Form';\n        /**\n         * Specifies the value of 'w'.\n         * @private\n         */\n        this.w = 'W';\n        /**\n         * Specifies the value of 'cIDFontType2'.\n         * @private\n         */\n        this.cIDFontType2 = 'CIDFontType2';\n        /**\n         * Specifies the value of 'cIDToGIDMap'.\n         * @private\n         */\n        this.cIDToGIDMap = 'CIDToGIDMap';\n        /**\n         * Specifies the value of 'identity'.\n         * @private\n         */\n        this.identity = 'Identity';\n        /**\n         * Specifies the value of 'dw'.\n         * @private\n         */\n        this.dw = 'DW';\n        /**\n         * Specifies the value of 'fontDescriptor'.\n         * @private\n         */\n        this.fontDescriptor = 'FontDescriptor';\n        /**\n         * Specifies the value of 'cIDSystemInfo'.\n         * @private\n         */\n        this.cIDSystemInfo = 'CIDSystemInfo';\n        /**\n         * Specifies the value of 'fontName'.\n         * @private\n         */\n        this.fontName = 'FontName';\n        /**\n         * Specifies the value of 'flags'.\n         * @private\n         */\n        this.flags = 'Flags';\n        /**\n         * Specifies the value of 'fontBBox'.\n         * @private\n         */\n        this.fontBBox = 'FontBBox';\n        /**\n         * Specifies the value of 'missingWidth'.\n         * @private\n         */\n        this.missingWidth = 'MissingWidth';\n        /**\n         * Specifies the value of 'stemV'.\n         * @private\n         */\n        this.stemV = 'StemV';\n        /**\n         * Specifies the value of 'italicAngle'.\n         * @private\n         */\n        this.italicAngle = 'ItalicAngle';\n        /**\n         * Specifies the value of 'capHeight'.\n         * @private\n         */\n        this.capHeight = 'CapHeight';\n        /**\n         * Specifies the value of 'ascent'.\n         * @private\n         */\n        this.ascent = 'Ascent';\n        /**\n         * Specifies the value of 'descent'.\n         * @private\n         */\n        this.descent = 'Descent';\n        /**\n         * Specifies the value of 'leading'.\n         * @private\n         */\n        this.leading = 'Leading';\n        /**\n         * Specifies the value of 'avgWidth'.\n         * @private\n         */\n        this.avgWidth = 'AvgWidth';\n        /**\n         * Specifies the value of 'fontFile2'.\n         * @private\n         */\n        this.fontFile2 = 'FontFile2';\n        /**\n         * Specifies the value of 'maxWidth'.\n         * @private\n         */\n        this.maxWidth = 'MaxWidth';\n        /**\n         * Specifies the value of 'xHeight'.\n         * @private\n         */\n        this.xHeight = 'XHeight';\n        /**\n         * Specifies the value of 'stemH'.\n         * @private\n         */\n        this.stemH = 'StemH';\n        /**\n         * Specifies the value of 'registry'.\n         * @private\n         */\n        this.registry = 'Registry';\n        /**\n         * Specifies the value of 'ordering'.\n         * @private\n         */\n        this.ordering = 'Ordering';\n        /**\n         * Specifies the value of 'supplement'.\n         * @private\n         */\n        this.supplement = 'Supplement';\n        /**\n         * Specifies the value of 'type0'.\n         * @private\n         */\n        this.type0 = 'Type0';\n        /**\n         * Specifies the value of 'identityH'.\n         * @private\n         */\n        this.identityH = 'Identity-H';\n        /**\n         * Specifies the value of 'toUnicode'.\n         * @private\n         */\n        this.toUnicode = 'ToUnicode';\n        /**\n         * Specifies the value of 'descendantFonts'.\n         * @private\n         */\n        this.descendantFonts = 'DescendantFonts';\n        /**\n         * Specifies the value of 'background'.\n         * @private\n         */\n        this.background = 'Background';\n        /**\n         * Specifies the value of 'shading'.\n         * @private\n         */\n        this.shading = 'Shading';\n        /**\n         * Specifies the value of 'matrix'.\n         * @private\n         */\n        this.matrix = 'Matrix';\n        /**\n         * Specifies the value of 'antiAlias'.\n         * @private\n         */\n        this.antiAlias = 'AntiAlias';\n        /**\n         * Specifies the value of 'function'.\n         * @private\n         */\n        this.function = 'Function';\n        /**\n         * Specifies the value of 'extend'.\n         * @private\n         */\n        this.extend = 'Extend';\n        /**\n         * Specifies the value of 'shadingType'.\n         * @private\n         */\n        this.shadingType = 'ShadingType';\n        /**\n         * Specifies the value of 'coords'.\n         * @private\n         */\n        this.coords = 'Coords';\n        /**\n         * Specifies the value of 'domain'.\n         * @private\n         */\n        this.domain = 'Domain';\n        /**\n         * Specifies the value of 'range'.\n         * @private\n         */\n        this.range = 'Range';\n        /**\n         * Specifies the value of 'functionType'.\n         * @private\n         */\n        this.functionType = 'FunctionType';\n        /**\n         * Specifies the value of 'bitsPerSample'.\n         * @private\n         */\n        this.bitsPerSample = 'BitsPerSample';\n        /**\n         * Specifies the value of 'patternType'.\n         * @private\n         */\n        this.patternType = 'PatternType';\n        /**\n         * Specifies the value of 'paintType'.\n         * @private\n         */\n        this.paintType = 'PaintType';\n        /**\n         * Specifies the value of 'tilingType'.\n         * @private\n         */\n        this.tilingType = 'TilingType';\n        /**\n         * Specifies the value of 'xStep'.\n         * @private\n         */\n        this.xStep = 'XStep';\n        /**\n         * Specifies the value of 'yStep'.\n         * @private\n         */\n        this.yStep = 'YStep';\n        /**\n         * Specifies the value of viewer preferences.\n         * @private\n         */\n        this.viewerPreferences = 'ViewerPreferences';\n        /**\n         * Specifies the value of center window.\n         * @private\n         */\n        this.centerWindow = 'CenterWindow';\n        /**\n         * Specifies the value of display title.\n         * @private\n         */\n        this.displayTitle = 'DisplayTitle';\n        /**\n         * Specifies the value of fit window.\n         * @private\n         */\n        this.fitWindow = 'FitWindow';\n        /**\n         * Specifies the value of hide menu bar.\n         * @private\n         */\n        this.hideMenuBar = 'HideMenubar';\n        /**\n         * Specifies the value of hide tool bar.\n         * @private\n         */\n        this.hideToolBar = 'HideToolbar';\n        /**\n         * Specifies the value of hide window UI.\n         * @private\n         */\n        this.hideWindowUI = 'HideWindowUI';\n        /**\n         * Specifies the value of page mode.\n         * @private\n         */\n        this.pageMode = 'PageMode';\n        /**\n         * Specifies the value of page layout.\n         * @private\n         */\n        this.pageLayout = 'PageLayout';\n        /**\n         * Specifies the value of duplex.\n         * @private\n         */\n        this.duplex = 'Duplex';\n        /**\n         * Specifies the value of print scaling.\n         * @private\n         */\n        this.printScaling = 'PrintScaling';\n        //\n    }\n    return DictionaryProperties;\n}());\nexport { DictionaryProperties };\n","import { Dictionary } from './../collections/dictionary';\nimport { PdfName } from './pdf-name';\nimport { Operators } from './../input-output/pdf-operators';\nimport { DictionaryProperties } from './../input-output/pdf-dictionary-properties';\n/**\n * `PdfDictionary` class is used to perform primitive operations.\n * @private\n */\nvar PdfDictionary = /** @class */ (function () {\n    function PdfDictionary(dictionary) {\n        /**\n         * Internal variable to store the `position`.\n         * @default -1\n         * @private\n         */\n        this.position7 = -1;\n        /**\n         * The `IPdfSavable` with the specified key.\n         * @private\n         */\n        this.primitiveItems = new Dictionary();\n        /**\n         * `Start marker` for dictionary.\n         * @private\n         */\n        this.prefix = '<<';\n        /**\n         * `End marker` for dictionary.\n         * @private\n         */\n        this.suffix = '>>';\n        /**\n         * @hidden\n         * @private\n         */\n        this.resources = [];\n        /**\n         * Internal variable to hold `cloned object`.\n         * @default null\n         * @private\n         */\n        this.object = null;\n        /**\n         * Flag for PDF file formar 1.5 is dictionary `archiving` needed.\n         * @default true\n         * @private\n         */\n        this.archive = true;\n        /**\n         * Represents the Font dictionary.\n         * @hidden\n         * @private\n         */\n        this.isResource = false;\n        if (typeof dictionary === 'undefined') {\n            this.primitiveItems = new Dictionary();\n            this.encrypt = true;\n            this.dictionaryProperties = new DictionaryProperties();\n        }\n        else {\n            this.primitiveItems = new Dictionary();\n            var keys = dictionary.items.keys();\n            var values = dictionary.items.values();\n            for (var index = 0; index < dictionary.items.size(); index++) {\n                this.primitiveItems.setValue(keys[index], values[index]);\n            }\n            this.status = dictionary.status;\n            this.freezeChanges(this);\n            this.encrypt = true;\n            this.dictionaryProperties = new DictionaryProperties();\n        }\n    }\n    Object.defineProperty(PdfDictionary.prototype, \"items\", {\n        //Properties\n        /**\n         * Gets or sets the `IPdfSavable` with the specified key.\n         * @private\n         */\n        get: function () {\n            return this.primitiveItems;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDictionary.prototype, \"status\", {\n        /**\n         * Gets or sets the `Status` of the specified object.\n         * @private\n         */\n        get: function () {\n            return this.status7;\n        },\n        set: function (value) {\n            this.status7 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDictionary.prototype, \"isSaving\", {\n        /**\n         * Gets or sets a value indicating whether this document `is saving` or not.\n         * @private\n         */\n        get: function () {\n            return this.isSaving7;\n        },\n        set: function (value) {\n            this.isSaving7 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDictionary.prototype, \"objectCollectionIndex\", {\n        /**\n         * Gets or sets the `index` value of the specified object.\n         * @private\n         */\n        get: function () {\n            return this.index7;\n        },\n        set: function (value) {\n            this.index7 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDictionary.prototype, \"clonedObject\", {\n        /**\n         * Returns `cloned object`.\n         * @private\n         */\n        get: function () {\n            return this.object;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDictionary.prototype, \"position\", {\n        /**\n         * Gets or sets the `position` of the object.\n         * @private\n         */\n        get: function () {\n            return this.position7;\n        },\n        set: function (value) {\n            this.position7 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDictionary.prototype, \"Count\", {\n        /**\n         * Gets the `count`.\n         * @private\n         */\n        get: function () {\n            return this.primitiveItems.size();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDictionary.prototype, \"Dictionary\", {\n        /**\n         * Collection of `items` in the object.\n         * @private\n         */\n        get: function () {\n            return this;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Get flag if need to `archive` dictionary.\n     * @private\n     */\n    PdfDictionary.prototype.getArchive = function () {\n        return this.archive;\n    };\n    /**\n     * Set flag if need to `archive` dictionary.\n     * @private\n     */\n    PdfDictionary.prototype.setArchive = function (value) {\n        this.archive = value;\n    };\n    /**\n     * Sets flag if `encryption` is needed.\n     * @private\n     */\n    PdfDictionary.prototype.setEncrypt = function (value) {\n        this.encrypt = value;\n        this.modify();\n    };\n    /**\n     * Gets flag if `encryption` is needed.\n     * @private\n     */\n    PdfDictionary.prototype.getEncrypt = function () {\n        return this.encrypt;\n    };\n    /**\n     * `Freezes` the changes.\n     * @private\n     */\n    PdfDictionary.prototype.freezeChanges = function (freezer) {\n        this.bChanged = false;\n    };\n    /**\n     * Creates a `copy of PdfDictionary`.\n     * @private\n     */\n    PdfDictionary.prototype.clone = function (crossTable) {\n        //Need to add more codings\n        var newDict = new PdfDictionary();\n        return newDict;\n    };\n    /**\n     * `Mark` this instance modified.\n     * @private\n     */\n    PdfDictionary.prototype.modify = function () {\n        this.bChanged = true;\n    };\n    /**\n     * `Removes` the specified key.\n     * @private\n     */\n    PdfDictionary.prototype.remove = function (key) {\n        if (typeof key !== 'string') {\n            this.primitiveItems.remove(key.value);\n            this.modify();\n        }\n        else {\n            this.remove(new PdfName(key));\n        }\n    };\n    /**\n     * `Determines` whether the dictionary contains the key.\n     * @private\n     */\n    PdfDictionary.prototype.containsKey = function (key) {\n        var returnValue = false;\n        returnValue = this.primitiveItems.containsKey(key.toString());\n        return returnValue;\n    };\n    /**\n     * Raises event `BeginSave`.\n     * @private\n     */\n    PdfDictionary.prototype.onBeginSave = function () {\n        this.beginSave.sender.beginSave();\n    };\n    /**\n     * Raises event `Font Dictionary BeginSave`.\n     * @private\n     */\n    PdfDictionary.prototype.onFontDictionaryBeginSave = function () {\n        this.fontDictionaryBeginSave.sender.fontDictionaryBeginSave();\n    };\n    /**\n     * Raises event `Descendant Font BeginSave`.\n     * @private\n     */\n    PdfDictionary.prototype.onDescendantFontBeginSave = function () {\n        this.descendantFontBeginSave.sender.descendantFontBeginSave();\n    };\n    /**\n     * Raises event 'BeginSave'.\n     * @private\n     */\n    PdfDictionary.prototype.onTemplateBeginSave = function () {\n        this.pageBeginDrawTemplate.sender.pageBeginSave();\n    };\n    /**\n     * Raises event `BeginSave`.\n     * @private\n     */\n    PdfDictionary.prototype.onBeginAnnotationSave = function () {\n        this.annotationBeginSave.sender.beginSave();\n    };\n    /**\n     * Raises event `BeginSave`.\n     * @private\n     */\n    PdfDictionary.prototype.onSectionBeginSave = function (writer) {\n        var saveEvent = this.sectionBeginSave;\n        saveEvent.sender.beginSave(saveEvent.state, writer);\n    };\n    PdfDictionary.prototype.save = function (writer, bRaiseEvent) {\n        if (typeof bRaiseEvent === 'undefined') {\n            this.save(writer, true);\n        }\n        else {\n            writer.write(this.prefix);\n            if (typeof this.beginSave !== 'undefined') {\n                this.onBeginSave();\n            }\n            if (typeof this.descendantFontBeginSave !== 'undefined') {\n                this.onDescendantFontBeginSave();\n            }\n            if (typeof this.fontDictionaryBeginSave !== 'undefined') {\n                this.onFontDictionaryBeginSave();\n            }\n            if (typeof this.annotationBeginSave !== 'undefined') {\n                this.onBeginAnnotationSave();\n            }\n            if (typeof this.sectionBeginSave !== 'undefined') {\n                this.onSectionBeginSave(writer);\n            }\n            if (typeof this.pageBeginDrawTemplate !== 'undefined') {\n                this.onTemplateBeginSave();\n            }\n            // }\n            if (this.Count > 0) {\n                this.saveItems(writer);\n            }\n            writer.write(this.suffix);\n            writer.write(Operators.newLine);\n        }\n    };\n    /**\n     * `Save dictionary items`.\n     * @private\n     */\n    PdfDictionary.prototype.saveItems = function (writer) {\n        writer.write(Operators.newLine);\n        var keys = this.primitiveItems.keys();\n        var values = this.primitiveItems.values();\n        for (var index = 0; index < keys.length; index++) {\n            var key = keys[index];\n            var name_1 = new PdfName(key);\n            name_1.save(writer);\n            writer.write(Operators.whiteSpace);\n            var resources = values[index];\n            resources.save(writer);\n            writer.write(Operators.newLine);\n        }\n    };\n    return PdfDictionary;\n}());\nexport { PdfDictionary };\nvar SaveSectionCollectionEventHandler = /** @class */ (function () {\n    /**\n     * New instance for `save section collection event handler` class.\n     * @private\n     */\n    function SaveSectionCollectionEventHandler(sender) {\n        this.sender = sender;\n    }\n    return SaveSectionCollectionEventHandler;\n}());\nexport { SaveSectionCollectionEventHandler };\nvar SaveDescendantFontEventHandler = /** @class */ (function () {\n    /**\n     * New instance for `save section collection event handler` class.\n     * @private\n     */\n    function SaveDescendantFontEventHandler(sender) {\n        this.sender = sender;\n    }\n    return SaveDescendantFontEventHandler;\n}());\nexport { SaveDescendantFontEventHandler };\nvar SaveFontDictionaryEventHandler = /** @class */ (function () {\n    /**\n     * New instance for `save section collection event handler` class.\n     * @private\n     */\n    function SaveFontDictionaryEventHandler(sender) {\n        this.sender = sender;\n    }\n    return SaveFontDictionaryEventHandler;\n}());\nexport { SaveFontDictionaryEventHandler };\nvar SaveAnnotationEventHandler = /** @class */ (function () {\n    /**\n     * New instance for `save annotation event handler` class.\n     * @private\n     */\n    function SaveAnnotationEventHandler(sender) {\n        this.sender = sender;\n    }\n    return SaveAnnotationEventHandler;\n}());\nexport { SaveAnnotationEventHandler };\nvar SaveSectionEventHandler = /** @class */ (function () {\n    // constructors\n    /**\n     * New instance for `save section event handler` class.\n     * @private\n     */\n    function SaveSectionEventHandler(sender, state) {\n        this.sender = sender;\n        this.state = state;\n    }\n    return SaveSectionEventHandler;\n}());\nexport { SaveSectionEventHandler };\n/**\n * SaveTemplateEventHandler class used to store information about template elements.\n * @private\n * @hidden\n */\nvar SaveTemplateEventHandler = /** @class */ (function () {\n    /**\n     * New instance for save section collection event handler class.\n     * @public\n     */\n    function SaveTemplateEventHandler(sender) {\n        this.sender = sender;\n    }\n    return SaveTemplateEventHandler;\n}());\nexport { SaveTemplateEventHandler };\n","/**\n * `PdfNumber` class is used to perform number related primitive operations.\n * @private\n */\nvar PdfNumber = /** @class */ (function () {\n    /**\n     * Initializes a new instance of the `PdfNumber` class.\n     * @private\n     */\n    function PdfNumber(value) {\n        /**\n         * Sotres the `position`.\n         * @default -1\n         * @private\n         */\n        this.position5 = -1;\n        this.value = value;\n    }\n    Object.defineProperty(PdfNumber.prototype, \"intValue\", {\n        /**\n         * Gets or sets the `integer` value.\n         * @private\n         */\n        get: function () {\n            return this.value;\n        },\n        set: function (value) {\n            this.value = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfNumber.prototype, \"isInteger\", {\n        /**\n         * Gets or sets a value indicating whether this instance `is integer`.\n         * @private\n         */\n        get: function () {\n            return this.integer;\n        },\n        set: function (value) {\n            this.integer = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfNumber.prototype, \"status\", {\n        /**\n         * Gets or sets the `Status` of the specified object.\n         * @private\n         */\n        get: function () {\n            return this.status5;\n        },\n        set: function (value) {\n            this.status5 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfNumber.prototype, \"isSaving\", {\n        /**\n         * Gets or sets a value indicating whether this document `is saving` or not.\n         * @private\n         */\n        get: function () {\n            return this.isSaving5;\n        },\n        set: function (value) {\n            this.isSaving5 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfNumber.prototype, \"objectCollectionIndex\", {\n        /**\n         * Gets or sets the `index` value of the specified object.\n         * @private\n         */\n        get: function () {\n            return this.index5;\n        },\n        set: function (value) {\n            this.index5 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfNumber.prototype, \"position\", {\n        /**\n         * Gets or sets the `position` of the object.\n         * @private\n         */\n        get: function () {\n            return this.position5;\n        },\n        set: function (value) {\n            this.position5 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfNumber.prototype, \"clonedObject\", {\n        /**\n         * Returns `cloned object`.\n         * @private\n         */\n        get: function () {\n            var rValue = null;\n            return rValue;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * `Saves the object`.\n     * @private\n     */\n    PdfNumber.prototype.save = function (writer) {\n        writer.write(this.intValue.toString()); //tostring(CultureInfo.InletiantCulture)\n    };\n    /**\n     * Creates a `copy of PdfNumber`.\n     * @private\n     */\n    PdfNumber.prototype.clone = function (crossTable) {\n        var newNumber = new PdfNumber(this.value);\n        return newNumber;\n    };\n    /**\n     * Converts a `float value to a string` using Adobe PDF rules.\n     * @private\n     */\n    PdfNumber.floatToString = function (number) {\n        // let tempString1 : string = number.toString();\n        // let tempString2 : string = tempString1.indexOf('.') != -1 ? tempString1.substring(0, tempString1.indexOf('.')) : tempString1;\n        var returnString = number.toFixed(2);\n        if (returnString === '0.00') {\n            returnString = '.00';\n        }\n        // let prefixLength : number = (22 - tempString2.length) >= 0 ? (22 - tempString2.length) : 0;\n        // for (let index : number = 0; index < prefixLength; index++) {\n        //     returnString += '0';\n        // }\n        // returnString += tempString2 + '.00';\n        // returnString += (tempString3.length > 6) ? tempString3.substring(0,6) : tempString3;\n        // let suffixLength : number = (6 - tempString3.length) >= 0 ? (6 - tempString3.length) : 0;\n        // for (let index : number = 0; index < suffixLength; index++) {\n        //     returnString += '0';\n        // }\n        return returnString;\n    };\n    /**\n     * Determines the `minimum of the three values`.\n     * @private\n     */\n    PdfNumber.min = function (x, y, z) {\n        var r = Math.min(x, y);\n        return Math.min(z, r);\n    };\n    return PdfNumber;\n}());\nexport { PdfNumber };\n","import { PdfNumber } from './pdf-number';\nimport { Operators } from './../input-output/pdf-operators';\n/**\n * `PdfArray` class is used to perform array related primitive operations.\n * @private\n */\nvar PdfArray = /** @class */ (function () {\n    function PdfArray(array) {\n        //Fields\n        /**\n         * `startMark` - '['\n         * @private\n         */\n        this.startMark = '[';\n        /**\n         * `endMark` - ']'.\n         * @private\n         */\n        this.endMark = ']';\n        /**\n         * Internal variable to store the `position`.\n         * @default -1\n         * @private\n         */\n        this.position9 = -1;\n        /**\n         * Internal variable to hold `cloned object`.\n         * @default null\n         * @private\n         */\n        this.clonedObject9 = null;\n        /**\n         * Represents the Font dictionary.\n         * @hidden\n         * @private\n         */\n        this.isFont = false;\n        if (typeof array === 'undefined') {\n            this.internalElements = [];\n        }\n        else {\n            if (typeof array !== 'undefined' && !(array instanceof PdfArray)) {\n                var tempNumberArray = array;\n                for (var index = 0; index < tempNumberArray.length; index++) {\n                    var pdfNumber = new PdfNumber(tempNumberArray[index]);\n                    this.add(pdfNumber);\n                }\n                // } else if (typeof array !== 'undefined' && (array instanceof PdfArray)) {\n            }\n            else {\n                var tempArray = array;\n                // if (tempArray.Elements.length > 0) {\n                this.internalElements = [];\n                for (var index = 0; index < tempArray.elements.length; index++) {\n                    this.internalElements.push(tempArray.elements[index]);\n                }\n                // }\n            }\n        }\n    }\n    //property\n    /**\n     * Gets the `IPdfSavable` at the specified index.\n     * @private\n     */\n    PdfArray.prototype.items = function (index) {\n        // if (index < 0 || index >= this.Count) {\n        //     throw new Error('ArgumentOutOfRangeException : index, The index can\"t be less then zero or greater then Count.');\n        // }\n        return this.internalElements[index];\n    };\n    Object.defineProperty(PdfArray.prototype, \"count\", {\n        /**\n         * Gets the `count`.\n         * @private\n         */\n        get: function () {\n            return this.internalElements.length;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfArray.prototype, \"status\", {\n        /**\n         * Gets or sets the `Status` of the specified object.\n         * @private\n         */\n        get: function () {\n            return this.status9;\n        },\n        set: function (value) {\n            this.status9 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfArray.prototype, \"isSaving\", {\n        /**\n         * Gets or sets a value indicating whether this document `is saving` or not.\n         * @private\n         */\n        get: function () {\n            return this.isSaving9;\n        },\n        set: function (value) {\n            this.isSaving9 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfArray.prototype, \"clonedObject\", {\n        /**\n         * Returns `cloned object`.\n         * @private\n         */\n        get: function () {\n            return this.clonedObject9;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfArray.prototype, \"position\", {\n        /**\n         * Gets or sets the `position` of the object.\n         * @private\n         */\n        get: function () {\n            return this.position9;\n        },\n        set: function (value) {\n            this.position9 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfArray.prototype, \"objectCollectionIndex\", {\n        /**\n         * Gets or sets the `index` value of the specified object.\n         * @private\n         */\n        get: function () {\n            return this.index9;\n        },\n        set: function (value) {\n            this.index9 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfArray.prototype, \"CrossTable\", {\n        /**\n         * Returns `PdfCrossTable` associated with the object.\n         * @private\n         */\n        get: function () {\n            return this.pdfCrossTable;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfArray.prototype, \"elements\", {\n        /**\n         * Gets the `elements` of the Pdf Array.\n         * @private\n         */\n        get: function () {\n            return this.internalElements;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * `Adds` the specified element to the PDF array.\n     * @private\n     */\n    PdfArray.prototype.add = function (element) {\n        // if (element === null) {\n        //     throw new Error('ArgumentNullException : obj');\n        // }\n        if (typeof this.internalElements === 'undefined') {\n            this.internalElements = [];\n        }\n        this.internalElements.push(element);\n        this.markedChange();\n    };\n    /**\n     * `Marks` the object changed.\n     * @private\n     */\n    PdfArray.prototype.markedChange = function () {\n        this.bChanged = true;\n    };\n    /**\n     * `Determines` whether the specified element is within the array.\n     * @private\n     */\n    PdfArray.prototype.contains = function (element) {\n        var returnValue = false;\n        for (var index = 0; index < this.internalElements.length; index++) {\n            var tempElement = this.internalElements[index];\n            var inputElement = element;\n            if (tempElement != null && typeof tempElement !== 'undefined' && inputElement != null && typeof inputElement !== 'undefined') {\n                if (tempElement.value === inputElement.value) {\n                    return true;\n                }\n            }\n            // if (this.internalElements[index] === element) {\n            //     returnValue = true;\n            // }\n        }\n        return returnValue;\n    };\n    /**\n     * Returns the `primitive object` of input index.\n     * @private\n     */\n    PdfArray.prototype.getItems = function (index) {\n        // if (index < 0 || index >= this.Count) {\n        //     throw new Error('ArgumentOutOfRangeException : index , The index can\"t be less then zero or greater then Count.');\n        // }\n        return this.internalElements[index];\n    };\n    /**\n     * `Saves` the object using the specified writer.\n     * @private\n     */\n    PdfArray.prototype.save = function (writer) {\n        // if (writer === null) {\n        //     throw new Error('ArgumentNullException : writer');\n        // }\n        writer.write(this.startMark);\n        for (var i = 0, len = this.count; i < len; i++) {\n            this.getItems(i).save(writer);\n            if (i + 1 !== len) {\n                writer.write(Operators.whiteSpace);\n            }\n        }\n        writer.write(this.endMark);\n    };\n    /**\n     * Creates a `copy of PdfArray`.\n     * @private\n     */\n    PdfArray.prototype.clone = function (crossTable) {\n        // if (this.clonedObject9 !== null && this.clonedObject9.CrossTable === crossTable) {\n        //     return this.clonedObject9;\n        // } else {\n        this.clonedObject9 = null;\n        // Else clone the object.\n        var newArray = new PdfArray();\n        for (var index = 0; index < this.internalElements.length; index++) {\n            var obj = this.internalElements[index];\n            newArray.add(obj.clone(crossTable));\n        }\n        newArray.pdfCrossTable = crossTable;\n        this.clonedObject9 = newArray;\n        return newArray;\n    };\n    /**\n     * Creates filled PDF array `from the rectangle`.\n     * @private\n     */\n    PdfArray.fromRectangle = function (bounds) {\n        var values = [bounds.x, bounds.y, bounds.width, bounds.height];\n        var array = new PdfArray(values);\n        return array;\n    };\n    // /**\n    //  * Creates the rectangle from filled PDF array.\n    //  * @private\n    //  */\n    // public ToRectangle() : RectangleF {\n    //     if (this.Count < 4) {\n    //         throw Error('InvalidOperationException-Can not convert to rectangle.');\n    //     }\n    //     let x1 : number;\n    //     let x2 : number;\n    //     let y1 : number;\n    //     let y2 : number;\n    //     let num : PdfNumber = this.getItems(0) as PdfNumber;\n    //     x1 = num.IntValue;\n    //     num = this.getItems(1) as PdfNumber;\n    //     y1 = num.IntValue;\n    //     num = this.getItems(2) as PdfNumber;\n    //     x2 = num.IntValue;\n    //     num = this.getItems(3) as PdfNumber;\n    //     y2 = num.IntValue;\n    //     let x : number = Math.min(x1, x2);\n    //     let y : number = Math.min(y1, y2);\n    //     let width : number = Math.abs(x1 - x2);\n    //     let height : number = Math.abs(y1 - y2);\n    //     let rect : RectangleF = new RectangleF(new PointF(x, y), new SizeF(width, height));\n    //     return rect;\n    // }\n    /**\n     * `Inserts` the element into the array.\n     * @private\n     */\n    PdfArray.prototype.insert = function (index, element) {\n        if (index < this.internalElements.length && index > 0) {\n            var tempElements = [];\n            for (var i = 0; i < index; i++) {\n                tempElements.push(this.internalElements[i]);\n            }\n            tempElements.push(element);\n            for (var i = index; i < this.internalElements.length; i++) {\n                tempElements.push(this.internalElements[i]);\n            }\n            this.internalElements = tempElements;\n        }\n        else {\n            this.internalElements.push(element);\n        }\n        this.markChanged();\n    };\n    /**\n     * `Checks whether array contains the element`.\n     * @private\n     */\n    PdfArray.prototype.indexOf = function (element) {\n        return this.internalElements.indexOf(element);\n    };\n    /**\n     * `Removes` element from the array.\n     * @private\n     */\n    PdfArray.prototype.remove = function (element) {\n        // if (element === null) {\n        //     throw new Error('ArgumentNullException : element');\n        // }\n        var index = this.internalElements.indexOf(element);\n        // if (index >= 0 && index < this.internalElements.length) {\n        this.internalElements[index] = null;\n        // }\n        this.markChanged();\n    };\n    /**\n     * `Remove` the element from the array by its index.\n     * @private\n     */\n    PdfArray.prototype.removeAt = function (index) {\n        // this.internalElements.RemoveAt(index);\n        if (this.internalElements.length > index) {\n            var tempArray = [];\n            for (var i = 0; i < index; i++) {\n                tempArray.push(this.internalElements[i]);\n            }\n            for (var i = index + 1; i < this.internalElements.length; i++) {\n                tempArray.push(this.internalElements[i]);\n            }\n            this.internalElements = tempArray;\n        }\n        this.markChanged();\n    };\n    /**\n     * `Clear` the array.\n     * @private\n     */\n    PdfArray.prototype.clear = function () {\n        this.internalElements = [];\n        this.markChanged();\n    };\n    /**\n     * `Marks` the object changed.\n     * @private\n     */\n    PdfArray.prototype.markChanged = function () {\n        this.bChanged = true;\n    };\n    return PdfArray;\n}());\nexport { PdfArray };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { PdfDictionary } from './pdf-dictionary';\nimport { PdfNumber } from './pdf-number';\nimport { Operators } from './../input-output/pdf-operators';\nimport { PdfName } from './pdf-name';\nimport { PdfArray } from './pdf-array';\nimport { PdfReferenceHolder } from './pdf-reference';\nimport { CompressedStreamWriter } from '@syncfusion/ej2-compression';\n/**\n * `PdfStream` class is used to perform stream related primitive operations.\n * @private\n */\nvar PdfStream = /** @class */ (function (_super) {\n    __extends(PdfStream, _super);\n    function PdfStream(dictionary, data) {\n        var _this = _super.call(this, dictionary) || this;\n        //Constants\n        /**\n         * @hidden\n         * @private\n         */\n        _this.dicPrefix = 'stream';\n        /**\n         * @hidden\n         * @private\n         */\n        _this.dicSuffix = 'endstream';\n        /**\n         * Internal variable to hold `cloned object`.\n         * @private\n         */\n        _this.clonedObject2 = null;\n        /**\n         * @hidden\n         * @private\n         */\n        _this.bCompress = true;\n        if (typeof dictionary !== 'undefined' || typeof data !== 'undefined') {\n            _this.dataStream2 = [];\n            _this.dataStream2 = data;\n            _this.bCompress2 = false;\n        }\n        else {\n            _this.dataStream2 = [];\n            _this.bCompress2 = true;\n            //Pending\n        }\n        return _this;\n    }\n    Object.defineProperty(PdfStream.prototype, \"internalStream\", {\n        /**\n         * Gets the `internal` stream.\n         * @private\n         */\n        get: function () {\n            return this.dataStream2;\n        },\n        set: function (value) {\n            this.dataStream2 = [];\n            this.dataStream2 = value;\n            this.modify();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfStream.prototype, \"compress\", {\n        /**\n         * Gets or sets `compression` flag.\n         * @private\n         */\n        get: function () {\n            return this.bCompress;\n        },\n        set: function (value) {\n            this.bCompress = value;\n            this.modify();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfStream.prototype, \"data\", {\n        /**\n         * Gets or sets the `data`.\n         * @private\n         */\n        get: function () {\n            return this.dataStream2;\n        },\n        set: function (value) {\n            this.dataStream2 = [];\n            this.dataStream2 = value;\n            this.modify();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * `Clear` the internal stream.\n     * @private\n     */\n    PdfStream.prototype.clearStream = function () {\n        this.internalStream = [];\n        if (this.items.containsKey(this.dictionaryProperties.filter)) {\n            this.remove(this.dictionaryProperties.filter);\n        }\n        this.bCompress = true;\n        this.modify();\n    };\n    /**\n     * `Writes` the specified string.\n     * @private\n     */\n    PdfStream.prototype.write = function (text) {\n        if (text == null) {\n            throw new Error('ArgumentNullException:text');\n        }\n        if (text.length <= 0) {\n            throw new Error('ArgumentException: Can not write an empty string, text');\n        }\n        this.dataStream2.push(text);\n        this.modify();\n    };\n    /**\n     * `Writes` the specified bytes.\n     * @private\n     */\n    PdfStream.prototype.writeBytes = function (data) {\n        if (data === null) {\n            throw new Error('ArgumentNullException:data');\n        }\n        if (data.length <= 0) {\n            throw new Error('ArgumentException: Can not write an empty bytes, data');\n        }\n        var text = '';\n        for (var i = 0; i < data.length; i++) {\n            text += String.fromCharCode(data[i]);\n        }\n        this.dataStream2.push(text);\n        this.modify();\n    };\n    /**\n     * Raises event `Cmap BeginSave`.\n     * @private\n     */\n    PdfStream.prototype.onCmapBeginSave = function () {\n        this.cmapBeginSave.sender.cmapBeginSave();\n    };\n    /**\n     * Raises event `Font Program BeginSave`.\n     * @private\n     */\n    PdfStream.prototype.onFontProgramBeginSave = function () {\n        this.fontProgramBeginSave.sender.fontProgramBeginSave();\n    };\n    /**\n     * `Compresses the content` if it's required.\n     * @private\n     */\n    PdfStream.prototype.compressContent = function (data, writer) {\n        if (this.bCompress) {\n            var byteArray = [];\n            for (var i = 0; i < data.length; i++) {\n                byteArray.push(data.charCodeAt(i));\n            }\n            var dataArray = new Uint8Array(byteArray);\n            var sw = new CompressedStreamWriter();\n            // data = 'Hello World!!!';\n            sw.write(dataArray, 0, dataArray.length);\n            sw.close();\n            data = sw.getCompressedString;\n            this.addFilter(this.dictionaryProperties.flatedecode);\n        }\n        return data;\n    };\n    /**\n     * `Adds a filter` to the filter array.\n     * @private\n     */\n    PdfStream.prototype.addFilter = function (filterName) {\n        var obj = this.items.getValue(this.dictionaryProperties.filter);\n        if (obj instanceof PdfReferenceHolder) {\n            var rh = obj;\n            obj = rh.object;\n        }\n        var array = obj;\n        var name = obj;\n        if (name != null) {\n            array = new PdfArray();\n            array.insert(0, name);\n            this.items.setValue(this.dictionaryProperties.filter, array);\n        }\n        name = new PdfName(filterName);\n        if (array == null) {\n            this.items.setValue(this.dictionaryProperties.filter, name);\n        }\n        else {\n            array.insert(0, name);\n        }\n    };\n    /**\n     * `Saves` the object using the specified writer.\n     * @private\n     */\n    PdfStream.prototype.save = function (writer) {\n        if (typeof this.cmapBeginSave !== 'undefined') {\n            this.onCmapBeginSave();\n        }\n        if (typeof this.fontProgramBeginSave !== 'undefined') {\n            this.onFontProgramBeginSave();\n        }\n        var data = '';\n        for (var i = 0; i < this.data.length; i++) {\n            data = data + this.data[i];\n        }\n        if (data.length > 1 && !this.isResource) {\n            data = 'q\\r\\n' + data + 'Q\\r\\n';\n        }\n        data = this.compressContent(data, writer);\n        var length = data.length;\n        this.items.setValue(this.dictionaryProperties.length, new PdfNumber(length));\n        _super.prototype.save.call(this, writer, false);\n        writer.write(this.dicPrefix);\n        writer.write(Operators.newLine);\n        if (data.length > 0) {\n            writer.write(data);\n        }\n        writer.write(Operators.newLine);\n        writer.write(this.dicSuffix);\n        writer.write(Operators.newLine);\n    };\n    /**\n     * Converts `bytes to string`.\n     * @private\n     */\n    PdfStream.bytesToString = function (byteArray) {\n        var output = '';\n        for (var i = 0; i < byteArray.length; i++) {\n            output = output + String.fromCharCode(byteArray[i]);\n        }\n        return output;\n    };\n    return PdfStream;\n}(PdfDictionary));\nexport { PdfStream };\nvar SaveCmapEventHandler = /** @class */ (function () {\n    /**\n     * New instance for `save section collection event handler` class.\n     * @private\n     */\n    function SaveCmapEventHandler(sender) {\n        this.sender = sender;\n    }\n    return SaveCmapEventHandler;\n}());\nexport { SaveCmapEventHandler };\nvar SaveFontProgramEventHandler = /** @class */ (function () {\n    /**\n     * New instance for `save section collection event handler` class.\n     * @private\n     */\n    function SaveFontProgramEventHandler(sender) {\n        this.sender = sender;\n    }\n    return SaveFontProgramEventHandler;\n}());\nexport { SaveFontProgramEventHandler };\n","/**\n * `PdfString` class is used to perform string related primitive operations.\n * @private\n */\nexport var InternalEnum;\n(function (InternalEnum) {\n    //Internals\n    /**\n     * public Enum for `ForceEncoding`.\n     * @private\n     */\n    var ForceEncoding;\n    (function (ForceEncoding) {\n        /**\n         * Specifies the type of `None`.\n         * @private\n         */\n        ForceEncoding[ForceEncoding[\"None\"] = 0] = \"None\";\n        /**\n         * Specifies the type of `Ascii`.\n         * @private\n         */\n        ForceEncoding[ForceEncoding[\"Ascii\"] = 1] = \"Ascii\";\n        /**\n         * Specifies the type of `Unicode`.\n         * @private\n         */\n        ForceEncoding[ForceEncoding[\"Unicode\"] = 2] = \"Unicode\";\n    })(ForceEncoding = InternalEnum.ForceEncoding || (InternalEnum.ForceEncoding = {}));\n    /**\n     * public Enum for `SourceType`.\n     * @private\n     */\n    var SourceType;\n    (function (SourceType) {\n        /**\n         * Specifies the type of `StringValue`.\n         * @private\n         */\n        SourceType[SourceType[\"StringValue\"] = 0] = \"StringValue\";\n        /**\n         * Specifies the type of `ByteBuffer`.\n         * @private\n         */\n        SourceType[SourceType[\"ByteBuffer\"] = 1] = \"ByteBuffer\";\n    })(SourceType || (SourceType = {}));\n})(InternalEnum || (InternalEnum = {}));\nvar PdfString = /** @class */ (function () {\n    function PdfString(value) {\n        /**\n         * Value indicating whether the string was converted to hex.\n         * @default false\n         * @private\n         */\n        this.bHex = false;\n        /**\n         * Internal variable to store the `position`.\n         * @default -1\n         * @private\n         */\n        this.position1 = -1;\n        /**\n         * Internal variable to hold `cloned object`.\n         * @default null\n         * @private\n         */\n        this.clonedObject1 = null;\n        /**\n         * `Shows` if the data of the stream was decrypted.\n         * @default false\n         * @private\n         */\n        this.bDecrypted = false;\n        /**\n         * Shows if the data of the stream `was decrypted`.\n         * @default false\n         * @private\n         */\n        this.isParentDecrypted = false;\n        /**\n         * Gets a value indicating whether the object is `packed or not`.\n         * @default false\n         * @private\n         */\n        this.isPacked = false;\n        /**\n         * @hidden\n         * @private\n         */\n        this.isFormField = false;\n        /**\n         * @hidden\n         * @private\n         */\n        this.isColorSpace = false;\n        /**\n         * @hidden\n         * @private\n         */\n        this.isHexString = true;\n        if (typeof value === 'undefined') {\n            this.bHex = false;\n        }\n        else {\n            if (!(value.length > 0 && value[0] === '0xfeff')) {\n                this.stringValue = value;\n                this.data = [];\n                for (var i = 0; i < value.length; ++i) {\n                    this.data.push(value.charCodeAt(i));\n                }\n            }\n        }\n    }\n    Object.defineProperty(PdfString.prototype, \"hex\", {\n        //Property\n        /**\n         * Gets a value indicating whether string is in `hex`.\n         * @private\n         */\n        get: function () {\n            return this.bHex;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfString.prototype, \"value\", {\n        /**\n         * Gets or sets string `value` of the object.\n         * @private\n         */\n        get: function () {\n            return this.stringValue;\n        },\n        set: function (value) {\n            this.stringValue = value;\n            this.data = null;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfString.prototype, \"status\", {\n        /**\n         * Gets or sets the `Status` of the specified object.\n         * @private\n         */\n        get: function () {\n            return this.status1;\n        },\n        set: function (value) {\n            this.status1 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfString.prototype, \"isSaving\", {\n        /**\n         * Gets or sets a value indicating whether this document `is saving` or not.\n         * @private\n         */\n        get: function () {\n            return this.isSaving1;\n        },\n        set: function (value) {\n            this.isSaving1 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfString.prototype, \"objectCollectionIndex\", {\n        /**\n         * Gets or sets the `index` value of the specified object.\n         * @private\n         */\n        get: function () {\n            return this.index1;\n        },\n        set: function (value) {\n            this.index1 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfString.prototype, \"clonedObject\", {\n        /**\n         * Returns `cloned object`.\n         * @private\n         */\n        get: function () {\n            return this.clonedObject1;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfString.prototype, \"position\", {\n        /**\n         * Gets or sets the `position` of the object.\n         * @private\n         */\n        get: function () {\n            return this.position1;\n        },\n        set: function (value) {\n            this.position1 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfString.prototype, \"CrossTable\", {\n        /**\n         * Returns `PdfCrossTable` associated with the object.\n         * @private\n         */\n        get: function () {\n            return this.crossTable;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfString.prototype, \"converted\", {\n        /**\n         * Gets a value indicating whether to check if the value has unicode characters.\n         * @private\n         */\n        get: function () {\n            return this.bConverted;\n        },\n        /**\n         * sets a value indicating whether to check if the value has unicode characters.\n         * @private\n         */\n        set: function (value) {\n            this.bConverted = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfString.prototype, \"encode\", {\n        /**\n         * Gets value indicating whether we should convert data to Unicode.\n         */\n        get: function () {\n            return this.bForceEncoding;\n        },\n        set: function (value) {\n            this.bForceEncoding = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    //Methods\n    /**\n     * Converts `bytes to string using hex format` for representing string.\n     * @private\n     */\n    PdfString.bytesToHex = function (bytes) {\n        if (bytes == null) {\n            return '';\n        }\n        var builder = '';\n        return builder;\n    };\n    /**\n     * `Saves` the object using the specified writer.\n     * @private\n     */\n    PdfString.prototype.save = function (writer) {\n        if (writer === null) {\n            throw new Error('ArgumentNullException : writer');\n        }\n        if (this.encode !== undefined && this.encode === InternalEnum.ForceEncoding.Ascii) {\n            writer.write(this.pdfEncode());\n        }\n        else {\n            writer.write(PdfString.stringMark[0] + this.value + PdfString.stringMark[1]);\n        }\n    };\n    PdfString.prototype.pdfEncode = function () {\n        var result = '';\n        if (this.encode !== undefined && this.encode === InternalEnum.ForceEncoding.Ascii) {\n            var data = this.escapeSymbols(this.value);\n            for (var i = 0; i < data.length; i++) {\n                result += String.fromCharCode(data[i]);\n            }\n            result = PdfString.stringMark[0] + result + PdfString.stringMark[1];\n        }\n        else {\n            result = this.value;\n        }\n        return result;\n    };\n    PdfString.prototype.escapeSymbols = function (value) {\n        var data = [];\n        for (var i = 0; i < value.length; i++) {\n            var currentData = value.charCodeAt(i);\n            switch (currentData) {\n                case 40:\n                case 41:\n                    data.push(92);\n                    data.push(currentData);\n                    break;\n                case 13:\n                    data.push(92);\n                    data.push(114);\n                    break;\n                case 92:\n                    data.push(92);\n                    data.push(currentData);\n                    break;\n                default:\n                    data.push(currentData);\n                    break;\n            }\n        }\n        return data;\n    };\n    /**\n     * Creates a `copy of PdfString`.\n     * @private\n     */\n    PdfString.prototype.clone = function (crossTable) {\n        if (this.clonedObject1 !== null && this.clonedObject1.CrossTable === crossTable) {\n            return this.clonedObject1;\n        }\n        else {\n            this.clonedObject1 = null;\n        }\n        var newString = new PdfString(this.stringValue);\n        newString.bHex = this.bHex;\n        newString.crossTable = crossTable;\n        newString.isColorSpace = this.isColorSpace;\n        this.clonedObject1 = newString;\n        return newString;\n    };\n    /**\n     * Converts string to array of unicode symbols.\n     */\n    PdfString.toUnicodeArray = function (value, bAddPrefix) {\n        if (value == null) {\n            throw new Error('Argument Null Exception : value');\n        }\n        var startIndex = 0;\n        var output = [];\n        for (var i = 0; i < value.length; i++) {\n            var code = value.charCodeAt(i);\n            output.push(code / 256 >>> 0);\n            output.push(code & 0xff);\n        }\n        return output;\n    };\n    /**\n     * Converts byte data to string.\n     */\n    PdfString.byteToString = function (data) {\n        if (data == null) {\n            throw new Error('Argument Null Exception : stream');\n        }\n        var result = '';\n        for (var i = 0; i < data.length; ++i) {\n            result += String.fromCharCode(data[i]);\n        }\n        return result;\n    };\n    //constants = ;\n    /**\n     * `General markers` for string.\n     * @private\n     */\n    PdfString.stringMark = '()';\n    /**\n     * `Hex markers` for string.\n     * @private\n     */\n    PdfString.hexStringMark = '<>';\n    /**\n     * Format of password data.\n     * @private\n     */\n    PdfString.hexFormatPattern = '{0:X2}';\n    return PdfString;\n}());\nexport { PdfString };\n","import { DictionaryProperties } from './../input-output/pdf-dictionary-properties';\nimport { PdfStream } from './../primitives/pdf-stream';\nimport { PdfArray } from './../primitives/pdf-array';\nimport { PdfNumber } from './../primitives/pdf-number';\nimport { PdfName } from './../primitives/pdf-name';\nimport { PdfDictionary } from './../primitives/pdf-dictionary';\nimport { PdfString } from './../primitives/pdf-string';\n/**\n * `PdfReference` class is used to perform reference related primitive operations.\n * @private\n */\nvar PdfReference = /** @class */ (function () {\n    function PdfReference(objNumber, genNumber) {\n        /**\n         * Holds the `index` number of the object.\n         * @default -1\n         * @private\n         */\n        this.index3 = -1;\n        /**\n         * Internal variable to store the `position`.\n         * @default -1\n         * @private\n         */\n        this.position3 = -1;\n        /**\n         * Holds the `object number`.\n         * @default 0\n         * @private\n         */\n        this.objNumber = 0;\n        /**\n         * Holds the `generation number` of the object.\n         * @default 0\n         * @private\n         */\n        this.genNumber = 0;\n        if (typeof objNumber === 'number' && typeof genNumber === 'number') {\n            this.objNumber = objNumber;\n            this.genNumber = genNumber;\n            // } else if (typeof objNum === 'string' && typeof genNum === 'string') {\n        }\n        else {\n            this.objNumber = Number(objNumber);\n            this.genNumber = Number(genNumber);\n        }\n    }\n    Object.defineProperty(PdfReference.prototype, \"status\", {\n        //Property\n        /**\n         * Gets or sets the `Status` of the specified object.\n         * @private\n         */\n        get: function () {\n            return this.status3;\n        },\n        set: function (value) {\n            this.status3 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfReference.prototype, \"isSaving\", {\n        /**\n         * Gets or sets a value indicating whether this document `is saving` or not.\n         * @private\n         */\n        get: function () {\n            return this.isSaving3;\n        },\n        set: function (value) {\n            this.isSaving3 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfReference.prototype, \"objectCollectionIndex\", {\n        /**\n         * Gets or sets the `index` value of the specified object.\n         * @private\n         */\n        get: function () {\n            return this.index3;\n        },\n        set: function (value) {\n            this.index3 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfReference.prototype, \"position\", {\n        /**\n         * Gets or sets the `position` of the object.\n         * @private\n         */\n        get: function () {\n            return this.position3;\n        },\n        set: function (value) {\n            this.position3 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfReference.prototype, \"clonedObject\", {\n        /**\n         * Returns `cloned object`.\n         * @private\n         */\n        get: function () {\n            var returnObject3 = null;\n            return returnObject3;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    //IPdfPrimitives methods\n    /**\n     * `Saves` the object.\n     * @private\n     */\n    PdfReference.prototype.save = function (writer) {\n        writer.write(this.toString());\n    };\n    /**\n     * Returns a `string` representing the object.\n     * @private\n     */\n    PdfReference.prototype.toString = function () {\n        return this.objNumber.toString() + ' ' + this.genNumber.toString() + ' R';\n    };\n    /**\n     * Creates a `deep copy` of the IPdfPrimitive object.\n     * @private\n     */\n    PdfReference.prototype.clone = function (crossTable) {\n        return null;\n    };\n    return PdfReference;\n}());\nexport { PdfReference };\n/**\n * `PdfReferenceHolder` class is used to perform reference holder related primitive operations.\n * @private\n */\nvar PdfReferenceHolder = /** @class */ (function () {\n    function PdfReferenceHolder(obj1, obj2) {\n        /**\n         * Holds the `index` number of the object.\n         * @default -1\n         * @private\n         */\n        this.index4 = -1;\n        /**\n         * Internal variable to store the `position`.\n         * @default -1\n         * @private\n         */\n        this.position4 = -1;\n        /**\n         * The `index` of the object within the object collection.\n         * @default -1\n         * @private\n         */\n        this.objectIndex = -1;\n        /**\n         * @hidden\n         * @private\n         */\n        this.dictionaryProperties = new DictionaryProperties();\n        // if (typeof obj2 === 'undefined') {\n        this.initialize(obj1);\n        // }\n        // else {\n        //     if (obj2 === null) {\n        //         throw new Error('ArgumentNullException : crossTable');\n        //     }\n        //     if (obj1 === null) {\n        //         throw new Error('ArgumentNullException : reference');\n        //     }\n        //     this.crossTable = obj2;\n        //     let tempObj1 : PdfReference = <PdfReference>obj1;\n        //     this.reference = tempObj1;\n        // }\n    }\n    Object.defineProperty(PdfReferenceHolder.prototype, \"status\", {\n        //Properties\n        /**\n         * Gets or sets the `Status` of the specified object.\n         * @private\n         */\n        get: function () {\n            return this.status4;\n        },\n        set: function (value) {\n            this.status4 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfReferenceHolder.prototype, \"isSaving\", {\n        /**\n         * Gets or sets a value indicating whether this document `is saving` or not.\n         * @private\n         */\n        get: function () {\n            return this.isSaving4;\n        },\n        set: function (value) {\n            this.isSaving4 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfReferenceHolder.prototype, \"objectCollectionIndex\", {\n        /**\n         * Gets or sets the `index` value of the specified object.\n         * @private\n         */\n        get: function () {\n            return this.index4;\n        },\n        set: function (value) {\n            this.index4 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfReferenceHolder.prototype, \"position\", {\n        /**\n         * Gets or sets the `position` of the object.\n         * @private\n         */\n        get: function () {\n            return this.position4;\n        },\n        set: function (value) {\n            this.position4 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfReferenceHolder.prototype, \"clonedObject\", {\n        /**\n         * Returns `cloned object`.\n         * @private\n         */\n        get: function () {\n            return null;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfReferenceHolder.prototype, \"object\", {\n        /**\n         * Gets the `object` the reference is of.\n         * @private\n         */\n        get: function () {\n            // if ((this.reference != null) || (this.object == null)) {\n            //     this.object = this.GetterObject();\n            // }\n            return this.primitiveObject;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfReferenceHolder.prototype, \"reference\", {\n        /**\n         * Gets the `reference`.\n         * @private\n         */\n        get: function () {\n            return this.pdfReference;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfReferenceHolder.prototype, \"index\", {\n        /**\n         * Gets the `index` of the object.\n         * @private\n         */\n        get: function () {\n            // let items : PdfMainObjectCollection = this.crossTable.PdfObjects;\n            // this.objectIndex = items.GetObjectIndex(this.reference);\n            // if (this.objectIndex < 0) {\n            //     let obj : IPdfPrimitive = this.crossTable.GetObject(this.reference);\n            //     this.objectIndex = items.Count - 1;\n            // }\n            return this.objectIndex;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfReferenceHolder.prototype, \"element\", {\n        /**\n         * Gets the `element`.\n         * @private\n         */\n        get: function () {\n            return this.primitiveObject;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfReferenceHolder.prototype.initialize = function (obj1) {\n        if (obj1 instanceof PdfArray\n            || obj1 instanceof PdfDictionary\n            || obj1 instanceof PdfName\n            || obj1 instanceof PdfNumber\n            || obj1 instanceof PdfStream\n            || obj1 instanceof PdfReference\n            || obj1 instanceof PdfString) {\n            this.primitiveObject = obj1;\n        }\n        else {\n            var tempObj = obj1;\n            this.initialize(tempObj.element);\n        }\n    };\n    /**\n     * `Writes` a reference into a PDF document.\n     * @private\n     */\n    PdfReferenceHolder.prototype.save = function (writer) {\n        // if (writer == null) {\n        //     throw new Error('ArgumentNullException : writer');\n        // }\n        var position = writer.position;\n        var cTable = writer.document.crossTable;\n        // if (cTable.Document instanceof PdfDocument) {\n        this.object.isSaving = true;\n        // }\n        var reference = null;\n        // if (writer.Document.FileStructure.IncrementalUpdate === true && writer.Document.isStreamCopied === true) {\n        //     if (this.reference === null) {\n        //         reference = cTable.GetReference(this.Object);\n        //     } else {\n        //         reference = this.reference;\n        //     }\n        // } else {\n        //     reference = cTable.GetReference(this.Object);\n        // }\n        // if (!(writer.Document.FileStructure.IncrementalUpdate === true && writer.Document.isStreamCopied === true)) {\n        reference = cTable.getReference(this.object);\n        // }\n        // if (writer.Position !== position) {\n        //     writer.Position = position;\n        // }\n        reference.save(writer);\n    };\n    /**\n     * Creates a `copy of PdfReferenceHolder`.\n     * @private\n     */\n    PdfReferenceHolder.prototype.clone = function (crossTable) {\n        var refHolder = null;\n        var temp = null;\n        var refNum = '';\n        var reference = null;\n        // Restricts addition of same object multiple time.\n        /* if (this.Reference != null && this.crossTable != null && this.crossTable.PageCorrespondance.containsKey(this.Reference)) {\n            refHolder = new PdfReferenceHolder(this.crossTable.PageCorrespondance.getValue(this.Reference) as PdfReference, crossTable);\n            return refHolder;\n        }\n        if (Object instanceof PdfNumber) {\n            return new PdfNumber((Object as PdfNumber).IntValue);\n        }\n        */\n        // if (Object instanceof PdfDictionary) {\n        //     // Meaning the referenced page is not available for import.\n        //     let type : PdfName = new PdfName(this.dictionaryProperties.type);\n        //     let dict : PdfDictionary = Object as PdfDictionary;\n        //     if (dict.ContainsKey(type)) {\n        //         let pageName : PdfName = dict.Items.getValue(type.Value) as PdfName;\n        //         if (pageName !== null) {\n        //             if (pageName.Value === 'Page') {\n        //                 return new PdfNull();\n        //             }\n        //         }\n        //     }\n        // }\n        /* if (Object instanceof PdfName) {\n            return new PdfName ((Object as PdfName ).Value);\n        }\n        */\n        // Resolves circular references.\n        // if (crossTable.PrevReference !== null && (crossTable.PrevReference.indexOf(this.Reference) !== -1)) {\n        //     let obj : IPdfPrimitive = this.crossTable.GetObject(this.Reference).ClonedObject;\n        //     if (obj !== null) {\n        //         reference = crossTable.GetReference(obj);\n        //         return new PdfReferenceHolder(reference, crossTable);\n        //     } else {\n        //         return new PdfNull();\n        //     }\n        // }\n        /*if (this.Reference !== null) {\n            crossTable.PrevReference.push(this.Reference);\n        }\n        reference = crossTable.GetReference(temp);\n        refHolder = new PdfReferenceHolder(reference, crossTable);\n        return refHolder;\n        */\n        return null;\n    };\n    return PdfReferenceHolder;\n}());\nexport { PdfReferenceHolder };\n","import { PdfDictionary } from './../primitives/pdf-dictionary';\nimport { PdfReferenceHolder } from './../primitives/pdf-reference';\nimport { PdfName } from './../primitives/pdf-name';\nimport { DictionaryProperties } from './../input-output/pdf-dictionary-properties';\n/**\n * `PdfAction` class represents base class for all action types.\n * @private\n */\nvar PdfAction = /** @class */ (function () {\n    // Constructors\n    /**\n     * Initialize instance for `Action` class.\n     * @private\n     */\n    function PdfAction() {\n        /**\n         * Specifies the Next `action` to perform.\n         * @private\n         */\n        this.action = null;\n        /**\n         * Specifies the Internal variable to store `dictionary properties`.\n         * @private\n         */\n        this.dictionaryProperties = new DictionaryProperties();\n        // super(); -> Object()\n        this.initialize();\n    }\n    Object.defineProperty(PdfAction.prototype, \"next\", {\n        // Properties\n        /**\n         * Gets and Sets the `Next` action to perform.\n         * @private\n         */\n        get: function () {\n            return this.action;\n        },\n        set: function (value) {\n            // if (this.action !== value) {\n            this.action = value;\n            this.dictionary.items.setValue(this.dictionaryProperties.next, new PdfReferenceHolder(this.action));\n            // }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAction.prototype, \"dictionary\", {\n        /**\n         * Gets and Sets the instance of PdfDictionary class for `Dictionary`.\n         * @private\n         */\n        get: function () {\n            if (typeof this.pdfDictionary === 'undefined') {\n                this.pdfDictionary = new PdfDictionary();\n            }\n            return this.pdfDictionary;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    // Implementation\n    /**\n     * `Initialize` the action type.\n     * @private\n     */\n    PdfAction.prototype.initialize = function () {\n        this.dictionary.items.setValue(this.dictionaryProperties.type, new PdfName(this.dictionaryProperties.action));\n    };\n    Object.defineProperty(PdfAction.prototype, \"element\", {\n        // IPdfWrapper Members\n        /**\n         * Gets the `Element` as IPdfPrimitive class.\n         * @private\n         */\n        get: function () {\n            return this.dictionary;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfAction;\n}());\nexport { PdfAction };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { PdfAction } from './action';\nimport { PdfString } from './../primitives/pdf-string';\nimport { PdfName } from './../primitives/pdf-name';\n/**\n * `PdfUriAction` class for initialize the uri related internals.\n * @private\n */\nvar PdfUriAction = /** @class */ (function (_super) {\n    __extends(PdfUriAction, _super);\n    function PdfUriAction(uri) {\n        var _this = _super.call(this) || this;\n        // Fields\n        /**\n         * Specifies the `uri` string.\n         * @default ''.\n         * @private\n         */\n        _this.uniformResourceIdentifier = '';\n        return _this;\n    }\n    Object.defineProperty(PdfUriAction.prototype, \"uri\", {\n        // Properties\n        /**\n         * Gets and Sets the value of `Uri`.\n         * @private\n         */\n        get: function () {\n            return this.uniformResourceIdentifier;\n        },\n        set: function (value) {\n            this.uniformResourceIdentifier = value;\n            this.dictionary.items.setValue(this.dictionaryProperties.uri, new PdfString(this.uniformResourceIdentifier));\n        },\n        enumerable: true,\n        configurable: true\n    });\n    // Implementation\n    /**\n     * `Initialize` the internals.\n     * @private\n     */\n    PdfUriAction.prototype.initialize = function () {\n        _super.prototype.initialize.call(this);\n        this.dictionary.items.setValue(this.dictionaryProperties.s, new PdfName(this.dictionaryProperties.uri));\n    };\n    return PdfUriAction;\n}(PdfAction));\nexport { PdfUriAction };\n","/**\n * public Enum for `PdfHorizontalAlignment`.\n * @private\n */\nexport var PdfHorizontalAlignment;\n(function (PdfHorizontalAlignment) {\n    /**\n     * Specifies the type of `Left`.\n     * @private\n     */\n    PdfHorizontalAlignment[PdfHorizontalAlignment[\"Left\"] = 0] = \"Left\";\n    /**\n     * Specifies the type of `Center`.\n     * @private\n     */\n    PdfHorizontalAlignment[PdfHorizontalAlignment[\"Center\"] = 1] = \"Center\";\n    /**\n     * Specifies the type of `Right`.\n     * @private\n     */\n    PdfHorizontalAlignment[PdfHorizontalAlignment[\"Right\"] = 2] = \"Right\";\n})(PdfHorizontalAlignment || (PdfHorizontalAlignment = {}));\n/**\n * public Enum for `PdfVerticalAlignment`.\n * @private\n */\nexport var PdfVerticalAlignment;\n(function (PdfVerticalAlignment) {\n    /**\n     * Specifies the type of `Top`.\n     * @private\n     */\n    PdfVerticalAlignment[PdfVerticalAlignment[\"Top\"] = 0] = \"Top\";\n    /**\n     * Specifies the type of `Middle`.\n     * @private\n     */\n    PdfVerticalAlignment[PdfVerticalAlignment[\"Middle\"] = 1] = \"Middle\";\n    /**\n     * Specifies the type of `Bottom`.\n     * @private\n     */\n    PdfVerticalAlignment[PdfVerticalAlignment[\"Bottom\"] = 2] = \"Bottom\";\n})(PdfVerticalAlignment || (PdfVerticalAlignment = {}));\n/**\n * public Enum for `public`.\n * @private\n */\nexport var PdfTextAlignment;\n(function (PdfTextAlignment) {\n    /**\n     * Specifies the type of `Left`.\n     * @private\n     */\n    PdfTextAlignment[PdfTextAlignment[\"Left\"] = 0] = \"Left\";\n    /**\n     * Specifies the type of `Center`.\n     * @private\n     */\n    PdfTextAlignment[PdfTextAlignment[\"Center\"] = 1] = \"Center\";\n    /**\n     * Specifies the type of `Right`.\n     * @private\n     */\n    PdfTextAlignment[PdfTextAlignment[\"Right\"] = 2] = \"Right\";\n    /**\n     * Specifies the type of `Justify`.\n     * @private\n     */\n    PdfTextAlignment[PdfTextAlignment[\"Justify\"] = 3] = \"Justify\";\n})(PdfTextAlignment || (PdfTextAlignment = {}));\n/**\n * public Enum for `TextRenderingMode`.\n * @private\n */\nexport var TextRenderingMode;\n(function (TextRenderingMode) {\n    /**\n     * Specifies the type of `Fill`.\n     * @private\n     */\n    TextRenderingMode[TextRenderingMode[\"Fill\"] = 0] = \"Fill\";\n    /**\n     * Specifies the type of `Stroke`.\n     * @private\n     */\n    TextRenderingMode[TextRenderingMode[\"Stroke\"] = 1] = \"Stroke\";\n    /**\n     * Specifies the type of `FillStroke`.\n     * @private\n     */\n    TextRenderingMode[TextRenderingMode[\"FillStroke\"] = 2] = \"FillStroke\";\n    /**\n     * Specifies the type of `None`.\n     * @private\n     */\n    TextRenderingMode[TextRenderingMode[\"None\"] = 3] = \"None\";\n    /**\n     * Specifies the type of `ClipFlag`.\n     * @private\n     */\n    TextRenderingMode[TextRenderingMode[\"ClipFlag\"] = 4] = \"ClipFlag\";\n    /**\n     * Specifies the type of `ClipFill`.\n     * @private\n     */\n    TextRenderingMode[TextRenderingMode[\"ClipFill\"] = 4] = \"ClipFill\";\n    /**\n     * Specifies the type of `ClipStroke`.\n     * @private\n     */\n    TextRenderingMode[TextRenderingMode[\"ClipStroke\"] = 5] = \"ClipStroke\";\n    /**\n     * Specifies the type of `ClipFillStroke`.\n     * @private\n     */\n    TextRenderingMode[TextRenderingMode[\"ClipFillStroke\"] = 6] = \"ClipFillStroke\";\n    /**\n     * Specifies the type of `Clip`.\n     * @private\n     */\n    TextRenderingMode[TextRenderingMode[\"Clip\"] = 7] = \"Clip\";\n})(TextRenderingMode || (TextRenderingMode = {}));\n/**\n * public Enum for `PdfLineJoin`.\n * @private\n */\nexport var PdfLineJoin;\n(function (PdfLineJoin) {\n    /**\n     * Specifies the type of `Miter`.\n     * @private\n     */\n    PdfLineJoin[PdfLineJoin[\"Miter\"] = 0] = \"Miter\";\n    /**\n     * Specifies the type of `Round`.\n     * @private\n     */\n    PdfLineJoin[PdfLineJoin[\"Round\"] = 1] = \"Round\";\n    /**\n     * Specifies the type of `Bevel`.\n     * @private\n     */\n    PdfLineJoin[PdfLineJoin[\"Bevel\"] = 2] = \"Bevel\";\n})(PdfLineJoin || (PdfLineJoin = {}));\n/**\n * public Enum for `PdfLineCap`.\n * @private\n */\nexport var PdfLineCap;\n(function (PdfLineCap) {\n    /**\n     * Specifies the type of `Flat`.\n     * @private\n     */\n    PdfLineCap[PdfLineCap[\"Flat\"] = 0] = \"Flat\";\n    /**\n     * Specifies the type of `Round`.\n     * @private\n     */\n    PdfLineCap[PdfLineCap[\"Round\"] = 1] = \"Round\";\n    /**\n     * Specifies the type of `Square`.\n     * @private\n     */\n    PdfLineCap[PdfLineCap[\"Square\"] = 2] = \"Square\";\n})(PdfLineCap || (PdfLineCap = {}));\n/**\n * public Enum for `PdfDashStyle`.\n * @private\n */\nexport var PdfDashStyle;\n(function (PdfDashStyle) {\n    /**\n     * Specifies the type of `Solid`.\n     * @private\n     */\n    PdfDashStyle[PdfDashStyle[\"Solid\"] = 0] = \"Solid\";\n    /**\n     * Specifies the type of `Dash`.\n     * @private\n     */\n    PdfDashStyle[PdfDashStyle[\"Dash\"] = 1] = \"Dash\";\n    /**\n     * Specifies the type of `Dot`.\n     * @private\n     */\n    PdfDashStyle[PdfDashStyle[\"Dot\"] = 2] = \"Dot\";\n    /**\n     * Specifies the type of `DashDot`.\n     * @private\n     */\n    PdfDashStyle[PdfDashStyle[\"DashDot\"] = 3] = \"DashDot\";\n    /**\n     * Specifies the type of `DashDotDot`.\n     * @private\n     */\n    PdfDashStyle[PdfDashStyle[\"DashDotDot\"] = 4] = \"DashDotDot\";\n    /**\n     * Specifies the type of `Custom`.\n     * @private\n     */\n    PdfDashStyle[PdfDashStyle[\"Custom\"] = 5] = \"Custom\";\n})(PdfDashStyle || (PdfDashStyle = {}));\n/**\n * public Enum for `PdfFillMode`.\n * @private\n */\nexport var PdfFillMode;\n(function (PdfFillMode) {\n    /**\n     * Specifies the type of `Winding`.\n     * @private\n     */\n    PdfFillMode[PdfFillMode[\"Winding\"] = 0] = \"Winding\";\n    /**\n     * Specifies the type of `Alternate`.\n     * @private\n     */\n    PdfFillMode[PdfFillMode[\"Alternate\"] = 1] = \"Alternate\";\n})(PdfFillMode || (PdfFillMode = {}));\n/**\n * public Enum for `PdfColorSpace`.\n * @private\n */\nexport var PdfColorSpace;\n(function (PdfColorSpace) {\n    /**\n     * Specifies the type of `Rgb`.\n     * @private\n     */\n    PdfColorSpace[PdfColorSpace[\"Rgb\"] = 0] = \"Rgb\";\n    /**\n     * Specifies the type of `Cmyk`.\n     * @private\n     */\n    PdfColorSpace[PdfColorSpace[\"Cmyk\"] = 1] = \"Cmyk\";\n    /**\n     * Specifies the type of `GrayScale`.\n     * @private\n     */\n    PdfColorSpace[PdfColorSpace[\"GrayScale\"] = 2] = \"GrayScale\";\n    /**\n     * Specifies the type of `Indexed`.\n     * @private\n     */\n    PdfColorSpace[PdfColorSpace[\"Indexed\"] = 3] = \"Indexed\";\n})(PdfColorSpace || (PdfColorSpace = {}));\n/**\n * public Enum for `PdfBlendMode`.\n * @private\n */\nexport var PdfBlendMode;\n(function (PdfBlendMode) {\n    /**\n     * Specifies the type of `Normal`.\n     * @private\n     */\n    PdfBlendMode[PdfBlendMode[\"Normal\"] = 0] = \"Normal\";\n    /**\n     * Specifies the type of `Multiply`.\n     * @private\n     */\n    PdfBlendMode[PdfBlendMode[\"Multiply\"] = 1] = \"Multiply\";\n    /**\n     * Specifies the type of `Screen`.\n     * @private\n     */\n    PdfBlendMode[PdfBlendMode[\"Screen\"] = 2] = \"Screen\";\n    /**\n     * Specifies the type of `Overlay`.\n     * @private\n     */\n    PdfBlendMode[PdfBlendMode[\"Overlay\"] = 3] = \"Overlay\";\n    /**\n     * Specifies the type of `Darken`.\n     * @private\n     */\n    PdfBlendMode[PdfBlendMode[\"Darken\"] = 4] = \"Darken\";\n    /**\n     * Specifies the type of `Lighten`.\n     * @private\n     */\n    PdfBlendMode[PdfBlendMode[\"Lighten\"] = 5] = \"Lighten\";\n    /**\n     * Specifies the type of `ColorDodge`.\n     * @private\n     */\n    PdfBlendMode[PdfBlendMode[\"ColorDodge\"] = 6] = \"ColorDodge\";\n    /**\n     * Specifies the type of `ColorBurn`.\n     * @private\n     */\n    PdfBlendMode[PdfBlendMode[\"ColorBurn\"] = 7] = \"ColorBurn\";\n    /**\n     * Specifies the type of `HardLight`.\n     * @private\n     */\n    PdfBlendMode[PdfBlendMode[\"HardLight\"] = 8] = \"HardLight\";\n    /**\n     * Specifies the type of `SoftLight`.\n     * @private\n     */\n    PdfBlendMode[PdfBlendMode[\"SoftLight\"] = 9] = \"SoftLight\";\n    /**\n     * Specifies the type of `Difference`.\n     * @private\n     */\n    PdfBlendMode[PdfBlendMode[\"Difference\"] = 10] = \"Difference\";\n    /**\n     * Specifies the type of `Exclusion`.\n     * @private\n     */\n    PdfBlendMode[PdfBlendMode[\"Exclusion\"] = 11] = \"Exclusion\";\n    /**\n     * Specifies the type of `Hue`.\n     * @private\n     */\n    PdfBlendMode[PdfBlendMode[\"Hue\"] = 12] = \"Hue\";\n    /**\n     * Specifies the type of `Saturation`.\n     * @private\n     */\n    PdfBlendMode[PdfBlendMode[\"Saturation\"] = 13] = \"Saturation\";\n    /**\n     * Specifies the type of `Color`.\n     * @private\n     */\n    PdfBlendMode[PdfBlendMode[\"Color\"] = 14] = \"Color\";\n    /**\n     * Specifies the type of `Luminosity`.\n     * @private\n     */\n    PdfBlendMode[PdfBlendMode[\"Luminosity\"] = 15] = \"Luminosity\";\n})(PdfBlendMode || (PdfBlendMode = {}));\n/**\n * public Enum for `PdfGraphicsUnit`.\n * @private\n */\nexport var PdfGraphicsUnit;\n(function (PdfGraphicsUnit) {\n    /**\n     * Specifies the type of `Centimeter`.\n     * @private\n     */\n    PdfGraphicsUnit[PdfGraphicsUnit[\"Centimeter\"] = 0] = \"Centimeter\";\n    /**\n     * Specifies the type of `Pica`.\n     * @private\n     */\n    PdfGraphicsUnit[PdfGraphicsUnit[\"Pica\"] = 1] = \"Pica\";\n    /**\n     * Specifies the type of `Pixel`.\n     * @private\n     */\n    PdfGraphicsUnit[PdfGraphicsUnit[\"Pixel\"] = 2] = \"Pixel\";\n    /**\n     * Specifies the type of `Point`.\n     * @private\n     */\n    PdfGraphicsUnit[PdfGraphicsUnit[\"Point\"] = 3] = \"Point\";\n    /**\n     * Specifies the type of `Inch`.\n     * @private\n     */\n    PdfGraphicsUnit[PdfGraphicsUnit[\"Inch\"] = 4] = \"Inch\";\n    /**\n     * Specifies the type of `Document`.\n     * @private\n     */\n    PdfGraphicsUnit[PdfGraphicsUnit[\"Document\"] = 5] = \"Document\";\n    /**\n     * Specifies the type of `Millimeter`.\n     * @private\n     */\n    PdfGraphicsUnit[PdfGraphicsUnit[\"Millimeter\"] = 6] = \"Millimeter\";\n})(PdfGraphicsUnit || (PdfGraphicsUnit = {}));\n/**\n * public Enum for `PdfGridImagePosition`.\n * @private\n */\nexport var PdfGridImagePosition;\n(function (PdfGridImagePosition) {\n    /**\n     * Specifies the type of `Fit`.\n     * @private\n     */\n    PdfGridImagePosition[PdfGridImagePosition[\"Fit\"] = 0] = \"Fit\";\n    /**\n     * Specifies the type of `Center`.\n     * @private\n     */\n    PdfGridImagePosition[PdfGridImagePosition[\"Center\"] = 1] = \"Center\";\n    /**\n     * Specifies the type of `Stretch`.\n     * @private\n     */\n    PdfGridImagePosition[PdfGridImagePosition[\"Stretch\"] = 2] = \"Stretch\";\n    /**\n     * Specifies the type of `Tile`.\n     * @private\n     */\n    PdfGridImagePosition[PdfGridImagePosition[\"Tile\"] = 3] = \"Tile\";\n})(PdfGridImagePosition || (PdfGridImagePosition = {}));\n/**\n * public Enum for `the text rendering direction`.\n * @private\n */\nexport var PdfTextDirection;\n(function (PdfTextDirection) {\n    /**\n     * Specifies the type of `None`.\n     * @private\n     */\n    PdfTextDirection[PdfTextDirection[\"None\"] = 0] = \"None\";\n    /**\n     * Specifies the type of `LeftToRight`.\n     * @private\n     */\n    PdfTextDirection[PdfTextDirection[\"LeftToRight\"] = 1] = \"LeftToRight\";\n    /**\n     * Specifies the type of `RightToLeft`.\n     * @private\n     */\n    PdfTextDirection[PdfTextDirection[\"RightToLeft\"] = 2] = \"RightToLeft\";\n})(PdfTextDirection || (PdfTextDirection = {}));\n","import { PdfColorSpace } from './enum';\nimport { Operators } from './../input-output/pdf-operators';\nimport { Dictionary } from './../collections/dictionary';\nimport { PdfNumber } from './../primitives/pdf-number';\nimport { PdfArray } from './../primitives/pdf-array';\n/**\n * Implements structures and routines working with `color`.\n * ```typescript\n * // create a new PDF document\n * let document : PdfDocument = new PdfDocument();\n * // add a new page to the document\n * let page1 : PdfPage = document.pages.add();\n * // set the font\n * let font : PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 20);\n * //\n * // set color\n * let brushColor : PdfColor = new PdfColor(0, 0, 0);\n * //\n * // create black brush\n * let blackBrush : PdfSolidBrush = new PdfSolidBrush(brushColor);\n * // draw the text\n * page1.graphics.drawString('Hello World', font, blackBrush, new PointF(0, 0));\n * // save the document\n * document.save('output.pdf');\n * // destroy the document\n * document.destroy();\n * ```\n * @default black color\n */\nvar PdfColor = /** @class */ (function () {\n    function PdfColor(color1, color2, color3, color4) {\n        if (typeof color1 === 'undefined') {\n            if (typeof color2 !== 'undefined' && typeof color3 !== 'undefined' && typeof color4 !== 'undefined') {\n                this.assignRGB(color2, color3, color4);\n            }\n            else {\n                this.filled = false;\n            }\n        }\n        else if (color1 instanceof PdfColor) {\n            this.redColor = color1.r;\n            this.greenColor = color1.g;\n            this.blueColor = color1.b;\n            this.grayColor = color1.gray;\n            this.alpha = color1.alpha;\n            this.filled = (this.alpha !== 0);\n            /* tslint:disable-next-line:max-line-length */\n        }\n        else if (typeof color1 === 'number' && typeof color2 === 'undefined' && typeof color3 === 'undefined' && typeof color4 === 'undefined') {\n            if (color1 < 0) {\n                color1 = 0;\n            }\n            if (color1 > 1) {\n                color1 = 1;\n            }\n            this.redColor = color1 * PdfColor.maxColourChannelValue;\n            this.greenColor = color1 * PdfColor.maxColourChannelValue;\n            this.blueColor = color1 * PdfColor.maxColourChannelValue;\n            this.cyanColor = color1;\n            this.magentaColor = color1;\n            this.yellowColor = color1;\n            this.blackColor = color1;\n            this.grayColor = color1;\n            this.alpha = PdfColor.maxColourChannelValue;\n            this.filled = true;\n        }\n        else if (typeof color4 === 'undefined') {\n            this.assignRGB(color1, color2, color3);\n        }\n        else {\n            this.assignRGB(color2, color3, color4, color1);\n        }\n    }\n    /**\n     * `Assign` red, green, blue colors with alpha value..\n     * @private\n     */\n    PdfColor.prototype.assignRGB = function (r, g, b, a) {\n        if (typeof r === 'undefined' || typeof g === 'undefined' || typeof b === 'undefined') {\n            this.filled = false;\n        }\n        else {\n            this.cyanColor = 0;\n            this.magentaColor = 0;\n            this.yellowColor = 0;\n            this.blackColor = 0;\n            this.grayColor = 0;\n            this.redColor = r;\n            this.greenColor = g;\n            this.blueColor = b;\n            if (typeof a === 'undefined') {\n                this.alpha = PdfColor.maxColourChannelValue;\n            }\n            else {\n                this.alpha = a;\n            }\n            this.filled = true;\n            this.assignCMYK(r, g, b);\n        }\n    };\n    /**\n     * `Calculate and assign` cyan, megenta, yellow colors from rgb values..\n     * @private\n     */\n    PdfColor.prototype.assignCMYK = function (r, g, b) {\n        var red = r / PdfColor.maxColourChannelValue;\n        var green = g / PdfColor.maxColourChannelValue;\n        var blue = b / PdfColor.maxColourChannelValue;\n        var black = PdfNumber.min(1 - red, 1 - green, 1 - blue);\n        var cyan = (black === 1.0) ? 0 : (1 - red - black) / (1 - black);\n        var magenta = (black === 1.0) ? 0 : (1 - green - black) / (1 - black);\n        var yellow = (black === 1.0) ? 0 : (1 - blue - black) / (1 - black);\n        this.blackColor = black;\n        this.cyanColor = cyan;\n        this.magentaColor = magenta;\n        this.yellowColor = yellow;\n    };\n    Object.defineProperty(PdfColor.prototype, \"r\", {\n        //Properties\n        // public static get Empty():PdfColor\n        // {\n        //     return this.s_emptyColor\n        // }\n        /**\n         * Gets or sets `Red` channel value.\n         * @private\n         */\n        get: function () {\n            return this.redColor;\n        },\n        set: function (value) {\n            this.redColor = value;\n            this.assignCMYK(this.redColor, this.greenColor, this.blueColor);\n            this.filled = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfColor.prototype, \"red\", {\n        /**\n         * Gets the `Red` color\n         * @private\n         */\n        get: function () {\n            return (this.r / PdfColor.maxColourChannelValue);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfColor.prototype, \"b\", {\n        /**\n         * Gets or sets `Blue` channel value.\n         * @private\n         */\n        get: function () {\n            return this.blueColor;\n        },\n        set: function (value) {\n            this.blueColor = value;\n            this.assignCMYK(this.redColor, this.greenColor, this.blueColor);\n            this.filled = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfColor.prototype, \"blue\", {\n        /**\n         * Gets the `blue` color.\n         * @private\n         */\n        get: function () {\n            return (this.b / PdfColor.maxColourChannelValue);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfColor.prototype, \"c\", {\n        /**\n         * Gets or sets `Cyan` channel value.\n         * @private\n         */\n        get: function () {\n            return this.cyanColor;\n        },\n        set: function (value) {\n            if (value < 0) {\n                this.cyanColor = 0;\n            }\n            else if (value > 1) {\n                this.cyanColor = 1;\n            }\n            else {\n                this.cyanColor = value;\n            }\n            this.assignRGB(this.cyanColor, this.magentaColor, this.yellowColor, this.blackColor);\n            this.filled = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfColor.prototype, \"k\", {\n        /**\n         * Gets or sets `Black` channel value.\n         * @private\n         */\n        get: function () {\n            return this.blackColor;\n        },\n        set: function (value) {\n            if ((value < 0)) {\n                this.blackColor = 0;\n            }\n            else if ((value > 1)) {\n                this.blackColor = 1;\n            }\n            else {\n                this.blackColor = value;\n            }\n            this.assignRGB(this.cyanColor, this.magentaColor, this.yellowColor, this.blackColor);\n            this.filled = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfColor.prototype, \"m\", {\n        /**\n         * Gets or sets `Magenta` channel value.\n         * @private\n         */\n        get: function () {\n            return this.magentaColor;\n        },\n        set: function (value) {\n            if ((value < 0)) {\n                this.magentaColor = 0;\n            }\n            else if ((value > 1)) {\n                this.magentaColor = 1;\n            }\n            else {\n                this.magentaColor = value;\n            }\n            this.assignRGB(this.cyanColor, this.magentaColor, this.yellowColor, this.blackColor);\n            this.filled = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfColor.prototype, \"y\", {\n        /**\n         * Gets or sets `Yellow` channel value.\n         * @private\n         */\n        get: function () {\n            return this.yellowColor;\n        },\n        set: function (value) {\n            if ((value < 0)) {\n                this.yellowColor = 0;\n            }\n            else if ((value > 1)) {\n                this.yellowColor = 1;\n            }\n            else {\n                this.yellowColor = value;\n            }\n            this.assignRGB(this.cyanColor, this.magentaColor, this.yellowColor, this.blackColor);\n            this.filled = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfColor.prototype, \"g\", {\n        /**\n         *  Gets or sets `Green` channel value.\n         * @private\n         */\n        get: function () {\n            return this.greenColor;\n        },\n        set: function (value) {\n            this.greenColor = value;\n            this.assignCMYK(this.redColor, this.greenColor, this.blueColor);\n            this.filled = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfColor.prototype, \"green\", {\n        /**\n         * Gets the `Green` color.\n         * @private\n         */\n        get: function () {\n            return (this.g / PdfColor.maxColourChannelValue);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfColor.prototype, \"gray\", {\n        /**\n         * Gets or sets `Gray` channel value.\n         * @private\n         */\n        get: function () {\n            return ((((this.redColor + this.greenColor) + this.blueColor)) / (PdfColor.maxColourChannelValue * 3));\n        },\n        set: function (value) {\n            if (value < 0) {\n                this.grayColor = 0;\n            }\n            else if (value > 1) {\n                this.grayColor = 1;\n            }\n            else {\n                this.grayColor = value;\n            }\n            this.r = (this.grayColor * PdfColor.maxColourChannelValue);\n            this.g = (this.grayColor * PdfColor.maxColourChannelValue);\n            this.b = (this.grayColor * PdfColor.maxColourChannelValue);\n            this.assignCMYK(this.redColor, this.greenColor, this.blueColor);\n            this.filled = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfColor.prototype, \"isEmpty\", {\n        /**\n         * Gets whether the PDFColor `is Empty` or not.\n         * @private\n         */\n        get: function () {\n            return !this.filled;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfColor.prototype, \"a\", {\n        /**\n         * Gets or sets `Alpha` channel value.\n         * @private\n         */\n        get: function () {\n            return this.alpha;\n        },\n        set: function (value) {\n            if (value < 0) {\n                this.alpha = 0;\n            }\n            else {\n                // if (this.alpha !== value) {\n                this.alpha = value;\n                // }\n            }\n            this.filled = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    //Public methods\n    /**\n     * Converts `PDFColor to PDF string` representation.\n     * @private\n     */\n    PdfColor.prototype.toString = function (colorSpace, stroke) {\n        if (this.isEmpty) {\n            return '';\n        }\n        var str = '';\n        switch (colorSpace) {\n            case PdfColorSpace.Rgb:\n                str = this.rgbToString(stroke);\n                break;\n            case PdfColorSpace.GrayScale:\n                str = this.grayScaleToString(stroke);\n                break;\n            case PdfColorSpace.Cmyk:\n                str = this.cmykToString(stroke);\n                break;\n        }\n        return str;\n    };\n    /**\n     * Sets `GrayScale` color.\n     * @private\n     */\n    PdfColor.prototype.grayScaleToString = function (ifStroking) {\n        var gray = this.gray;\n        var colour = '';\n        var obj = null;\n        /* tslint:disable-next-line:max-line-length */\n        obj = (ifStroking) ? PdfColor.grayStringsSroke.containsKey(gray) ? PdfColor.grayStringsSroke.getValue(gray) : null : PdfColor.grayStringsFill.containsKey(gray) ? PdfColor.grayStringsFill.getValue(gray) : null;\n        if (obj == null) {\n            if (ifStroking) {\n                colour = gray.toString() + ' G';\n                PdfColor.grayStringsSroke.setValue(gray, colour);\n            }\n        }\n        else {\n            colour = obj.toString();\n        }\n        return colour + Operators.newLine;\n    };\n    /**\n     * Sets `RGB` color.\n     * @private\n     */\n    PdfColor.prototype.rgbToString = function (ifStroking) {\n        var r = this.r;\n        var g = this.g;\n        var b = this.b;\n        var key = (r << 16) + (g << 8) + b;\n        if (ifStroking) {\n            key += 1 << 24;\n        }\n        var colour = '';\n        var obj = null;\n        if (PdfColor.rgbStrings.containsKey(key)) {\n            obj = PdfColor.rgbStrings.getValue(key);\n        }\n        if (obj == null) {\n            var red = r / PdfColor.maxColourChannelValue;\n            var green = g / PdfColor.maxColourChannelValue;\n            var blue = b / PdfColor.maxColourChannelValue;\n            if (ifStroking) {\n                colour = red.toString() + ' ' + green.toString() + ' ' + blue.toString() + ' RG';\n            }\n            else {\n                colour = red.toString() + ' ' + green.toString() + ' ' + blue.toString() + ' rg';\n            }\n            PdfColor.rgbStrings.setValue(key, colour);\n        }\n        else {\n            colour = obj.toString();\n        }\n        return colour + Operators.newLine;\n    };\n    /***\n     * Sets `CMYK` color.\n     * @private\n     */\n    PdfColor.prototype.cmykToString = function (ifStroking) {\n        var cyan = this.c;\n        var magenta = this.m;\n        var yellow = this.y;\n        var black = this.b;\n        var colour = '';\n        colour = cyan.toString() + ' ' + magenta.toString() + ' ' + yellow.toString() + ' ' + black.toString() + ' K';\n        return colour + Operators.newLine;\n    };\n    /**\n     * Converts `colour to a PDF array`.\n     * @private\n     */\n    PdfColor.prototype.toArray = function (colorSpace) {\n        var array = new PdfArray();\n        switch (colorSpace) {\n            case PdfColorSpace.Rgb:\n                array.add(new PdfNumber(this.red));\n                array.add(new PdfNumber(this.green));\n                array.add(new PdfNumber(this.blue));\n                break;\n        }\n        return array;\n    };\n    //Fields\n    /**\n     * Holds `RGB colors` converted into strings.\n     * @private\n     */\n    PdfColor.rgbStrings = new Dictionary();\n    /**\n     * Holds Gray scale colors converted into strings for `stroking`.\n     * @private\n     */\n    PdfColor.grayStringsSroke = new Dictionary();\n    /**\n     * Holds Gray scale colors converted into strings for `filling`.\n     * @private\n     */\n    PdfColor.grayStringsFill = new Dictionary();\n    /**\n     * `Max value` of color channel.\n     * @private\n     */\n    PdfColor.maxColourChannelValue = 255.0;\n    return PdfColor;\n}());\nexport { PdfColor };\n","/**\n * Coordinates of Position for `PointF`.\n * @private\n */\nvar PointF = /** @class */ (function () {\n    function PointF(x, y) {\n        if (typeof x === 'undefined') {\n            this.x = 0;\n            this.y = 0;\n        }\n        else {\n            if (x !== null) {\n                this.x = x;\n            }\n            else {\n                this.x = 0;\n            }\n            if (y !== null) {\n                this.y = y;\n            }\n            else {\n                this.y = 0;\n            }\n        }\n    }\n    return PointF;\n}());\nexport { PointF };\n/**\n * Width and Height as `Size`.\n * @private\n */\nvar SizeF = /** @class */ (function () {\n    function SizeF(width, height) {\n        if (typeof height === 'undefined') {\n            this.height = 0;\n            this.width = 0;\n        }\n        else {\n            if (height !== null) {\n                this.height = height;\n            }\n            else {\n                this.height = 0;\n            }\n            if (width !== null) {\n                this.width = width;\n            }\n            else {\n                this.width = 0;\n            }\n        }\n    }\n    return SizeF;\n}());\nexport { SizeF };\n/**\n * `RectangleF` with Position and size.\n * @private\n */\nvar RectangleF = /** @class */ (function () {\n    function RectangleF(arg1, arg2, arg3, arg4) {\n        if (typeof arg1 === typeof arg1 && typeof arg1 === 'undefined') {\n            this.x = 0;\n            this.y = 0;\n            this.height = 0;\n            this.width = 0;\n        }\n        else {\n            if (arg1 instanceof PointF && arg2 instanceof SizeF && typeof arg3 === 'undefined') {\n                var pointf = arg1;\n                this.x = pointf.x;\n                this.y = pointf.y;\n                var sizef = arg2;\n                this.height = sizef.height;\n                this.width = sizef.width;\n            }\n            else {\n                var x = arg1;\n                var y = arg2;\n                var width = arg3;\n                var height = arg4;\n                this.x = x;\n                this.y = y;\n                this.height = height;\n                this.width = width;\n            }\n        }\n    }\n    return RectangleF;\n}());\nexport { RectangleF };\n/**\n * `Rectangle` with left, right, top and bottom.\n * @private\n */\nvar Rectangle = /** @class */ (function () {\n    /**\n     * Instance of `RectangleF` class with X, Y, Width and Height.\n     * @private\n     */\n    function Rectangle(left, top, right, bottom) {\n        this.left = left;\n        this.top = top;\n        this.right = right;\n        this.bottom = bottom;\n    }\n    Object.defineProperty(Rectangle.prototype, \"width\", {\n        /**\n         * Gets a value of width\n         */\n        get: function () {\n            return this.right - this.left;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rectangle.prototype, \"height\", {\n        /**\n         * Gets a value of height\n         */\n        get: function () {\n            return this.bottom - this.top;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rectangle.prototype, \"topLeft\", {\n        /**\n         * Gets a value of Top and Left\n         */\n        get: function () {\n            return new PointF(this.left, this.top);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rectangle.prototype, \"size\", {\n        /**\n         * Gets a value of size\n         */\n        get: function () {\n            return new SizeF(this.width, this.height);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Rectangle.prototype.toString = function () {\n        return this.topLeft + 'x' + this.size;\n    };\n    return Rectangle;\n}());\nexport { Rectangle };\n","/**\n * `PdfBrush` class provides objects used to fill the interiors of graphical shapes such as rectangles,\n * ellipses, pies, polygons, and paths.\n * @private\n */\nvar PdfBrush = /** @class */ (function () {\n    /**\n     * Creates instanceof `PdfBrush` class.\n     * @hidden\n     * @private\n     */\n    function PdfBrush() {\n        //\n    }\n    //IClonable implementation\n    PdfBrush.prototype.clone = function () {\n        return this;\n    };\n    return PdfBrush;\n}());\nexport { PdfBrush };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { PdfColor } from './../pdf-color';\nimport { PdfColorSpace } from './../enum';\nimport { PdfBrush } from './pdf-brush';\n/**\n * Represents a brush that fills any object with a solid color.\n * ```typescript\n * // create a new PDF document\n * let document : PdfDocument = new PdfDocument();\n * // add a pages to the document\n * let page1 : PdfPage = document.pages.add();\n * // set font\n * let font : PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 20);\n * // set brush\n * let blackBrush : PdfSolidBrush = new PdfSolidBrush(new PdfColor(0, 0, 0));\n * // draw the text\n * page1.graphics.drawString('Hello World', font, blackBrush, new PointF(10, 10));\n * // save the document\n * document.save('output.pdf');\n * // destroy the document\n * document.destroy();\n * ```\n */\nvar PdfSolidBrush = /** @class */ (function (_super) {\n    __extends(PdfSolidBrush, _super);\n    //Constructors\n    /**\n     * Initializes a new instance of the `PdfSolidBrush` class.\n     * ```typescript\n     * // create a new PDF document\n     * let document : PdfDocument = new PdfDocument();\n     * // add a pages to the document\n     * let page1 : PdfPage = document.pages.add();\n     * // set font\n     * let font : PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 20);\n     * // set brush\n     * let blackBrush : PdfSolidBrush = new PdfSolidBrush(new PdfColor(0, 0, 0));\n     * // draw the text\n     * page1.graphics.drawString('Hello World', font, blackBrush, new PointF(10, 10));\n     * // save the document\n     * document.save('output.pdf');\n     * // destroy the document\n     * document.destroy();\n     * ```\n     * @param color color of the brush\n     */\n    function PdfSolidBrush(color) {\n        var _this = _super.call(this) || this;\n        _this.pdfColor = color;\n        return _this;\n    }\n    Object.defineProperty(PdfSolidBrush.prototype, \"color\", {\n        //Properties\n        /**\n         * Gets or sets the `color` of the brush.\n         * @private\n         */\n        get: function () {\n            return this.pdfColor;\n        },\n        set: function (value) {\n            this.pdfColor = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    //Implementation\n    /**\n     * `Monitors` the changes of the brush and modify PDF state respectively.\n     * @private\n     */\n    PdfSolidBrush.prototype.monitorChanges = function (brush, streamWriter, getResources, saveChanges, currentColorSpace) {\n        if (streamWriter == null) {\n            throw new Error('ArgumentNullException:streamWriter');\n        }\n        var diff = false;\n        if (brush == null) {\n            diff = true;\n            streamWriter.setColorAndSpace(this.pdfColor, currentColorSpace, false);\n            return diff;\n        }\n        else {\n            var sBrush = brush;\n            diff = true;\n            streamWriter.setColorAndSpace(this.pdfColor, currentColorSpace, false);\n            return diff;\n        }\n    };\n    /**\n     * `Resets` the changes, which were made by the brush.\n     * @private\n     */\n    PdfSolidBrush.prototype.resetChanges = function (streamWriter) {\n        streamWriter.setColorAndSpace(new PdfColor(0, 0, 0), PdfColorSpace.Rgb, false);\n    };\n    return PdfSolidBrush;\n}(PdfBrush));\nexport { PdfSolidBrush };\n","/**\n * public Enum for `PdfFontStyle`.\n * @private\n */\nexport var PdfFontStyle;\n(function (PdfFontStyle) {\n    /**\n     * Specifies the type of `Regular`.\n     * @private\n     */\n    PdfFontStyle[PdfFontStyle[\"Regular\"] = 0] = \"Regular\";\n    /**\n     * Specifies the type of `Bold`.\n     * @private\n     */\n    PdfFontStyle[PdfFontStyle[\"Bold\"] = 1] = \"Bold\";\n    /**\n     * Specifies the type of `Italic`.\n     * @private\n     */\n    PdfFontStyle[PdfFontStyle[\"Italic\"] = 2] = \"Italic\";\n    /**\n     * Specifies the type of `Underline`.\n     * @private\n     */\n    PdfFontStyle[PdfFontStyle[\"Underline\"] = 4] = \"Underline\";\n    /**\n     * Specifies the type of `Strikeout`.\n     * @private\n     */\n    PdfFontStyle[PdfFontStyle[\"Strikeout\"] = 8] = \"Strikeout\";\n})(PdfFontStyle || (PdfFontStyle = {}));\n/**\n * Specifies the font family from the standard font.\n * ```typescript\n * // create a new PDF document\n * let document : PdfDocument = new PdfDocument();\n * // add a new page to the document\n * let page1 : PdfPage = document.pages.add();\n * // create new standard font\n * let font : PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 20);\n * // create black brush\n * let blackBrush : PdfSolidBrush = new PdfSolidBrush(new PdfColor(0, 0, 0));\n * // draw the text\n * page1.graphics.drawString('Hello World', font, blackBrush, new PointF(0, 0));\n * // save the document\n * document.save('output.pdf');\n * ```\n */\nexport var PdfFontFamily;\n(function (PdfFontFamily) {\n    /**\n     * Specifies the `Helvetica` font.\n     */\n    PdfFontFamily[PdfFontFamily[\"Helvetica\"] = 0] = \"Helvetica\";\n    /**\n     * Specifies the `Courier` font.\n     */\n    PdfFontFamily[PdfFontFamily[\"Courier\"] = 1] = \"Courier\";\n    /**\n     * Specifies the `TimesRoman` font.\n     */\n    PdfFontFamily[PdfFontFamily[\"TimesRoman\"] = 2] = \"TimesRoman\";\n    /**\n     * Specifies the `Symbol` font.\n     */\n    PdfFontFamily[PdfFontFamily[\"Symbol\"] = 3] = \"Symbol\";\n    /**\n     * Specifies the `ZapfDingbats` font.\n     */\n    PdfFontFamily[PdfFontFamily[\"ZapfDingbats\"] = 4] = \"ZapfDingbats\";\n})(PdfFontFamily || (PdfFontFamily = {}));\n/**\n * public Enum for `PdfFontType`.\n * @private\n */\nexport var PdfFontType;\n(function (PdfFontType) {\n    /**\n     * Specifies the type of `Standard`.\n     * @private\n     */\n    PdfFontType[PdfFontType[\"Standard\"] = 0] = \"Standard\";\n    /**\n     * Specifies the type of `TrueType`.\n     * @private\n     */\n    PdfFontType[PdfFontType[\"TrueType\"] = 1] = \"TrueType\";\n    /**\n     * Specifies the type of `TrueTypeEmbedded`.\n     * @private\n     */\n    PdfFontType[PdfFontType[\"TrueTypeEmbedded\"] = 2] = \"TrueTypeEmbedded\";\n})(PdfFontType || (PdfFontType = {}));\n/**\n * public Enum for `PdfWordWrapType`.\n * @private\n */\nexport var PdfWordWrapType;\n(function (PdfWordWrapType) {\n    /**\n     * Specifies the type of `None`.\n     * @private\n     */\n    PdfWordWrapType[PdfWordWrapType[\"None\"] = 0] = \"None\";\n    /**\n     * Specifies the type of `Word`.\n     * @private\n     */\n    PdfWordWrapType[PdfWordWrapType[\"Word\"] = 1] = \"Word\";\n    /**\n     * Specifies the type of `WordOnly`.\n     * @private\n     */\n    PdfWordWrapType[PdfWordWrapType[\"WordOnly\"] = 2] = \"WordOnly\";\n    /**\n     * Specifies the type of `Character`.\n     * @private\n     */\n    PdfWordWrapType[PdfWordWrapType[\"Character\"] = 3] = \"Character\";\n})(PdfWordWrapType || (PdfWordWrapType = {}));\n/**\n * public Enum for `PdfSubSuperScript`.\n * @private\n */\nexport var PdfSubSuperScript;\n(function (PdfSubSuperScript) {\n    /**\n     * Specifies the type of `None`.\n     * @private\n     */\n    PdfSubSuperScript[PdfSubSuperScript[\"None\"] = 0] = \"None\";\n    /**\n     * Specifies the type of `SuperScript`.\n     * @private\n     */\n    PdfSubSuperScript[PdfSubSuperScript[\"SuperScript\"] = 1] = \"SuperScript\";\n    /**\n     * Specifies the type of `SubScript`.\n     * @private\n     */\n    PdfSubSuperScript[PdfSubSuperScript[\"SubScript\"] = 2] = \"SubScript\";\n})(PdfSubSuperScript || (PdfSubSuperScript = {}));\n/**\n * public Enum for `FontEncoding`.\n * @private\n */\nexport var FontEncoding;\n(function (FontEncoding) {\n    /**\n     * Specifies the type of `Unknown`.\n     * @private\n     */\n    FontEncoding[FontEncoding[\"Unknown\"] = 0] = \"Unknown\";\n    /**\n     * Specifies the type of `StandardEncoding`.\n     * @private\n     */\n    FontEncoding[FontEncoding[\"StandardEncoding\"] = 1] = \"StandardEncoding\";\n    /**\n     * Specifies the type of `MacRomanEncoding`.\n     * @private\n     */\n    FontEncoding[FontEncoding[\"MacRomanEncoding\"] = 2] = \"MacRomanEncoding\";\n    /**\n     * Specifies the type of `MacExpertEncoding`.\n     * @private\n     */\n    FontEncoding[FontEncoding[\"MacExpertEncoding\"] = 3] = \"MacExpertEncoding\";\n    /**\n     * Specifies the type of `WinAnsiEncoding`.\n     * @private\n     */\n    FontEncoding[FontEncoding[\"WinAnsiEncoding\"] = 4] = \"WinAnsiEncoding\";\n    /**\n     * Specifies the type of `PdfDocEncoding`.\n     * @private\n     */\n    FontEncoding[FontEncoding[\"PdfDocEncoding\"] = 5] = \"PdfDocEncoding\";\n    /**\n     * Specifies the type of `IdentityH`.\n     * @private\n     */\n    FontEncoding[FontEncoding[\"IdentityH\"] = 6] = \"IdentityH\";\n})(FontEncoding || (FontEncoding = {}));\n/**\n * public Enum for `TtfCmapFormat`.\n * @private\n */\nexport var TtfCmapFormat;\n(function (TtfCmapFormat) {\n    /**\n     * This is the Apple standard character to glyph index mapping table.\n     * @private\n     */\n    TtfCmapFormat[TtfCmapFormat[\"Apple\"] = 0] = \"Apple\";\n    /**\n     * This is the Microsoft standard character to glyph index mapping table.\n     * @private\n     */\n    TtfCmapFormat[TtfCmapFormat[\"Microsoft\"] = 4] = \"Microsoft\";\n    /**\n     * Format 6: Trimmed table mapping.\n     * @private\n     */\n    TtfCmapFormat[TtfCmapFormat[\"Trimmed\"] = 6] = \"Trimmed\";\n})(TtfCmapFormat || (TtfCmapFormat = {}));\n/**\n * Enumerator that implements CMAP encodings.\n * @private\n */\nexport var TtfCmapEncoding;\n(function (TtfCmapEncoding) {\n    /**\n     * Unknown encoding.\n     * @private\n     */\n    TtfCmapEncoding[TtfCmapEncoding[\"Unknown\"] = 0] = \"Unknown\";\n    /**\n     * When building a symbol font for Windows.\n     * @private\n     */\n    TtfCmapEncoding[TtfCmapEncoding[\"Symbol\"] = 1] = \"Symbol\";\n    /**\n     * When building a Unicode font for Windows.\n     * @private\n     */\n    TtfCmapEncoding[TtfCmapEncoding[\"Unicode\"] = 2] = \"Unicode\";\n    /**\n     * For font that will be used on a Macintosh.\n     * @private\n     */\n    TtfCmapEncoding[TtfCmapEncoding[\"Macintosh\"] = 3] = \"Macintosh\";\n})(TtfCmapEncoding || (TtfCmapEncoding = {}));\n/**\n * Ttf platform ID.\n * @private\n */\nexport var TtfPlatformID;\n(function (TtfPlatformID) {\n    /**\n     * Apple platform.\n     * @private\n     */\n    TtfPlatformID[TtfPlatformID[\"AppleUnicode\"] = 0] = \"AppleUnicode\";\n    /**\n     * Macintosh platform.\n     * @private\n     */\n    TtfPlatformID[TtfPlatformID[\"Macintosh\"] = 1] = \"Macintosh\";\n    /**\n     * Iso platform.\n     * @private\n     */\n    TtfPlatformID[TtfPlatformID[\"Iso\"] = 2] = \"Iso\";\n    /**\n     * Microsoft platform.\n     * @private\n     */\n    TtfPlatformID[TtfPlatformID[\"Microsoft\"] = 3] = \"Microsoft\";\n})(TtfPlatformID || (TtfPlatformID = {}));\n/**\n * Microsoft encoding ID.\n * @private\n */\nexport var TtfMicrosoftEncodingID;\n(function (TtfMicrosoftEncodingID) {\n    /**\n     * Undefined encoding.\n     * @private\n     */\n    TtfMicrosoftEncodingID[TtfMicrosoftEncodingID[\"Undefined\"] = 0] = \"Undefined\";\n    /**\n     * Unicode encoding.\n     * @private\n     */\n    TtfMicrosoftEncodingID[TtfMicrosoftEncodingID[\"Unicode\"] = 1] = \"Unicode\";\n})(TtfMicrosoftEncodingID || (TtfMicrosoftEncodingID = {}));\n/**\n * Macintosh encoding ID.\n * @private\n */\nexport var TtfMacintoshEncodingID;\n(function (TtfMacintoshEncodingID) {\n    /**\n     * Roman encoding.\n     * @private\n     */\n    TtfMacintoshEncodingID[TtfMacintoshEncodingID[\"Roman\"] = 0] = \"Roman\";\n    /**\n     * Japanese encoding.\n     * @private\n     */\n    TtfMacintoshEncodingID[TtfMacintoshEncodingID[\"Japanese\"] = 1] = \"Japanese\";\n    /**\n     * Chinese encoding.\n     * @private\n     */\n    TtfMacintoshEncodingID[TtfMacintoshEncodingID[\"Chinese\"] = 2] = \"Chinese\";\n})(TtfMacintoshEncodingID || (TtfMacintoshEncodingID = {}));\n/**\n * Enumerator that implements font descriptor flags.\n * @private\n */\nexport var FontDescriptorFlags;\n(function (FontDescriptorFlags) {\n    /**\n     * All glyphs have the same width (as opposed to proportional or variable-pitch fonts, which have different widths).\n     * @private\n     */\n    FontDescriptorFlags[FontDescriptorFlags[\"FixedPitch\"] = 1] = \"FixedPitch\";\n    /**\n     * Glyphs have serifs, which are short strokes drawn at an angle on the top and\n     * bottom of glyph stems (as opposed to sans serif fonts, which do not).\n     * @private\n     */\n    FontDescriptorFlags[FontDescriptorFlags[\"Serif\"] = 2] = \"Serif\";\n    /**\n     * Font contains glyphs outside the Adobe standard Latin character set. The\n     * flag and the nonsymbolic flag cannot both be set or both be clear.\n     * @private\n     */\n    FontDescriptorFlags[FontDescriptorFlags[\"Symbolic\"] = 4] = \"Symbolic\";\n    /**\n     * Glyphs resemble cursive handwriting.\n     * @private\n     */\n    FontDescriptorFlags[FontDescriptorFlags[\"Script\"] = 8] = \"Script\";\n    /**\n     * Font uses the Adobe standard Latin character set or a subset of it.\n     * @private\n     */\n    FontDescriptorFlags[FontDescriptorFlags[\"Nonsymbolic\"] = 32] = \"Nonsymbolic\";\n    /**\n     * Glyphs have dominant vertical strokes that are slanted.\n     * @private\n     */\n    FontDescriptorFlags[FontDescriptorFlags[\"Italic\"] = 64] = \"Italic\";\n    /**\n     * Bold font.\n     * @private\n     */\n    FontDescriptorFlags[FontDescriptorFlags[\"ForceBold\"] = 262144] = \"ForceBold\";\n})(FontDescriptorFlags || (FontDescriptorFlags = {}));\n/**\n * true type font composite glyph flags.\n * @private\n */\nexport var TtfCompositeGlyphFlags;\n(function (TtfCompositeGlyphFlags) {\n    /**\n     * The Arg1And2AreWords.\n     * @private\n     */\n    TtfCompositeGlyphFlags[TtfCompositeGlyphFlags[\"Arg1And2AreWords\"] = 1] = \"Arg1And2AreWords\";\n    /**\n     * The ArgsAreXyValues.\n     * @private\n     */\n    TtfCompositeGlyphFlags[TtfCompositeGlyphFlags[\"ArgsAreXyValues\"] = 2] = \"ArgsAreXyValues\";\n    /**\n     * The RoundXyToGrid.\n     * @private\n     */\n    TtfCompositeGlyphFlags[TtfCompositeGlyphFlags[\"RoundXyToGrid\"] = 4] = \"RoundXyToGrid\";\n    /**\n     * The WeHaveScale.\n     * @private\n     */\n    TtfCompositeGlyphFlags[TtfCompositeGlyphFlags[\"WeHaveScale\"] = 8] = \"WeHaveScale\";\n    /**\n     * The Reserved.\n     * @private\n     */\n    TtfCompositeGlyphFlags[TtfCompositeGlyphFlags[\"Reserved\"] = 16] = \"Reserved\";\n    /**\n     * The MoreComponents.\n     * @private\n     */\n    TtfCompositeGlyphFlags[TtfCompositeGlyphFlags[\"MoreComponents\"] = 32] = \"MoreComponents\";\n    /**\n     * The WeHaveAnXyScale.\n     * @private\n     */\n    TtfCompositeGlyphFlags[TtfCompositeGlyphFlags[\"WeHaveAnXyScale\"] = 64] = \"WeHaveAnXyScale\";\n    /**\n     * The WeHaveTwoByTwo\n     */\n    TtfCompositeGlyphFlags[TtfCompositeGlyphFlags[\"WeHaveTwoByTwo\"] = 128] = \"WeHaveTwoByTwo\";\n    /**\n     * The WeHaveInstructions.\n     */\n    TtfCompositeGlyphFlags[TtfCompositeGlyphFlags[\"WeHaveInstructions\"] = 256] = \"WeHaveInstructions\";\n    /**\n     * The UseMyMetrics.\n     */\n    TtfCompositeGlyphFlags[TtfCompositeGlyphFlags[\"UseMyMetrics\"] = 512] = \"UseMyMetrics\";\n})(TtfCompositeGlyphFlags || (TtfCompositeGlyphFlags = {}));\n","/**\n * PdfStringFormat.ts class for EJ2-PDF\n */\nimport { PdfVerticalAlignment } from './../../graphics/enum';\nimport { PdfSubSuperScript, PdfWordWrapType } from './../../graphics/fonts/enum';\n/**\n * `PdfStringFormat` class represents the text layout information on PDF.\n * ```typescript\n * // create a new PDF document\n * let document : PdfDocument = new PdfDocument();\n * // add a pages to the document\n * let page1 : PdfPage = document.pages.add();\n * // set font\n * let font : PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 20);\n * // set brush\n * let blackBrush : PdfSolidBrush = new PdfSolidBrush(new PdfColor(0, 0, 0));\n * //\n * // set the format for string\n * let stringFormat : PdfStringFormat = new PdfStringFormat();\n * // set the text alignment\n * stringFormat.alignment = PdfTextAlignment.Center;\n * // set the vertical alignment\n * stringFormat.lineAlignment = PdfVerticalAlignment.Middle;\n * //\n * // draw the text\n * page1.graphics.drawString('Hello World', font, blackBrush, new PointF(10, 10), stringFormat);\n * // save the document\n * document.save('output.pdf');\n * // destroy the document\n * document.destroy();\n * ```\n */\nvar PdfStringFormat = /** @class */ (function () {\n    function PdfStringFormat(arg1, arg2) {\n        /**\n         * The `scaling factor` of the text being drawn.\n         * @private\n         */\n        this.scalingFactor = 100.0;\n        /**\n         * Indicates text `wrapping` type.\n         * @private\n         */\n        this.wordWrapType = PdfWordWrapType.Word;\n        this.internalLineLimit = true;\n        this.wordWrapType = PdfWordWrapType.Word;\n        if ((typeof arg1 !== 'undefined') && (typeof arg1 !== 'string')) {\n            this.textAlignment = arg1;\n        }\n        if (typeof arg2 !== 'undefined') {\n            this.verticalAlignment = arg2;\n        }\n    }\n    Object.defineProperty(PdfStringFormat.prototype, \"alignment\", {\n        //Properties\n        /**\n         * Gets or sets the `horizontal` text alignment\n         * ```typescript\n         * // create a new PDF document\n         * let document : PdfDocument = new PdfDocument();\n         * // add a pages to the document\n         * let page1 : PdfPage = document.pages.add();\n         * // set font\n         * let font : PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 20);\n         * // set brush\n         * let blackBrush : PdfSolidBrush = new PdfSolidBrush(new PdfColor(0, 0, 0));\n         * //\n         * // set the format for string\n         * let stringFormat : PdfStringFormat = new PdfStringFormat();\n         * // set the text alignment\n         * stringFormat.alignment = PdfTextAlignment.Center;\n         * //\n         * // draw the text\n         * page1.graphics.drawString('Hello World', font, blackBrush, new PointF(10, 10), stringFormat);\n         * // save the document\n         * document.save('output.pdf');\n         * // destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this.textAlignment;\n        },\n        set: function (value) {\n            this.textAlignment = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfStringFormat.prototype, \"textDirection\", {\n        get: function () {\n            return this.direction;\n        },\n        set: function (value) {\n            this.direction = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfStringFormat.prototype, \"lineAlignment\", {\n        /**\n         * Gets or sets the `vertical` text alignment.\n         * ```typescript\n         * // create a new PDF document\n         * let document : PdfDocument = new PdfDocument();\n         * // add a pages to the document\n         * let page1 : PdfPage = document.pages.add();\n         * // set font\n         * let font : PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 20);\n         * // set brush\n         * let blackBrush : PdfSolidBrush = new PdfSolidBrush(new PdfColor(0, 0, 0));\n         * //\n         * // set the format for string\n         * let stringFormat : PdfStringFormat = new PdfStringFormat();\n         * // set the vertical alignment\n         * stringFormat.lineAlignment = PdfVerticalAlignment.Middle;\n         * //\n         * // draw the text\n         * page1.graphics.drawString('Hello World', font, blackBrush, new PointF(10, 10), stringFormat);\n         * // save the document\n         * document.save('output.pdf');\n         * // destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this.verticalAlignment === 'undefined' || this.verticalAlignment == null) {\n                return PdfVerticalAlignment.Top;\n            }\n            else {\n                return this.verticalAlignment;\n            }\n        },\n        set: function (value) {\n            this.verticalAlignment = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfStringFormat.prototype, \"rightToLeft\", {\n        /**\n         * Gets or sets the value that indicates text `direction` mode.\n         * @private\n         */\n        get: function () {\n            if (typeof this.isRightToLeft === 'undefined' || this.isRightToLeft == null) {\n                return false;\n            }\n            else {\n                return this.isRightToLeft;\n            }\n        },\n        set: function (value) {\n            this.isRightToLeft = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfStringFormat.prototype, \"characterSpacing\", {\n        /**\n         * Gets or sets value that indicates a `size` among the characters in the text.\n         * ```typescript\n         * // create a new PDF document\n         * let document : PdfDocument = new PdfDocument();\n         * // add a pages to the document\n         * let page1 : PdfPage = document.pages.add();\n         * // set font\n         * let font : PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 20);\n         * // set brush\n         * let blackBrush : PdfSolidBrush = new PdfSolidBrush(new PdfColor(0, 0, 0));\n         * //\n         * // set the format for string\n         * let stringFormat : PdfStringFormat = new PdfStringFormat();\n         * // set character spacing\n         * stringFormat.characterSpacing = 10;\n         * //\n         * // draw the text\n         * page1.graphics.drawString('Hello World', font, blackBrush, new PointF(10, 10), stringFormat);\n         * // save the document\n         * document.save('output.pdf');\n         * // destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this.internalCharacterSpacing === 'undefined' || this.internalCharacterSpacing == null) {\n                return 0;\n            }\n            else {\n                return this.internalCharacterSpacing;\n            }\n        },\n        set: function (value) {\n            this.internalCharacterSpacing = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfStringFormat.prototype, \"wordSpacing\", {\n        /**\n         * Gets or sets value that indicates a `size` among the words in the text.\n         * ```typescript\n         * // create a new PDF document\n         * let document : PdfDocument = new PdfDocument();\n         * // add a pages to the document\n         * let page1 : PdfPage = document.pages.add();\n         * // set font\n         * let font : PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 20);\n         * // set brush\n         * let blackBrush : PdfSolidBrush = new PdfSolidBrush(new PdfColor(0, 0, 0));\n         * //\n         * // set the format for string\n         * let stringFormat : PdfStringFormat = new PdfStringFormat();\n         * // set word spacing\n         * stringFormat.wordSpacing = 10;\n         * //\n         * // draw the text\n         * page1.graphics.drawString('Hello World', font, blackBrush, new PointF(10, 10), stringFormat);\n         * // save the document\n         * document.save('output.pdf');\n         * // destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this.internalWordSpacing === 'undefined' || this.internalWordSpacing == null) {\n                return 0;\n            }\n            else {\n                return this.internalWordSpacing;\n            }\n        },\n        set: function (value) {\n            this.internalWordSpacing = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfStringFormat.prototype, \"lineSpacing\", {\n        /**\n         * Gets or sets value that indicates the `vertical distance` between the baselines of adjacent lines of text.\n         * ```typescript\n         * // create a new PDF document\n         * let document : PdfDocument = new PdfDocument();\n         * // add a pages to the document\n         * let page1 : PdfPage = document.pages.add();\n         * // set font\n         * let font : PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 20);\n         * // set brush\n         * let blackBrush : PdfSolidBrush = new PdfSolidBrush(new PdfColor(0, 0, 0));\n         * // set string\n         * let text : string = 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor\n         * incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitati';\n         * // set rectangle bounds\n         * let rectangle : RectangleF = new RectangleF({x : 0, y : 0}, {width : 300, height : 100})\n         * //\n         * // set the format for string\n         * let stringFormat : PdfStringFormat = new PdfStringFormat();\n         * // set line spacing\n         * stringFormat.lineSpacing = 10;\n         * //\n         * // draw the text\n         * page1.graphics.drawString(text, font, blackBrush, rectangle, stringFormat);\n         * // save the document\n         * document.save('output.pdf');\n         * // destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this.leading === 'undefined' || this.leading == null) {\n                return 0;\n            }\n            else {\n                return this.leading;\n            }\n        },\n        set: function (value) {\n            this.leading = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfStringFormat.prototype, \"clipPath\", {\n        /**\n         * Gets or sets a value indicating whether the text is `clipped` or not.\n         * @private\n         */\n        get: function () {\n            if (typeof this.clip === 'undefined' || this.clip == null) {\n                return false;\n            }\n            else {\n                return this.clip;\n            }\n        },\n        set: function (value) {\n            this.clip = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfStringFormat.prototype, \"subSuperScript\", {\n        /**\n         * Gets or sets value indicating whether the text is in `subscript or superscript` mode.\n         * @private\n         */\n        get: function () {\n            if (typeof this.pdfSubSuperScript === 'undefined' || this.pdfSubSuperScript == null) {\n                return PdfSubSuperScript.None;\n            }\n            else {\n                return this.pdfSubSuperScript;\n            }\n        },\n        set: function (value) {\n            this.pdfSubSuperScript = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfStringFormat.prototype, \"paragraphIndent\", {\n        /**\n         * Gets or sets the `indent` of the first line in the paragraph.\n         * @private\n         */\n        get: function () {\n            if (typeof this.internalParagraphIndent === 'undefined' || this.internalParagraphIndent == null) {\n                return 0;\n            }\n            else {\n                return this.internalParagraphIndent;\n            }\n        },\n        set: function (value) {\n            this.internalParagraphIndent = value;\n            this.firstLineIndent = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfStringFormat.prototype, \"lineLimit\", {\n        /**\n         * Gets or sets a value indicating whether [`line limit`].\n         * @private\n         */\n        get: function () {\n            return this.internalLineLimit;\n        },\n        set: function (value) {\n            this.internalLineLimit = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfStringFormat.prototype, \"measureTrailingSpaces\", {\n        /**\n         * Gets or sets a value indicating whether [`measure trailing spaces`].\n         * @private\n         */\n        get: function () {\n            if (typeof this.trailingSpaces === 'undefined' || this.trailingSpaces == null) {\n                return false;\n            }\n            else {\n                return this.trailingSpaces;\n            }\n        },\n        set: function (value) {\n            this.trailingSpaces = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfStringFormat.prototype, \"noClip\", {\n        /**\n         * Gets or sets a value indicating whether [`no clip`].\n         * @private\n         */\n        get: function () {\n            if (typeof this.isNoClip === 'undefined' || this.isNoClip == null) {\n                return false;\n            }\n            else {\n                return this.isNoClip;\n            }\n        },\n        set: function (value) {\n            this.isNoClip = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfStringFormat.prototype, \"wordWrap\", {\n        /**\n         * Gets or sets value indicating type of the text `wrapping`.\n         * @private\n         */\n        get: function () {\n            // if (typeof this.wrapType === 'undefined' || this.wrapType == null) {\n            //     return PdfWordWrapType.Word;\n            // } else {\n            return this.wordWrapType;\n            // }\n        },\n        set: function (value) {\n            this.wordWrapType = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfStringFormat.prototype, \"horizontalScalingFactor\", {\n        /**\n         * Gets or sets the `scaling factor`.\n         * @private\n         */\n        get: function () {\n            // if (typeof this.scalingFactor === 'undefined' || this.scalingFactor == null) {\n            //     return 100;\n            // } else {\n            return this.scalingFactor;\n            // }\n        },\n        set: function (value) {\n            if (value <= 0) {\n                throw new Error('ArgumentOutOfRangeException:The scaling factor cant be less of equal to zero, ScalingFactor');\n            }\n            this.scalingFactor = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfStringFormat.prototype, \"firstLineIndent\", {\n        /**\n         * Gets or sets the `indent` of the first line in the text.\n         * @private\n         */\n        get: function () {\n            if (typeof this.initialLineIndent === 'undefined' || this.initialLineIndent == null) {\n                return 0;\n            }\n            else {\n                return this.initialLineIndent;\n            }\n        },\n        set: function (value) {\n            this.initialLineIndent = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * `Clones` the object.\n     * @private\n     */\n    //IClonable implementation\n    PdfStringFormat.prototype.clone = function () {\n        var format = this;\n        return format;\n    };\n    return PdfStringFormat;\n}());\nexport { PdfStringFormat };\n","/**\n * StringTokenizer.ts class for EJ2-PDF\n * Utility class for working with strings.\n * @private\n */\nvar StringTokenizer = /** @class */ (function () {\n    // Constructors\n    /**\n     * Initializes a new instance of the `StringTokenizer` class.\n     * @private\n     */\n    function StringTokenizer(textValue) {\n        /**\n         * Current `position`.\n         * @private\n         */\n        this.currentPosition = 0;\n        if (textValue == null) {\n            throw new Error('ArgumentNullException:text');\n        }\n        this.text = textValue;\n    }\n    Object.defineProperty(StringTokenizer.prototype, \"length\", {\n        // Properties\n        /**\n         * Gets text `length`.\n         * @private\n         */\n        get: function () {\n            return this.text.length;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(StringTokenizer.prototype, \"end\", {\n        get: function () {\n            return (this.currentPosition === this.text.length);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(StringTokenizer.prototype, \"position\", {\n        /**\n         * Gets or sets the position.\n         * @private\n         */\n        get: function () {\n            return this.currentPosition;\n        },\n        set: function (value) {\n            this.currentPosition = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    StringTokenizer.getCharsCount = function (text, symbols) {\n        if (typeof symbols === 'string') {\n            if (text == null) {\n                throw new Error('ArgumentNullException:wholeText');\n            }\n            var numSymbols = 0;\n            var curIndex = 0;\n            for (;;) {\n                curIndex = text.indexOf(symbols, curIndex);\n                if (curIndex === -1) {\n                    break;\n                }\n                else {\n                    numSymbols++;\n                    curIndex++;\n                }\n            }\n            return numSymbols;\n        }\n        else {\n            if (text == null) {\n                throw new Error('ArgumentNullException:text');\n            }\n            if (symbols == null) {\n                throw new Error('ArgumentNullException:symbols');\n            }\n            var count = 0;\n            for (var i = 0, len = text.length; i < len; i++) {\n                var ch = text[i];\n                if (this.contains(symbols, ch)) {\n                    count++;\n                }\n            }\n            return count;\n        }\n    };\n    /**\n     * Reads line of the text.\n     * @private\n     */\n    StringTokenizer.prototype.readLine = function () {\n        var pos = this.currentPosition;\n        while (pos < this.length) {\n            var ch = this.text[pos];\n            switch (ch) {\n                case '\\r':\n                case '\\n': {\n                    var text = this.text.substr(this.currentPosition, pos - this.currentPosition);\n                    this.currentPosition = pos + 1;\n                    if (((ch === '\\r') && (this.currentPosition < this.length)) && (this.text[this.currentPosition] === '\\n')) {\n                        this.currentPosition++;\n                    }\n                    return text;\n                }\n            }\n            pos++;\n        }\n        // The remaining text.\n        if (pos > this.currentPosition) {\n            var text2 = this.text.substr(this.currentPosition, pos - this.currentPosition);\n            this.currentPosition = pos;\n            return text2;\n        }\n        return null;\n    };\n    /**\n     * Reads line of the text.\n     * @private\n     */\n    StringTokenizer.prototype.peekLine = function () {\n        var pos = this.currentPosition;\n        var line = this.readLine();\n        this.currentPosition = pos;\n        return line;\n    };\n    /**\n     * Reads a word from the text.\n     * @private\n     */\n    StringTokenizer.prototype.readWord = function () {\n        var pos = this.currentPosition;\n        while (pos < this.length) {\n            var ch = this.text[pos];\n            switch (ch) {\n                case '\\r':\n                case '\\n':\n                    var textValue = this.text.substr(this.currentPosition, pos - this.currentPosition);\n                    this.currentPosition = pos + 1;\n                    if (((ch === '\\r') && (this.currentPosition < this.length)) && (this.text[this.currentPosition] === '\\n')) {\n                        this.currentPosition++;\n                    }\n                    return textValue;\n                case ' ':\n                case '\\t': {\n                    if (pos === this.currentPosition) {\n                        pos++;\n                    }\n                    var text = this.text.substr(this.currentPosition, pos - this.currentPosition);\n                    this.currentPosition = pos;\n                    return text;\n                }\n            }\n            pos++;\n        }\n        // The remaining text.\n        if (pos > this.currentPosition) {\n            var text2 = this.text.substr(this.currentPosition, pos - this.currentPosition);\n            this.currentPosition = pos;\n            return text2;\n        }\n        return null;\n    };\n    /**\n     * Peeks a word from the text.\n     * @private\n     */\n    StringTokenizer.prototype.peekWord = function () {\n        var pos = this.currentPosition;\n        var word = this.readWord();\n        this.currentPosition = pos;\n        return word;\n    };\n    StringTokenizer.prototype.read = function (count) {\n        if (typeof count === 'undefined') {\n            var ch = '0';\n            if (!this.end) {\n                ch = this.text[this.currentPosition];\n                this.currentPosition++;\n            }\n            return ch;\n        }\n        else {\n            var num = 0;\n            var builder = '';\n            while (!this.end && num < count) {\n                var ch = this.read();\n                builder = builder + ch;\n                num++;\n            }\n            return builder;\n        }\n    };\n    /**\n     * Peeks char form the data.\n     * @private\n     */\n    StringTokenizer.prototype.peek = function () {\n        var ch = '0';\n        if (!this.end) {\n            ch = this.text[this.currentPosition];\n        }\n        return ch;\n    };\n    /**\n     * Closes a reader.\n     * @private\n     */\n    StringTokenizer.prototype.close = function () {\n        this.text = null;\n    };\n    StringTokenizer.prototype.readToEnd = function () {\n        var text;\n        if (this.currentPosition === 0) {\n            text = this.text;\n        }\n        else {\n            text = this.text.substr(this.currentPosition, this.length - this.currentPosition);\n        }\n        this.currentPosition = this.length;\n        return text;\n    };\n    //Implementation\n    /**\n     * Checks whether array contains a symbol.\n     * @private\n     */\n    StringTokenizer.contains = function (array, symbol) {\n        var contains = false;\n        for (var i = 0; i < array.length; i++) {\n            if (array[i] === symbol) {\n                contains = true;\n                break;\n            }\n        }\n        return contains;\n    };\n    // Constants\n    /**\n     * `Whitespace` symbol.\n     * @private\n     */\n    StringTokenizer.whiteSpace = ' ';\n    /**\n     * `tab` symbol.\n     * @private\n     */\n    StringTokenizer.tab = '\\t';\n    /**\n     * Array of `spaces`.\n     * @private\n     */\n    StringTokenizer.spaces = [StringTokenizer.whiteSpace, StringTokenizer.tab];\n    /**\n     * `Pattern` for WhiteSpace.\n     * @private\n     */\n    StringTokenizer.whiteSpacePattern = '^[ \\t]+$';\n    return StringTokenizer;\n}());\nexport { StringTokenizer };\n","import { SizeF, RectangleF, PointF } from './../../drawing/pdf-drawing';\nimport { PdfWordWrapType } from './enum';\nimport { StringTokenizer } from './string-tokenizer';\n/**\n * Class `lay outing the text`.\n */\nvar PdfStringLayouter = /** @class */ (function () {\n    // Constructors\n    /**\n     * Initializes a new instance of the `StringLayouter` class.\n     * @private\n     */\n    function PdfStringLayouter() {\n        /**\n         * Checks whether the x co-ordinate is need to set as client size or not.\n         * @hidden\n         * @private\n         */\n        this.isOverloadWithPosition = false;\n        //\n    }\n    PdfStringLayouter.prototype.layout = function (arg1, arg2, arg3, arg4, arg5, arg6, arg7) {\n        if (arg4 instanceof RectangleF) {\n            this.initialize(arg1, arg2, arg3, arg4, arg5);\n            this.isOverloadWithPosition = arg6;\n            this.clientSize = arg7;\n            var result = this.doLayout();\n            this.clear();\n            return result;\n        }\n        else {\n            this.initialize(arg1, arg2, arg3, arg4);\n            this.isOverloadWithPosition = arg5;\n            this.clientSize = arg6;\n            var result = this.doLayout();\n            this.clear();\n            return result;\n        }\n    };\n    PdfStringLayouter.prototype.initialize = function (text, font, format, rectSize, pageHeight) {\n        if (typeof pageHeight === 'number') {\n            if (text == null) {\n                throw new Error('ArgumentNullException:text');\n            }\n            if (font == null) {\n                throw new Error('ArgumentNullException:font');\n            }\n            this.text = text;\n            this.font = font;\n            this.format = format;\n            this.size = new SizeF(rectSize.width, rectSize.height);\n            this.rectangle = rectSize;\n            this.pageHeight = pageHeight;\n            this.reader = new StringTokenizer(text);\n        }\n        else {\n            this.initialize(text, font, format, new RectangleF(new PointF(0, 0), rectSize), 0);\n        }\n    };\n    /**\n     * `Clear` all resources.\n     * @private\n     */\n    PdfStringLayouter.prototype.clear = function () {\n        this.font = null;\n        this.format = null;\n        this.reader.close();\n        this.reader = null;\n        this.text = null;\n    };\n    /**\n     * `Layouts` the text.\n     * @private\n     */\n    PdfStringLayouter.prototype.doLayout = function () {\n        var result = new PdfStringLayoutResult();\n        var lineResult = new PdfStringLayoutResult();\n        var lines = [];\n        var line = this.reader.peekLine();\n        var lineIndent = this.getLineIndent(true);\n        while (line != null) {\n            lineResult = this.layoutLine(line, lineIndent);\n            if (lineResult !== null || typeof lineResult !== 'undefined') {\n                var numSymbolsInserted = 0;\n                /* tslint:disable */\n                var returnedValue = this.copyToResult(result, lineResult, lines, /*out*/ numSymbolsInserted);\n                /* tslint:enable */\n                var success = returnedValue.success;\n                numSymbolsInserted = returnedValue.numInserted;\n                if (!success) {\n                    this.reader.read(numSymbolsInserted);\n                    break;\n                }\n            }\n            // if (lineResult.textRemainder != null && lineResult.textRemainder.length > 0 ) {\n            //     break;\n            // }\n            this.reader.readLine();\n            line = this.reader.peekLine();\n            lineIndent = this.getLineIndent(false);\n        }\n        this.finalizeResult(result, lines);\n        return result;\n    };\n    /**\n     * Returns `line indent` for the line.\n     * @private\n     */\n    PdfStringLayouter.prototype.getLineIndent = function (firstLine) {\n        var lineIndent = 0;\n        if (this.format != null) {\n            lineIndent = (firstLine) ? this.format.firstLineIndent : this.format.paragraphIndent;\n            lineIndent = (this.size.width > 0) ? Math.min(this.size.width, lineIndent) : lineIndent;\n        }\n        return lineIndent;\n    };\n    /**\n     * Calculates `height` of the line.\n     * @private\n     */\n    PdfStringLayouter.prototype.getLineHeight = function () {\n        var height = this.font.height;\n        if (this.format != null && this.format.lineSpacing !== 0) {\n            height = this.format.lineSpacing + this.font.height;\n        }\n        return height;\n    };\n    /**\n     * Calculates `width` of the line.\n     * @private\n     */\n    PdfStringLayouter.prototype.getLineWidth = function (line) {\n        var width = this.font.getLineWidth(line, this.format);\n        return width;\n    };\n    // tslint:disable\n    /**\n     * `Layouts` line.\n     * @private\n     */\n    PdfStringLayouter.prototype.layoutLine = function (line, lineIndent) {\n        var lineResult = new PdfStringLayoutResult();\n        lineResult.layoutLineHeight = this.getLineHeight();\n        var lines = [];\n        var maxWidth = this.size.width;\n        var lineWidth = this.getLineWidth(line) + lineIndent;\n        var lineType = LineType.FirstParagraphLine;\n        var readWord = true;\n        // line is in bounds.\n        if (maxWidth <= 0 || Math.round(lineWidth) <= Math.round(maxWidth)) {\n            this.addToLineResult(lineResult, lines, line, lineWidth, LineType.NewLineBreak | lineType);\n        }\n        else {\n            var builder = '';\n            var curLine = '';\n            lineWidth = lineIndent;\n            var curIndent = lineIndent;\n            var reader = new StringTokenizer(line);\n            var word = reader.peekWord();\n            var isSingleWord = false;\n            if (word.length !== reader.length) {\n                if (word === ' ') {\n                    curLine = curLine + word;\n                    builder = builder + word;\n                    reader.position += 1;\n                    word = reader.peekWord();\n                }\n            }\n            while (word != null) {\n                curLine = curLine + word;\n                var curLineWidth = this.getLineWidth(curLine.toString()) + curIndent /*)*/;\n                if (curLine.toString() === ' ') {\n                    curLine = '';\n                    curLineWidth = 0;\n                }\n                if (curLineWidth > maxWidth) {\n                    if (this.getWrapType() === PdfWordWrapType.None) {\n                        break;\n                    }\n                    if (curLine.length === word.length) {\n                        //  Character wrap is disabled or one symbol is greater than bounds.\n                        if (this.getWrapType() === PdfWordWrapType.WordOnly) {\n                            lineResult.textRemainder = line.substring(reader.position);\n                            break;\n                        }\n                        else if (curLine.length === 1) {\n                            builder = builder + word;\n                            break;\n                        }\n                        else {\n                            readWord = false;\n                            curLine = '';\n                            word = reader.peek().toString();\n                            continue;\n                        }\n                    }\n                    else {\n                        if (this.getLineWidth(word.toString()) > maxWidth) {\n                            this.format.wordWrap = PdfWordWrapType.Character;\n                        }\n                        else {\n                            if (typeof this.format !== 'undefined' && this.format !== null) {\n                                this.format.wordWrap = PdfWordWrapType.Word;\n                            }\n                        }\n                        if (this.getWrapType() !== PdfWordWrapType.Character || !readWord) {\n                            var ln = builder.toString();\n                            // if (ln.indexOf(' ') === -1) {\n                            //     isSingleWord = true;\n                            //     this.addToLineResult(lineResult, lines, curLine, lineWidth, LineType.LayoutBreak | lineType);\n                            // } else {\n                            //     this.addToLineResult(lineResult, lines, ln, lineWidth, LineType.LayoutBreak | lineType);\n                            // }                          \n                            if (ln !== ' ') {\n                                this.addToLineResult(lineResult, lines, ln, lineWidth, LineType.LayoutBreak | lineType);\n                            }\n                            if (this.isOverloadWithPosition) {\n                                maxWidth = this.clientSize.width;\n                            }\n                            curLine = '';\n                            builder = '';\n                            lineWidth = 0;\n                            curIndent = 0;\n                            curLineWidth = 0;\n                            lineType = LineType.None;\n                            // if (isSingleWord) {\n                            //     reader.readWord();\n                            //     readWord = false;\n                            // }\n                            word = (readWord) ? word : reader.peekWord();\n                            //isSingleWord = false;\n                            readWord = true;\n                        }\n                        else {\n                            readWord = false;\n                            curLine = '';\n                            curLine = curLine + builder.toString();\n                            word = reader.peek().toString();\n                        }\n                        continue;\n                    }\n                }\n                /*tslint:disable:max-func-body-length */\n                builder = builder + word;\n                lineWidth = curLineWidth;\n                if (readWord) {\n                    reader.readWord();\n                    word = reader.peekWord();\n                    //isSingleWord = false;\n                }\n                else {\n                    reader.read();\n                    word = reader.peek().toString();\n                }\n            }\n            if (builder.length > 0) {\n                var ln = builder.toString();\n                this.addToLineResult(lineResult, lines, ln, lineWidth, LineType.NewLineBreak | LineType.LastParagraphLine);\n            }\n            reader.close();\n        }\n        lineResult.layoutLines = [];\n        for (var index = 0; index < lines.length; index++) {\n            lineResult.layoutLines.push(lines[index]);\n        }\n        lines = [];\n        return lineResult;\n    };\n    /**\n     * `Adds` line to line result.\n     * @private\n     */\n    PdfStringLayouter.prototype.addToLineResult = function (lineResult, lines, line, lineWidth, breakType) {\n        var info = new LineInfo();\n        info.text = line;\n        info.width = lineWidth;\n        info.lineType = breakType;\n        lines.push(info);\n        var size = lineResult.actualSize;\n        size.height += this.getLineHeight();\n        size.width = Math.max(size.width, lineWidth);\n        lineResult.size = size;\n    };\n    /**\n     * `Copies` layout result from line result to entire result. Checks whether we can proceed lay outing or not.\n     * @private\n     */\n    PdfStringLayouter.prototype.copyToResult = function (result, lineResult, lines, \n    /*out*/ numInserted) {\n        var success = true;\n        var allowPartialLines = (this.format != null && !this.format.lineLimit);\n        var height = result.actualSize.height;\n        var maxHeight = this.size.height;\n        if ((this.pageHeight > 0) && (maxHeight + this.rectangle.y > this.pageHeight)) {\n            maxHeight = this.rectangle.y - this.pageHeight;\n            maxHeight = Math.max(maxHeight, -maxHeight);\n        }\n        numInserted = 0;\n        if (lineResult.lines != null) {\n            for (var i = 0, len = lineResult.lines.length; i < len; i++) {\n                var expHeight = height + lineResult.lineHeight;\n                if (expHeight <= maxHeight || maxHeight <= 0 || allowPartialLines) {\n                    var info = lineResult.lines[i];\n                    numInserted += info.text.length;\n                    info = this.trimLine(info, (lines.length === 0));\n                    lines.push(info);\n                    // Update width.\n                    var size = result.actualSize;\n                    size.width = Math.max(size.width, info.width);\n                    result.size = size;\n                    // The part of the line fits only and it's allowed to use partial lines.\n                    // if (expHeight >= maxHeight && maxHeight > 0 && allowPartialLines)\n                    // {\n                    //     let shouldClip : boolean = (this.format == null || !this.format.noClip);\n                    //     if (shouldClip)\n                    //     {\n                    //         let exceededHeight : number = expHeight - maxHeight;\n                    //         let fitHeight : number  = /*Utils.Round(*/ lineResult.lineHeight - exceededHeight /*)*/;\n                    //         height = /*Utils.Round(*/ height + fitHeight /*)*/;\n                    //     }\n                    //     else\n                    //     {\n                    //         height = expHeight;\n                    //     }\n                    //     success = false;\n                    //     break;\n                    // } else {\n                    height = expHeight;\n                    // }\n                }\n                else {\n                    success = false;\n                    break;\n                }\n            }\n        }\n        if (height != result.size.height) {\n            var size1 = result.actualSize;\n            size1.height = height;\n            result.size = size1;\n        }\n        return { success: success, numInserted: numInserted };\n    };\n    /**\n     * `Finalizes` final result.\n     * @private\n     */\n    PdfStringLayouter.prototype.finalizeResult = function (result, lines) {\n        result.layoutLines = [];\n        for (var index = 0; index < lines.length; index++) {\n            result.layoutLines.push(lines[index]);\n        }\n        result.layoutLineHeight = this.getLineHeight();\n        if (!this.reader.end) {\n            result.textRemainder = this.reader.readToEnd();\n        }\n        lines = [];\n    };\n    /**\n     * `Trims` whitespaces at the line.\n     * @private\n     */\n    PdfStringLayouter.prototype.trimLine = function (info, firstLine) {\n        var line = info.text;\n        var lineWidth = info.width;\n        // Trim start whitespaces if the line is not a start of the paragraph only.\n        var trimStartSpaces = ((info.lineType & LineType.FirstParagraphLine) === 0);\n        var start = (this.format == null || !this.format.rightToLeft);\n        var spaces = StringTokenizer.spaces;\n        line = (start) ? line.trim() : line.trim();\n        // Recalculate line width.\n        if (line.length !== info.text.length) {\n            lineWidth = this.getLineWidth(line);\n            if ((info.lineType & LineType.FirstParagraphLine) > 0) {\n                lineWidth += this.getLineIndent(firstLine);\n            }\n        }\n        info.text = line;\n        info.width = lineWidth;\n        return info;\n    };\n    /**\n     * Returns `wrap` type.\n     * @private\n     */\n    PdfStringLayouter.prototype.getWrapType = function () {\n        var wrapType = (this.format != null) ? this.format.wordWrap : PdfWordWrapType.Word;\n        return wrapType;\n    };\n    return PdfStringLayouter;\n}());\nexport { PdfStringLayouter };\n//Internal declaration\nvar PdfStringLayoutResult = /** @class */ (function () {\n    function PdfStringLayoutResult() {\n    }\n    Object.defineProperty(PdfStringLayoutResult.prototype, \"remainder\", {\n        // Properties\n        /**\n         * Gets the `text` which is not lay outed.\n         * @private\n         */\n        get: function () {\n            return this.textRemainder;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfStringLayoutResult.prototype, \"actualSize\", {\n        /**\n         * Gets the actual layout text `bounds`.\n         * @private\n         */\n        get: function () {\n            if (typeof this.size === 'undefined') {\n                this.size = new SizeF(0, 0);\n            }\n            return this.size;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfStringLayoutResult.prototype, \"lines\", {\n        /**\n         * Gets layout `lines` information.\n         * @private\n         */\n        get: function () {\n            return this.layoutLines;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfStringLayoutResult.prototype, \"lineHeight\", {\n        /**\n         * Gets the `height` of the line.\n         * @private\n         */\n        get: function () {\n            return this.layoutLineHeight;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfStringLayoutResult.prototype, \"empty\", {\n        /**\n         * Gets value that indicates whether any layout text [`empty`].\n         * @private\n         */\n        get: function () {\n            return (this.layoutLines == null || this.layoutLines.length === 0);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfStringLayoutResult.prototype, \"lineCount\", {\n        /**\n         * Gets `number of` the layout lines.\n         * @private\n         */\n        get: function () {\n            var count = (!this.empty) ? this.layoutLines.length : 0;\n            return count;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfStringLayoutResult;\n}());\nexport { PdfStringLayoutResult };\nvar LineInfo = /** @class */ (function () {\n    function LineInfo() {\n    }\n    Object.defineProperty(LineInfo.prototype, \"lineType\", {\n        //Properties\n        /**\n         * Gets the `type` of the line text.\n         * @private\n         */\n        get: function () {\n            return this.type;\n        },\n        set: function (value) {\n            this.type = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(LineInfo.prototype, \"text\", {\n        /**\n         * Gets the line `text`.\n         * @private\n         */\n        get: function () {\n            return this.content;\n        },\n        set: function (value) {\n            this.content = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(LineInfo.prototype, \"width\", {\n        /**\n         * Gets `width` of the line text.\n         * @private\n         */\n        get: function () {\n            return this.lineWidth;\n        },\n        set: function (value) {\n            this.lineWidth = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return LineInfo;\n}());\nexport { LineInfo };\n/**\n* Break type of the `line`.\n* @private\n*/\nexport var LineType;\n(function (LineType) {\n    /**\n     * Specifies the type of `None`.\n     * @private\n     */\n    LineType[LineType[\"None\"] = 0] = \"None\";\n    /**\n     * Specifies the type of `NewLineBreak`.\n     * @private\n     */\n    LineType[LineType[\"NewLineBreak\"] = 1] = \"NewLineBreak\";\n    /**\n     * Specifies the type of `LayoutBreak`.\n     * @private\n     */\n    LineType[LineType[\"LayoutBreak\"] = 2] = \"LayoutBreak\";\n    /**\n     * Specifies the type of `FirstParagraphLine`.\n     * @private\n     */\n    LineType[LineType[\"FirstParagraphLine\"] = 4] = \"FirstParagraphLine\";\n    /**\n     * Specifies the type of `LastParagraphLine`.\n     * @private\n     */\n    LineType[LineType[\"LastParagraphLine\"] = 8] = \"LastParagraphLine\";\n})(LineType || (LineType = {}));\n","/**\n * PdfFont.ts class for EJ2-PDF\n */\nimport { PdfFontStyle } from './enum';\nimport { SizeF } from './../../drawing/pdf-drawing';\nimport { PdfStringFormat } from './pdf-string-format';\nimport { PdfStringLayouter } from './string-layouter';\nimport { StringTokenizer } from './string-tokenizer';\n/**\n * Defines a particular format for text, including font face, size, and style attributes.\n * @private\n */\nvar PdfFont = /** @class */ (function () {\n    function PdfFont(size, style) {\n        /**\n         * `Style` of the font.\n         * @private\n         */\n        this.fontStyle = PdfFontStyle.Regular;\n        if (typeof size === 'number' && typeof style === 'undefined') {\n            this.fontSize = size;\n        }\n        else {\n            this.fontSize = size;\n            this.setStyle(style);\n        }\n    }\n    Object.defineProperty(PdfFont.prototype, \"name\", {\n        //Properties\n        /**\n         * Gets the face name of this Font.\n         * @private\n         */\n        get: function () {\n            return this.metrics.name;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfFont.prototype, \"size\", {\n        /**\n         * Gets the size of this font.\n         * @private\n         */\n        get: function () {\n            return this.fontSize;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfFont.prototype, \"height\", {\n        /**\n         * Gets the height of the font in points.\n         * @private\n         */\n        get: function () {\n            return this.metrics.getHeight(null);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfFont.prototype, \"style\", {\n        /**\n         * Gets the style information for this font.\n         * @private\n         */\n        get: function () {\n            return this.fontStyle;\n        },\n        set: function (value) {\n            this.fontStyle = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfFont.prototype, \"bold\", {\n        /**\n         * Gets a value indicating whether this `PdfFont` is `bold`.\n         * @private\n         */\n        get: function () {\n            return ((this.style & PdfFontStyle.Bold) > 0);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfFont.prototype, \"italic\", {\n        /**\n         * Gets a value indicating whether this `PdfFont` has the `italic` style applied.\n         * @private\n         */\n        get: function () {\n            return ((this.style & PdfFontStyle.Italic) > 0);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfFont.prototype, \"strikeout\", {\n        /**\n         * Gets a value indicating whether this `PdfFont` is `strikeout`.\n         * @private\n         */\n        get: function () {\n            return ((this.style & PdfFontStyle.Strikeout) > 0);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfFont.prototype, \"underline\", {\n        /**\n         * Gets a value indicating whether this `PdfFont` is `underline`.\n         * @private\n         */\n        get: function () {\n            return ((this.style & PdfFontStyle.Underline) > 0);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfFont.prototype, \"metrics\", {\n        /**\n         * Gets or sets the `metrics` for this font.\n         * @private\n         */\n        get: function () {\n            return this.fontMetrics;\n        },\n        set: function (value) {\n            this.fontMetrics = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfFont.prototype, \"element\", {\n        // /**\n        //  * Gets and Sets the font `internals`.\n        //  * @private\n        //  */\n        // public get fontInternal() : IPdfPrimitive {\n        //     return this.pdfFontInternals;\n        // }\n        // public set fontInternal(value : IPdfPrimitive) {\n        //     this.pdfFontInternals = value;\n        // }\n        //IPdfWrapper Members\n        /**\n         * Gets the `element` representing the font.\n         * @private\n         */\n        get: function () {\n            return this.pdfFontInternals;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfFont.prototype.measureString = function (text, arg2, arg3, arg4, arg5) {\n        if (typeof text === 'string' && typeof arg2 === 'undefined') {\n            return this.measureString(text, null);\n        }\n        else if (typeof text === 'string' && (arg2 instanceof PdfStringFormat || arg2 == null) && typeof arg3 === 'undefined' && typeof arg4 === 'undefined') {\n            var temparg2 = arg2;\n            var charactersFitted = 0;\n            var linesFilled = 0;\n            return this.measureString(text, temparg2, charactersFitted, linesFilled);\n        }\n        else if (typeof text === 'string' && (arg2 instanceof PdfStringFormat || arg2 == null) && typeof arg3 === 'number' && typeof arg4 === 'number') {\n            var temparg2 = arg2;\n            return this.measureString(text, 0, temparg2, arg3, arg4);\n            // } else if (typeof text === 'string' && typeof arg2 === 'number' && typeof arg3 === 'undefined') {\n            //     return this.measureString(text, arg2, null);\n            // } else if (typeof text === 'string' && typeof arg2 === 'number' && (arg3 instanceof PdfStringFormat || arg3 == null) && typeof arg4 === 'undefined' && typeof arg5 === 'undefined') {\n            //     let temparg3 : PdfStringFormat = arg3 as PdfStringFormat;\n            //     let charactersFitted : number = 0;\n            //     let linesFilled : number = 0;\n            //     return this.measureString(text, arg2, temparg3, charactersFitted, linesFilled);\n        }\n        else if (typeof text === 'string' && typeof arg2 === 'number' && (arg3 instanceof PdfStringFormat || arg3 == null) && typeof arg4 === 'number' && typeof arg5 === 'number') {\n            var layoutArea = new SizeF(arg2, 0);\n            var temparg3 = arg3;\n            return this.measureString(text, layoutArea, temparg3, arg4, arg5);\n            // } else if (typeof text === 'string' && arg2 instanceof SizeF && typeof arg3 === 'undefined') {\n            //     return this.measureString(text, arg2, null);\n            // } else if (typeof text === 'string' && arg2 instanceof SizeF && (arg3 instanceof PdfStringFormat || arg3 == null) && typeof arg4 === 'undefined' && typeof arg5 === 'undefined') {\n            //     let temparg3 : PdfStringFormat = arg3 as PdfStringFormat;\n            //     let charactersFitted : number = 0;\n            //     let linesFilled : number = 0;\n            //     return this.measureString(text, arg2, temparg3, charactersFitted, linesFilled);\n        }\n        else {\n            if (text == null) {\n                throw Error(\"ArgumentNullException(\\\"text\\\")\");\n            }\n            var temparg2 = arg2;\n            var temparg3 = arg3;\n            var layouter = new PdfStringLayouter();\n            var result = layouter.layout(text, this, temparg3, temparg2, false, new SizeF(0, 0));\n            // arg4 = (result.Remainder == null) ? text.length : text.length - result.Remainder.length;\n            arg4 = text.length;\n            arg5 = (result.empty) ? 0 : result.lines.length;\n            return result.actualSize;\n        }\n    };\n    /* tslint:enable */\n    //IPdfCache Members\n    /**\n     * `Checks` whether the object is similar to another object.\n     * @private\n     */\n    PdfFont.prototype.equalsTo = function (obj) {\n        var result = this.equalsToFont(obj);\n        return result;\n    };\n    /**\n     * Returns `internals` of the object.\n     * @private\n     */\n    PdfFont.prototype.getInternals = function () {\n        return this.pdfFontInternals;\n    };\n    /**\n     * Sets `internals` to the object.\n     * @private\n     */\n    PdfFont.prototype.setInternals = function (internals) {\n        if (internals == null) {\n            throw new Error('ArgumentNullException:internals');\n        }\n        this.pdfFontInternals = internals;\n    };\n    /**\n     * Sets the `style` of the font.\n     * @private\n     */\n    PdfFont.prototype.setStyle = function (style) {\n        this.fontStyle = style;\n    };\n    /**\n     * Applies `settings` to the default line width.\n     * @private\n     */\n    PdfFont.prototype.applyFormatSettings = function (line, format, width) {\n        // if (line == null) {\n        //     throw new Error(`ArgumentNullException:line`);\n        // }\n        var realWidth = width;\n        if (format != null && width > 0) {\n            // Space among characters is not default.\n            if (format.characterSpacing !== 0) {\n                realWidth += (line.length - 1) * format.characterSpacing;\n            }\n            // Space among words is not default.\n            if (format.wordSpacing !== 0) {\n                var symbols = StringTokenizer.spaces;\n                var whitespacesCount = StringTokenizer.getCharsCount(line, symbols);\n                realWidth += whitespacesCount * format.wordSpacing;\n            }\n        }\n        return realWidth;\n    };\n    //Constants\n    /**\n     * `Multiplier` of the symbol width.\n     * @default 0.001\n     * @private\n     */\n    PdfFont.charSizeMultiplier = 0.001;\n    /**\n     * `Synchronization` object.\n     * @private\n     */\n    PdfFont.syncObject = new Object();\n    return PdfFont;\n}());\nexport { PdfFont };\n","/**\n * Used to `write a string` into output file.\n * @private\n */\nvar PdfWriter = /** @class */ (function () {\n    /**\n     * Initialize an instance of `PdfWriter` class.\n     * @private\n     */\n    function PdfWriter(stream) {\n        this.streamWriter = stream;\n    }\n    Object.defineProperty(PdfWriter.prototype, \"document\", {\n        //properties\n        /**\n         * Gets and Sets the `document`.\n         * @private\n         */\n        get: function () {\n            return this.pdfDocument;\n        },\n        set: function (value) {\n            this.pdfDocument = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfWriter.prototype, \"position\", {\n        /**\n         * Gets the `position`.\n         * @private\n         */\n        get: function () {\n            return this.streamWriter.buffer.size;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfWriter.prototype, \"length\", {\n        /**\n         * Gets  the `length` of the stream'.\n         * @private\n         */\n        get: function () {\n            return this.streamWriter.buffer.size;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfWriter.prototype, \"stream\", {\n        /**\n         * Gets the `stream`.\n         * @private\n         */\n        get: function () {\n            var result = this.streamWriter;\n            return result;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    //public Methods\n    /**\n     * `Writes the specified data`.\n     * @private\n     */\n    PdfWriter.prototype.write = function (overload) {\n        var data = [];\n        var tempOverload = overload;\n        this.streamWriter.write(tempOverload);\n    };\n    return PdfWriter;\n}());\nexport { PdfWriter };\n","/**\n * public Enum for `CompositeFontType`.\n * @private\n */\nexport var ObjectStatus;\n(function (ObjectStatus) {\n    /**\n     * Specifies the type of `None`.\n     * @private\n     */\n    ObjectStatus[ObjectStatus[\"None\"] = 0] = \"None\";\n    /**\n     * Specifies the type of `Registered`.\n     * @private\n     */\n    ObjectStatus[ObjectStatus[\"Registered\"] = 1] = \"Registered\";\n})(ObjectStatus || (ObjectStatus = {}));\n","/**\n * PdfMainObjectCollection.ts class for EJ2-PDF\n */\nimport { Dictionary } from './../collections/dictionary';\nimport { ObjectStatus } from './enum';\n/**\n * The collection of all `objects` within a PDF document.\n * @private\n */\nvar PdfMainObjectCollection = /** @class */ (function () {\n    function PdfMainObjectCollection() {\n        //Fields\n        /**\n         * The collection of the `indirect objects`.\n         * @default []\n         * @private\n         */\n        this.objectCollections = [];\n        /**\n         * The collection of the `Indirect objects`.\n         * @default new Dictionary<number, ObjectInfo>()\n         * @private\n         */\n        this.mainObjectCollection = new Dictionary();\n        /**\n         * The collection of `primitive objects`.\n         * @private\n         */\n        this.primitiveObjectCollection = new Dictionary();\n    }\n    Object.defineProperty(PdfMainObjectCollection.prototype, \"count\", {\n        //Properties\n        /**\n         * Gets the `count`.\n         * @private\n         */\n        get: function () {\n            return this.objectCollections.length;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Gets the value of `ObjectInfo` from object collection.\n     * @private\n     */\n    PdfMainObjectCollection.prototype.items = function (index) {\n        return this.objectCollections[index];\n    };\n    Object.defineProperty(PdfMainObjectCollection.prototype, \"outIsNew\", {\n        //Methods\n        /**\n         * Specifies the value of `IsNew`.\n         * @private\n         */\n        get: function () {\n            return this.isNew;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * `Adds` the specified element.\n     * @private\n     */\n    PdfMainObjectCollection.prototype.add = function (element) {\n        var objInfo = new ObjectInfo(element);\n        this.objectCollections.push(objInfo);\n        if (!this.primitiveObjectCollection.containsKey(element)) {\n            this.primitiveObjectCollection.setValue(element, this.objectCollections.length - 1);\n        }\n        element.position = this.index = this.objectCollections.length - 1;\n        element.status = ObjectStatus.Registered;\n    };\n    /**\n     * `Looks` through the collection for the object specified.\n     * @private\n     */\n    PdfMainObjectCollection.prototype.lookFor = function (obj) {\n        var index = -1;\n        if (obj.position !== -1) {\n            return obj.position;\n        }\n        if (this.primitiveObjectCollection.containsKey(obj) && this.count === this.primitiveObjectCollection.size()) {\n            index = this.primitiveObjectCollection.getValue(obj);\n        }\n        else {\n            for (var i = this.count - 1; i >= 0; i--) {\n                var oi = this.objectCollections[i];\n                if (oi.object === obj) {\n                    index = i;\n                    break;\n                }\n            }\n        }\n        return index;\n    };\n    /**\n     * Gets the `reference of the object`.\n     * @private\n     */\n    PdfMainObjectCollection.prototype.getReference = function (index, isNew) {\n        this.index = this.lookFor(index);\n        var reference;\n        this.isNew = false;\n        var oi = this.objectCollections[this.index];\n        reference = oi.reference;\n        var obj = { reference: reference, wasNew: isNew };\n        return obj;\n    };\n    /**\n     * Tries to set the `reference to the object`.\n     * @private\n     */\n    PdfMainObjectCollection.prototype.trySetReference = function (obj, reference, found) {\n        var result = true;\n        found = true;\n        this.index = this.lookFor(obj);\n        var oi = this.objectCollections[this.index];\n        oi.setReference(reference);\n        return result;\n    };\n    PdfMainObjectCollection.prototype.destroy = function () {\n        for (var _i = 0, _a = this.objectCollections; _i < _a.length; _i++) {\n            var obj = _a[_i];\n            if (obj !== undefined) {\n                obj.pdfObject.position = -1;\n                obj.pdfObject.isSaving = undefined;\n                obj.pdfObject.objectCollectionIndex = undefined;\n                obj.pdfObject.position = undefined;\n            }\n        }\n        this.objectCollections = [];\n        this.mainObjectCollection = new Dictionary();\n        this.primitiveObjectCollection = new Dictionary();\n    };\n    return PdfMainObjectCollection;\n}());\nexport { PdfMainObjectCollection };\nvar ObjectInfo = /** @class */ (function () {\n    function ObjectInfo(obj, reference) {\n        this.pdfObject = obj;\n        this.pdfReference = reference;\n    }\n    Object.defineProperty(ObjectInfo.prototype, \"object\", {\n        //Properties\n        /**\n         * Gets the `object`.\n         * @private\n         */\n        get: function () {\n            return this.pdfObject;\n        },\n        set: function (value) {\n            this.pdfObject = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ObjectInfo.prototype, \"reference\", {\n        /**\n         * Gets the `reference`.\n         * @private\n         */\n        get: function () {\n            return this.pdfReference;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Sets the `reference`.\n     * @private\n     */\n    ObjectInfo.prototype.setReference = function (reference) {\n        this.pdfReference = reference;\n    };\n    return ObjectInfo;\n}());\nexport { ObjectInfo };\n","import { Encoding, StreamWriter } from '@syncfusion/ej2-file-utils';\nimport { PdfDocument } from './pdf-document';\n/**\n * `PdfDocumentBase` class represent common properties of PdfDocument classes.\n * @private\n */\nvar PdfDocumentBase = /** @class */ (function () {\n    function PdfDocumentBase(document) {\n        /**\n         * If the stream is copied,  then it specifies true.\n         * @private\n         */\n        this.isStreamCopied = false;\n        if (document instanceof PdfDocument) {\n            this.document = document;\n        }\n    }\n    Object.defineProperty(PdfDocumentBase.prototype, \"pdfObjects\", {\n        //Prpperties\n        /**\n         * Gets the `PDF objects` collection, which stores all objects and references to it..\n         * @private\n         */\n        get: function () {\n            return this.objects;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocumentBase.prototype, \"crossTable\", {\n        /**\n         * Gets the `cross-reference` table.\n         * @private\n         */\n        get: function () {\n            return this.pdfCrossTable;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocumentBase.prototype, \"currentSavingObj\", {\n        /**\n         * Gets or sets the current saving `object number`.\n         * @private\n         */\n        get: function () {\n            return this.currentSavingObject;\n        },\n        set: function (value) {\n            this.currentSavingObject = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocumentBase.prototype, \"catalog\", {\n        /**\n         * Gets the PDF document `catalog`.\n         * @private\n         */\n        get: function () {\n            return this.pdfCatalog;\n        },\n        set: function (value) {\n            this.pdfCatalog = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocumentBase.prototype, \"viewerPreferences\", {\n        /**\n         * Gets viewer preferences for presenting the PDF document in a viewer.\n         * ```typescript\n         * // Create a new PDF document\n         * let document : PdfDocument = new PdfDocument();\n         * // Gets viewer preferences\n         * let viewerPreferences : PdfViewerPreferences = document.viewerPreferences;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this.pdfCatalog.viewerPreferences;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    //Public methods\n    /**\n     * Sets the `main object collection`.\n     * @private\n     */\n    PdfDocumentBase.prototype.setMainObjectCollection = function (mainObjectCollection) {\n        this.objects = mainObjectCollection;\n    };\n    /**\n     * Sets the `cross table`.\n     * @private\n     */\n    PdfDocumentBase.prototype.setCrossTable = function (cTable) {\n        this.pdfCrossTable = cTable;\n    };\n    /**\n     * Sets the `catalog`.\n     * @private\n     */\n    PdfDocumentBase.prototype.setCatalog = function (catalog) {\n        this.pdfCatalog = catalog;\n    };\n    PdfDocumentBase.prototype.save = function (filename) {\n        var _this = this;\n        var encoding = new Encoding(true);\n        var SW = new StreamWriter(encoding);\n        if (typeof filename === 'undefined') {\n            var encoding_1 = new Encoding(true);\n            var SW_1 = new StreamWriter(encoding_1);\n            return new Promise(function (resolve, reject) {\n                /* tslint:disable-next-line:no-any */\n                var obj = {};\n                obj.blobData = new Blob([_this.document.docSave(SW_1, true)], { type: 'application/pdf' });\n                resolve(obj);\n            });\n        }\n        else {\n            this.document.docSave(SW, filename, true);\n        }\n    };\n    /**\n     * `Clone` of parent object - PdfDocument.\n     * @private\n     */\n    PdfDocumentBase.prototype.clone = function () {\n        return this.document;\n    };\n    return PdfDocumentBase;\n}());\nexport { PdfDocumentBase };\n","/**\n * public Enum for `ObjectType`.\n * @private\n */\nexport var ObjectType;\n(function (ObjectType) {\n    /**\n     * Specifies the type of `Free`.\n     * @private\n     */\n    ObjectType[ObjectType[\"Free\"] = 0] = \"Free\";\n    /**\n     * Specifies the type of `Normal`.\n     * @private\n     */\n    ObjectType[ObjectType[\"Normal\"] = 1] = \"Normal\";\n    /**\n     * Specifies the type of `Packed`.\n     * @private\n     */\n    ObjectType[ObjectType[\"Packed\"] = 2] = \"Packed\";\n})(ObjectType || (ObjectType = {}));\n","/**\n * `PdfBoolean` class is used to perform boolean related primitive operations.\n * @private\n */\nvar PdfBoolean = /** @class */ (function () {\n    //constructor\n    /**\n     * Initializes a new instance of the `PdfBoolean` class.\n     * @private\n     */\n    function PdfBoolean(value) {\n        /**\n         * Internal variable to store the `position`.\n         * @default -1\n         * @private\n         */\n        this.currentPosition = -1;\n        this.value = value;\n    }\n    Object.defineProperty(PdfBoolean.prototype, \"status\", {\n        //Properties\n        /**\n         * Gets or sets the `Status` of the specified object.\n         * @private\n         */\n        get: function () {\n            return this.objectStatus;\n        },\n        set: function (value) {\n            this.objectStatus = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBoolean.prototype, \"isSaving\", {\n        /**\n         * Gets or sets a value indicating whether this document `is saving` or not.\n         * @private\n         */\n        get: function () {\n            return this.saving;\n        },\n        set: function (value) {\n            this.saving = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBoolean.prototype, \"objectCollectionIndex\", {\n        /**\n         * Gets or sets the `index` value of the specified object.\n         * @private\n         */\n        get: function () {\n            return this.index;\n        },\n        set: function (value) {\n            this.index = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBoolean.prototype, \"position\", {\n        /**\n         * Gets or sets the `position` of the object.\n         * @private\n         */\n        get: function () {\n            return this.currentPosition;\n        },\n        set: function (value) {\n            this.currentPosition = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBoolean.prototype, \"clonedObject\", {\n        /**\n         * Returns `cloned object`.\n         * @private\n         */\n        get: function () {\n            var rValue = null;\n            return rValue;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * `Saves` the object using the specified writer.\n     * @private\n     */\n    PdfBoolean.prototype.save = function (writer) {\n        writer.write(this.boolToStr(this.value));\n    };\n    /**\n     * Creates a `copy of PdfBoolean`.\n     * @private\n     */\n    PdfBoolean.prototype.clone = function (crossTable) {\n        var newNumber = new PdfBoolean(this.value);\n        return newNumber;\n    };\n    // Implementation\n    /**\n     * Converts `boolean to string` - 0/1 'true'/'false'.\n     * @private\n     */\n    PdfBoolean.prototype.boolToStr = function (value) {\n        return value ? 'true' : 'false';\n    };\n    return PdfBoolean;\n}());\nexport { PdfBoolean };\n","import { DictionaryProperties } from './../input-output/pdf-dictionary-properties';\nimport { PdfDictionary } from './../primitives/pdf-dictionary';\nimport { PdfBoolean } from './../primitives/pdf-boolean';\nimport { PdfName } from './../primitives/pdf-name';\n/**\n * Defines the way the document is to be presented on the screen or in print.\n * ```typescript\n * // Create a new PDF document\n * let document : PdfDocument = new PdfDocument();\n * // Gets viewer preferences\n * let viewerPreferences : PdfViewerPreferences = document.viewerPreferences;\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfViewerPreferences = /** @class */ (function () {\n    /**\n     * Initialize a new instance of `PdfViewerPreferences` class.\n     *\n     * @private\n     * ```\n    */\n    function PdfViewerPreferences(catalog) {\n        this._dictionaryProperties = new DictionaryProperties();\n        this._centerWindow = false;\n        this._fitWindow = false;\n        this._displayTitle = false;\n        this._splitWindow = false;\n        this._hideMenuBar = false;\n        this._hideToolBar = false;\n        this._hideWindowUI = false;\n        this._pageMode = PdfPageMode.UseNone;\n        this._pageLayout = PdfPageLayout.SinglePage;\n        this._dictionary = new PdfDictionary();\n        this._duplex = DuplexMode.None;\n        this._catalog = catalog;\n    }\n    Object.defineProperty(PdfViewerPreferences.prototype, \"centerWindow\", {\n        /**\n         * A flag specifying whether to position the document’s window in the center of the screen.\n         * ```typescript\n         * // Create a new PDF document\n         * let document : PdfDocument = new PdfDocument();\n         * // Gets the viewer preferences of the document\n         * let viewerPreferences : PdfViewerPreferences = document.viewerPreferences;\n         * // Gets the center window\n         * let centerWindow : boolean = viewerPreferences.centerWindow;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._centerWindow;\n        },\n        /**\n         * A flag specifying whether to position the document’s window in the center of the screen.\n         * ```typescript\n         * // Create a new PDF document\n         * let document : PdfDocument = new PdfDocument();\n         * // Gets the viewer preferences of the document\n         * let viewerPreferences : PdfViewerPreferences = document.viewerPreferences;\n         * // Sets the center window\n         * viewerPreferences.centerWindow = true;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._centerWindow = value;\n            this._dictionary.items.setValue(this._dictionaryProperties.centerWindow, new PdfBoolean(this._centerWindow));\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfViewerPreferences.prototype, \"displayTitle\", {\n        /**\n         * A flag specifying whether the window’s title bar should display the document title taken\n         * from the Title entry of the document information dictionary. If false, the title bar\n         * should instead display the name of the PDF file containing the document.\n         * ```typescript\n         * // Create a new PDF document\n         * let document : PdfDocument = new PdfDocument();\n         * // Gets the viewer preferences of the document\n         * let viewerPreferences : PdfViewerPreferences = document.viewerPreferences;\n         * // Gets the display title\n         * let displayTitle : boolean = viewerPreferences.displayTitle;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._displayTitle;\n        },\n        /**\n         * A flag specifying whether the window’s title bar should display the document title taken\n         * from the Title entry of the document information dictionary. If false, the title bar\n         * should instead display the name of the PDF file containing the document.\n         * ```typescript\n         * // Create a new PDF document\n         * let document : PdfDocument = new PdfDocument();\n         * // Gets the viewer preferences of the document\n         * let viewerPreferences : PdfViewerPreferences = document.viewerPreferences;\n         * // Sets the display title\n         * viewerPreferences.displayTitle = true;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._displayTitle = value;\n            this._dictionary.items.setValue(this._dictionaryProperties.displayTitle, new PdfBoolean(this._displayTitle));\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfViewerPreferences.prototype, \"fitWindow\", {\n        /**\n         * A flag specifying whether to resize the document’s window to fit the size of the first\n         * displayed page.\n         * ```typescript\n         * // Create a new PDF document\n         * let document : PdfDocument = new PdfDocument();\n         * // Gets the viewer preferences of the document\n         * let viewerPreferences : PdfViewerPreferences = document.viewerPreferences;\n         * // Gets the fit window\n         * let fitWindow : boolean = viewerPreferences.fitWindow;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._fitWindow;\n        },\n        /**\n         * A flag specifying whether to resize the document’s window to fit the size of the first\n         * displayed page.\n         * ```typescript\n         * // Create a new PDF document\n         * let document : PdfDocument = new PdfDocument();\n         * // Gets the viewer preferences of the document\n         * let viewerPreferences : PdfViewerPreferences = document.viewerPreferences;\n         * // Sets the fit window\n         * viewerPreferences.fitWindow = true;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._fitWindow = value;\n            this._dictionary.items.setValue(this._dictionaryProperties.fitWindow, new PdfBoolean(this._fitWindow));\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfViewerPreferences.prototype, \"hideMenuBar\", {\n        /**\n         * A flag specifying whether to hide the viewer application’s menu bar when the\n         * document is active.\n         * ```typescript\n         * // Create a new PDF document\n         * let document : PdfDocument = new PdfDocument();\n         * // Gets the viewer preferences of the document\n         * let viewerPreferences : PdfViewerPreferences = document.viewerPreferences;\n         * // Gets the hide menu bar\n         * let hideMenuBar: boolean = viewerPreferences.hideMenuBar;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._hideMenuBar;\n        },\n        /**\n         * A flag specifying whether to hide the viewer application’s menu bar when the\n         * document is active.\n         * ```typescript\n         * // Create a new PDF document\n         * let document : PdfDocument = new PdfDocument();\n         * // Gets the viewer preferences of the document\n         * let viewerPreferences : PdfViewerPreferences = document.viewerPreferences;\n         * // Sets the hide menu bar\n         * viewerPreferences.hideMenuBar = true;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._hideMenuBar = value;\n            this._dictionary.items.setValue(this._dictionaryProperties.hideMenuBar, new PdfBoolean(this._hideMenuBar));\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfViewerPreferences.prototype, \"hideToolBar\", {\n        /**\n         * A flag specifying whether to hide the viewer application’s tool bar when the\n         * document is active.\n         * ```typescript\n         * // Create a new PDF document\n         * let document : PdfDocument = new PdfDocument();\n         * // Gets the viewer preferences of the document\n         * let viewerPreferences : PdfViewerPreferences = document.viewerPreferences;\n         * // Gets the hide tool bar\n         * let hideToolBar: boolean = viewerPreferences.hideToolBar;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._hideToolBar;\n        },\n        /**\n         * A flag specifying whether to hide the viewer application’s tool bar when the\n         * document is active.\n         * ```typescript\n         * // Create a new PDF document\n         * let document : PdfDocument = new PdfDocument();\n         * // Gets the viewer preferences of the document\n         * let viewerPreferences : PdfViewerPreferences = document.viewerPreferences;\n         * // Sets the hide tool bar\n         * viewerPreferences.hideToolbar = true;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._hideToolBar = value;\n            this._dictionary.items.setValue(this._dictionaryProperties.hideToolBar, new PdfBoolean(this._hideToolBar));\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfViewerPreferences.prototype, \"hideWindowUI\", {\n        /**\n         * A flag specifying whether to hide user interface elements in the document’s window\n         * (such as scroll bars and navigation controls), leaving only the document’s contents displayed.\n         * ```typescript\n         * // Create a new PDF document\n         * let document : PdfDocument = new PdfDocument();\n         * // Gets the viewer preferences of the document\n         * let viewerPreferences : PdfViewerPreferences = document.viewerPreferences;\n         * // Gets the hide window UI\n         * let hideWindowUI: boolean = viewerPreferences.hideWindowUI;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._hideWindowUI;\n        },\n        /**\n         * A flag specifying whether to hide user interface elements in the document’s window\n         * (such as scroll bars and navigation controls), leaving only the document’s contents displayed.\n         * ```typescript\n         * // Create a new PDF document\n         * let document : PdfDocument = new PdfDocument();\n         * // Gets the viewer preferences of the document\n         * let viewerPreferences : PdfViewerPreferences = document.viewerPreferences;\n         * // Sets the hide window UI\n         * viewerPreferences.hideWindowUI = true;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._hideWindowUI = value;\n            this._dictionary.items.setValue(this._dictionaryProperties.hideWindowUI, new PdfBoolean(this._hideWindowUI));\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfViewerPreferences.prototype, \"pageMode\", {\n        /**\n         * A name object specifying how the document should be displayed when opened.\n         * ```typescript\n         * // Create a new PDF document\n         * let document : PdfDocument = new PdfDocument();\n         * // Gets the viewer preferences of the document\n         * let viewerPreferences : PdfViewerPreferences = document.viewerPreferences;\n         * // Gets the page mode\n         * let pageMode: PdfPageMode = viewerPreferences.pageMode;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._pageMode;\n        },\n        /**\n         * A name object specifying how the document should be displayed when opened.\n         * ```typescript\n         * // Create a new PDF document\n         * let document : PdfDocument = new PdfDocument();\n         * // Gets the viewer preferences of the document\n         * let viewerPreferences : PdfViewerPreferences = document.viewerPreferences;\n         * // Sets the page mode\n         * viewerPreferences.pageMode = PdfPageMode.UseOutlines;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._pageMode = value;\n            this._catalog.items.setValue(this._dictionaryProperties.pageMode, new PdfName(this._mapPageMode(this._pageMode)));\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfViewerPreferences.prototype, \"duplex\", {\n        /**\n         * Gets print duplex mode handling option to use when printing the file from the print dialog.\n         * ```typescript\n         * // Create a new PDF document\n         * let document : PdfDocument = new PdfDocument();\n         * // Gets the viewer preferences of the document\n         * let viewerPreferences : PdfViewerPreferences = document.viewerPreferences;\n         * // Gets the duplex\n         * let duplex : DuplexMode = viewerPreferences.duplex;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._duplex;\n        },\n        /**\n         * Sets print duplex mode handling option to use when printing the file from the print dialog.\n         * ```typescript\n         * // Create a new PDF document\n         * let document : PdfDocument = new PdfDocument();\n         * // Gets the viewer preferences of the document\n         * let viewerPreferences : PdfViewerPreferences = document.viewerPreferences;\n         * // Sets the duplex\n         * viewerPreferences.duplex = DuplexMode.DuplexFlipLongEdge;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._duplex = value;\n            this._catalog.items.setValue(this._dictionaryProperties.duplex, new PdfName(this._mapDuplexMode(this._duplex)));\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfViewerPreferences.prototype, \"pageLayout\", {\n        /**\n         * A name object specifying the page layout to be used when the document is opened.\n         * ```typescript\n         * // Create a new PDF document\n         * let document : PdfDocument = new PdfDocument();\n         * // Gets the viewer preferences of the document\n         * let viewerPreferences : PdfViewerPreferences = document.viewerPreferences;\n         * // Gets the page layout\n         * let pageLayout : PdfPageLayout = viewerPreferences.pageLayout;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._pageLayout;\n        },\n        /**\n         * A name object specifying the page layout to be used when the document is opened.\n         * ```typescript\n         * // Create a new PDF document\n         * let document : PdfDocument = new PdfDocument();\n         * // Gets the viewer preferences of the document\n         * let viewerPreferences : PdfViewerPreferences = document.viewerPreferences;\n         * // Sets the page layout\n         * viewerPreferences.pageLayout = PdfPageLayout.TwoColumnLeft;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._pageLayout = value;\n            this._catalog.items.setValue(this._dictionaryProperties.pageLayout, new PdfName(this._mapPageLayout(this._pageLayout)));\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfViewerPreferences.prototype, \"pageScaling\", {\n        /**\n         * Gets the page scaling option to be selected\n         * when a print dialog is displayed for this document.\n         * ```typescript\n         * // Create a new PDF document\n         * let document : PdfDocument = new PdfDocument();\n         * // Gets the viewer preferences of the document\n         * let viewerPreferences : PdfViewerPreferences = document.viewerPreferences;\n         * // Gets the page scaling\n         * let pageScaling : PageScalingMode = viewerPreferences.pageScaling;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._pageScaling;\n        },\n        /**\n         * Sets the page scaling option to be selected\n         * when a print dialog is displayed for this document.\n         * ```typescript\n         * // Create a new PDF document\n         * let document : PdfDocument = new PdfDocument();\n         * // Gets the viewer preferences of the document\n         * let viewerPreferences : PdfViewerPreferences = document.viewerPreferences;\n         * // Sets the page scaling\n         * viewerPreferences.pageScaling = PageScalingMode.None;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._pageScaling = value;\n            if (this._pageScaling === PageScalingMode.AppDefault && this._dictionary.items.containsKey(this._dictionaryProperties.printScaling)) {\n                this._dictionary.items.remove(this._dictionaryProperties.printScaling);\n            }\n            else if (this._pageScaling === PageScalingMode.None) {\n                this._dictionary.items.setValue(this._dictionaryProperties.printScaling, new PdfName('None'));\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfViewerPreferences.prototype, \"element\", {\n        /**\n         * Primivie element\n         *\n         * @private\n         */\n        get: function () {\n            return this._dictionary;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfViewerPreferences.prototype._mapDuplexMode = function (mode) {\n        switch (mode) {\n            case DuplexMode.Simplex:\n                return 'Simplex';\n            case DuplexMode.DuplexFlipShortEdge:\n                return 'DuplexFlipShortEdge';\n            case DuplexMode.DuplexFlipLongEdge:\n                return 'DuplexFlipLongEdge';\n            case DuplexMode.None:\n                return 'None';\n        }\n    };\n    PdfViewerPreferences.prototype._mapPageMode = function (mode) {\n        switch (mode) {\n            case PdfPageMode.UseNone:\n                return 'UseNone';\n            case PdfPageMode.UseOutlines:\n                return 'UseOutlines';\n            case PdfPageMode.UseThumbs:\n                return 'UseThumbs';\n            case PdfPageMode.FullScreen:\n                return 'FullScreen';\n            case PdfPageMode.UseOC:\n                return 'UseOC';\n            case PdfPageMode.UseAttachments:\n                return 'UseAttachments';\n        }\n    };\n    PdfViewerPreferences.prototype._mapPageLayout = function (layout) {\n        switch (layout) {\n            case PdfPageLayout.SinglePage:\n                return 'SinglePage';\n            case PdfPageLayout.OneColumn:\n                return 'OneColumn';\n            case PdfPageLayout.TwoColumnLeft:\n                return 'TwoColumnLeft';\n            case PdfPageLayout.TwoColumnRight:\n                return 'TwoColumnRight';\n            case PdfPageLayout.TwoPageLeft:\n                return 'TwoPageLeft';\n            case PdfPageLayout.TwoPageRight:\n                return 'TwoPageRight';\n        }\n    };\n    return PdfViewerPreferences;\n}());\nexport { PdfViewerPreferences };\n/**\n * Represents mode of document displaying.\n * ```typescript\n * // Create a new PDF document\n * let document : PdfDocument = new PdfDocument();\n * // Gets the viewer preferences of the document\n * let viewerPreferences : PdfViewerPreferences = document.viewerPreferences;\n * // Sets the page mode\n * viewerPreferences.pageMode = PdfPageMode.UseOutlines;\n * // Destroy the document\n * document.destroy();\n * ```\n */\nexport var PdfPageMode;\n(function (PdfPageMode) {\n    /**\n     * Default value. Neither document outline nor thumbnail images visible.\n     */\n    PdfPageMode[PdfPageMode[\"UseNone\"] = 0] = \"UseNone\";\n    /**\n     * Document outline visible.\n     */\n    PdfPageMode[PdfPageMode[\"UseOutlines\"] = 1] = \"UseOutlines\";\n    /**\n     * Thumbnail images visible.\n     */\n    PdfPageMode[PdfPageMode[\"UseThumbs\"] = 2] = \"UseThumbs\";\n    /**\n     * Full-screen mode, with no menu bar, window controls, or any other window visible.\n     */\n    PdfPageMode[PdfPageMode[\"FullScreen\"] = 3] = \"FullScreen\";\n    /**\n     * Optional content group panel visible.\n     */\n    PdfPageMode[PdfPageMode[\"UseOC\"] = 4] = \"UseOC\";\n    /**\n     * Attachments are visible.\n     */\n    PdfPageMode[PdfPageMode[\"UseAttachments\"] = 5] = \"UseAttachments\";\n})(PdfPageMode || (PdfPageMode = {}));\n/**\n * A name object specifying the page layout to be used when the document is opened.\n * ```typescript\n * // Create a new PDF document\n * let document : PdfDocument = new PdfDocument();\n * // Gets the viewer preferences of the document\n * let viewerPreferences : PdfViewerPreferences = document.viewerPreferences;\n * // Sets the page layout\n * viewerPreferences.pageLayout = PdfPageLayout.TwoColumnLeft;\n * // Destroy the document\n * document.destroy();\n * ```\n */\nexport var PdfPageLayout;\n(function (PdfPageLayout) {\n    /**\n     * Default Value. Display one page at a time.\n     */\n    PdfPageLayout[PdfPageLayout[\"SinglePage\"] = 0] = \"SinglePage\";\n    /**\n     * Display the pages in one column.\n     */\n    PdfPageLayout[PdfPageLayout[\"OneColumn\"] = 1] = \"OneColumn\";\n    /**\n     * Display the pages in two columns, with odd numbered\n     * pages on the left.\n     */\n    PdfPageLayout[PdfPageLayout[\"TwoColumnLeft\"] = 2] = \"TwoColumnLeft\";\n    /**\n     * Display the pages in two columns, with odd numbered\n     * pages on the right.\n     */\n    PdfPageLayout[PdfPageLayout[\"TwoColumnRight\"] = 3] = \"TwoColumnRight\";\n    /**\n     * Display the pages two at a time, with odd-numbered pages on the left.\n     */\n    PdfPageLayout[PdfPageLayout[\"TwoPageLeft\"] = 4] = \"TwoPageLeft\";\n    /**\n     * Display the pages two at a time, with odd-numbered pages on the right.\n     */\n    PdfPageLayout[PdfPageLayout[\"TwoPageRight\"] = 5] = \"TwoPageRight\";\n})(PdfPageLayout || (PdfPageLayout = {}));\n/**\n * The paper handling option to use when printing the file from the print dialog.\n * ```typescript\n * // Create a new PDF document\n * let document : PdfDocument = new PdfDocument();\n * // Gets the viewer preferences of the document\n * let viewerPreferences : PdfViewerPreferences = document.viewerPreferences;\n * // Sets the duplex\n * viewerPreferences.duplex = DuplexMode.DuplexFlipLongEdge;\n * // Destroy the document\n * document.destroy();\n * ```\n */\nexport var DuplexMode;\n(function (DuplexMode) {\n    /**\n     * Print single-sided.\n     */\n    DuplexMode[DuplexMode[\"Simplex\"] = 0] = \"Simplex\";\n    /**\n     * Duplex and flip on the short edge of the sheet.\n     */\n    DuplexMode[DuplexMode[\"DuplexFlipShortEdge\"] = 1] = \"DuplexFlipShortEdge\";\n    /**\n     * Duplex and flip on the long edge of the sheet.\n     */\n    DuplexMode[DuplexMode[\"DuplexFlipLongEdge\"] = 2] = \"DuplexFlipLongEdge\";\n    /**\n     * Default value.\n     */\n    DuplexMode[DuplexMode[\"None\"] = 3] = \"None\";\n})(DuplexMode || (DuplexMode = {}));\n/**\n * Specifies the different page scaling option that shall be selected\n * when a print dialog is displayed for this document.\n * ```typescript\n * // Create a new PDF document\n * let document : PdfDocument = new PdfDocument();\n * // Gets the viewer preferences of the document\n * let viewerPreferences : PdfViewerPreferences = document.viewerPreferences;\n * // Sets the page scaling\n * viewerPreferences.pageScaling = PageScalingMode.None;\n * // Destroy the document\n * document.destroy();\n * ```\n */\nexport var PageScalingMode;\n(function (PageScalingMode) {\n    /**\n     * Indicates the conforming reader’s default print scaling.\n     */\n    PageScalingMode[PageScalingMode[\"AppDefault\"] = 0] = \"AppDefault\";\n    /**\n     * Indicates no page scaling.\n     */\n    PageScalingMode[PageScalingMode[\"None\"] = 1] = \"None\";\n})(PageScalingMode || (PageScalingMode = {}));\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * PdfCatalog.ts class for EJ2-PDF\n */\nimport { PdfDictionary } from './../primitives/pdf-dictionary';\nimport { DictionaryProperties } from './../input-output/pdf-dictionary-properties';\nimport { PdfName } from './../primitives/pdf-name';\nimport { PdfReferenceHolder } from './../primitives/pdf-reference';\nimport { PdfViewerPreferences } from './pdf-viewer-preferences';\n/**\n * `PdfCatalog` class represents internal catalog of the Pdf document.\n * @private\n */\nvar PdfCatalog = /** @class */ (function (_super) {\n    __extends(PdfCatalog, _super);\n    //constructor\n    /**\n     * Initializes a new instance of the `PdfCatalog` class.\n     * @private\n     */\n    function PdfCatalog() {\n        var _this = _super.call(this) || this;\n        //fields\n        /**\n         * Internal variable to store collection of `sections`.\n         * @default null\n         * @private\n         */\n        _this.sections = null;\n        /**\n         * Internal variable for accessing fields from `DictionryProperties` class.\n         * @private\n         */\n        _this.tempDictionaryProperties = new DictionaryProperties();\n        _this.items.setValue(new DictionaryProperties().type, new PdfName('Catalog'));\n        return _this;\n    }\n    Object.defineProperty(PdfCatalog.prototype, \"pages\", {\n        //Properties\n        /**\n         * Gets or sets the sections, which contain `pages`.\n         * @private\n         */\n        get: function () {\n            return this.sections;\n        },\n        set: function (value) {\n            var dictionary = value.element;\n            // if (this.sections !== value) {\n            //     this.sections = value;\n            //     this.Items.setValue(this.tempDictionaryProperties.pages, new PdfReferenceHolder(value));\n            // }\n            this.sections = value;\n            this.items.setValue(this.tempDictionaryProperties.pages, new PdfReferenceHolder(value));\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfCatalog.prototype, \"viewerPreferences\", {\n        /**\n         * Gets the viewer preferences of the PDF document.\n         * @private\n         */\n        get: function () {\n            if (this._viewerPreferences === null || typeof this._viewerPreferences === 'undefined') {\n                this._viewerPreferences = new PdfViewerPreferences(this);\n                this.items.setValue(this.tempDictionaryProperties.viewerPreferences, new PdfReferenceHolder(this._viewerPreferences.element));\n            }\n            return this._viewerPreferences;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfCatalog;\n}(PdfDictionary));\nexport { PdfCatalog };\n","import { ObjectStatus } from './../input-output/enum';\nimport { PdfDictionary } from './../primitives/pdf-dictionary';\nimport { DictionaryProperties } from './pdf-dictionary-properties';\nimport { Operators } from './pdf-operators';\nimport { Dictionary } from './../collections/dictionary';\nimport { PdfReference } from './../primitives/pdf-reference';\nimport { ObjectType } from './cross-table';\nimport { PdfStream } from './../primitives/pdf-stream';\nimport { PdfNumber } from './../primitives/pdf-number';\nimport { PdfCatalog } from './../document/pdf-catalog';\n/**\n * `PdfCrossTable` is responsible for intermediate level parsing\n * and savingof a PDF document.\n * @private\n */\nvar PdfCrossTable = /** @class */ (function () {\n    function PdfCrossTable() {\n        /**\n         * The modified `objects` that should be saved.\n         * @private\n         */\n        this.objects = new Dictionary();\n        /**\n         * Holds `maximal generation number` or offset to object.\n         * @default 0\n         * @private\n         */\n        this.maxGenNumIndex = 0;\n        /**\n         * The `number of the objects`.\n         * @default 0\n         * @private\n         */\n        this.objectCount = 0;\n        /**\n         * Internal variable for accessing fields from `DictionryProperties` class.\n         * @default new PdfDictionaryProperties()\n         * @private\n         */\n        this.dictionaryProperties = new DictionaryProperties();\n    }\n    Object.defineProperty(PdfCrossTable.prototype, \"isMerging\", {\n        //Properties\n        /**\n         * Gets or sets if the document `is merged`.\n         * @private\n         */\n        get: function () {\n            return this.merging;\n        },\n        set: function (value) {\n            this.merging = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfCrossTable.prototype, \"trailer\", {\n        /**\n         * Gets the `trailer`.\n         * @private\n         */\n        get: function () {\n            if (this.internalTrailer == null) {\n                this.internalTrailer = new PdfStream();\n            }\n            return this.internalTrailer;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfCrossTable.prototype, \"document\", {\n        /**\n         * Gets or sets the main `PdfDocument` class instance.\n         * @private\n         */\n        get: function () {\n            return this.pdfDocument;\n        },\n        set: function (value) {\n            this.pdfDocument = value;\n            this.items = this.pdfDocument.pdfObjects;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfCrossTable.prototype, \"pdfObjects\", {\n        /**\n         * Gets the catched `PDF object` main collection.\n         * @private\n         */\n        get: function () {\n            return this.items;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfCrossTable.prototype, \"objectCollection\", {\n        /**\n         * Gets the `object collection`.\n         * @private\n         */\n        get: function () {\n            return this.pdfDocument.pdfObjects;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfCrossTable.prototype, \"count\", {\n        /**\n         * Gets or sets the `number of the objects` within the document.\n         * @private\n         */\n        get: function () {\n            return this.objectCount;\n        },\n        set: function (value) {\n            this.objectCount = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfCrossTable.prototype, \"nextObjNumber\", {\n        /**\n         * Returns `next available object number`.\n         * @private\n         */\n        get: function () {\n            this.count = this.count + 1;\n            return this.count;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfCrossTable.prototype.save = function (writer, filename) {\n        this.saveHead(writer);\n        var state = false;\n        this.mappedReferences = null;\n        this.objects.clear();\n        this.markTrailerReferences();\n        this.saveObjects(writer);\n        var saveCount = this.count;\n        var xrefPos = writer.position;\n        this.registerObject(0, new PdfReference(0, -1), true);\n        var prevXRef = 0;\n        writer.write(Operators.xref);\n        writer.write(Operators.newLine);\n        this.saveSections(writer);\n        this.saveTrailer(writer, this.count, prevXRef);\n        this.saveTheEndess(writer, xrefPos);\n        this.count = saveCount;\n        for (var i = 0; i < this.objectCollection.count; ++i) {\n            var oi = this.objectCollection.items(i);\n            oi.object.isSaving = false;\n        }\n        if (typeof filename === 'undefined') {\n            return writer.stream.buffer;\n        }\n        else {\n            writer.stream.save(filename);\n        }\n    };\n    /**\n     * `Saves the endess` of the file.\n     * @private\n     */\n    PdfCrossTable.prototype.saveTheEndess = function (writer, xrefPos) {\n        writer.write(Operators.newLine + Operators.startxref + Operators.newLine);\n        writer.write(xrefPos.toString() + Operators.newLine);\n        writer.write(Operators.eof + Operators.newLine);\n    };\n    /**\n     * `Saves the new trailer` dictionary.\n     * @private\n     */\n    PdfCrossTable.prototype.saveTrailer = function (writer, count, prevXRef) {\n        writer.write(Operators.trailer + Operators.newLine);\n        // Save the dictionary.\n        var trailer = this.trailer;\n        trailer.items.setValue(this.dictionaryProperties.size, new PdfNumber(this.objectCount + 1));\n        trailer = new PdfDictionary(trailer); // Make it real dictionary.\n        trailer.setEncrypt(false);\n        trailer.save(writer);\n    };\n    /**\n     * `Saves the xref section`.\n     * @private\n     */\n    PdfCrossTable.prototype.saveSections = function (writer) {\n        var objectNum = 0;\n        var count = 0;\n        do {\n            count = this.prepareSubsection(objectNum);\n            this.saveSubsection(writer, objectNum, count);\n            objectNum += count;\n        } while (count !== 0);\n    };\n    /**\n     * `Saves a subsection`.\n     * @private\n     */\n    PdfCrossTable.prototype.saveSubsection = function (writer, objectNum, count) {\n        if (count <= 0 || objectNum >= this.count) {\n            return;\n        }\n        var subsectionHead = '{0} {1}{2}';\n        writer.write(objectNum + ' ' + (count + 1) + Operators.newLine);\n        for (var i = objectNum; i <= objectNum + count; ++i) {\n            var obj = this.objects.getValue(i);\n            var str = '';\n            if (obj.type === ObjectType.Free) {\n                str = this.getItem(obj.offset, 65535, true);\n            }\n            else {\n                str = this.getItem(obj.offset, obj.generation, false);\n            }\n            writer.write(str);\n        }\n    };\n    /**\n     * Generates string for `xref table item`.\n     * @private\n     */\n    PdfCrossTable.prototype.getItem = function (offset, genNumber, isFree) {\n        var returnString = '';\n        var addOffsetLength = 10 - offset.toString().length;\n        if (genNumber <= 0) {\n            genNumber = 0;\n        }\n        var addGenNumberLength = (5 - genNumber.toString().length) <= 0 ? 0 : (5 - genNumber.toString().length);\n        for (var index = 0; index < addOffsetLength; index++) {\n            returnString = returnString + '0';\n        }\n        returnString = returnString + offset.toString() + ' ';\n        for (var index = 0; index < addGenNumberLength; index++) {\n            returnString = returnString + '0';\n        }\n        returnString = returnString + genNumber.toString() + ' ';\n        returnString = returnString + ((isFree) ? Operators.f : Operators.n) + Operators.newLine;\n        return returnString;\n    };\n    /**\n     * `Prepares a subsection` of the current section within the cross-reference table.\n     * @private\n     */\n    PdfCrossTable.prototype.prepareSubsection = function (objectNum) {\n        var count = 0;\n        var i;\n        var total = this.count;\n        for (var k = 0; k < this.document.pdfObjects.count; k++) {\n            var reference = this.document.pdfObjects.items(k).reference;\n            var refString = reference.toString();\n            var refArray = refString.split(' ');\n        }\n        if (objectNum >= total) {\n            return count;\n        }\n        // search for first changed indirect object.\n        for (i = objectNum; i < total; ++i) {\n            break;\n        }\n        objectNum = i;\n        // look up for all indirect objects in one subsection.\n        for (; i < total; ++i) {\n            ++count;\n        }\n        return count;\n    };\n    /**\n     * `Marks the trailer references` being saved.\n     * @private\n     */\n    PdfCrossTable.prototype.markTrailerReferences = function () {\n        var tempArray;\n        var keys = this.trailer.items.keys();\n        var values = this.trailer.items.values();\n    };\n    /**\n     * `Saves the head`.\n     * @private\n     */\n    PdfCrossTable.prototype.saveHead = function (writer) {\n        var version = this.generateFileVersion(writer.document);\n        writer.write('%PDF-' + version);\n        writer.write(Operators.newLine);\n    };\n    /**\n     * Generates the `version` of the file.\n     * @private\n     */\n    PdfCrossTable.prototype.generateFileVersion = function (document) {\n        var iVersion = 4;\n        var version = '1.' + iVersion.toString();\n        return version;\n    };\n    PdfCrossTable.prototype.getReference = function (obj, bNew) {\n        if (typeof bNew === 'undefined') {\n            var wasNew = false;\n            return this.getReference(obj, wasNew);\n        }\n        else {\n            //code splitted for reducing lines of code exceeds 100.\n            return this.getSubReference(obj, bNew);\n        }\n    };\n    /**\n     * Retrieves the `reference` of the object given.\n     * @private\n     */\n    PdfCrossTable.prototype.getSubReference = function (obj, bNew) {\n        var isNew = false;\n        var wasNew;\n        var reference = null;\n        // if (obj.IsSaving) {\n        if (this.items.count > 0 && obj.objectCollectionIndex > 0 && this.items.count > obj.objectCollectionIndex - 1) {\n            var tempObj = this.document.pdfObjects.getReference(obj, wasNew);\n            reference = tempObj.reference;\n            wasNew = tempObj.wasNew;\n        }\n        if (reference == null) {\n            if (obj.status === ObjectStatus.Registered) {\n                wasNew = false;\n            }\n            else {\n                wasNew = true;\n            }\n        }\n        else {\n            wasNew = false;\n        }\n        // need to add mapped reference code\n        if (reference == null) {\n            var objnumber = this.nextObjNumber;\n            reference = new PdfReference(objnumber, 0);\n            var found = void 0;\n            if (wasNew) {\n                this.document.pdfObjects.add(obj);\n                this.document.pdfObjects.trySetReference(obj, reference, found);\n                var tempIndex = this.document.pdfObjects.count - 1;\n                var tempkey = this.document.pdfObjects.objectCollections[tempIndex].reference.objNumber;\n                var tempvalue = this.document.pdfObjects.objectCollections[this.document.pdfObjects.count - 1];\n                this.document.pdfObjects.mainObjectCollection.setValue(tempkey, tempvalue);\n                obj.position = -1;\n            }\n            else {\n                this.document.pdfObjects.trySetReference(obj, reference, found);\n            }\n            obj.objectCollectionIndex = reference.objNumber;\n            obj.status = ObjectStatus.None;\n            isNew = true;\n        }\n        bNew = isNew || this.bForceNew;\n        return reference;\n    };\n    /**\n     * `Saves all objects` in the collection.\n     * @private\n     */\n    PdfCrossTable.prototype.saveObjects = function (writer) {\n        var objectCollection = this.objectCollection;\n        for (var i = 0; i < objectCollection.count; ++i) {\n            var oi = objectCollection.items(i);\n            var obj = oi.object;\n            obj.isSaving = true;\n            this.saveIndirectObject(obj, writer);\n        }\n    };\n    /**\n     * `Saves indirect object`.\n     * @private\n     */\n    PdfCrossTable.prototype.saveIndirectObject = function (obj, writer) {\n        var reference = this.getReference(obj);\n        if (obj instanceof PdfCatalog) {\n            this.trailer.items.setValue(this.dictionaryProperties.root, reference);\n        }\n        // NOTE :  This is needed for correct string objects encryption.\n        this.pdfDocument.currentSavingObj = reference;\n        var tempArchive = false;\n        tempArchive = obj.getArchive();\n        var allowedType = !((obj instanceof PdfStream) || !tempArchive || (obj instanceof PdfCatalog));\n        var sigFlag = false;\n        this.registerObject(writer.position, reference);\n        this.doSaveObject(obj, reference, writer);\n    };\n    /**\n     * Performs `real saving` of the save object.\n     * @private\n     */\n    PdfCrossTable.prototype.doSaveObject = function (obj, reference, writer) {\n        var correctPosition = writer.length;\n        writer.write(reference.objNumber.toString());\n        writer.write(Operators.whiteSpace);\n        writer.write(reference.genNumber.toString());\n        writer.write(Operators.whiteSpace);\n        writer.write(Operators.obj);\n        writer.write(Operators.newLine);\n        obj.save(writer);\n        var stream = writer.stream;\n        writer.write(Operators.endObj);\n        writer.write(Operators.newLine);\n    };\n    PdfCrossTable.prototype.registerObject = function (offset, reference, free) {\n        if (typeof free === 'boolean') {\n            // Register the object by its number.\n            this.objects.setValue(reference.objNumber, new RegisteredObject(offset, reference, free));\n            this.maxGenNumIndex = Math.max(this.maxGenNumIndex, reference.genNumber);\n        }\n        else if (typeof free === 'undefined') {\n            // Register the object by its number.\n            this.objects.setValue(reference.objNumber, new RegisteredObject(offset, reference));\n            this.maxGenNumIndex = Math.max(this.maxGenNumIndex, reference.genNumber);\n        }\n    };\n    /**\n     * `Dereferences` the specified primitive object.\n     * @private\n     */\n    PdfCrossTable.dereference = function (obj) {\n        var rh = obj;\n        if (rh != null) {\n            obj = rh.object;\n        }\n        return obj;\n    };\n    return PdfCrossTable;\n}());\nexport { PdfCrossTable };\nvar RegisteredObject = /** @class */ (function () {\n    function RegisteredObject(offset, reference, free) {\n        var tempOffset = offset;\n        this.offsetNumber = tempOffset;\n        var tempReference = reference;\n        this.generation = tempReference.genNumber;\n        this.object = tempReference.objNumber;\n        if (typeof free === 'undefined') {\n            this.type = ObjectType.Normal;\n        }\n        else {\n            this.type = ObjectType.Free;\n        }\n    }\n    Object.defineProperty(RegisteredObject.prototype, \"objectNumber\", {\n        //Properties\n        /**\n         * Gets the `object number`.\n         * @private\n         */\n        get: function () {\n            return this.object;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(RegisteredObject.prototype, \"offset\", {\n        /**\n         * Gets the `offset`.\n         * @private\n         */\n        get: function () {\n            var result;\n            result = this.offsetNumber;\n            return result;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return RegisteredObject;\n}());\nexport { RegisteredObject };\n","/**\n * PdfPageSize.ts class for EJ2-PDF\n */\nimport { SizeF } from './../drawing/pdf-drawing';\n/**\n * Represents information about various predefined `page sizes`.\n */\nvar PdfPageSize = /** @class */ (function () {\n    //constructor\n    /**\n     * Initialize an instance for `PdfPageSize` class.\n     * @private\n     */\n    function PdfPageSize() {\n        // \n    }\n    /**\n     * Specifies the size of `letter`.\n     * @private\n     */\n    PdfPageSize.letter = new SizeF(612, 792);\n    /**\n     * Specifies the size of `note`.\n     * @private\n     */\n    PdfPageSize.note = new SizeF(540, 720);\n    /**\n     * Specifies the size of `legal`.\n     * @private\n     */\n    PdfPageSize.legal = new SizeF(612, 1008);\n    /**\n     * Specifies the size of `a0`.\n     * @private\n     */\n    PdfPageSize.a0 = new SizeF(2380, 3368);\n    /**\n     * Specifies the size of `a1`.\n     * @private\n     */\n    PdfPageSize.a1 = new SizeF(1684, 2380);\n    /**\n     * Specifies the size of `a2`.\n     * @private\n     */\n    PdfPageSize.a2 = new SizeF(1190, 1684);\n    /**\n     * Specifies the size of `a3`.\n     * @private\n     */\n    PdfPageSize.a3 = new SizeF(842, 1190);\n    /**\n     * Specifies the size of `a4`.\n     * @private\n     */\n    PdfPageSize.a4 = new SizeF(595, 842);\n    /**\n     * Specifies the size of `a5`.\n     * @private\n     */\n    PdfPageSize.a5 = new SizeF(421, 595);\n    /**\n     * Specifies the size of `a6`.\n     * @private\n     */\n    PdfPageSize.a6 = new SizeF(297, 421);\n    /**\n     * Specifies the size of `a7`.\n     * @private\n     */\n    PdfPageSize.a7 = new SizeF(210, 297);\n    /**\n     * Specifies the size of `a8`.\n     * @private\n     */\n    PdfPageSize.a8 = new SizeF(148, 210);\n    /**\n     * Specifies the size of `a9`.\n     * @private\n     */\n    PdfPageSize.a9 = new SizeF(105, 148);\n    /**\n     * Specifies the size of `a10`.\n     * @private\n     */\n    PdfPageSize.a10 = new SizeF(74, 105);\n    /**\n     * Specifies the size of `b0`.\n     * @private\n     */\n    PdfPageSize.b0 = new SizeF(2836, 4008);\n    /**\n     * Specifies the size of `b1`.\n     * @private\n     */\n    PdfPageSize.b1 = new SizeF(2004, 2836);\n    /**\n     * Specifies the size of `b2`.\n     * @private\n     */\n    PdfPageSize.b2 = new SizeF(1418, 2004);\n    /**\n     * Specifies the size of `b3`.\n     * @private\n     */\n    PdfPageSize.b3 = new SizeF(1002, 1418);\n    /**\n     * Specifies the size of `b4`.\n     * @private\n     */\n    PdfPageSize.b4 = new SizeF(709, 1002);\n    /**\n     * Specifies the size of `b5`.\n     * @private\n     */\n    PdfPageSize.b5 = new SizeF(501, 709);\n    /**\n     * Specifies the size of `archE`.\n     * @private\n     */\n    PdfPageSize.archE = new SizeF(2592, 3456);\n    /**\n     * Specifies the size of `archD`.\n     * @private\n     */\n    PdfPageSize.archD = new SizeF(1728, 2592);\n    /**\n     * Specifies the size of `archC`.\n     * @private\n     */\n    PdfPageSize.archC = new SizeF(1296, 1728);\n    /**\n     * Specifies the size of `archB`.\n     * @private\n     */\n    PdfPageSize.archB = new SizeF(864, 1296);\n    /**\n     * Specifies the size of `archA`.\n     * @private\n     */\n    PdfPageSize.archA = new SizeF(648, 864);\n    /**\n     * Specifies the size of `flsa`.\n     * @private\n     */\n    PdfPageSize.flsa = new SizeF(612, 936);\n    /**\n     * Specifies the size of `halfLetter`.\n     * @private\n     */\n    PdfPageSize.halfLetter = new SizeF(396, 612);\n    /**\n     * Specifies the size of `letter11x17`.\n     * @private\n     */\n    PdfPageSize.letter11x17 = new SizeF(792, 1224);\n    /**\n     * Specifies the size of `ledger`.\n     * @private\n     */\n    PdfPageSize.ledger = new SizeF(1224, 792);\n    return PdfPageSize;\n}());\nexport { PdfPageSize };\n","/**\n * public Enum for `PdfPageOrientation`.\n * @private\n */\nexport var PdfPageOrientation;\n(function (PdfPageOrientation) {\n    /**\n     * Specifies the type of `Portrait`.\n     * @private\n     */\n    PdfPageOrientation[PdfPageOrientation[\"Portrait\"] = 0] = \"Portrait\";\n    /**\n     * Specifies the type of `Landscape`.\n     * @private\n     */\n    PdfPageOrientation[PdfPageOrientation[\"Landscape\"] = 1] = \"Landscape\";\n})(PdfPageOrientation || (PdfPageOrientation = {}));\n/**\n * public Enum for `PdfPageRotateAngle`.\n * @private\n */\nexport var PdfPageRotateAngle;\n(function (PdfPageRotateAngle) {\n    /**\n     * Specifies the type of `RotateAngle0`.\n     * @private\n     */\n    PdfPageRotateAngle[PdfPageRotateAngle[\"RotateAngle0\"] = 0] = \"RotateAngle0\";\n    /**\n     * Specifies the type of `RotateAngle90`.\n     * @private\n     */\n    PdfPageRotateAngle[PdfPageRotateAngle[\"RotateAngle90\"] = 1] = \"RotateAngle90\";\n    /**\n     * Specifies the type of `RotateAngle180`.\n     * @private\n     */\n    PdfPageRotateAngle[PdfPageRotateAngle[\"RotateAngle180\"] = 2] = \"RotateAngle180\";\n    /**\n     * Specifies the type of `RotateAngle270`.\n     * @private\n     */\n    PdfPageRotateAngle[PdfPageRotateAngle[\"RotateAngle270\"] = 3] = \"RotateAngle270\";\n})(PdfPageRotateAngle || (PdfPageRotateAngle = {}));\n/**\n * public Enum for `PdfNumberStyle`.\n * @private\n */\nexport var PdfNumberStyle;\n(function (PdfNumberStyle) {\n    /**\n     * Specifies the type of `None`.\n     * @private\n     */\n    PdfNumberStyle[PdfNumberStyle[\"None\"] = 0] = \"None\";\n    /**\n     * Specifies the type of `Numeric`.\n     * @private\n     */\n    PdfNumberStyle[PdfNumberStyle[\"Numeric\"] = 1] = \"Numeric\";\n    /**\n     * Specifies the type of `LowerLatin`.\n     * @private\n     */\n    PdfNumberStyle[PdfNumberStyle[\"LowerLatin\"] = 2] = \"LowerLatin\";\n    /**\n     * Specifies the type of `LowerRoman`.\n     * @private\n     */\n    PdfNumberStyle[PdfNumberStyle[\"LowerRoman\"] = 3] = \"LowerRoman\";\n    /**\n     * Specifies the type of `UpperLatin`.\n     * @private\n     */\n    PdfNumberStyle[PdfNumberStyle[\"UpperLatin\"] = 4] = \"UpperLatin\";\n    /**\n     * Specifies the type of `UpperRoman`.\n     * @private\n     */\n    PdfNumberStyle[PdfNumberStyle[\"UpperRoman\"] = 5] = \"UpperRoman\";\n})(PdfNumberStyle || (PdfNumberStyle = {}));\n/**\n * public Enum for `PdfDockStyle`.\n * @private\n */\nexport var PdfDockStyle;\n(function (PdfDockStyle) {\n    /**\n     * Specifies the type of `None`.\n     * @private\n     */\n    PdfDockStyle[PdfDockStyle[\"None\"] = 0] = \"None\";\n    /**\n     * Specifies the type of `Bottom`.\n     * @private\n     */\n    PdfDockStyle[PdfDockStyle[\"Bottom\"] = 1] = \"Bottom\";\n    /**\n     * Specifies the type of `Top`.\n     * @private\n     */\n    PdfDockStyle[PdfDockStyle[\"Top\"] = 2] = \"Top\";\n    /**\n     * Specifies the type of `Left`.\n     * @private\n     */\n    PdfDockStyle[PdfDockStyle[\"Left\"] = 3] = \"Left\";\n    /**\n     * Specifies the type of `Right`.\n     * @private\n     */\n    PdfDockStyle[PdfDockStyle[\"Right\"] = 4] = \"Right\";\n    /**\n     * Specifies the type of `Fill`.\n     * @private\n     */\n    PdfDockStyle[PdfDockStyle[\"Fill\"] = 5] = \"Fill\";\n})(PdfDockStyle || (PdfDockStyle = {}));\n/**\n * public Enum for `PdfAlignmentStyle`.\n * @private\n */\nexport var PdfAlignmentStyle;\n(function (PdfAlignmentStyle) {\n    /**\n     * Specifies the type of `None`.\n     * @private\n     */\n    PdfAlignmentStyle[PdfAlignmentStyle[\"None\"] = 0] = \"None\";\n    /**\n     * Specifies the type of `TopLeft`.\n     * @private\n     */\n    PdfAlignmentStyle[PdfAlignmentStyle[\"TopLeft\"] = 1] = \"TopLeft\";\n    /**\n     * Specifies the type of `TopCenter`.\n     * @private\n     */\n    PdfAlignmentStyle[PdfAlignmentStyle[\"TopCenter\"] = 2] = \"TopCenter\";\n    /**\n     * Specifies the type of `TopRight`.\n     * @private\n     */\n    PdfAlignmentStyle[PdfAlignmentStyle[\"TopRight\"] = 3] = \"TopRight\";\n    /**\n     * Specifies the type of `MiddleLeft`.\n     * @private\n     */\n    PdfAlignmentStyle[PdfAlignmentStyle[\"MiddleLeft\"] = 4] = \"MiddleLeft\";\n    /**\n     * Specifies the type of `MiddleCenter`.\n     * @private\n     */\n    PdfAlignmentStyle[PdfAlignmentStyle[\"MiddleCenter\"] = 5] = \"MiddleCenter\";\n    /**\n     * Specifies the type of `MiddleRight`.\n     * @private\n     */\n    PdfAlignmentStyle[PdfAlignmentStyle[\"MiddleRight\"] = 6] = \"MiddleRight\";\n    /**\n     * Specifies the type of `BottomLeft`.\n     * @private\n     */\n    PdfAlignmentStyle[PdfAlignmentStyle[\"BottomLeft\"] = 7] = \"BottomLeft\";\n    /**\n     * Specifies the type of `BottomCenter`.\n     * @private\n     */\n    PdfAlignmentStyle[PdfAlignmentStyle[\"BottomCenter\"] = 8] = \"BottomCenter\";\n    /**\n     * Specifies the type of `BottomRight`.\n     * @private\n     */\n    PdfAlignmentStyle[PdfAlignmentStyle[\"BottomRight\"] = 9] = \"BottomRight\";\n})(PdfAlignmentStyle || (PdfAlignmentStyle = {}));\n/**\n * public Enum for `TemplateType`.\n * @private\n */\nexport var TemplateType;\n(function (TemplateType) {\n    /**\n     * Specifies the type of `None`.\n     * @private\n     */\n    TemplateType[TemplateType[\"None\"] = 0] = \"None\";\n    /**\n     * Specifies the type of `Top`.\n     * @private\n     */\n    TemplateType[TemplateType[\"Top\"] = 1] = \"Top\";\n    /**\n     * Specifies the type of `Bottom`.\n     * @private\n     */\n    TemplateType[TemplateType[\"Bottom\"] = 2] = \"Bottom\";\n    /**\n     * Specifies the type of `Left`.\n     * @private\n     */\n    TemplateType[TemplateType[\"Left\"] = 3] = \"Left\";\n    /**\n     * Specifies the type of `Right`.\n     * @private\n     */\n    TemplateType[TemplateType[\"Right\"] = 4] = \"Right\";\n})(TemplateType || (TemplateType = {}));\n","/**\n * PdfMargins.ts class for EJ2-PDF\n * A class representing PDF page margins.\n */\nvar PdfMargins = /** @class */ (function () {\n    /**\n     * Initializes a new instance of the `PdfMargins` class.\n     * @private\n     */\n    function PdfMargins() {\n        /**\n         * Represents the `Default Page Margin` value.\n         * @default 0.0\n         * @private\n         */\n        this.pdfMargin = 40.0;\n        this.setMargins(this.pdfMargin);\n    }\n    Object.defineProperty(PdfMargins.prototype, \"left\", {\n        //Properties\n        /**\n         * Gets or sets the `left margin` size.\n         * @private\n         */\n        get: function () {\n            return this.leftMargin;\n        },\n        set: function (value) {\n            this.leftMargin = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfMargins.prototype, \"top\", {\n        /**\n         * Gets or sets the `top margin` size.\n         * @private\n         */\n        get: function () {\n            return this.topMargin;\n        },\n        set: function (value) {\n            this.topMargin = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfMargins.prototype, \"right\", {\n        /**\n         * Gets or sets the `right margin` size.\n         * @private\n         */\n        get: function () {\n            return this.rightMargin;\n        },\n        set: function (value) {\n            this.rightMargin = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfMargins.prototype, \"bottom\", {\n        /**\n         * Gets or sets the `bottom margin` size.\n         * @private\n         */\n        get: function () {\n            return this.bottomMargin;\n        },\n        set: function (value) {\n            this.bottomMargin = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfMargins.prototype, \"all\", {\n        /**\n         * Sets the `margins`.\n         * @private\n         */\n        set: function (value) {\n            this.setMargins(value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfMargins.prototype.setMargins = function (margin1, margin2, margin3, margin4) {\n        if (typeof margin2 === 'undefined') {\n            this.leftMargin = this.topMargin = this.rightMargin = this.bottomMargin = margin1;\n        }\n        else {\n            if (typeof margin3 === 'undefined') {\n                this.leftMargin = this.rightMargin = margin1;\n                this.bottomMargin = this.topMargin = margin2;\n            }\n            else {\n                this.leftMargin = margin1;\n                this.topMargin = margin2;\n                this.rightMargin = margin3;\n                this.bottomMargin = margin4;\n            }\n        }\n    };\n    /**\n     * `Clones` the object.\n     * @private\n     */\n    PdfMargins.prototype.clone = function () {\n        return this;\n    };\n    return PdfMargins;\n}());\nexport { PdfMargins };\n","/**\n * PdfPageSettings.ts class for EJ2-PDF\n */\nimport { SizeF, PointF } from './../drawing/pdf-drawing';\nimport { PdfPageSize } from './pdf-page-size';\nimport { PdfPageRotateAngle, PdfPageOrientation } from './enum';\nimport { PdfMargins } from './../graphics/pdf-margins';\n/**\n * The class provides various `setting` related with PDF pages.\n */\nvar PdfPageSettings = /** @class */ (function () {\n    function PdfPageSettings(margins) {\n        //Fields\n        /**\n         * The page `margins`.\n         * @private\n         */\n        this.pageMargins = new PdfMargins();\n        /**\n         * The page `size`.\n         * @default a4\n         * @private\n         */\n        this.pageSize = PdfPageSize.a4;\n        /**\n         * The page `rotation angle`.\n         * @default PdfPageRotateAngle.RotateAngle0\n         * @private\n         */\n        this.rotateAngle = PdfPageRotateAngle.RotateAngle0;\n        /**\n         * The page `orientation`.\n         * @default PdfPageOrientation.Portrait\n         * @private\n         */\n        this.pageOrientation = PdfPageOrientation.Portrait;\n        /**\n         * The page `origin`.\n         * @default 0,0\n         * @private\n         */\n        this.pageOrigin = new PointF(0, 0);\n        /**\n         * Checks the Whether the `rotation` is applied or not.\n         * @default false\n         * @private\n         */\n        this.isRotation = false;\n        if (typeof margins === 'number') {\n            this.pageMargins.setMargins(margins);\n        }\n    }\n    Object.defineProperty(PdfPageSettings.prototype, \"size\", {\n        //Properties\n        /**\n         * Gets or sets the `size` of the page.\n         * @private\n         */\n        get: function () {\n            return this.pageSize;\n        },\n        set: function (value) {\n            this.setSize(value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageSettings.prototype, \"orientation\", {\n        /**\n         * Gets or sets the page `orientation`.\n         * @private\n         */\n        get: function () {\n            return this.pageOrientation;\n        },\n        set: function (orientation) {\n            if (this.pageOrientation !== orientation) {\n                this.pageOrientation = orientation;\n                this.updateSize(orientation);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageSettings.prototype, \"margins\", {\n        /**\n         * Gets or sets the `margins` of the page.\n         * @private\n         */\n        get: function () {\n            return this.pageMargins;\n        },\n        set: function (value) {\n            this.pageMargins = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageSettings.prototype, \"width\", {\n        /**\n         * Gets or sets the `width` of the page.\n         * @private\n         */\n        get: function () {\n            return this.pageSize.width;\n        },\n        set: function (value) {\n            this.pageSize.width = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageSettings.prototype, \"height\", {\n        /**\n         * Gets or sets the `height` of the page.\n         * @private\n         */\n        get: function () {\n            return this.pageSize.height;\n        },\n        set: function (value) {\n            this.pageSize.height = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageSettings.prototype, \"origin\", {\n        /**\n         * Gets or sets the `origin` of the page.\n         * @private\n         */\n        get: function () {\n            return this.pageOrigin;\n        },\n        set: function (value) {\n            this.pageOrigin = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageSettings.prototype, \"rotate\", {\n        /**\n         * Gets or sets the number of degrees by which the page should be `rotated` clockwise when displayed or printed.\n         * @private\n         */\n        get: function () {\n            return this.rotateAngle;\n        },\n        set: function (value) {\n            this.rotateAngle = value;\n            this.isRotation = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    //Methods\n    /**\n     * `Update page size` depending on orientation.\n     * @private\n     */\n    PdfPageSettings.prototype.updateSize = function (orientation) {\n        var min = Math.min(this.pageSize.width, this.pageSize.height);\n        var max = Math.max(this.pageSize.width, this.pageSize.height);\n        switch (orientation) {\n            case PdfPageOrientation.Portrait:\n                this.pageSize = new SizeF(min, max);\n                break;\n            case PdfPageOrientation.Landscape:\n                this.pageSize = new SizeF(max, min);\n                break;\n        }\n    };\n    /**\n     * Creates a `clone` of the object.\n     * @private\n     */\n    PdfPageSettings.prototype.clone = function () {\n        var settings = this;\n        settings.pageMargins = this.pageMargins.clone();\n        // if (GetTransition() != null)\n        // {\n        //     settings.Transition = (PdfPageTransition)Transition.clone();\n        // }\n        return settings;\n    };\n    /**\n     * Returns `size`, shrinked by the margins.\n     * @private\n     */\n    PdfPageSettings.prototype.getActualSize = function () {\n        var width = this.width - (this.margins.left + this.margins.right);\n        var height = this.height - (this.margins.top + this.margins.bottom);\n        var size = new SizeF(width, height);\n        return size;\n    };\n    /**\n     * Sets `size` to the page aaccording to the orientation.\n     * @private\n     */\n    PdfPageSettings.prototype.setSize = function (size) {\n        var min = Math.min(size.width, size.height);\n        var max = Math.max(size.width, size.height);\n        if (this.orientation === PdfPageOrientation.Portrait) {\n            this.pageSize = new SizeF(min, max);\n        }\n        else {\n            this.pageSize = new SizeF(max, min);\n        }\n    };\n    return PdfPageSettings;\n}());\nexport { PdfPageSettings };\n","import { Operators } from './pdf-operators';\nimport { PdfNumber } from './../primitives/pdf-number';\nimport { PointF, RectangleF } from './../drawing/pdf-drawing';\nimport { PdfString } from './../primitives/pdf-string';\nimport { PdfName } from './../primitives/pdf-name';\n/**\n * Helper class to `write PDF graphic streams` easily.\n * @private\n */\nvar PdfStreamWriter = /** @class */ (function () {\n    /**\n     * Initialize an instance of `PdfStreamWriter` class.\n     * @private\n     */\n    function PdfStreamWriter(stream) {\n        if (stream == null) {\n            throw new Error('ArgumentNullException:stream');\n        }\n        this.stream = stream;\n    }\n    //Implementation\n    /**\n     * `Clear` the stream.\n     * @public\n     */\n    PdfStreamWriter.prototype.clear = function () {\n        this.stream.clearStream();\n    };\n    PdfStreamWriter.prototype.setGraphicsState = function (dictionaryName) {\n        if (dictionaryName instanceof PdfName) {\n            this.stream.write(dictionaryName.toString());\n            this.stream.write(Operators.whiteSpace);\n            this.writeOperator(Operators.setGraphicsState);\n        }\n        else {\n            this.stream.write(Operators.slash);\n            this.stream.write(dictionaryName);\n            this.stream.write(Operators.whiteSpace);\n            this.writeOperator(Operators.setGraphicsState);\n        }\n    };\n    /**\n     * `Executes the XObject`.\n     * @private\n     */\n    PdfStreamWriter.prototype.executeObject = function (name) {\n        this.stream.write(name.toString());\n        this.stream.write(Operators.whiteSpace);\n        this.writeOperator(Operators.paintXObject);\n        this.stream.write(Operators.newLine);\n    };\n    /**\n     * `Closes path object`.\n     * @private\n     */\n    PdfStreamWriter.prototype.closePath = function () {\n        this.writeOperator(Operators.closePath);\n    };\n    /**\n     * `Clips the path`.\n     * @private\n     */\n    PdfStreamWriter.prototype.clipPath = function (useEvenOddRule) {\n        this.stream.write(Operators.clipPath);\n        if (useEvenOddRule) {\n            this.stream.write(Operators.evenOdd);\n        }\n        this.stream.write(Operators.whiteSpace);\n        this.stream.write(Operators.endPath);\n        this.stream.write(Operators.newLine);\n    };\n    /**\n     * `Closes, then fills and strokes the path`.\n     * @private\n     */\n    PdfStreamWriter.prototype.closeFillStrokePath = function (useEvenOddRule) {\n        this.stream.write(Operators.closeFillStrokePath);\n        if (useEvenOddRule) {\n            this.stream.write(Operators.evenOdd);\n            this.stream.write(Operators.newLine);\n        }\n        else {\n            this.stream.write(Operators.newLine);\n        }\n    };\n    /**\n     * `Fills and strokes path`.\n     * @private\n     */\n    PdfStreamWriter.prototype.fillStrokePath = function (useEvenOddRule) {\n        this.stream.write(Operators.fillStroke);\n        if (useEvenOddRule) {\n            this.stream.write(Operators.evenOdd);\n            this.stream.write(Operators.newLine);\n        }\n        else {\n            this.stream.write(Operators.newLine);\n        }\n    };\n    /**\n     * `Fills path`.\n     * @private\n     */\n    PdfStreamWriter.prototype.fillPath = function (useEvenOddRule) {\n        this.stream.write(Operators.fill);\n        if (useEvenOddRule) {\n            this.stream.write(Operators.evenOdd);\n            this.stream.write(Operators.newLine);\n        }\n        else {\n            this.stream.write(Operators.newLine);\n        }\n    };\n    /**\n     * `Ends the path`.\n     * @private\n     */\n    PdfStreamWriter.prototype.endPath = function () {\n        this.writeOperator(Operators.n);\n    };\n    /**\n     * `Closes and fills the path`.\n     * @private\n     */\n    PdfStreamWriter.prototype.closeFillPath = function (useEvenOddRule) {\n        this.writeOperator(Operators.closePath);\n        this.stream.write(Operators.fill);\n        if (useEvenOddRule) {\n            this.stream.write(Operators.evenOdd);\n            this.stream.write(Operators.newLine);\n        }\n        else {\n            this.stream.write(Operators.newLine);\n        }\n    };\n    /**\n     * `Closes and strokes the path`.\n     * @private\n     */\n    PdfStreamWriter.prototype.closeStrokePath = function () {\n        this.writeOperator(Operators.closeStrokePath);\n    };\n    /**\n     * `Sets the text scaling`.\n     * @private\n     */\n    PdfStreamWriter.prototype.setTextScaling = function (textScaling) {\n        this.stream.write(PdfNumber.floatToString(textScaling));\n        this.stream.write(Operators.whiteSpace);\n        this.writeOperator(Operators.setTextScaling);\n    };\n    /**\n     * `Strokes path`.\n     * @private\n     */\n    PdfStreamWriter.prototype.strokePath = function () {\n        this.writeOperator(Operators.stroke);\n    };\n    /**\n     * `Restores` the graphics state.\n     * @private\n     */\n    PdfStreamWriter.prototype.restoreGraphicsState = function () {\n        this.writeOperator(Operators.restoreState);\n    };\n    /**\n     * `Saves` the graphics state.\n     * @private\n     */\n    PdfStreamWriter.prototype.saveGraphicsState = function () {\n        this.writeOperator(Operators.saveState);\n    };\n    PdfStreamWriter.prototype.startNextLine = function (arg1, arg2) {\n        if (typeof arg1 === 'undefined') {\n            this.writeOperator(Operators.goToNextLine);\n        }\n        else if (arg1 instanceof PointF) {\n            this.writePoint(arg1);\n            this.writeOperator(Operators.setCoords);\n        }\n        else {\n            this.writePoint(arg1, arg2);\n            this.writeOperator(Operators.setCoords);\n        }\n    };\n    /**\n     * Shows the `text`.\n     * @private\n     */\n    PdfStreamWriter.prototype.showText = function (text) {\n        this.checkTextParam(text);\n        this.writeText(text);\n        this.writeOperator(Operators.setText);\n    };\n    /**\n     * Sets `text leading`.\n     * @private\n     */\n    PdfStreamWriter.prototype.setLeading = function (leading) {\n        this.stream.write(PdfNumber.floatToString(leading));\n        this.stream.write(Operators.whiteSpace);\n        this.writeOperator(Operators.setTextLeading);\n    };\n    /**\n     * `Begins the path`.\n     * @private\n     */\n    PdfStreamWriter.prototype.beginPath = function (x, y) {\n        this.writePoint(x, y);\n        this.writeOperator(Operators.beginPath);\n    };\n    /**\n     * `Begins text`.\n     * @private\n     */\n    PdfStreamWriter.prototype.beginText = function () {\n        this.writeOperator(Operators.beginText);\n    };\n    /**\n     * `Ends text`.\n     * @private\n     */\n    PdfStreamWriter.prototype.endText = function () {\n        this.writeOperator(Operators.endText);\n    };\n    PdfStreamWriter.prototype.appendRectangle = function (arg1, arg2, arg3, arg4) {\n        if (arg1 instanceof RectangleF) {\n            this.appendRectangle(arg1.x, arg1.y, arg1.width, arg1.height);\n        }\n        else {\n            this.writePoint(arg1, arg2);\n            this.writePoint(arg3, arg4);\n            this.writeOperator(Operators.appendRectangle);\n        }\n    };\n    PdfStreamWriter.prototype.appendLineSegment = function (arg1, arg2) {\n        if (arg1 instanceof PointF) {\n            this.appendLineSegment(arg1.x, arg1.y);\n        }\n        else {\n            this.writePoint(arg1, arg2);\n            this.writeOperator(Operators.appendLineSegment);\n        }\n    };\n    /**\n     * Sets the `text rendering mode`.\n     * @private\n     */\n    PdfStreamWriter.prototype.setTextRenderingMode = function (renderingMode) {\n        this.stream.write(renderingMode.toString());\n        this.stream.write(Operators.whiteSpace);\n        this.writeOperator(Operators.setRenderingMode);\n    };\n    /**\n     * Sets the `character spacing`.\n     * @private\n     */\n    PdfStreamWriter.prototype.setCharacterSpacing = function (charSpacing) {\n        this.stream.write(PdfNumber.floatToString(charSpacing));\n        this.stream.write(Operators.whiteSpace);\n        this.stream.write(Operators.setCharacterSpace);\n        this.stream.write(Operators.newLine);\n    };\n    /**\n     * Sets the `word spacing`.\n     * @private\n     */\n    PdfStreamWriter.prototype.setWordSpacing = function (wordSpacing) {\n        this.stream.write(PdfNumber.floatToString(wordSpacing));\n        this.stream.write(Operators.whiteSpace);\n        this.writeOperator(Operators.setWordSpace);\n    };\n    PdfStreamWriter.prototype.showNextLineText = function (arg1, arg2) {\n        if (arg1 instanceof PdfString) {\n            this.checkTextParam(arg1);\n            this.writeText(arg1);\n            this.writeOperator(Operators.setTextOnNewLine);\n        }\n        else {\n            this.checkTextParam(arg1);\n            this.writeText(arg1, arg2);\n            this.writeOperator(Operators.setTextOnNewLine);\n        }\n    };\n    PdfStreamWriter.prototype.setColorSpace = function (arg1, arg2) {\n        if (arg1 instanceof PdfName && typeof arg2 === 'boolean') {\n            var temparg1 = arg1;\n            var temparg2 = arg2;\n            // if (temparg1 == null) {\n            //     throw new Error('ArgumentNullException:name');\n            // }\n            var op = (temparg2) ? Operators.selectcolorspaceforstroking : Operators.selectcolorspacefornonstroking;\n            this.stream.write(temparg1.toString());\n            this.stream.write(Operators.whiteSpace);\n            this.stream.write(op);\n            this.stream.write(Operators.newLine);\n        }\n        else {\n            var temparg1 = arg1;\n            var temparg2 = arg2;\n            this.setColorSpace(new PdfName(temparg1), temparg2);\n        }\n    };\n    /**\n     * Modifies current `transformation matrix`.\n     * @private\n     */\n    PdfStreamWriter.prototype.modifyCtm = function (matrix) {\n        if (matrix == null) {\n            throw new Error('ArgumentNullException:matrix');\n        }\n        this.stream.write(matrix.toString());\n        this.stream.write(Operators.whiteSpace);\n        this.writeOperator(Operators.modifyCtm);\n    };\n    PdfStreamWriter.prototype.setFont = function (font, name, size) {\n        if (typeof name === 'string') {\n            this.setFont(font, new PdfName(name), size);\n        }\n        else {\n            if (font == null) {\n                throw new Error('ArgumentNullException:font');\n            }\n            this.stream.write(name.toString());\n            this.stream.write(Operators.whiteSpace);\n            this.stream.write(PdfNumber.floatToString(size));\n            this.stream.write(Operators.whiteSpace);\n            this.writeOperator(Operators.setFont);\n        }\n    };\n    /**\n     * `Writes the operator`.\n     * @private\n     */\n    PdfStreamWriter.prototype.writeOperator = function (opcode) {\n        this.stream.write(opcode);\n        this.stream.write(Operators.newLine);\n    };\n    PdfStreamWriter.prototype.checkTextParam = function (text) {\n        if (text == null) {\n            throw new Error('ArgumentNullException:text');\n        }\n        if (typeof text === 'string' && text === '') {\n            throw new Error('ArgumentException:The text can not be an empty string, text');\n        }\n    };\n    PdfStreamWriter.prototype.writeText = function (arg1, arg2) {\n        if ((arg1 instanceof PdfString) && (typeof arg2 === 'undefined')) {\n            this.stream.write(arg1.pdfEncode());\n        }\n        else {\n            var start = void 0;\n            var end = void 0;\n            if (arg2) {\n                start = PdfString.hexStringMark[0];\n                end = PdfString.hexStringMark[1];\n            }\n            else {\n                start = PdfString.stringMark[0];\n                end = PdfString.stringMark[1];\n            }\n            this.stream.write(start);\n            this.stream.write(arg1);\n            this.stream.write(end);\n        }\n    };\n    PdfStreamWriter.prototype.writePoint = function (arg1, arg2) {\n        if ((arg1 instanceof PointF) && (typeof arg2 === 'undefined')) {\n            this.writePoint(arg1.x, arg1.y);\n        }\n        else {\n            var temparg1 = arg1;\n            this.stream.write(PdfNumber.floatToString(temparg1));\n            this.stream.write(Operators.whiteSpace);\n            // NOTE: Change Y co-ordinate because we shifted co-ordinate system only.\n            arg2 = this.updateY(arg2);\n            this.stream.write(PdfNumber.floatToString(arg2));\n            this.stream.write(Operators.whiteSpace);\n        }\n    };\n    /**\n     * `Updates y` co-ordinate.\n     * @private\n     */\n    PdfStreamWriter.prototype.updateY = function (arg) {\n        return -arg;\n    };\n    /**\n     * `Writes string` to the file.\n     * @private\n     */\n    PdfStreamWriter.prototype.write = function (string) {\n        var builder = '';\n        builder += string;\n        builder += Operators.newLine;\n        this.writeOperator(builder);\n    };\n    /**\n     * `Writes comment` to the file.\n     * @private\n     */\n    PdfStreamWriter.prototype.writeComment = function (comment) {\n        if (comment != null && comment.length > 0) {\n            var builder = '';\n            builder += Operators.comment;\n            builder += Operators.whiteSpace;\n            builder += comment;\n            //builder.Append( Operators.NewLine );\n            this.writeOperator(builder);\n        }\n        else {\n            throw new Error('Invalid comment');\n        }\n    };\n    /**\n     * Sets the `color and space`.\n     * @private\n     */\n    PdfStreamWriter.prototype.setColorAndSpace = function (color, colorSpace, forStroking) {\n        if (!color.isEmpty) {\n            // bool test = color is PdfExtendedColor;\n            this.stream.write(color.toString(colorSpace, forStroking));\n            this.stream.write(Operators.newLine);\n        }\n    };\n    // public setLineDashPattern(pattern : number[], patternOffset : number) : void\n    // {\n    //     let pat : PdfArray = new PdfArray(pattern);\n    //     let off : PdfNumber = new PdfNumber(patternOffset);\n    //     this.setLineDashPatternHelper(pat, off);\n    // }\n    // private setLineDashPatternHelper(pattern : PdfArray, patternOffset : PdfNumber) : void\n    // {\n    //     pattern.Save(this);\n    //     this.m_stream.write(Operators.whiteSpace);\n    //     patternOffset.Save(this);\n    //     this.m_stream.write(Operators.whiteSpace);\n    //     this.writeOperator(Operators.setDashPattern);\n    // }\n    /**\n     * Sets the `line dash pattern`.\n     * @private\n     */\n    PdfStreamWriter.prototype.setLineDashPattern = function (pattern, patternOffset) {\n        // let pat : PdfArray = new PdfArray(pattern);\n        // let off : PdfNumber = new PdfNumber(patternOffset);\n        // this.setLineDashPatternHelper(pat, off);\n        this.setLineDashPatternHelper(pattern, patternOffset);\n    };\n    /**\n     * Sets the `line dash pattern`.\n     * @private\n     */\n    PdfStreamWriter.prototype.setLineDashPatternHelper = function (pattern, patternOffset) {\n        var tempPattern = '[';\n        if (pattern.length > 1) {\n            for (var index = 0; index < pattern.length; index++) {\n                if (index === pattern.length - 1) {\n                    tempPattern += pattern[index].toString();\n                }\n                else {\n                    tempPattern += pattern[index].toString() + ' ';\n                }\n            }\n        }\n        tempPattern += '] ';\n        tempPattern += patternOffset.toString();\n        tempPattern += ' ' + Operators.setDashPattern;\n        this.stream.write(tempPattern);\n        this.stream.write(Operators.newLine);\n    };\n    /**\n     * Sets the `miter limit`.\n     * @private\n     */\n    PdfStreamWriter.prototype.setMiterLimit = function (miterLimit) {\n        this.stream.write(PdfNumber.floatToString(miterLimit));\n        this.stream.write(Operators.whiteSpace);\n        this.writeOperator(Operators.setMiterLimit);\n    };\n    /**\n     * Sets the `width of the line`.\n     * @private\n     */\n    PdfStreamWriter.prototype.setLineWidth = function (width) {\n        this.stream.write(PdfNumber.floatToString(width));\n        this.stream.write(Operators.whiteSpace);\n        this.writeOperator(Operators.setLineWidth);\n    };\n    /**\n     * Sets the `line cap`.\n     * @private\n     */\n    PdfStreamWriter.prototype.setLineCap = function (lineCapStyle) {\n        this.stream.write((lineCapStyle).toString());\n        this.stream.write(Operators.whiteSpace);\n        this.writeOperator(Operators.setLineCapStyle);\n    };\n    /**\n     * Sets the `line join`.\n     * @private\n     */\n    PdfStreamWriter.prototype.setLineJoin = function (lineJoinStyle) {\n        this.stream.write((lineJoinStyle).toString());\n        this.stream.write(Operators.whiteSpace);\n        this.writeOperator(Operators.setLineJoinStyle);\n    };\n    Object.defineProperty(PdfStreamWriter.prototype, \"position\", {\n        //IPdfWriter members\n        /**\n         * Gets or sets the current `position` within the stream.\n         * @private\n         */\n        get: function () {\n            return this.stream.position;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfStreamWriter.prototype, \"length\", {\n        /**\n         * Gets `stream length`.\n         * @private\n         */\n        get: function () {\n            var returnValue = 0;\n            if (this.stream.data.length !== 0 && this.stream.data.length !== -1) {\n                for (var index = 0; index < this.stream.data.length; index++) {\n                    returnValue += this.stream.data[index].length;\n                }\n            }\n            return returnValue;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfStreamWriter.prototype, \"document\", {\n        /**\n         * Gets and Sets the `current document`.\n         * @private\n         */\n        get: function () {\n            return null;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /* tslint:disable-next-line:max-line-length */\n    PdfStreamWriter.prototype.appendBezierSegment = function (arg1, arg2, arg3, arg4, arg5, arg6) {\n        if (arg1 instanceof PointF && arg2 instanceof PointF && arg3 instanceof PointF) {\n            this.writePoint(arg1.x, arg1.y);\n            this.writePoint(arg2.x, arg2.y);\n            this.writePoint(arg3.x, arg3.y);\n        }\n        else {\n            this.writePoint(arg1, arg2);\n            this.writePoint(arg3, arg4);\n            this.writePoint(arg5, arg6);\n        }\n        this.writeOperator(Operators.appendbeziercurve);\n    };\n    PdfStreamWriter.prototype.setColourWithPattern = function (colours, patternName, forStroking) {\n        if ((colours != null)) {\n            var count = colours.length;\n            var i = 0;\n            for (i = 0; i < count; ++i) {\n                this.stream.write(colours[i].toString());\n                this.stream.write(Operators.whiteSpace);\n            }\n        }\n        if ((patternName != null)) {\n            this.stream.write(patternName.toString());\n            this.stream.write(Operators.whiteSpace);\n        }\n        if (forStroking) {\n            this.writeOperator(Operators.setColorAndPatternStroking);\n        }\n        else {\n            this.writeOperator(Operators.setColorAndPattern);\n        }\n    };\n    return PdfStreamWriter;\n}());\nexport { PdfStreamWriter };\n","/**\n * PdfPen.ts class for EJ2-PDF\n */\nimport { PdfColor } from './pdf-color';\nimport { PdfSolidBrush } from './brushes/pdf-solid-brush';\nimport { PdfDashStyle, PdfColorSpace } from './enum';\nimport { PdfBrush } from './brushes/pdf-brush';\n/**\n * `PdfPen` class defining settings for drawing operations, that determines the color,\n * width, and style of the drawing elements.\n * ```typescript\n * // create a new PDF document\n * let document : PdfDocument = new PdfDocument();\n * // create a new page\n * let page1 : PdfPage = document.pages.add();\n * // set pen\n * let pen : PdfPen = new PdfPen(new PdfColor(0, 0, 0));\n * // draw rectangle\n * page1.graphics.drawRectangle(pen, new RectangleF({x : 0, y : 0}, {width : 100, height : 50}));\n * // save the document.\n * document.save('output.pdf');\n * // destroy the document\n * document.destroy();\n * ```\n */\nvar PdfPen = /** @class */ (function () {\n    function PdfPen(arg1, arg2) {\n        //Fields\n        /**\n         * Specifies the `color of the pen`.\n         * @default new PdfColor()\n         * @private\n         */\n        this.pdfColor = new PdfColor(0, 0, 0);\n        /**\n         * Specifies the `dash offset of the pen`.\n         * @default 0\n         * @private\n         */\n        this.dashOffsetValue = 0;\n        /**\n         * Specifies the `dash pattern of the pen`.\n         * @default [0]\n         * @private\n         */\n        this.penDashPattern = [0];\n        /**\n         * Specifies the `dash style of the pen`.\n         * @default Solid\n         * @private\n         */\n        this.pdfDashStyle = PdfDashStyle.Solid;\n        /**\n         * Specifies the `line cap of the pen`.\n         * @default 0\n         * @private\n         */\n        this.pdfLineCap = 0;\n        /**\n         * Specifies the `line join of the pen`.\n         * @default 0\n         * @private\n         */\n        this.pdfLineJoin = 0;\n        /**\n         * Specifies the `width of the pen`.\n         * @default 1.0\n         * @private\n         */\n        this.penWidth = 1.0;\n        /**\n         * Specifies the `mitter limit of the pen`.\n         * @default 0.0\n         * @private\n         */\n        this.internalMiterLimit = 0.0;\n        /**\n         * Stores the `colorspace` value.\n         * @default Rgb\n         * @private\n         */\n        this.colorSpace = PdfColorSpace.Rgb;\n        if (arg1 instanceof PdfBrush) {\n            this.setBrush(arg1);\n        }\n        else if (arg1 instanceof PdfColor) {\n            this.color = arg1;\n        }\n        if (typeof arg2 === 'number') {\n            this.width = arg2;\n        }\n    }\n    Object.defineProperty(PdfPen.prototype, \"color\", {\n        //Properties\n        /**\n         * Gets or sets the `color of the pen`.\n         * @private\n         */\n        get: function () {\n            return this.pdfColor;\n        },\n        set: function (value) {\n            this.pdfColor = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPen.prototype, \"dashOffset\", {\n        /**\n         * Gets or sets the `dash offset of the pen`.\n         * @private\n         */\n        get: function () {\n            if (typeof this.dashOffsetValue === 'undefined' || this.dashOffsetValue == null) {\n                return 0;\n            }\n            else {\n                return this.dashOffsetValue;\n            }\n        },\n        set: function (value) {\n            this.dashOffsetValue = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPen.prototype, \"dashPattern\", {\n        /**\n         * Gets or sets the `dash pattern of the pen`.\n         * @private\n         */\n        get: function () {\n            return this.penDashPattern;\n        },\n        set: function (value) {\n            this.penDashPattern = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPen.prototype, \"dashStyle\", {\n        /**\n         * Gets or sets the `dash style of the pen`.\n         * ```typescript\n         * // create a new PDF document\n         * let document : PdfDocument = new PdfDocument();\n         * // create a new page\n         * let page1 : PdfPage = document.pages.add();\n         * // set pen\n         * let pen : PdfPen = new PdfPen(new PdfColor(0, 0, 0));\n         * //\n         * // set pen style\n         * pen.dashStyle = PdfDashStyle.DashDot;\n         * // get pen style\n         * let style : PdfDashStyle = pen.dashStyle;\n         * //\n         * // draw rectangle\n         * page1.graphics.drawRectangle(pen, new RectangleF({x : 0, y : 0}, {width : 100, height : 50}));\n         * // save the document.\n         * document.save('output.pdf');\n         * // destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this.pdfDashStyle;\n        },\n        set: function (value) {\n            if (this.pdfDashStyle !== value) {\n                this.pdfDashStyle = value;\n                switch (this.pdfDashStyle) {\n                    case PdfDashStyle.Custom:\n                        break;\n                    case PdfDashStyle.Dash:\n                        this.penDashPattern = [3, 1];\n                        break;\n                    case PdfDashStyle.Dot:\n                        this.penDashPattern = [1, 1];\n                        break;\n                    case PdfDashStyle.DashDot:\n                        this.penDashPattern = [3, 1, 1, 1];\n                        break;\n                    case PdfDashStyle.DashDotDot:\n                        this.penDashPattern = [3, 1, 1, 1, 1, 1];\n                        break;\n                    case PdfDashStyle.Solid:\n                        break;\n                    default:\n                        this.pdfDashStyle = PdfDashStyle.Solid;\n                        this.penDashPattern = [0];\n                        break;\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPen.prototype, \"lineCap\", {\n        /**\n         * Gets or sets the `line cap of the pen`.\n         * @private\n         */\n        get: function () {\n            return this.pdfLineCap;\n        },\n        set: function (value) {\n            this.pdfLineCap = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPen.prototype, \"lineJoin\", {\n        /**\n         * Gets or sets the `line join style of the pen`.\n         * @private\n         */\n        get: function () {\n            return this.pdfLineJoin;\n        },\n        set: function (value) {\n            this.pdfLineJoin = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPen.prototype, \"miterLimit\", {\n        /**\n         * Gets or sets the `miter limit`.\n         * @private\n         */\n        get: function () {\n            return this.internalMiterLimit;\n        },\n        set: function (value) {\n            this.internalMiterLimit = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPen.prototype, \"width\", {\n        /**\n         * Gets or sets the `width of the pen`.\n         * ```typescript\n         * // create a new PDF document\n         * let document : PdfDocument = new PdfDocument();\n         * // create a new page\n         * let page1 : PdfPage = document.pages.add();\n         * // set pen\n         * let pen : PdfPen = new PdfPen(new PdfColor(0, 0, 0));\n         * //\n         * // set pen width\n         * pen.width = 2;\n         * //\n         * // draw rectangle\n         * page1.graphics.drawRectangle(pen, new RectangleF({x : 0, y : 0}, {width : 100, height : 50}));\n         * // save the document.\n         * document.save('output.pdf');\n         * // destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this.penWidth;\n        },\n        set: function (value) {\n            this.penWidth = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    //Helper\n    /**\n     * `Clones` this instance of PdfPen class.\n     * @private\n     */\n    PdfPen.prototype.clone = function () {\n        var pen = this;\n        return pen;\n    };\n    /**\n     * `Sets the brush`.\n     * @private\n     */\n    PdfPen.prototype.setBrush = function (brush) {\n        var sBrush = brush;\n        if ((sBrush != null && sBrush instanceof PdfSolidBrush)) {\n            this.color = sBrush.color;\n            this.pdfBrush = sBrush;\n        }\n        this.color = sBrush.color;\n        this.pdfBrush = sBrush;\n    };\n    /**\n     * `Monitors the changes`.\n     * @private\n     */\n    PdfPen.prototype.monitorChanges = function (currentPen, streamWriter, getResources, saveState, currentColorSpace, matrix) {\n        var diff = false;\n        saveState = true;\n        if (currentPen == null) {\n            diff = true;\n        }\n        diff = this.dashControl(currentPen, saveState, streamWriter);\n        streamWriter.setLineWidth(this.width);\n        streamWriter.setLineJoin(this.lineJoin);\n        streamWriter.setLineCap(this.lineCap);\n        var miterLimit = this.miterLimit;\n        if (miterLimit > 0) {\n            streamWriter.setMiterLimit(miterLimit);\n            diff = true;\n        }\n        var brush = this.pdfBrush;\n        streamWriter.setColorAndSpace(this.color, currentColorSpace, true);\n        diff = true;\n        return diff;\n    };\n    /**\n     * `Controls the dash style` and behaviour of each line.\n     * @private\n     */\n    PdfPen.prototype.dashControl = function (pen, saveState, streamWriter) {\n        saveState = true;\n        var lineWidth = this.width;\n        var pattern = this.getPattern();\n        streamWriter.setLineDashPattern(pattern, this.dashOffset * lineWidth);\n        return saveState;\n    };\n    /**\n     * `Gets the pattern` of PdfPen.\n     * @private\n     */\n    PdfPen.prototype.getPattern = function () {\n        var pattern = this.dashPattern;\n        for (var i = 0; i < pattern.length; ++i) {\n            pattern[i] *= this.width;\n        }\n        return pattern;\n    };\n    return PdfPen;\n}());\nexport { PdfPen };\n","/**\n * PdfTransformationMatrix.ts class for EJ2-PDF\n */\nimport { PointF } from './../drawing/pdf-drawing';\nimport { PdfNumber } from './../primitives/pdf-number';\n/**\n * Class for representing Root `transformation matrix`.\n */\nvar PdfTransformationMatrix = /** @class */ (function () {\n    function PdfTransformationMatrix(value) {\n        /**\n         * Value for `angle converting`.\n         * @default 180.0 / Math.PI\n         * @private\n         */\n        this.radDegFactor = 180.0 / Math.PI;\n        if (typeof value === 'undefined') {\n            this.transformationMatrix = new Matrix(1.00, 0.00, 0.00, 1.00, 0.00, 0.00);\n        }\n        else {\n            this.transformationMatrix = new Matrix(1.00, 0.00, 0.00, -1.00, 0.00, 0.00);\n        }\n    }\n    Object.defineProperty(PdfTransformationMatrix.prototype, \"matrix\", {\n        // Properties\n        /**\n         * Gets or sets the `internal matrix object`.\n         * @private\n         */\n        get: function () {\n            return this.transformationMatrix;\n        },\n        set: function (value) {\n            this.transformationMatrix = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    // Public methods\n    /**\n     * `Translates` coordinates by specified coordinates.\n     * @private\n     */\n    PdfTransformationMatrix.prototype.translate = function (offsetX, offsetY) {\n        this.transformationMatrix.translate(offsetX, offsetY);\n    };\n    /**\n     * `Scales` coordinates by specified coordinates.\n     * @private\n     */\n    PdfTransformationMatrix.prototype.scale = function (scaleX, scaleY) {\n        this.transformationMatrix.elements[0] = scaleX;\n        this.transformationMatrix.elements[3] = scaleY;\n    };\n    /**\n     * `Rotates` coordinate system in counterclockwise direction.\n     * @private\n     */\n    PdfTransformationMatrix.prototype.rotate = function (angle) {\n        //Convert from degree to radian \n        angle = (angle * Math.PI) / 180;\n        //Rotation \n        this.transformationMatrix.elements[0] = Math.cos(angle);\n        this.transformationMatrix.elements[1] = Math.sin(angle);\n        this.transformationMatrix.elements[2] = -Math.sin(angle);\n        this.transformationMatrix.elements[3] = Math.cos(angle);\n    };\n    // Overrides\n    /**\n     * Gets `PDF representation`.\n     * @private\n     */\n    PdfTransformationMatrix.prototype.toString = function () {\n        var builder = '';\n        var whitespace = ' ';\n        for (var i = 0, len = this.transformationMatrix.elements.length; i < len; i++) {\n            var temp = this.matrix.elements[i];\n            builder += PdfNumber.floatToString(this.transformationMatrix.elements[i]);\n            builder += whitespace;\n        }\n        return builder;\n    };\n    // Implementation\n    /**\n     * `Multiplies` matrices (changes coordinate system.)\n     * @private\n     */\n    PdfTransformationMatrix.prototype.multiply = function (matrix) {\n        this.transformationMatrix.multiply(matrix.matrix);\n    };\n    /**\n     * Converts `degrees to radians`.\n     * @private\n     */\n    PdfTransformationMatrix.degreesToRadians = function (degreesX) {\n        return this.degRadFactor * degreesX;\n    };\n    /**\n     * Converts `radians to degrees`.\n     * @private\n     */\n    PdfTransformationMatrix.prototype.radiansToDegrees = function (radians) {\n        return this.radDegFactor * radians;\n    };\n    /**\n     * `Clones` this instance of PdfTransformationMatrix.\n     * @private\n     */\n    PdfTransformationMatrix.prototype.clone = function () {\n        return this;\n    };\n    // Constants\n    /**\n     * Value for `angle converting`.\n     * @default Math.PI / 180.0\n     * @private\n     */\n    PdfTransformationMatrix.degRadFactor = Math.PI / 180.0;\n    return PdfTransformationMatrix;\n}());\nexport { PdfTransformationMatrix };\nvar Matrix = /** @class */ (function () {\n    function Matrix(arg1, arg2, arg3, arg4, arg5, arg6) {\n        if (typeof arg1 === 'undefined') {\n            this.metrixElements = [];\n        }\n        else if (typeof arg1 === 'number') {\n            this.metrixElements = [];\n            this.metrixElements.push(arg1);\n            this.metrixElements.push(arg2);\n            this.metrixElements.push(arg3);\n            this.metrixElements.push(arg4);\n            this.metrixElements.push(arg5);\n            this.metrixElements.push(arg6);\n        }\n        else {\n            this.metrixElements = arg1;\n        }\n    }\n    Object.defineProperty(Matrix.prototype, \"elements\", {\n        // Properties\n        /**\n         * Gets the `elements`.\n         * @private\n         */\n        get: function () {\n            return this.metrixElements;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Matrix.prototype, \"offsetX\", {\n        /**\n         * Gets the off set `X`.\n         * @private\n         */\n        get: function () {\n            return this.metrixElements[4];\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Matrix.prototype, \"offsetY\", {\n        /**\n         * Gets the off set `Y`.\n         * @private\n         */\n        get: function () {\n            return this.metrixElements[5];\n        },\n        enumerable: true,\n        configurable: true\n    });\n    // Implementation\n    /**\n     * `Translates` coordinates by specified coordinates.\n     * @private\n     */\n    Matrix.prototype.translate = function (offsetX, offsetY) {\n        this.metrixElements[4] = offsetX;\n        this.metrixElements[5] = offsetY;\n    };\n    /**\n     * `Translates` the specified offset X.\n     * @private\n     */\n    Matrix.prototype.transform = function (point) {\n        var x = point.x;\n        var y = point.y;\n        var x2 = x * this.elements[0] + y * this.elements[2] + this.offsetX;\n        var y2 = x * this.elements[1] + y * this.elements[3] + this.offsetY;\n        return new PointF(x2, y2);\n    };\n    /**\n     * `Multiplies matrices` (changes coordinate system.)\n     * @private\n     */\n    Matrix.prototype.multiply = function (matrix) {\n        var tempMatrix = [];\n        tempMatrix.push(this.elements[0] * matrix.elements[0] + this.elements[1] * matrix.elements[2]);\n        tempMatrix[1] = (this.elements[0] * matrix.elements[1] + this.elements[1] * matrix.elements[3]);\n        tempMatrix[2] = (this.elements[2] * matrix.elements[0] + this.elements[3] * matrix.elements[2]);\n        tempMatrix[3] = (this.elements[2] * matrix.elements[1] + this.elements[3] * matrix.elements[3]);\n        tempMatrix[4] = (this.offsetX * matrix.elements[0] + this.offsetY * matrix.elements[2] + matrix.offsetX);\n        tempMatrix[5] = (this.offsetX * matrix.elements[1] + this.offsetY * matrix.elements[3] + matrix.offsetY);\n        for (var i = 0; i < tempMatrix.length; i++) {\n            this.elements[i] = tempMatrix[i];\n        }\n    };\n    // IDisposable Members\n    /**\n     * `Dispose` this instance of PdfTransformationMatrix class.\n     * @private\n     */\n    Matrix.prototype.dispose = function () {\n        this.metrixElements = null;\n    };\n    // ICloneable Members\n    /**\n     * `Clones` this instance of PdfTransformationMatrix class.\n     * @private\n     */\n    Matrix.prototype.clone = function () {\n        var m = new Matrix(this.metrixElements);\n        return m;\n    };\n    return Matrix;\n}());\nexport { Matrix };\n","/**\n * `constants.ts` class for EJ2-PDF\n * @private\n */\nvar ProcedureSets = /** @class */ (function () {\n    function ProcedureSets() {\n        /**\n         * Specifies the `PDF` procedure set.\n         * @private\n         */\n        this.pdf = 'PDF';\n        /**\n         * Specifies the `Text` procedure set.\n         * @private\n         */\n        this.text = 'Text';\n        /**\n         * Specifies the `ImageB` procedure set.\n         * @private\n         */\n        this.imageB = 'ImageB';\n        /**\n         * Specifies the `ImageC` procedure set.\n         * @private\n         */\n        this.imageC = 'ImageC';\n        /**\n         * Specifies the `ImageI` procedure set.\n         * @private\n         */\n        this.imageI = 'ImageI';\n    }\n    return ProcedureSets;\n}());\nexport { ProcedureSets };\n","/**\n * Dictionary class\n * @private\n * @hidden\n */\nvar TemporaryDictionary = /** @class */ (function () {\n    function TemporaryDictionary() {\n        /**\n         * @hidden\n         * @private\n         */\n        this.mKeys = [];\n        /**\n         * @hidden\n         * @private\n         */\n        this.mValues = [];\n    }\n    /**\n     * @hidden\n     * @private\n     */\n    TemporaryDictionary.prototype.size = function () {\n        return this.mKeys.length;\n    };\n    /**\n     * @hidden\n     * @private\n     */\n    TemporaryDictionary.prototype.add = function (key, value) {\n        if (key === undefined || key === null || value === undefined || value === null) {\n            throw new ReferenceError('Provided key or value is not valid.');\n        }\n        var index = this.mKeys.indexOf(key);\n        if (index < 0) {\n            this.mKeys.push(key);\n            this.mValues.push(value);\n            return 1;\n        }\n        else {\n            throw new RangeError('An item with the same key has already been added.');\n        }\n    };\n    /**\n     * @hidden\n     * @private\n     */\n    TemporaryDictionary.prototype.keys = function () {\n        return this.mKeys;\n    };\n    /**\n     * @hidden\n     * @private\n     */\n    TemporaryDictionary.prototype.values = function () {\n        return this.mValues;\n    };\n    /**\n     * @hidden\n     * @private\n     */\n    TemporaryDictionary.prototype.getValue = function (key) {\n        if (key === undefined || key === null) {\n            throw new ReferenceError('Provided key is not valid.');\n        }\n        var index = this.mKeys.indexOf(key);\n        if (index < 0) {\n            throw new RangeError('No item with the specified key has been added.');\n        }\n        else {\n            return this.mValues[index];\n        }\n    };\n    /**\n     * @hidden\n     * @private\n     */\n    TemporaryDictionary.prototype.setValue = function (key, value) {\n        if (key === undefined || key === null) {\n            throw new ReferenceError('Provided key is not valid.');\n        }\n        var index = this.mKeys.indexOf(key);\n        if (index < 0) {\n            this.mKeys.push(key);\n            this.mValues.push(value);\n        }\n        else {\n            this.mValues[index] = value;\n        }\n    };\n    /**\n     * @hidden\n     * @private\n     */\n    TemporaryDictionary.prototype.remove = function (key) {\n        if (key === undefined || key === null) {\n            throw new ReferenceError('Provided key is not valid.');\n        }\n        var index = this.mKeys.indexOf(key);\n        if (index < 0) {\n            throw new RangeError('No item with the specified key has been added.');\n        }\n        else {\n            this.mKeys.splice(index, 1);\n            this.mValues.splice(index, 1);\n            return true;\n        }\n    };\n    /**\n     * @hidden\n     * @private\n     */\n    TemporaryDictionary.prototype.containsKey = function (key) {\n        if (key === undefined || key === null) {\n            throw new ReferenceError('Provided key is not valid.');\n        }\n        var index = this.mKeys.indexOf(key);\n        if (index < 0) {\n            return false;\n        }\n        return true;\n    };\n    /**\n     * @hidden\n     * @private\n     */\n    TemporaryDictionary.prototype.clear = function () {\n        this.mKeys = [];\n        this.mValues = [];\n    };\n    return TemporaryDictionary;\n}());\nexport { TemporaryDictionary };\n","import { PdfDictionary } from './../primitives/pdf-dictionary';\nimport { PdfNumber } from './../primitives/pdf-number';\nimport { PdfName } from './../primitives/pdf-name';\nimport { DictionaryProperties } from './../input-output/pdf-dictionary-properties';\n/**\n * Represents a simple `transparency`.\n * @private\n */\nvar PdfTransparency = /** @class */ (function () {\n    // Properties\n    // /**\n    //  * Gets the `stroke` operation alpha value.\n    //  * @private\n    //  */\n    // public get stroke() : number {\n    //     let result : number = this.getNumber(this.dictionaryProperties.CA);\n    //     return result;\n    // }\n    // /**\n    //  * Gets the `fill` operation alpha value.\n    //  * @private\n    //  */\n    // public get fill() : number {\n    //     let result : number = this.getNumber(this.dictionaryProperties.ca);\n    //     return result;\n    // }\n    // /**\n    //  * Gets the `blend mode`.\n    //  * @private\n    //  */\n    // public get mode() : PdfBlendMode {\n    //     let result : string = this.getName(this.dictionaryProperties.ca);\n    //     return PdfBlendMode.Normal;\n    // }\n    // Constructors\n    /**\n     * Initializes a new instance of the `Transparency` class.\n     * @private\n     */\n    function PdfTransparency(stroke, fill, mode) {\n        // Fields\n        /**\n         * Internal variable to store `dictionary`.\n         * @default new PdfDictionary()\n         * @private\n         */\n        this.dictionary = new PdfDictionary();\n        /**\n         * Internal variable for accessing fields from `DictionryProperties` class.\n         * @default new DictionaryProperties()\n         * @private\n         */\n        this.dictionaryProperties = new DictionaryProperties();\n        this.dictionary.items.setValue(this.dictionaryProperties.CA, new PdfNumber(stroke));\n        this.dictionary.items.setValue(this.dictionaryProperties.ca, new PdfNumber(fill));\n        this.dictionary.items.setValue(this.dictionaryProperties.BM, new PdfName(mode.toString()));\n    }\n    Object.defineProperty(PdfTransparency.prototype, \"element\", {\n        // // Implementation\n        // /**\n        //  * Gets the `number value`.\n        //  * @private\n        //  */\n        // private getNumber(keyName : string) : number {\n        //     let result : number = 0.0;\n        //     let numb : PdfNumber = this.dictionary.items.getValue(keyName) as PdfNumber;\n        //     result = numb.intValue;\n        //     return result;\n        // }\n        // /**\n        //  * Gets the `name value`.\n        //  * @private\n        //  */\n        // private getName(keyName : string) : string {\n        //     let result : string = null;\n        //     let name : PdfName = this.dictionary.items.getValue(keyName) as PdfName;\n        //     result = name.value;\n        //     return result;\n        // }\n        // IPdfWrapper Members\n        /**\n         * Gets the `element`.\n         * @private\n         */\n        get: function () {\n            return this.dictionary;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfTransparency;\n}());\nexport { PdfTransparency };\n","/**\n * Represent a `collection of automatic fields information`.\n * @private\n */\nvar PdfAutomaticFieldInfoCollection = /** @class */ (function () {\n    /**\n     * Initializes a new instance of the 'PdfPageNumberFieldInfoCollection' class.\n     * @private\n     */\n    function PdfAutomaticFieldInfoCollection() {\n        /**\n         * Internal variable to store instance of `pageNumberFields` class.\n         * @private\n         */\n        this.automaticFieldsInformation = [];\n        //\n    }\n    Object.defineProperty(PdfAutomaticFieldInfoCollection.prototype, \"automaticFields\", {\n        /**\n         * Gets the `page number fields collection`.\n         * @private\n         */\n        get: function () {\n            return this.automaticFieldsInformation;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    // Public methods\n    /// Adds the specified field info.\n    /**\n     * Add page number field into collection.\n     * @private\n     */\n    PdfAutomaticFieldInfoCollection.prototype.add = function (fieldInfo) {\n        return this.automaticFields.push(fieldInfo);\n    };\n    return PdfAutomaticFieldInfoCollection;\n}());\nexport { PdfAutomaticFieldInfoCollection };\n","/**\n * Represents a base class for all page graphics elements.\n */\nvar PdfGraphicsElement = /** @class */ (function () {\n    // Constructors\n    function PdfGraphicsElement() {\n        //\n    }\n    /**\n     * `Draws` the page number field.\n     * @public\n     */\n    PdfGraphicsElement.prototype.drawHelper = function (graphics, x, y) {\n        var bNeedSave = (x !== 0 || y !== 0);\n        var gState = null;\n        // Translate co-ordinates.\n        if (bNeedSave) {\n            // Save state.\n            gState = graphics.save();\n            graphics.translateTransform(x, y);\n        }\n        this.drawInternal(graphics);\n        if (bNeedSave) {\n            // Restore state.\n            graphics.restore(gState);\n        }\n    };\n    return PdfGraphicsElement;\n}());\nexport { PdfGraphicsElement };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * PdfAutomaticField.ts class for EJ2-PDF\n */\nimport { RectangleF, SizeF, PointF } from './../../drawing/pdf-drawing';\nimport { PdfSolidBrush } from './../../graphics/brushes/pdf-solid-brush';\nimport { PdfColor } from './../../graphics/pdf-color';\nimport { PdfDocument } from './../pdf-document';\nimport { PdfGraphicsElement } from './../../graphics/figures/base/graphics-element';\nimport { PdfAutomaticFieldInfo } from './automatic-field-info';\n/**\n * Represents a fields which is calculated before the document saves.\n */\nvar PdfAutomaticField = /** @class */ (function (_super) {\n    __extends(PdfAutomaticField, _super);\n    // Constructors\n    function PdfAutomaticField() {\n        var _this = _super.call(this) || this;\n        // Fields\n        _this.internalBounds = new RectangleF(0, 0, 0, 0);\n        _this.internalTemplateSize = new SizeF(0, 0);\n        return _this;\n    }\n    Object.defineProperty(PdfAutomaticField.prototype, \"bounds\", {\n        // Properties\n        get: function () {\n            return this.internalBounds;\n        },\n        set: function (value) {\n            this.internalBounds = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAutomaticField.prototype, \"size\", {\n        get: function () {\n            return new SizeF(this.bounds.width, this.bounds.height);\n        },\n        set: function (value) {\n            this.bounds.width = value.width;\n            this.bounds.height = value.height;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAutomaticField.prototype, \"location\", {\n        get: function () {\n            return new PointF(this.bounds.x, this.bounds.y);\n        },\n        set: function (value) {\n            this.bounds.x = value.x;\n            this.bounds.y = value.y;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAutomaticField.prototype, \"font\", {\n        get: function () {\n            return this.internalFont;\n        },\n        set: function (value) {\n            this.internalFont = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAutomaticField.prototype, \"brush\", {\n        get: function () {\n            return this.internalBrush;\n        },\n        set: function (value) {\n            this.internalBrush = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAutomaticField.prototype, \"pen\", {\n        get: function () {\n            return this.internalPen;\n        },\n        set: function (value) {\n            this.internalPen = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAutomaticField.prototype, \"stringFormat\", {\n        get: function () {\n            return this.internalStringFormat;\n        },\n        set: function (value) {\n            this.internalStringFormat = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfAutomaticField.prototype.performDrawHelper = function (graphics, location, scalingX, scalingY) {\n        if (this.bounds.height === 0 || this.bounds.width === 0) {\n            var text = this.getValue(graphics);\n            this.internalTemplateSize = this.getFont().measureString(text, this.size, this.stringFormat);\n        }\n    };\n    PdfAutomaticField.prototype.draw = function (arg1, arg2, arg3) {\n        if (typeof arg2 === 'undefined') {\n            var location_1 = new PointF(0, 0);\n            this.draw(arg1, location_1);\n        }\n        else if (arg2 instanceof PointF) {\n            this.draw(arg1, arg2.x, arg2.y);\n        }\n        else {\n            this.drawHelper(arg1, arg2, arg3);\n            var info = new PdfAutomaticFieldInfo(this, new PointF(arg2, arg3));\n            arg1.automaticFields.add(info);\n        }\n    };\n    PdfAutomaticField.prototype.getSize = function () {\n        if (this.bounds.height === 0 || this.bounds.width === 0) {\n            return this.internalTemplateSize;\n        }\n        else {\n            return this.size;\n        }\n    };\n    PdfAutomaticField.prototype.drawInternal = function (graphics) {\n        //\n    };\n    /* tslint:disable */\n    PdfAutomaticField.prototype.getBrush = function () {\n        return (typeof this.internalBrush === 'undefined' || this.internalBrush == null) ? new PdfSolidBrush(new PdfColor(0, 0, 0)) : this.internalBrush;\n    };\n    PdfAutomaticField.prototype.getFont = function () {\n        return (typeof this.internalFont === 'undefined' || this.internalFont == null) ? PdfDocument.defaultFont : this.internalFont;\n    };\n    /* tslint:enable */\n    PdfAutomaticField.prototype.getPageFromGraphics = function (graphics) {\n        if (typeof graphics.page !== 'undefined' && graphics.page !== null) {\n            var page = graphics.page;\n            return page;\n        }\n        else {\n            var page = graphics.currentPage;\n            return page;\n        }\n    };\n    return PdfAutomaticField;\n}(PdfGraphicsElement));\nexport { PdfAutomaticField };\n","/**\n * PdfAutomaticFieldInfo.ts class for EJ2-PDF\n * @private\n */\nimport { PointF } from './../../drawing/pdf-drawing';\nimport { PdfAutomaticField } from './automatic-field';\n/**\n * Represents information about the automatic field.\n * @private\n */\nvar PdfAutomaticFieldInfo = /** @class */ (function () {\n    function PdfAutomaticFieldInfo(field, location, scaleX, scaleY) {\n        // Fields\n        /**\n         * Internal variable to store location of the field.\n         * @private\n         */\n        this.pageNumberFieldLocation = new PointF();\n        /**\n         * Internal variable to store field.\n         * @private\n         */\n        this.pageNumberField = null;\n        /**\n         * Internal variable to store x scaling factor.\n         * @private\n         */\n        this.scaleX = 1;\n        /**\n         * Internal variable to store y scaling factor.\n         * @private\n         */\n        this.scaleY = 1;\n        if (typeof location === 'undefined' && field instanceof PdfAutomaticFieldInfo) {\n            this.pageNumberField = field.field;\n            this.pageNumberFieldLocation = field.location;\n            this.scaleX = field.scalingX;\n            this.scaleY = field.scalingY;\n        }\n        else if (typeof scaleX === 'undefined' && location instanceof PointF && field instanceof PdfAutomaticField) {\n            this.pageNumberField = field;\n            this.pageNumberFieldLocation = location;\n        }\n        else {\n            this.pageNumberField = field;\n            this.pageNumberFieldLocation = location;\n            this.scaleX = scaleX;\n            this.scaleY = scaleY;\n        }\n    }\n    Object.defineProperty(PdfAutomaticFieldInfo.prototype, \"location\", {\n        /* tslint:enable */\n        // Properties\n        /**\n         * Gets or sets the location.\n         * @private\n         */\n        get: function () {\n            return this.pageNumberFieldLocation;\n        },\n        set: function (value) {\n            this.pageNumberFieldLocation = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAutomaticFieldInfo.prototype, \"field\", {\n        /**\n         * Gets or sets the field.\n         * @private\n         */\n        get: function () {\n            return this.pageNumberField;\n        },\n        set: function (value) {\n            this.pageNumberField = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAutomaticFieldInfo.prototype, \"scalingX\", {\n        /**\n         * Gets or sets the scaling X factor.\n         * @private\n         */\n        get: function () {\n            return this.scaleX;\n        },\n        set: function (value) {\n            this.scaleX = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAutomaticFieldInfo.prototype, \"scalingY\", {\n        /**\n         * Gets or sets the scaling Y factor.\n         * @private\n         */\n        get: function () {\n            return this.scaleY;\n        },\n        set: function (value) {\n            this.scaleY = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfAutomaticFieldInfo;\n}());\nexport { PdfAutomaticFieldInfo };\n","/**\n * ByteArray class\n * Used to keep information about image stream as byte array.\n * @private\n */\nvar ByteArray = /** @class */ (function () {\n    /**\n     * Initialize the new instance for `byte-array` class\n     * @hidden\n     * @private\n     */\n    function ByteArray(length) {\n        /**\n         * Current stream `position`.\n         * @default 0\n         * @private\n         */\n        this.mPosition = 0;\n        this.buffer = new Uint8Array(length);\n        this.dataView = new DataView(this.buffer.buffer);\n    }\n    Object.defineProperty(ByteArray.prototype, \"position\", {\n        /**\n         * Gets and Sets a current `position` of byte array.\n         * @hidden\n         * @private\n         */\n        get: function () {\n            return this.mPosition;\n        },\n        set: function (value) {\n            this.mPosition = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * `Read` from current stream position.\n     * @default 0\n     * @hidden\n     * @private\n     */\n    ByteArray.prototype.read = function (buffer, offset, count) {\n        for (var index = offset; index < count; index++) {\n            var position = this.position;\n            buffer.buffer[index] = this.readByte(position);\n            this.position++;\n        }\n    };\n    /**\n     * @hidden\n     */\n    ByteArray.prototype.getBuffer = function (index) {\n        return this.buffer[index];\n    };\n    /**\n     * @hidden\n     */\n    ByteArray.prototype.writeFromBase64String = function (base64) {\n        var arr = this.encodedString(base64);\n        this.buffer = arr;\n    };\n    /**\n     * @hidden\n     */\n    ByteArray.prototype.encodedString = function (input) {\n        var keyStr = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';\n        var chr1;\n        var chr2;\n        var chr3;\n        var enc1;\n        var enc2;\n        var enc3;\n        var enc4;\n        var i = 0;\n        var resultIndex = 0;\n        var dataUrlPrefix = 'data:';\n        input = input.replace(/[^A-Za-z0-9\\+\\/\\=]/g, '');\n        var totalLength = input.length * 3 / 4;\n        if (input.charAt(input.length - 1) === keyStr.charAt(64)) {\n            totalLength--;\n        }\n        var output = new Uint8Array(totalLength | 0);\n        while (i < input.length) {\n            enc1 = keyStr.indexOf(input.charAt(i++));\n            enc2 = keyStr.indexOf(input.charAt(i++));\n            enc3 = keyStr.indexOf(input.charAt(i++));\n            enc4 = keyStr.indexOf(input.charAt(i++));\n            chr1 = (enc1 << 2) | (enc2 >> 4);\n            chr2 = ((enc2 & 15) << 4) | (enc3 >> 2);\n            chr3 = ((enc3 & 3) << 6) | enc4;\n            output[resultIndex++] = chr1;\n            output[resultIndex++] = chr2;\n            output[resultIndex++] = chr3;\n        }\n        return output;\n    };\n    /**\n     * @hidden\n     */\n    ByteArray.prototype.readByte = function (offset) {\n        return (this.buffer[offset]);\n    };\n    Object.defineProperty(ByteArray.prototype, \"internalBuffer\", {\n        /**\n         * @hidden\n         */\n        get: function () {\n            return this.buffer;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ByteArray.prototype, \"count\", {\n        /**\n         * @hidden\n         */\n        get: function () {\n            return this.buffer.byteLength;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * 'readNextTwoBytes' stream\n     * @hidden\n     * @private\n     */\n    ByteArray.prototype.readNextTwoBytes = function (stream) {\n        var data = stream.readByte(this.position);\n        this.position++;\n        data <<= 8;\n        data |= stream.readByte(this.position);\n        this.position++;\n        return data;\n    };\n    return ByteArray;\n}());\nexport { ByteArray };\n","/**\n * ImageDecoder class\n */\nimport { ByteArray } from './byte-array';\nimport { PdfStream } from './../../primitives/pdf-stream';\nimport { DictionaryProperties } from './../../input-output/pdf-dictionary-properties';\nimport { PdfName } from './../../primitives/pdf-name';\nimport { PdfNumber } from './../../primitives/pdf-number';\nimport { PdfBoolean } from './../../primitives/pdf-boolean';\nimport { PdfDictionary } from './../../primitives/pdf-dictionary';\n/**\n * Specifies the image `format`.\n * @private\n */\nexport var ImageFormat;\n(function (ImageFormat) {\n    /**\n     * Specifies the type of `Unknown`.\n     * @hidden\n     * @private\n     */\n    ImageFormat[ImageFormat[\"Unknown\"] = 0] = \"Unknown\";\n    /**\n     * Specifies the type of `Bmp`.\n     * @hidden\n     * @private\n     */\n    ImageFormat[ImageFormat[\"Bmp\"] = 1] = \"Bmp\";\n    /**\n     * Specifies the type of `Emf`.\n     * @hidden\n     * @private\n     */\n    ImageFormat[ImageFormat[\"Emf\"] = 2] = \"Emf\";\n    /**\n     * Specifies the type of `Gif`.\n     * @hidden\n     * @private\n     */\n    ImageFormat[ImageFormat[\"Gif\"] = 3] = \"Gif\";\n    /**\n     * Specifies the type of `Jpeg`.\n     * @hidden\n     * @private\n     */\n    ImageFormat[ImageFormat[\"Jpeg\"] = 4] = \"Jpeg\";\n    /**\n     * Specifies the type of `Png`.\n     * @hidden\n     * @private\n     */\n    ImageFormat[ImageFormat[\"Png\"] = 5] = \"Png\";\n    /**\n     * Specifies the type of `Wmf`.\n     * @hidden\n     * @private\n     */\n    ImageFormat[ImageFormat[\"Wmf\"] = 6] = \"Wmf\";\n    /**\n     * Specifies the type of `Icon`.\n     * @hidden\n     * @private\n     */\n    ImageFormat[ImageFormat[\"Icon\"] = 7] = \"Icon\";\n})(ImageFormat || (ImageFormat = {}));\n/**\n * `Decode the image stream`.\n * @private\n */\nvar ImageDecoder = /** @class */ (function () {\n    /**\n     * Initialize the new instance for `image-decoder` class.\n     * @private\n     */\n    function ImageDecoder(stream) {\n        /**\n         * Start of file markers.\n         * @hidden\n         * @private\n         */\n        this.sof1Marker = 0x00C1;\n        this.sof2Marker = 0x00C2;\n        this.sof3Marker = 0x00C3;\n        this.sof5Marker = 0x00C5;\n        this.sof6Marker = 0x00C6;\n        this.sof7Marker = 0x00C7;\n        this.sof9Marker = 0x00C9;\n        this.sof10Marker = 0x00CA;\n        this.sof11Marker = 0x00CB;\n        this.sof13Marker = 0x00CD;\n        this.sof14Marker = 0x00CE;\n        this.sof15Marker = 0x00CF;\n        /**\n         * Specifies `format` of image.\n         * @hidden\n         * @private\n         */\n        this.mFormat = ImageFormat.Unknown;\n        /**\n         * `Bits per component`.\n         * @default 8\n         * @hidden\n         * @private\n         */\n        this.mbitsPerComponent = 8;\n        /**\n         * Internal variable for accessing fields from `DictionryProperties` class.\n         * @hidden\n         * @private\n         */\n        this.dictionaryProperties = new DictionaryProperties();\n        this.mStream = stream;\n        this.initialize();\n    }\n    Object.defineProperty(ImageDecoder.prototype, \"height\", {\n        /**\n         * Gets the `height` of image.\n         * @hidden\n         * @private\n         */\n        get: function () {\n            return this.mHeight;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ImageDecoder.prototype, \"width\", {\n        /**\n         * Gets the `width` of image.\n         * @hidden\n         * @private\n         */\n        get: function () {\n            return this.mWidth;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ImageDecoder.prototype, \"bitsPerComponent\", {\n        /**\n         * Gets `bits per component`.\n         * @hidden\n         * @private\n         */\n        get: function () {\n            return this.mbitsPerComponent;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ImageDecoder.prototype, \"size\", {\n        /**\n         * Gets the `size` of an image data.\n         * @hidden\n         * @private\n         */\n        get: function () {\n            return this.mImageData.count;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ImageDecoder.prototype, \"imageData\", {\n        /**\n         * Gets the value of an `image data`.\n         * @hidden\n         * @private\n         */\n        get: function () {\n            return this.mImageData;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ImageDecoder.prototype, \"imageDataAsNumberArray\", {\n        /**\n         * Gets the value of an `image data as number array`.\n         * @hidden\n         * @private\n         */\n        get: function () {\n            return this.mImageData.internalBuffer.buffer;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * `Initialize` image data and image stream.\n     * @hidden\n     * @private\n     */\n    ImageDecoder.prototype.initialize = function () {\n        if (this.mFormat === ImageFormat.Unknown && this.checkIfJpeg()) {\n            this.mFormat = ImageFormat.Jpeg;\n            this.parseJpegImage();\n        }\n        else {\n            throw new TypeError('Only the JPEG format is supported');\n        }\n        this.reset();\n        this.mImageData = new ByteArray(this.mStream.count);\n        this.mStream.read(this.mImageData, 0, this.mImageData.count);\n    };\n    /**\n     * `Reset` stream position into 0.\n     * @hidden\n     * @private\n     */\n    ImageDecoder.prototype.reset = function () {\n        this.mStream.position = 0;\n    };\n    /**\n     * `Parse` Jpeg image.\n     * @hidden\n     * @private\n     */\n    ImageDecoder.prototype.parseJpegImage = function () {\n        this.reset();\n        var imgData = new ByteArray(this.mStream.count);\n        this.mStream.read(imgData, 0, imgData.count);\n        var i = 4;\n        var isLengthExceed = false;\n        /* tslint:disable */\n        var length = imgData.getBuffer(i) * 256 + imgData.getBuffer(i + 1);\n        while (i < imgData.count) {\n            i += length;\n            if (i < imgData.count) {\n                if (imgData.getBuffer(i + 1) === 192) {\n                    this.mHeight = imgData.getBuffer(i + 5) * 256 + imgData.getBuffer(i + 6);\n                    this.mWidth = imgData.getBuffer(i + 7) * 256 + imgData.getBuffer(i + 8);\n                    return;\n                }\n                else {\n                    i += 2;\n                    length = imgData.getBuffer(i) * 256 + imgData.getBuffer(i + 1);\n                }\n            }\n            else {\n                isLengthExceed = true;\n                break;\n            }\n        }\n        if (isLengthExceed) {\n            this.mStream.position = 0;\n            this.skip(this.mStream, 2);\n            this.readExceededJPGImage(this.mStream);\n        }\n        /* tslint:enable */\n    };\n    Object.defineProperty(ImageDecoder.prototype, \"format\", {\n        /**\n         * Gets the image `format`.\n         * @private\n         * @hidden\n         */\n        get: function () {\n            return this.mFormat;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * `Checks if JPG`.\n     * @private\n     * @hidden\n     */\n    ImageDecoder.prototype.checkIfJpeg = function () {\n        this.reset();\n        for (var i = 0; i < ImageDecoder.mJpegHeader.length; i++) {\n            if (ImageDecoder.mJpegHeader[i] !== this.mStream.readByte(i)) {\n                return false;\n            }\n            this.mStream.position++;\n        }\n        return true;\n    };\n    /**\n     * Return image `dictionary`.\n     * @hidden\n     * @private\n     */\n    ImageDecoder.prototype.getImageDictionary = function () {\n        if (this.mFormat === ImageFormat.Jpeg) {\n            var tempArrayBuffer = this.imageData.internalBuffer.length;\n            this.imageStream = new PdfStream();\n            this.imageStream.isResource = true;\n            var tempString = '';\n            var decodedString = '';\n            for (var i = 0; i < this.imageDataAsNumberArray.byteLength; i++) {\n                tempString += String.fromCharCode(null, this.mStream.readByte(i));\n            }\n            for (var i = 0; i < tempString.length; i++) {\n                if (i % 2 !== 0) {\n                    decodedString += tempString[i];\n                }\n            }\n            this.imageStream.data = [decodedString];\n            this.imageStream.compress = false;\n            this.imageStream.items.setValue(this.dictionaryProperties.type, new PdfName(this.dictionaryProperties.xObject));\n            this.imageStream.items.setValue(this.dictionaryProperties.subtype, new PdfName(this.dictionaryProperties.image));\n            this.imageStream.items.setValue(this.dictionaryProperties.width, new PdfNumber(this.width));\n            this.imageStream.items.setValue(this.dictionaryProperties.height, new PdfNumber(this.height));\n            this.imageStream.items.setValue(this.dictionaryProperties.bitsPerComponent, new PdfNumber(this.bitsPerComponent));\n            this.imageStream.items.setValue(this.dictionaryProperties.filter, new PdfName(this.dictionaryProperties.dctdecode));\n            this.imageStream.items.setValue(this.dictionaryProperties.colorSpace, new PdfName(this.getColorSpace()));\n            this.imageStream.items.setValue(this.dictionaryProperties.decodeParms, this.getDecodeParams());\n            return this.imageStream;\n        }\n        else {\n            return this.imageStream;\n        }\n    };\n    /**\n     * Return `colorSpace` of an image.\n     * @hidden\n     * @private\n     */\n    ImageDecoder.prototype.getColorSpace = function () {\n        return this.dictionaryProperties.deviceRgb;\n    };\n    /**\n     * Return `decode parameters` of an image.\n     * @hidden\n     * @private\n     */\n    ImageDecoder.prototype.getDecodeParams = function () {\n        var decodeParams = new PdfDictionary();\n        decodeParams.items.setValue(this.dictionaryProperties.columns, new PdfNumber(this.width));\n        decodeParams.items.setValue(this.dictionaryProperties.blackIs1, new PdfBoolean(true));\n        decodeParams.items.setValue(this.dictionaryProperties.k, new PdfNumber(-1));\n        decodeParams.items.setValue(this.dictionaryProperties.predictor, new PdfNumber(15));\n        decodeParams.items.setValue(this.dictionaryProperties.bitsPerComponent, new PdfNumber(this.bitsPerComponent));\n        return decodeParams;\n    };\n    /**\n     * 'readExceededJPGImage' stream\n     * @hidden\n     * @private\n     */\n    ImageDecoder.prototype.readExceededJPGImage = function (stream) {\n        this.mStream = stream;\n        var isContinueReading = true;\n        while (isContinueReading) {\n            var marker = this.getMarker(stream);\n            switch (marker) {\n                case this.sof1Marker:\n                case this.sof2Marker:\n                case this.sof3Marker:\n                case this.sof5Marker:\n                case this.sof6Marker:\n                case this.sof7Marker:\n                case this.sof9Marker:\n                case this.sof10Marker:\n                case this.sof11Marker:\n                case this.sof13Marker:\n                case this.sof14Marker:\n                case this.sof15Marker:\n                    stream.position += 3;\n                    this.mHeight = this.mStream.readNextTwoBytes(stream);\n                    this.mWidth = this.mStream.readNextTwoBytes(stream);\n                    isContinueReading = false;\n                    break;\n                default:\n                    this.skipStream(stream);\n                    break;\n            }\n        }\n    };\n    /**\n     * 'skip' stream\n     * @hidden\n     * @private\n     */\n    ImageDecoder.prototype.skip = function (stream, noOfBytes) {\n        this.mStream = stream;\n        var temp = new ByteArray(noOfBytes);\n        this.mStream.read(temp, 0, temp.count);\n    };\n    /**\n     * 'getMarker' stream\n     * @hidden\n     * @private\n     */\n    ImageDecoder.prototype.getMarker = function (stream) {\n        var skippedByte = 0;\n        var marker = 32;\n        marker = stream.readByte(this.mStream.position);\n        stream.position++;\n        while (marker !== 255) {\n            skippedByte++;\n            marker = stream.readByte(this.mStream.position);\n            stream.position++;\n        }\n        do {\n            marker = stream.readByte(this.mStream.position);\n            stream.position++;\n        } while (marker === 255);\n        return marker;\n    };\n    /**\n     * 'skipStream' stream\n     * @hidden\n     * @private\n     */\n    ImageDecoder.prototype.skipStream = function (stream) {\n        var markerLength = this.mStream.readNextTwoBytes(stream) - 2;\n        if (markerLength > 0) {\n            stream.position += markerLength;\n        }\n    };\n    /**\n     * Number array for `png header`.\n     * @hidden\n     * @private\n     */\n    ImageDecoder.mPngHeader = [137, 80, 78, 71, 13, 10, 26, 10];\n    /**\n     * Number Array for `jpeg header`.\n     * @hidden\n     * @private\n     */\n    ImageDecoder.mJpegHeader = [255, 216];\n    /**\n     * Number array for `gif header`.\n     * @hidden\n     * @private\n     */\n    ImageDecoder.GIF_HEADER = 'G,I,F,8';\n    /**\n     * Number array for `bmp header.`\n     * @hidden\n     * @private\n     */\n    ImageDecoder.BMP_HEADER = 'B,M';\n    return ImageDecoder;\n}());\nexport { ImageDecoder };\n","/**\n * Used to perform `convertion between pixels and points`.\n * @private\n */\nvar PdfUnitConverter = /** @class */ (function () {\n    //constructors\n    /**\n     * Initializes a new instance of the `UnitConvertor` class with DPI value.\n     * @private\n     */\n    function PdfUnitConverter(dpi) {\n        this.updateProportionsHelper(dpi);\n    }\n    /**\n     * `Converts` the value, from one graphics unit to another graphics unit.\n     * @private\n     */\n    PdfUnitConverter.prototype.convertUnits = function (value, from, to) {\n        return this.convertFromPixels(this.convertToPixels(value, from), to);\n    };\n    /**\n     * Converts the value `to pixel` from specified graphics unit.\n     * @private\n     */\n    PdfUnitConverter.prototype.convertToPixels = function (value, from) {\n        var index = from;\n        var result = (value * this.proportions[index]);\n        return result;\n    };\n    /**\n     * Converts value, to specified graphics unit `from Pixel`.\n     * @private\n     */\n    PdfUnitConverter.prototype.convertFromPixels = function (value, to) {\n        var index = to;\n        var result = (value / this.proportions[index]);\n        return result;\n    };\n    /**\n     * `Update proportions` matrix according to Graphics settings.\n     * @private\n     */\n    PdfUnitConverter.prototype.updateProportionsHelper = function (pixelPerInch) {\n        this.proportions = [\n            pixelPerInch / 2.54,\n            pixelPerInch / 6.0,\n            1,\n            pixelPerInch / 72.0,\n            pixelPerInch,\n            pixelPerInch / 300.0,\n            pixelPerInch / 25.4 // Millimeter\n        ];\n    };\n    //Fields\n    /**\n     * Indicates default `horizontal resolution`.\n     * @default 96\n     * @private\n     */\n    PdfUnitConverter.horizontalResolution = 96;\n    /**\n     * Indicates default `vertical resolution`.\n     * @default 96\n     * @private\n     */\n    PdfUnitConverter.verticalResolution = 96;\n    return PdfUnitConverter;\n}());\nexport { PdfUnitConverter };\n","import { SizeF } from './../../drawing/pdf-drawing';\nimport { PdfGraphicsUnit } from './../enum';\nimport { PdfUnitConverter } from './../unit-convertor';\n/**\n * `PdfImage` class represents the base class for images and provides functionality for the 'PdfBitmap' class.\n * @private\n */\nvar PdfImage = /** @class */ (function () {\n    function PdfImage() {\n    }\n    Object.defineProperty(PdfImage.prototype, \"width\", {\n        /**\n         * Gets and Sets the `width` of an image.\n         * @private\n         */\n        get: function () {\n            return this.imageWidth;\n        },\n        set: function (value) {\n            this.imageWidth = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfImage.prototype, \"height\", {\n        /**\n         * Gets and Sets the `height` of an image.\n         * @private\n         */\n        get: function () {\n            return this.imageHeight;\n        },\n        set: function (value) {\n            this.imageHeight = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfImage.prototype, \"size\", {\n        /**\n         * Gets or sets the size of the image.\n         * @private\n         */\n        set: function (value) {\n            this.width = value.width;\n            this.height = value.height;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfImage.prototype, \"physicalDimension\", {\n        /**\n         * Gets the `physical dimension` of an image.\n         * @private\n         */\n        get: function () {\n            this.imagePhysicalDimension = this.getPointSize(this.width, this.height, this.horizontalResolution, this.verticalResolution);\n            return new SizeF(this.width, this.height);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfImage.prototype, \"element\", {\n        // /**\n        //  * Gets the `image stream as string`.\n        //  * @private\n        //  */\n        // public static fromString(string : string) : PdfImage {\n        //     let image : PdfImage = new PdfBitmap(string);\n        //     return image;\n        // }\n        /**\n         * Gets the `element` image stream.\n         * @private\n         */\n        get: function () {\n            return this.imageStream;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfImage.prototype.getPointSize = function (width, height, horizontalResolution, verticalResolution) {\n        if (typeof horizontalResolution === 'undefined') {\n            var dpiX = PdfUnitConverter.horizontalResolution;\n            var dpiY = PdfUnitConverter.verticalResolution;\n            var size = this.getPointSize(width, height, dpiX, dpiY);\n            return size;\n        }\n        else {\n            var ucX = new PdfUnitConverter(horizontalResolution);\n            var ucY = new PdfUnitConverter(verticalResolution);\n            var ptWidth = ucX.convertUnits(width, PdfGraphicsUnit.Pixel, PdfGraphicsUnit.Point);\n            var ptHeight = ucY.convertUnits(height, PdfGraphicsUnit.Pixel, PdfGraphicsUnit.Point);\n            var size = new SizeF(ptWidth, ptHeight);\n            return size;\n        }\n    };\n    return PdfImage;\n}());\nexport { PdfImage };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * PdfBitmap.ts class for EJ2-PDF\n */\nimport { ImageDecoder } from './../../graphics/images/image-decoder';\nimport { ByteArray } from './../../graphics/images/byte-array';\nimport { DictionaryProperties } from './../../input-output/pdf-dictionary-properties';\nimport { PdfImage } from './pdf-image';\n/**\n * The 'PdfBitmap' contains methods and properties to handle the Bitmap images.\n * ```typescript\n * // create a new PDF document.\n * let document : PdfDocument = new PdfDocument();\n * // add a page to the document.\n * let page1 : PdfPage = document.pages.add();\n * // base64 string of an image\n * let imageString : string = '/9j/3+2w7em7HzY/KiijFw … 1OEYRUYrQ45yc5OUtz/9k=';\n * // load the image from the base64 string of original image.\n * let image : PdfBitmap = new PdfBitmap(imageString);\n * // draw the image\n * page1.graphics.drawImage(image, new RectangleF({x : 10, y : 10}, {width : 200, height : 200}));\n * // save the document.\n * document.save('output.pdf');\n * // destroy the document\n * document.destroy();\n * ```\n */\nvar PdfBitmap = /** @class */ (function (_super) {\n    __extends(PdfBitmap, _super);\n    /**\n     * Create an instance for `PdfBitmap` class.\n     * @param encodedString Base64 string of an image.\n     * ```typescript\n     * // create a new PDF document.\n     * let document : PdfDocument = new PdfDocument();\n     * // add a page to the document.\n     * let page1 : PdfPage = document.pages.add();\n     * // base64 string of an image\n     * let imageString : string = '/9j/3+2w7em7HzY/KiijFw … 1OEYRUYrQ45yc5OUtz/9k=';\n     * //\n     * // load the image from the base64 string of original image.\n     * let image : PdfBitmap = new PdfBitmap(imageString);\n     * //\n     * // draw the image\n     * page1.graphics.drawImage(image, new RectangleF({x : 10, y : 10}, {width : 200, height : 200}));\n     * // save the document.\n     * document.save('output.pdf');\n     * // destroy the document\n     * document.destroy();\n     * ```\n     */\n    function PdfBitmap(encodedString) {\n        var _this = _super.call(this) || this;\n        //Fields\n        /**\n         * Specifies the `status` of an image.\n         * @default true.\n         * @hidden\n         * @private\n         */\n        _this.imageStatus = true;\n        /**\n         * Internal variable for accessing fields from `DictionryProperties` class.\n         * @hidden\n         * @private\n         */\n        _this.dictionaryProperties = new DictionaryProperties();\n        _this.loadImage(encodedString);\n        return _this;\n    }\n    /**\n     * `Load image`.\n     * @hidden\n     * @private\n     */\n    PdfBitmap.prototype.loadImage = function (encodedString) {\n        var task = this.initializeAsync(encodedString);\n    };\n    /**\n     * `Initialize` image parameters.\n     * @private\n     */\n    PdfBitmap.prototype.initializeAsync = function (encodedString) {\n        var byteArray = new ByteArray(encodedString.length);\n        byteArray.writeFromBase64String(encodedString);\n        this.decoder = new ImageDecoder(byteArray);\n        this.height = this.decoder.height;\n        this.width = this.decoder.width;\n        // FrameCount = BitmapImageDecoder.FrameCount;\n        this.bitsPerComponent = this.decoder.bitsPerComponent;\n    };\n    /**\n     * `Saves` the image into stream.\n     * @private\n     */\n    PdfBitmap.prototype.save = function () {\n        this.imageStatus = true;\n        this.imageStream = this.decoder.getImageDictionary();\n    };\n    return PdfBitmap;\n}(PdfImage));\nexport { PdfBitmap };\n","/**\n * TtfTableInfo.ts class for EJ2-PDF\n */\nvar TtfTableInfo = /** @class */ (function () {\n    function TtfTableInfo() {\n    }\n    Object.defineProperty(TtfTableInfo.prototype, \"empty\", {\n        //Properties\n        /**\n         * Gets a value indicating whether this table is empty.\n         * @private\n         */\n        get: function () {\n            var empty = (this.offset === this.length && this.length === this.checksum && this.checksum === 0);\n            return empty;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return TtfTableInfo;\n}());\nexport { TtfTableInfo };\n","var TtfNameTable = /** @class */ (function () {\n    function TtfNameTable() {\n    }\n    return TtfNameTable;\n}());\nexport { TtfNameTable };\n","/**\n * TtfNameRecord.ts class for EJ2-PDF\n */\nvar TtfNameRecord = /** @class */ (function () {\n    function TtfNameRecord() {\n    }\n    return TtfNameRecord;\n}());\nexport { TtfNameRecord };\n","/**\n * TtfHeadTable.ts class for EJ2-PDF\n */\nvar TtfHeadTable = /** @class */ (function () {\n    function TtfHeadTable() {\n    }\n    return TtfHeadTable;\n}());\nexport { TtfHeadTable };\n","var TtfMetrics = /** @class */ (function () {\n    function TtfMetrics() {\n    }\n    Object.defineProperty(TtfMetrics.prototype, \"isItalic\", {\n        //Properties\n        /**\n         * Gets a value indicating whether this instance is italic.\n         */\n        get: function () {\n            return ((this.macStyle & 2) !== 0);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TtfMetrics.prototype, \"isBold\", {\n        /**\n         * Gets a value indicating whether this instance is bold.\n         */\n        get: function () {\n            return ((this.macStyle & 1) !== 0);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return TtfMetrics;\n}());\nexport { TtfMetrics };\n","/**\n * TtfHorizontalHeaderTable.ts class for EJ2-PDF\n */\nvar TtfHorizontalHeaderTable = /** @class */ (function () {\n    function TtfHorizontalHeaderTable() {\n    }\n    return TtfHorizontalHeaderTable;\n}());\nexport { TtfHorizontalHeaderTable };\n","/**\n * TtfOS2Table.ts class for EJ2-PDF\n * The OS/2 table consists of a set of metrics that are required by Windows and OS/2.\n */\nvar TtfOS2Table = /** @class */ (function () {\n    function TtfOS2Table() {\n    }\n    return TtfOS2Table;\n}());\nexport { TtfOS2Table };\n","/**\n * TtfPostTable.ts class for EJ2-PDF\n */\nvar TtfPostTable = /** @class */ (function () {\n    function TtfPostTable() {\n    }\n    return TtfPostTable;\n}());\nexport { TtfPostTable };\n","/**\n * TtfLongHorMetric.ts class for EJ2-PDF\n */\nvar TtfLongHorMetric = /** @class */ (function () {\n    function TtfLongHorMetric() {\n    }\n    return TtfLongHorMetric;\n}());\nexport { TtfLongHorMetric };\n","/**\n * TtfCmapSubTable.ts class for EJ2-PDF\n */\nvar TtfCmapSubTable = /** @class */ (function () {\n    function TtfCmapSubTable() {\n    }\n    return TtfCmapSubTable;\n}());\nexport { TtfCmapSubTable };\n","/**\n * TtfCmapTable.ts class for EJ2-PDF\n */\nvar TtfCmapTable = /** @class */ (function () {\n    function TtfCmapTable() {\n    }\n    return TtfCmapTable;\n}());\nexport { TtfCmapTable };\n","/**\n * TtfGlyphInfo.ts class for EJ2-PDF\n */\nvar TtfGlyphInfo = /** @class */ (function () {\n    function TtfGlyphInfo() {\n    }\n    Object.defineProperty(TtfGlyphInfo.prototype, \"empty\", {\n        //Properties\n        /**\n         * Gets a value indicating whether this TtfGlyphInfo is empty.\n         */\n        get: function () {\n            var empty = (this.index === this.width && this.width === this.charCode && this.charCode === 0);\n            return empty;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    //IComparable implementation\n    /**\n     * Compares two WidthDescriptor objects.\n     */\n    TtfGlyphInfo.prototype.compareTo = function (obj) {\n        var glyph = obj;\n        return this.index - glyph.index;\n    };\n    return TtfGlyphInfo;\n}());\nexport { TtfGlyphInfo };\n","/**\n * TtfLocaTable.ts class for EJ2-PDF\n */\nvar TtfLocaTable = /** @class */ (function () {\n    function TtfLocaTable() {\n    }\n    return TtfLocaTable;\n}());\nexport { TtfLocaTable };\n","/**\n * TtfAppleCmapSubTable.ts class for EJ2-PDF\n */\nvar TtfAppleCmapSubTable = /** @class */ (function () {\n    function TtfAppleCmapSubTable() {\n    }\n    return TtfAppleCmapSubTable;\n}());\nexport { TtfAppleCmapSubTable };\n","/**\n * TtfMicrosoftCmapSubTable.ts class for EJ2-PDF\n */\nvar TtfMicrosoftCmapSubTable = /** @class */ (function () {\n    function TtfMicrosoftCmapSubTable() {\n    }\n    return TtfMicrosoftCmapSubTable;\n}());\nexport { TtfMicrosoftCmapSubTable };\n","/**\n * TtfTrimmedCmapSubTable.ts class for EJ2-PDF\n */\nvar TtfTrimmedCmapSubTable = /** @class */ (function () {\n    function TtfTrimmedCmapSubTable() {\n    }\n    return TtfTrimmedCmapSubTable;\n}());\nexport { TtfTrimmedCmapSubTable };\n","/**\n * TtfLocaTable.ts class for EJ2-PDF\n */\nvar TtfGlyphHeader = /** @class */ (function () {\n    function TtfGlyphHeader() {\n    }\n    return TtfGlyphHeader;\n}());\nexport { TtfGlyphHeader };\n","/**\n * Writes data in BigEndian order.\n */\nvar BigEndianWriter = /** @class */ (function () {\n    //Constructors\n    /**\n     * Creates a new writer.\n     */\n    function BigEndianWriter(capacity) {\n        //Constants\n        /**\n         * Size of Int32 type.\n         */\n        this.int32Size = 4;\n        /**\n         * Size of Int16 type.\n         */\n        this.int16Size = 2;\n        /**\n         * Size of long type.\n         */\n        this.int64Size = 8;\n        this.bufferLength = capacity;\n        this.buffer = [];\n    }\n    Object.defineProperty(BigEndianWriter.prototype, \"data\", {\n        //Properties\n        /**\n         * Gets data written to the writer.\n         */\n        get: function () {\n            if (this.buffer.length < this.bufferLength) {\n                var length_1 = this.bufferLength - this.buffer.length;\n                for (var i = 0; i < length_1; i++) {\n                    this.buffer.push(0);\n                }\n            }\n            return this.buffer;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(BigEndianWriter.prototype, \"position\", {\n        /// <summary>\n        /// Gets position of the internal buffer.\n        /// </summary>\n        get: function () {\n            if (this.internalPosition === undefined || this.internalPosition === null) {\n                this.internalPosition = 0;\n            }\n            return this.internalPosition;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Writes short value.\n     */\n    BigEndianWriter.prototype.writeShort = function (value) {\n        var bytes = [((value & 0x0000ff00) >> 8), value & 0x000000ff];\n        this.flush(bytes);\n    };\n    /**\n     * Writes int value.\n     */\n    BigEndianWriter.prototype.writeInt = function (value) {\n        var i1 = (value & 0xff000000) >> 24;\n        i1 = i1 < 0 ? 256 + i1 : i1;\n        var i2 = (value & 0x00ff0000) >> 16;\n        i2 = i2 < 0 ? 256 + i2 : i2;\n        var i3 = (value & 0x0000ff00) >> 8;\n        i3 = i3 < 0 ? 256 + i3 : i3;\n        var i4 = value & 0x000000ff;\n        i4 = i4 < 0 ? 256 + i4 : i4;\n        var bytes = [(value & 0xff000000) >> 24, (value & 0x00ff0000) >> 16, (value & 0x0000ff00) >> 8, value & 0x000000ff];\n        this.flush(bytes);\n    };\n    /**\n     * Writes u int value.\n     */\n    BigEndianWriter.prototype.writeUInt = function (value) {\n        var buff = [(value & 0xff000000) >> 24, (value & 0x00ff0000) >> 16, (value & 0x0000ff00) >> 8, value & 0x000000ff];\n        this.flush(buff);\n    };\n    /**\n     * Writes string value.\n     */\n    BigEndianWriter.prototype.writeString = function (value) {\n        if (value == null) {\n            throw new Error('Argument Null Exception : value');\n        }\n        var bytes = [];\n        for (var i = 0; i < value.length; i++) {\n            bytes.push(value.charCodeAt(i));\n        }\n        this.flush(bytes);\n    };\n    /**\n     * Writes byte[] value.\n     */\n    BigEndianWriter.prototype.writeBytes = function (value) {\n        this.flush(value);\n    };\n    // //Implementation\n    BigEndianWriter.prototype.flush = function (buff) {\n        if (buff === null) {\n            throw new Error('Argument Null Exception : buff');\n        }\n        var position = this.position;\n        for (var i = 0; i < buff.length; i++) {\n            this.buffer[position] = buff[i];\n            position++;\n        }\n        this.internalPosition += buff.length;\n    };\n    return BigEndianWriter;\n}());\nexport { BigEndianWriter };\n","/**\n * TtfReader.ts class for EJ2-PDF\n */\nimport { TtfTableInfo } from './ttf-table-info';\nimport { Dictionary } from './../../collections/dictionary';\nimport { TtfNameTable } from './ttf-name-table';\nimport { TtfNameRecord } from './ttf-name-record';\nimport { TtfHeadTable } from './ttf-head-table';\nimport { TtfMetrics } from './ttf-metrics';\nimport { TtfHorizontalHeaderTable } from './ttf-horizontal-header-table';\nimport { TtfOS2Table } from './ttf-OS2-Table';\nimport { TtfPostTable } from './ttf-post-table';\nimport { TtfLongHorMetric } from './ttf-long-hor-metric';\nimport { TtfCmapSubTable } from './ttf-cmap-sub-table';\nimport { TtfCmapTable } from './ttf-cmap-table';\nimport { TtfGlyphInfo } from './ttf-glyph-info';\nimport { TtfLocaTable } from './ttf-loca-table';\nimport { TtfAppleCmapSubTable } from './ttf-apple-cmap-sub-table';\nimport { TtfMicrosoftCmapSubTable } from './ttf-microsoft-cmap-sub-table';\nimport { TtfTrimmedCmapSubTable } from './ttf-trimmed-cmap-sub-table';\nimport { TtfGlyphHeader } from './ttf-glyph-header';\nimport { Rectangle } from './../../drawing/pdf-drawing';\nimport { StringTokenizer } from './string-tokenizer';\nimport { TtfCmapFormat, TtfCmapEncoding, TtfPlatformID } from './enum';\nimport { TtfMicrosoftEncodingID, TtfMacintoshEncodingID, TtfCompositeGlyphFlags } from './enum';\nimport { BigEndianWriter } from './../../input-output/big-endian-writer';\nvar TtfReader = /** @class */ (function () {\n    //Constructors\n    function TtfReader(fontData) {\n        this.int32Size = 4;\n        this.isTtcFont = false;\n        this.isMacTtf = false;\n        this.metricsName = '';\n        this.isMacTTF = false;\n        this.missedGlyphs = 0;\n        this.tableNames = ['cvt ', 'fpgm', 'glyf', 'head', 'hhea', 'hmtx', 'loca', 'maxp', 'prep'];\n        this.entrySelectors = [0, 0, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4];\n        this.fontData = fontData;\n        this.initialize();\n    }\n    Object.defineProperty(TtfReader.prototype, \"macintosh\", {\n        //Properties\n        /**\n         * Gets glyphs for Macintosh or Symbol fonts (char - key, glyph - value).\n         */\n        get: function () {\n            if (this.macintoshDictionary === null || this.macintoshDictionary === undefined) {\n                this.macintoshDictionary = new Dictionary();\n            }\n            return this.macintoshDictionary;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TtfReader.prototype, \"microsoft\", {\n        /**\n         * Gets glyphs for Microsoft or Symbol fonts (char - key, glyph - value).\n         */\n        get: function () {\n            if (this.microsoftDictionary === null || this.microsoftDictionary === undefined) {\n                this.microsoftDictionary = new Dictionary();\n            }\n            return this.microsoftDictionary;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TtfReader.prototype, \"macintoshGlyphs\", {\n        /**\n         * Gets glyphs for Macintosh or Symbol fonts (glyph index - key, glyph - value).\n         */\n        get: function () {\n            if (this.internalMacintoshGlyphs === null || this.internalMacintoshGlyphs === undefined) {\n                this.internalMacintoshGlyphs = new Dictionary();\n            }\n            return this.internalMacintoshGlyphs;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TtfReader.prototype, \"microsoftGlyphs\", {\n        /**\n         * Gets glyphs for Microsoft Unicode fonts (glyph index - key, glyph - value).\n         */\n        get: function () {\n            if (this.internalMicrosoftGlyphs === null || this.internalMicrosoftGlyphs === undefined) {\n                this.internalMicrosoftGlyphs = new Dictionary();\n            }\n            return this.internalMicrosoftGlyphs;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    //Implementation\n    TtfReader.prototype.initialize = function () {\n        if (this.metrics === undefined) {\n            this.metrics = new TtfMetrics();\n        }\n        this.readFontDictionary();\n        var nameTable = this.readNameTable();\n        var headTable = this.readHeadTable();\n        this.initializeFontName(nameTable);\n        this.metrics.macStyle = headTable.macStyle;\n    };\n    TtfReader.prototype.readFontDictionary = function () {\n        this.offset = 0;\n        var version = this.checkPreambula();\n        //this.offset += 4;\n        var numTables = this.readInt16(this.offset);\n        var searchRange = this.readInt16(this.offset);\n        var entrySelector = this.readInt16(this.offset);\n        var rangeShift = this.readInt16(this.offset);\n        if (this.tableDirectory === undefined) {\n            this.tableDirectory = new Dictionary();\n        }\n        for (var i = 0; i < numTables; ++i) {\n            var table = new TtfTableInfo();\n            var tableKey = this.readString(this.int32Size);\n            table.checksum = this.readInt32(this.offset);\n            table.offset = this.readInt32(this.offset);\n            table.length = this.readInt32(this.offset);\n            this.tableDirectory.setValue(tableKey, table);\n        }\n        this.lowestPosition = this.offset;\n        if (!this.isTtcFont) {\n            this.fixOffsets();\n        }\n    };\n    TtfReader.prototype.fixOffsets = function () {\n        var minOffset = Number.MAX_VALUE;\n        // Search for a smallest offset and compare it with the lowest position found.\n        var tableKeys = this.tableDirectory.keys();\n        for (var i = 0; i < tableKeys.length; i++) {\n            var value = this.tableDirectory.getValue(tableKeys[i]);\n            var offset = value.offset;\n            if (minOffset > offset) {\n                minOffset = offset;\n                if (minOffset <= this.lowestPosition) {\n                    break;\n                }\n            }\n        }\n        var shift = minOffset - this.lowestPosition;\n        if (shift !== 0) {\n            var table = new Dictionary();\n            for (var i = 0; i < tableKeys.length; i++) {\n                var value = this.tableDirectory.getValue(tableKeys[i]);\n                value.offset -= shift;\n                table.setValue(tableKeys[i], value);\n            }\n            this.tableDirectory = table;\n        }\n    };\n    TtfReader.prototype.checkPreambula = function () {\n        var version = this.readInt32(this.offset);\n        this.isMacTtf = (version === 0x74727565) ? true : false;\n        if (version !== 0x10000 && version !== 0x74727565 && version !== 0x4f54544f) {\n            this.isTtcFont = true;\n            this.offset = 0;\n            var fontTag = this.readString(4);\n            if (fontTag !== 'ttcf') {\n                throw new Error('Can not read TTF font data');\n            }\n            //skip 4\n            this.offset += 4;\n            var ttcIdentificationNumber = this.readInt32(this.offset);\n            if (ttcIdentificationNumber < 0) {\n                throw new Error('Can not read TTF font data');\n            }\n            this.offset = this.readInt32(this.offset);\n            version = this.readInt32(this.offset);\n        }\n        return version;\n    };\n    TtfReader.prototype.readNameTable = function () {\n        var tableInfo = this.getTable('name');\n        this.offset = tableInfo.offset;\n        var table = new TtfNameTable();\n        table.formatSelector = this.readUInt16(this.offset);\n        table.recordsCount = this.readUInt16(this.offset);\n        table.offset = this.readUInt16(this.offset);\n        table.nameRecords = [];\n        var recordSize = 12;\n        var position = this.offset;\n        for (var i = 0; i < table.recordsCount; i++) {\n            this.offset = position;\n            var record = new TtfNameRecord();\n            record.platformID = this.readUInt16(this.offset);\n            record.encodingID = this.readUInt16(this.offset);\n            record.languageID = this.readUInt16(this.offset);\n            record.nameID = this.readUInt16(this.offset);\n            record.length = this.readUInt16(this.offset);\n            record.offset = this.readUInt16(this.offset);\n            this.offset = tableInfo.offset + table.offset + record.offset;\n            var unicode = (record.platformID === 0 || record.platformID === 3);\n            record.name = this.readString(record.length, unicode);\n            table.nameRecords[i] = record;\n            position += recordSize;\n        }\n        return table;\n    };\n    TtfReader.prototype.readHeadTable = function () {\n        var tableInfo = this.getTable('head');\n        this.offset = tableInfo.offset;\n        var table = new TtfHeadTable();\n        table.version = this.readFixed(this.offset);\n        table.fontRevision = this.readFixed(this.offset);\n        table.checkSumAdjustment = this.readUInt32(this.offset);\n        table.magicNumber = this.readUInt32(this.offset);\n        table.flags = this.readUInt16(this.offset);\n        table.unitsPerEm = this.readUInt16(this.offset);\n        table.created = this.readInt64(this.offset);\n        table.modified = this.readInt64(this.offset);\n        table.xMin = this.readInt16(this.offset);\n        table.yMin = this.readInt16(this.offset);\n        table.xMax = this.readInt16(this.offset);\n        table.yMax = this.readInt16(this.offset);\n        table.macStyle = this.readUInt16(this.offset);\n        table.lowestReadableSize = this.readUInt16(this.offset);\n        table.fontDirectionHint = this.readInt16(this.offset);\n        table.indexToLocalFormat = this.readInt16(this.offset);\n        table.glyphDataFormat = this.readInt16(this.offset);\n        return table;\n    };\n    TtfReader.prototype.readHorizontalHeaderTable = function () {\n        var tableInfo = this.getTable('hhea');\n        this.offset = tableInfo.offset;\n        var table = new TtfHorizontalHeaderTable();\n        table.version = this.readFixed(this.offset);\n        table.ascender = this.readInt16(this.offset);\n        table.descender = this.readInt16(this.offset);\n        table.lineGap = this.readInt16(this.offset);\n        table.advanceWidthMax = this.readUInt16(this.offset);\n        table.minLeftSideBearing = this.readInt16(this.offset);\n        table.minRightSideBearing = this.readInt16(this.offset);\n        table.xMaxExtent = this.readInt16(this.offset);\n        table.caretSlopeRise = this.readInt16(this.offset);\n        table.caretSlopeRun = this.readInt16(this.offset);\n        //skip 2 * 5\n        this.offset += 10;\n        table.metricDataFormat = this.readInt16(this.offset);\n        table.numberOfHMetrics = this.readUInt16(this.offset);\n        return table;\n    };\n    TtfReader.prototype.readOS2Table = function () {\n        var tableInfo = this.getTable('OS/2');\n        this.offset = tableInfo.offset;\n        var table = new TtfOS2Table();\n        table.version = this.readUInt16(this.offset);\n        table.xAvgCharWidth = this.readInt16(this.offset);\n        table.usWeightClass = this.readUInt16(this.offset);\n        table.usWidthClass = this.readUInt16(this.offset);\n        table.fsType = this.readInt16(this.offset);\n        table.ySubscriptXSize = this.readInt16(this.offset);\n        table.ySubscriptYSize = this.readInt16(this.offset);\n        table.ySubscriptXOffset = this.readInt16(this.offset);\n        table.ySubscriptYOffset = this.readInt16(this.offset);\n        table.ySuperscriptXSize = this.readInt16(this.offset);\n        table.ySuperscriptYSize = this.readInt16(this.offset);\n        table.ySuperscriptXOffset = this.readInt16(this.offset);\n        table.ySuperscriptYOffset = this.readInt16(this.offset);\n        table.yStrikeoutSize = this.readInt16(this.offset);\n        table.yStrikeoutPosition = this.readInt16(this.offset);\n        table.sFamilyClass = this.readInt16(this.offset);\n        table.panose = this.readBytes(10);\n        table.ulUnicodeRange1 = this.readUInt32(this.offset);\n        table.ulUnicodeRange2 = this.readUInt32(this.offset);\n        table.ulUnicodeRange3 = this.readUInt32(this.offset);\n        table.ulUnicodeRange4 = this.readUInt32(this.offset);\n        table.vendorIdentifier = this.readBytes(4);\n        table.fsSelection = this.readUInt16(this.offset);\n        table.usFirstCharIndex = this.readUInt16(this.offset);\n        table.usLastCharIndex = this.readUInt16(this.offset);\n        table.sTypoAscender = this.readInt16(this.offset);\n        table.sTypoDescender = this.readInt16(this.offset);\n        table.sTypoLineGap = this.readInt16(this.offset);\n        table.usWinAscent = this.readUInt16(this.offset);\n        table.usWinDescent = this.readUInt16(this.offset);\n        table.ulCodePageRange1 = this.readUInt32(this.offset);\n        table.ulCodePageRange2 = this.readUInt32(this.offset);\n        if (table.version > 1) {\n            table.sxHeight = this.readInt16(this.offset);\n            table.sCapHeight = this.readInt16(this.offset);\n            table.usDefaultChar = this.readUInt16(this.offset);\n            table.usBreakChar = this.readUInt16(this.offset);\n            table.usMaxContext = this.readUInt16(this.offset);\n        }\n        else {\n            table.sxHeight = 0;\n            table.sCapHeight = 0;\n            table.usDefaultChar = 0;\n            table.usBreakChar = 0;\n            table.usMaxContext = 0;\n        }\n        return table;\n    };\n    TtfReader.prototype.readPostTable = function () {\n        var tableInfo = this.getTable('post');\n        this.offset = tableInfo.offset;\n        var table = new TtfPostTable();\n        table.formatType = this.readFixed(this.offset);\n        table.italicAngle = this.readFixed(this.offset);\n        table.underlinePosition = this.readInt16(this.offset);\n        table.underlineThickness = this.readInt16(this.offset);\n        table.isFixedPitch = this.readUInt32(this.offset);\n        table.minType42 = this.readUInt32(this.offset);\n        table.maxType42 = this.readUInt32(this.offset);\n        table.minType1 = this.readUInt32(this.offset);\n        table.maxType1 = this.readUInt32(this.offset);\n        return table;\n    };\n    /**\n     * Reads Width of the glyphs.\n     */\n    TtfReader.prototype.readWidthTable = function (glyphCount, unitsPerEm) {\n        var tableInfo = this.getTable('hmtx');\n        this.offset = tableInfo.offset;\n        var width = [];\n        for (var i = 0; i < glyphCount; i++) {\n            var glyph = new TtfLongHorMetric();\n            glyph.advanceWidth = this.readUInt16(this.offset);\n            glyph.lsb = this.readInt16(this.offset);\n            var glyphWidth = glyph.advanceWidth * 1000 / unitsPerEm;\n            width.push(Math.floor(glyphWidth));\n        }\n        return width;\n    };\n    /**\n     * Reads the cmap table.\n     */\n    TtfReader.prototype.readCmapTable = function () {\n        var tableInfo = this.getTable('cmap');\n        this.offset = tableInfo.offset;\n        var table = new TtfCmapTable();\n        table.version = this.readUInt16(this.offset);\n        table.tablesCount = this.readUInt16(this.offset);\n        var position = this.offset;\n        var subTables = [];\n        for (var i = 0; i < table.tablesCount; i++) {\n            this.offset = position;\n            var subTable = new TtfCmapSubTable();\n            subTable.platformID = this.readUInt16(this.offset);\n            subTable.encodingID = this.readUInt16(this.offset);\n            subTable.offset = this.readUInt32(this.offset);\n            position = this.offset;\n            this.readCmapSubTable(subTable);\n            subTables[i] = subTable;\n        }\n        return subTables;\n    };\n    /**\n     * Reads the cmap sub table.\n     */\n    TtfReader.prototype.readCmapSubTable = function (subTable) {\n        var tableInfo = this.getTable('cmap');\n        this.offset = tableInfo.offset + subTable.offset;\n        var format = this.readUInt16(this.offset);\n        var encoding = this.getCmapEncoding(subTable.platformID, subTable.encodingID);\n        var platform = (encoding === TtfCmapEncoding.Macintosh) ? TtfPlatformID.Macintosh : TtfPlatformID.Microsoft;\n        if (encoding !== TtfCmapEncoding.Unknown) {\n            switch (format) {\n                case TtfCmapFormat.Apple:\n                    this.readAppleCmapTable(subTable, encoding);\n                    break;\n                case TtfCmapFormat.Microsoft:\n                    this.readMicrosoftCmapTable(subTable, encoding);\n                    break;\n                case TtfCmapFormat.Trimmed:\n                    this.readTrimmedCmapTable(subTable, encoding);\n                    break;\n            }\n        }\n    };\n    /**\n     * Reads Symbol cmap table.\n     */\n    TtfReader.prototype.readAppleCmapTable = function (subTable, encoding) {\n        var tableInfo = this.getTable('cmap');\n        this.offset = tableInfo.offset + subTable.offset;\n        var table = new TtfAppleCmapSubTable();\n        table.format = this.readUInt16(this.offset);\n        table.length = this.readUInt16(this.offset);\n        table.version = this.readUInt16(this.offset);\n        if (this.maxMacIndex === null || this.maxMacIndex === undefined) {\n            this.maxMacIndex = 0;\n        }\n        for (var i = 0; i < 256; ++i) {\n            var glyphInfo = new TtfGlyphInfo();\n            glyphInfo.index = this.readByte(this.offset);\n            glyphInfo.width = this.getWidth(glyphInfo.index);\n            glyphInfo.charCode = i;\n            this.macintosh.setValue(i, glyphInfo);\n            this.addGlyph(glyphInfo, encoding);\n            // NOTE: this code fixes char codes that extends 0x100. However, it might corrupt something.\n            this.maxMacIndex = Math.max(i, this.maxMacIndex);\n        }\n    };\n    /**\n     * Reads Symbol cmap table.\n     */\n    TtfReader.prototype.readMicrosoftCmapTable = function (subTable, encoding) {\n        var tableInfo = this.getTable('cmap');\n        this.offset = tableInfo.offset + subTable.offset;\n        var collection = (encoding === TtfCmapEncoding.Unicode) ? this.microsoft : this.macintosh;\n        var table = new TtfMicrosoftCmapSubTable();\n        table.format = this.readUInt16(this.offset);\n        table.length = this.readUInt16(this.offset);\n        table.version = this.readUInt16(this.offset);\n        table.segCountX2 = this.readUInt16(this.offset);\n        table.searchRange = this.readUInt16(this.offset);\n        table.entrySelector = this.readUInt16(this.offset);\n        table.rangeShift = this.readUInt16(this.offset);\n        var segCount = table.segCountX2 / 2;\n        table.endCount = this.readUshortArray(segCount);\n        table.reservedPad = this.readUInt16(this.offset);\n        table.startCount = this.readUshortArray(segCount);\n        table.idDelta = this.readUshortArray(segCount);\n        table.idRangeOffset = this.readUshortArray(segCount);\n        var length = (table.length / 2 - 8) - (segCount * 4);\n        table.glyphID = this.readUshortArray(length);\n        // Process glyphIdArray array.\n        var codeOffset = 0;\n        var index = 0;\n        for (var j = 0; j < segCount; j++) {\n            for (var k = table.startCount[j]; k <= table.endCount[j] && k !== 65535; k++) {\n                if (table.idRangeOffset[j] === 0) {\n                    codeOffset = (k + table.idDelta[j]) & 65535;\n                }\n                else {\n                    index = j + table.idRangeOffset[j] / 2 - segCount + k - table.startCount[j];\n                    if (index >= table.glyphID.length) {\n                        continue;\n                    }\n                    codeOffset = (table.glyphID[index] + table.idDelta[j]) & 65535;\n                }\n                var glyph = new TtfGlyphInfo();\n                glyph.index = codeOffset;\n                glyph.width = this.getWidth(glyph.index);\n                var id = (encoding === TtfCmapEncoding.Symbol) ? ((k & 0xff00) === 0xf000 ? k & 0xff : k) : k;\n                glyph.charCode = id;\n                collection.setValue(id, glyph);\n                this.addGlyph(glyph, encoding);\n            }\n        }\n    };\n    /**\n     * Reads Trimed cmap table.\n     */\n    TtfReader.prototype.readTrimmedCmapTable = function (subTable, encoding) {\n        var tableInfo = this.getTable('cmap');\n        this.offset = tableInfo.offset + subTable.offset;\n        var table = new TtfTrimmedCmapSubTable();\n        table.format = this.readUInt16(this.offset);\n        table.length = this.readUInt16(this.offset);\n        table.version = this.readUInt16(this.offset);\n        table.firstCode = this.readUInt16(this.offset);\n        table.entryCount = this.readUInt16(this.offset);\n        for (var i = 0; i < table.entryCount; ++i) {\n            var glyphInfo = new TtfGlyphInfo();\n            glyphInfo.index = this.readUInt16(this.offset);\n            glyphInfo.width = this.getWidth(glyphInfo.index);\n            glyphInfo.charCode = i + table.firstCode;\n            this.macintosh.setValue(i, glyphInfo);\n            this.addGlyph(glyphInfo, encoding);\n            // NOTE: this code fixes char codes that extends 0x100. However, it might corrupt something.\n            this.maxMacIndex = Math.max(i, this.maxMacIndex);\n        }\n    };\n    TtfReader.prototype.initializeFontName = function (nameTable) {\n        for (var i = 0; i < nameTable.recordsCount; i++) {\n            var record = nameTable.nameRecords[i];\n            if (record.nameID === 1) {\n                //font family\n                this.metrics.fontFamily = record.name;\n            }\n            else if (record.nameID === 6) {\n                //post script name\n                this.metrics.postScriptName = record.name;\n            }\n            /* tslint:disable */\n            if (this.metrics.fontFamily !== null && this.metrics.fontFamily !== undefined && this.metrics.postScriptName !== null && this.metrics.postScriptName !== undefined) {\n                break;\n            }\n            /* tslint:disable */\n        }\n    };\n    TtfReader.prototype.getTable = function (name) {\n        // if (name === null) {\n        //     throw new Error('Argument Null Exception : name');\n        // }\n        var table = new TtfTableInfo();\n        var obj;\n        if (this.tableDirectory.containsKey(name)) {\n            obj = this.tableDirectory.getValue(name);\n        }\n        if (obj !== null && obj !== undefined) {\n            table = obj;\n        }\n        return table;\n    };\n    /**\n     * Returns width of the glyph.\n     */\n    TtfReader.prototype.getWidth = function (glyphCode) {\n        glyphCode = (glyphCode < this.width.length) ? glyphCode : this.width.length - 1;\n        return this.width[glyphCode];\n    };\n    /**\n     * Gets CMAP encoding based on platform ID and encoding ID.\n     */\n    /* tslint:disable */\n    TtfReader.prototype.getCmapEncoding = function (platformID, encodingID) {\n        var format = TtfCmapEncoding.Unknown;\n        if (platformID == TtfPlatformID.Microsoft && encodingID == TtfMicrosoftEncodingID.Undefined) {\n            // When building a symbol font for Windows,\n            // the platform ID should be 3 and the encoding ID should be 0.\n            format = TtfCmapEncoding.Symbol;\n        }\n        else if (platformID == TtfPlatformID.Microsoft && encodingID == TtfMicrosoftEncodingID.Unicode) {\n            // When building a Unicode font for Windows,\n            // the platform ID should be 3 and the encoding ID should be 1.\n            format = TtfCmapEncoding.Unicode;\n        }\n        else if (platformID == TtfPlatformID.Macintosh && encodingID == TtfMacintoshEncodingID.Roman) {\n            // When building a font that will be used on the Macintosh,\n            // the platform ID should be 1 and the encoding ID should be 0.\n            format = TtfCmapEncoding.Macintosh;\n        }\n        return format;\n    };\n    /* tslint:enable */\n    /**\n     * Adds glyph to the collection.\n     */\n    TtfReader.prototype.addGlyph = function (glyph, encoding) {\n        var collection = null;\n        switch (encoding) {\n            case TtfCmapEncoding.Unicode:\n                collection = this.microsoftGlyphs;\n                break;\n            case TtfCmapEncoding.Macintosh:\n            case TtfCmapEncoding.Symbol:\n                collection = this.macintoshGlyphs;\n                break;\n        }\n        collection.setValue(glyph.index, glyph);\n    };\n    /**\n     * Initializes metrics.\n     */\n    /* tslint:disable */\n    TtfReader.prototype.initializeMetrics = function (nameTable, headTable, horizontalHeadTable, os2Table, postTable, cmapTables) {\n        /* tslint:enable */\n        // if (cmapTables === null) {\n        //     throw new Error('ArgumentNullException : cmapTables');\n        // }\n        this.initializeFontName(nameTable);\n        // Get font encoding.\n        var bSymbol = false;\n        for (var i = 0; i < cmapTables.length; i++) {\n            var subTable = cmapTables[i];\n            var encoding = this.getCmapEncoding(subTable.platformID, subTable.encodingID);\n            if (encoding === TtfCmapEncoding.Symbol) {\n                bSymbol = true;\n                break;\n            }\n        }\n        this.metrics.isSymbol = bSymbol;\n        this.metrics.macStyle = headTable.macStyle;\n        this.metrics.isFixedPitch = (postTable.isFixedPitch !== 0);\n        this.metrics.italicAngle = postTable.italicAngle;\n        var factor = 1000 / headTable.unitsPerEm;\n        this.metrics.winAscent = os2Table.sTypoAscender * factor;\n        this.metrics.macAscent = horizontalHeadTable.ascender * factor;\n        //m_metrics.MacAscent = os2Table.UsWinAscent * factor;\n        // NOTE: This is stange workaround. The value is good if os2Table.SCapHeight != 0, otherwise it should be properly computed.\n        this.metrics.capHeight = (os2Table.sCapHeight !== 0) ? os2Table.sCapHeight : 0.7 * headTable.unitsPerEm * factor;\n        this.metrics.winDescent = os2Table.sTypoDescender * factor;\n        this.metrics.macDescent = horizontalHeadTable.descender * factor;\n        //m_metrics.MacDescent = -os2Table.UsWinDescent * factor;\n        this.metrics.leading = (os2Table.sTypoAscender - os2Table.sTypoDescender + os2Table.sTypoLineGap) * factor;\n        this.metrics.lineGap = Math.ceil(horizontalHeadTable.lineGap * factor);\n        var left = headTable.xMin * factor;\n        var top = Math.ceil(this.metrics.macAscent + this.metrics.lineGap);\n        var right = headTable.xMax * factor;\n        var bottom = this.metrics.macDescent;\n        this.metrics.fontBox = new Rectangle(left, top, right, bottom);\n        // NOTE: Strange!\n        this.metrics.stemV = 80;\n        this.metrics.widthTable = this.updateWidth();\n        this.metrics.contains = this.tableDirectory.containsKey('CFF');\n        this.metrics.subScriptSizeFactor = headTable.unitsPerEm / os2Table.ySubscriptYSize;\n        this.metrics.superscriptSizeFactor = headTable.unitsPerEm / os2Table.ySuperscriptYSize;\n    };\n    /**\n     * Updates chars structure which is used in the case of ansi encoding (256 bytes).\n     */\n    TtfReader.prototype.updateWidth = function () {\n        var count = 256;\n        var bytes = [];\n        if (this.metrics.isSymbol) {\n            for (var i = 0; i < count; i++) {\n                var glyphInfo = this.getGlyph(String.fromCharCode(i));\n                bytes[i] = (glyphInfo.empty) ? 0 : glyphInfo.width;\n            }\n        }\n        else {\n            var byteToProcess = [];\n            var unknown = '?';\n            var space = String.fromCharCode(32);\n            for (var i = 0; i < count; i++) {\n                byteToProcess[0] = i;\n                var text = this.getString(byteToProcess, 0, byteToProcess.length);\n                var ch = (text.length > 0) ? text[0] : unknown;\n                var glyphInfo = this.getGlyph(ch);\n                if (!glyphInfo.empty) {\n                    bytes[i] = glyphInfo.width;\n                }\n                else {\n                    glyphInfo = this.getGlyph(space);\n                    bytes[i] = (glyphInfo.empty) ? 0 : glyphInfo.width;\n                }\n            }\n        }\n        return bytes;\n    };\n    /**\n     * Returns default glyph.\n     */\n    TtfReader.prototype.getDefaultGlyph = function () {\n        var glyph = this.getGlyph(StringTokenizer.whiteSpace);\n        return glyph;\n    };\n    /**\n     * Reads unicode string from byte array.\n     */\n    TtfReader.prototype.getString = function (byteToProcess, start, length) {\n        var result = '';\n        for (var index = 0; index < length; index++) {\n            result += String.fromCharCode(byteToProcess[index + start]);\n        }\n        return result;\n    };\n    /**\n     * Reads loca table.\n     */\n    TtfReader.prototype.readLocaTable = function (bShort) {\n        var tableInfo = this.getTable('loca');\n        this.offset = tableInfo.offset;\n        var table = new TtfLocaTable();\n        var buffer = null;\n        if (bShort) {\n            var len = tableInfo.length / 2;\n            buffer = [];\n            for (var i = 0; i < len; i++) {\n                buffer[i] = this.readUInt16(this.offset) * 2;\n            }\n        }\n        else {\n            var len = tableInfo.length / 4;\n            buffer = [];\n            for (var i = 0; i < len; i++) {\n                buffer[i] = this.readUInt32(this.offset);\n            }\n        }\n        table.offsets = buffer;\n        return table;\n    };\n    /**\n     * Updates hash table of used glyphs.\n     */\n    TtfReader.prototype.updateGlyphChars = function (glyphChars, locaTable) {\n        // if (glyphChars === null) {\n        //     throw new Error('Argument Null Exception : glyphChars');\n        // }\n        // Add zero key.\n        if (!glyphChars.containsKey(0)) {\n            glyphChars.setValue(0, 0);\n        }\n        var clone = new Dictionary();\n        var glyphCharKeys = glyphChars.keys();\n        for (var i = 0; i < glyphCharKeys.length; i++) {\n            clone.setValue(glyphCharKeys[i], glyphChars.getValue(glyphCharKeys[i]));\n        }\n        for (var i = 0; i < glyphCharKeys.length; i++) {\n            var nextKey = glyphCharKeys[i];\n            this.processCompositeGlyph(glyphChars, nextKey, locaTable);\n        }\n    };\n    /**\n     * Checks if glyph is composite or not.\n     */\n    TtfReader.prototype.processCompositeGlyph = function (glyphChars, glyph, locaTable) {\n        // if (glyphChars === null) {\n        //     throw new Error('Argument Null Exception : glyphChars');\n        // }\n        // Is in range.\n        if (glyph < locaTable.offsets.length - 1) {\n            var glyphOffset = locaTable.offsets[glyph];\n            if (glyphOffset !== locaTable.offsets[glyph + 1]) {\n                var tableInfo = this.getTable('glyf');\n                this.offset = tableInfo.offset + glyphOffset;\n                var glyphHeader = new TtfGlyphHeader();\n                glyphHeader.numberOfContours = this.readInt16(this.offset);\n                glyphHeader.xMin = this.readInt16(this.offset);\n                glyphHeader.yMin = this.readInt16(this.offset);\n                glyphHeader.xMax = this.readInt16(this.offset);\n                glyphHeader.yMax = this.readInt16(this.offset);\n                // Glyph is composite.\n                if (glyphHeader.numberOfContours < 0) {\n                    var skipBytes = 0;\n                    var entry = true;\n                    while (entry) {\n                        var flags = this.readUInt16(this.offset);\n                        var glyphIndex = this.readUInt16(this.offset);\n                        if (!glyphChars.containsKey(glyphIndex)) {\n                            glyphChars.setValue(glyphIndex, 0);\n                        }\n                        if ((flags & TtfCompositeGlyphFlags.MoreComponents) === 0) {\n                            break;\n                        }\n                        skipBytes = ((flags & TtfCompositeGlyphFlags.Arg1And2AreWords) !== 0) ? 4 : 2;\n                        if ((flags & TtfCompositeGlyphFlags.WeHaveScale) !== 0) {\n                            skipBytes += 2;\n                        }\n                        else if ((flags & TtfCompositeGlyphFlags.WeHaveAnXyScale) !== 0) {\n                            skipBytes += 4;\n                        }\n                        else if ((flags & TtfCompositeGlyphFlags.WeHaveTwoByTwo) !== 0) {\n                            skipBytes += 2 * 4;\n                        }\n                        this.offset += skipBytes;\n                    }\n                }\n            }\n        }\n    };\n    /**\n     * Creates new glyph tables based on chars that are used for output.\n     */\n    /* tslint:disable */\n    TtfReader.prototype.generateGlyphTable = function (glyphChars, locaTable, newLocaTable, newGlyphTable) {\n        /* tslint:enable */\n        // if (glyphChars === null) {\n        //     throw new Error('Argument Null Exception : glyphChars');\n        // }\n        newLocaTable = [];\n        // Sorting used glyphs keys.\n        var activeGlyphs = glyphChars.keys();\n        activeGlyphs.sort(function (a, b) { return a - b; });\n        var glyphSize = 0;\n        for (var i = 0; i < activeGlyphs.length; i++) {\n            var glyphIndex = activeGlyphs[i];\n            if (locaTable.offsets.length > 0) {\n                glyphSize += locaTable.offsets[glyphIndex + 1] - locaTable.offsets[glyphIndex];\n            }\n        }\n        var glyphSizeAligned = this.align(glyphSize);\n        newGlyphTable = [];\n        for (var i = 0; i < glyphSizeAligned; i++) {\n            newGlyphTable.push(0);\n        }\n        var nextGlyphOffset = 0;\n        var nextGlyphIndex = 0;\n        var table = this.getTable('glyf');\n        // Creating NewLocaTable - that would hold offsets for filtered glyphs.\n        for (var i = 0; i < locaTable.offsets.length; i++) {\n            newLocaTable.push(nextGlyphOffset);\n            if (nextGlyphIndex < activeGlyphs.length && activeGlyphs[nextGlyphIndex] === i) {\n                ++nextGlyphIndex;\n                newLocaTable[i] = nextGlyphOffset;\n                var oldGlyphOffset = locaTable.offsets[i];\n                var oldNextGlyphOffset = locaTable.offsets[i + 1] - oldGlyphOffset;\n                if (oldNextGlyphOffset > 0) {\n                    this.offset = table.offset + oldGlyphOffset;\n                    var result = this.read(newGlyphTable, nextGlyphOffset, oldNextGlyphOffset);\n                    newGlyphTable = result.buffer;\n                    nextGlyphOffset += oldNextGlyphOffset;\n                }\n            }\n        }\n        return { glyphTableSize: glyphSize, newLocaTable: newLocaTable, newGlyphTable: newGlyphTable };\n    };\n    /**\n     * Updates new Loca table.\n     */\n    /* tslint:disable */\n    TtfReader.prototype.updateLocaTable = function (newLocaTable, bLocaIsShort, newLocaTableOut) {\n        /* tslint:enable */\n        if (newLocaTable === null) {\n            throw new Error('Argument Null Exception : newLocaTable');\n        }\n        var size = (bLocaIsShort) ? newLocaTable.length * 2 : newLocaTable.length * 4;\n        var count = this.align(size);\n        //BigEndianWiter\n        var writer = new BigEndianWriter(count);\n        for (var i = 0; i < newLocaTable.length; i++) {\n            var value = newLocaTable[i];\n            if (bLocaIsShort) {\n                value /= 2;\n                writer.writeShort(value);\n            }\n            else {\n                writer.writeInt(value);\n            }\n        }\n        return { newLocaUpdated: writer.data, newLocaSize: size };\n    };\n    /**\n     * Aligns number to be divisible on 4.\n     */\n    TtfReader.prototype.align = function (value) {\n        return (value + 3) & (~3);\n    };\n    /**\n     * Returns font program data.\n     */\n    /* tslint:disable */\n    TtfReader.prototype.getFontProgram = function (newLocaTableOut, newGlyphTable, glyphTableSize, locaTableSize) {\n        /* tslint:enable */\n        if (newLocaTableOut === null) {\n            throw new Error('Argument Null Exception : newLocaTableOut');\n        }\n        if (newGlyphTable === null) {\n            throw new Error('Argument Null Exception : newGlyphTable');\n        }\n        var tableNames = this.tableNames;\n        var result = this.getFontProgramLength(newLocaTableOut, newGlyphTable, 0);\n        var fontProgramLength = result.fontProgramLength;\n        var numTables = result.numTables;\n        var writer = new BigEndianWriter(fontProgramLength);\n        writer.writeInt(0x10000);\n        writer.writeShort(numTables);\n        var entrySelector = this.entrySelectors[numTables];\n        writer.writeShort((1 << (entrySelector & 31)) * 16);\n        writer.writeShort(entrySelector);\n        writer.writeShort((numTables - (1 << (entrySelector & 31))) * 16);\n        // Writing to destination buffer - checksums && sizes of used tables.\n        this.writeCheckSums(writer, numTables, newLocaTableOut, newGlyphTable, glyphTableSize, locaTableSize);\n        // // Writing to destination buffer - used glyphs.\n        this.writeGlyphs(writer, newLocaTableOut, newGlyphTable);\n        return writer.data;\n    };\n    /* tslint:disable */\n    TtfReader.prototype.getFontProgramLength = function (newLocaTableOut, newGlyphTable, numTables) {\n        /* tslint:enable */\n        if (newLocaTableOut === null) {\n            throw new Error('Argument Null Exception : newLocaTableOut');\n        }\n        if (newGlyphTable === null) {\n            throw new Error('Argument Null Exception : newGlyphTable');\n        }\n        // glyf and loca are used by default;\n        numTables = 2;\n        var tableNames = this.tableNames;\n        var fontProgramLength = 0;\n        for (var i = 0; i < tableNames.length; i++) {\n            var tableName = tableNames[i];\n            if (tableName !== 'glyf' && tableName !== 'loca') {\n                var table = this.getTable(tableName);\n                if (!table.empty) {\n                    ++numTables;\n                    fontProgramLength += this.align(table.length);\n                }\n            }\n        }\n        fontProgramLength += newLocaTableOut.length;\n        fontProgramLength += newGlyphTable.length;\n        var usedTablesSize = numTables * 16 + (3 * 4);\n        fontProgramLength += usedTablesSize;\n        return { fontProgramLength: fontProgramLength, numTables: numTables };\n    };\n    /**\n     * Writing to destination buffer - checksums and sizes of used tables.\n     */\n    /* tslint:disable */\n    TtfReader.prototype.writeCheckSums = function (writer, numTables, newLocaTableOut, newGlyphTable, glyphTableSize, locaTableSize) {\n        /* tslint:enable */\n        if (writer === null) {\n            throw new Error('Argument Null Exception : writer');\n        }\n        if (newLocaTableOut === null) {\n            throw new Error('Argument Null Exception : newLocaTableOut');\n        }\n        if (newGlyphTable === null) {\n            throw new Error('Argument Null Exception : newGlyphTable');\n        }\n        var tableNames = this.tableNames;\n        var usedTablesSize = numTables * 16 + (3 * 4);\n        var nextTableSize = 0;\n        for (var i = 0; i < tableNames.length; i++) {\n            var tableName = tableNames[i];\n            var tableInfo = this.getTable(tableName);\n            if (tableInfo.empty) {\n                continue;\n            }\n            writer.writeString(tableName);\n            if (tableName === 'glyf') {\n                var checksum = this.calculateCheckSum(newGlyphTable);\n                writer.writeInt(checksum);\n                nextTableSize = glyphTableSize;\n            }\n            else if (tableName === 'loca') {\n                var checksum = this.calculateCheckSum(newLocaTableOut);\n                writer.writeInt(checksum);\n                nextTableSize = locaTableSize;\n            }\n            else {\n                writer.writeInt(tableInfo.checksum);\n                nextTableSize = tableInfo.length;\n            }\n            writer.writeUInt(usedTablesSize);\n            writer.writeUInt(nextTableSize);\n            usedTablesSize += this.align(nextTableSize);\n        }\n    };\n    /**\n     * Gets checksum from source buffer.\n     */\n    TtfReader.prototype.calculateCheckSum = function (bytes) {\n        if (bytes === null) {\n            throw new Error('Argument Null Exception : bytes');\n        }\n        var pos = 0;\n        var byte1 = 0;\n        var byte2 = 0;\n        var byte3 = 0;\n        var byte4 = 0;\n        for (var i = 0; i < (bytes.length + 1) / 4; i++) {\n            byte4 += (bytes[pos++] & 255);\n            byte3 += (bytes[pos++] & 255);\n            byte2 += (bytes[pos++] & 255);\n            byte1 += (bytes[pos++] & 255);\n        }\n        var result = byte1;\n        result += (byte2 << 8);\n        result += (byte3 << 16);\n        result += (byte4 << 24);\n        return result;\n    };\n    /**\n     * Writing to destination buffer - used glyphs.\n     */\n    TtfReader.prototype.writeGlyphs = function (writer, newLocaTable, newGlyphTable) {\n        if (writer === null) {\n            throw new Error('Argument Null Exception : writer');\n        }\n        if (newLocaTable === null) {\n            throw new Error('Argument Null Exception : newLocaTableOut');\n        }\n        if (newGlyphTable === null) {\n            throw new Error('Argument Null Exception : newGlyphTable');\n        }\n        var tableNames = this.tableNames;\n        for (var i = 0; i < tableNames.length; i++) {\n            var tableName = tableNames[i];\n            var tableInfo = this.getTable(tableName);\n            if (tableInfo.empty) {\n                continue;\n            }\n            if (tableName === 'glyf') {\n                writer.writeBytes(newGlyphTable);\n            }\n            else if (tableName === 'loca') {\n                writer.writeBytes(newLocaTable);\n            }\n            else {\n                var count = this.align(tableInfo.length);\n                var buff = [];\n                for (var i_1 = 0; i_1 < count; i_1++) {\n                    buff.push(0);\n                }\n                this.offset = tableInfo.offset;\n                var result = this.read(buff, 0, tableInfo.length);\n                writer.writeBytes(result.buffer);\n            }\n        }\n    };\n    //public methods\n    /**\n     * Sets position value of font data.\n     */\n    TtfReader.prototype.setOffset = function (offset) {\n        this.offset = offset;\n    };\n    /**\n     * Creates font Internals\n     * @private\n     */\n    TtfReader.prototype.createInternals = function () {\n        this.metrics = new TtfMetrics();\n        var nameTable = this.readNameTable();\n        var headTable = this.readHeadTable();\n        this.bIsLocaShort = (headTable.indexToLocalFormat === 0);\n        var horizontalHeadTable = this.readHorizontalHeaderTable();\n        var os2Table = this.readOS2Table();\n        var postTable = this.readPostTable();\n        this.width = this.readWidthTable(horizontalHeadTable.numberOfHMetrics, headTable.unitsPerEm);\n        var subTables = this.readCmapTable();\n        this.initializeMetrics(nameTable, headTable, horizontalHeadTable, os2Table, postTable, subTables);\n    };\n    TtfReader.prototype.getGlyph = function (charCode) {\n        if (typeof charCode === 'number') {\n            var obj1 = null;\n            if (!this.metrics.isSymbol && this.microsoftGlyphs != null) {\n                if (this.microsoftGlyphs.containsKey(charCode)) {\n                    obj1 = this.microsoftGlyphs.getValue(charCode);\n                }\n            }\n            else if (this.metrics.isSymbol && this.macintoshGlyphs != null) {\n                if (this.macintoshGlyphs.containsKey(charCode)) {\n                    obj1 = this.macintoshGlyphs.getValue(charCode);\n                }\n            }\n            var glyph = (obj1 != null) ? obj1 : this.getDefaultGlyph();\n            return glyph;\n        }\n        else {\n            var obj = null;\n            var code = charCode.charCodeAt(0);\n            if (!this.metrics.isSymbol && this.microsoft !== null) {\n                if (this.microsoft.containsKey(code)) {\n                    obj = this.microsoft.getValue(code);\n                    if (code !== StringTokenizer.whiteSpace.charCodeAt(0)) {\n                        this.isFontPresent = true;\n                    }\n                }\n                else if (code !== StringTokenizer.whiteSpace.charCodeAt(0)) {\n                    this.isFontPresent = false;\n                }\n            }\n            else if (this.metrics.isSymbol && this.macintosh !== null || this.isMacTTF) {\n                // NOTE: this code fixes char codes that extends 0x100. However, it might corrupt something.\n                if (this.maxMacIndex !== 0) {\n                    code %= this.maxMacIndex + 1;\n                }\n                else {\n                    code = ((code & 0xff00) === 0xf000 ? code & 0xff : code);\n                }\n                if (this.macintosh.containsKey(code)) {\n                    obj = this.macintosh.getValue(code);\n                    this.isFontPresent = true;\n                }\n            }\n            // Fix for StackOverFlow exception in XPS to PDF converter\n            if (charCode === StringTokenizer.whiteSpace && obj === null) {\n                obj = new TtfGlyphInfo();\n            }\n            var glyph = (obj !== null) ? obj : this.getDefaultGlyph();\n            return glyph;\n        }\n    };\n    /**\n     * Gets hash table with chars indexed by glyph index.\n     */\n    TtfReader.prototype.getGlyphChars = function (chars) {\n        if (chars === null || chars === undefined) {\n            throw new Error('Argument Null Exception : chars');\n        }\n        var dictionary = new Dictionary();\n        var charKeys = chars.keys();\n        for (var i = 0; i < charKeys.length; i++) {\n            var ch = charKeys[i];\n            var glyph = this.getGlyph(ch);\n            if (!glyph.empty) {\n                dictionary.setValue(glyph.index, ch.charCodeAt(0));\n            }\n        }\n        return dictionary;\n    };\n    /**\n     * Gets all glyphs.\n     */\n    TtfReader.prototype.getAllGlyphs = function () {\n        var allGlyphInfo = [];\n        var info = new TtfGlyphInfo();\n        var index = 0;\n        for (var i = 0; i < this.width.length; i++) {\n            var width = this.width[i];\n            info.index = index;\n            info.width = width;\n            allGlyphInfo.push(info);\n            index++;\n        }\n        return allGlyphInfo;\n    };\n    /**\n     * Reads a font's program.\n     * @private\n     */\n    TtfReader.prototype.readFontProgram = function (chars) {\n        var glyphChars = this.getGlyphChars(chars);\n        var locaTable = this.readLocaTable(this.bIsLocaShort);\n        if (glyphChars.size() < chars.size()) {\n            this.missedGlyphs = chars.size() - glyphChars.size();\n        }\n        this.updateGlyphChars(glyphChars, locaTable);\n        /* tslint:disable */\n        var result1 = this.generateGlyphTable(glyphChars, locaTable, null, null);\n        /* tslint:enable */\n        var glyphTableSize = result1.glyphTableSize;\n        var newLocaTable = result1.newLocaTable;\n        var newGlyphTable = result1.newGlyphTable;\n        var result2 = this.updateLocaTable(newLocaTable, this.bIsLocaShort, null);\n        var newLocaSize = result2.newLocaSize;\n        var newLocaUpdated = result2.newLocaUpdated;\n        var fontProgram = this.getFontProgram(newLocaUpdated, newGlyphTable, glyphTableSize, newLocaSize);\n        return fontProgram;\n    };\n    /**\n     * Reconverts string to be in proper format saved into PDF file.\n     */\n    TtfReader.prototype.convertString = function (text) {\n        if (text === null) {\n            throw new Error('Argument Null Exception : text');\n        }\n        var glyph = '';\n        var i = 0;\n        for (var k = 0; k < text.length; k++) {\n            var ch = text[k];\n            var glyphInfo = this.getGlyph(ch);\n            if (!glyphInfo.empty) {\n                glyph += String.fromCharCode(glyphInfo.index);\n                i++;\n            }\n        }\n        return glyph;\n    };\n    /**\n     * Gets char width.\n     */\n    TtfReader.prototype.getCharWidth = function (code) {\n        var glyphInfo = this.getGlyph(code);\n        glyphInfo = (!glyphInfo.empty) ? glyphInfo : this.getDefaultGlyph();\n        var codeWidth = (!glyphInfo.empty) ? glyphInfo.width : 0;\n        return codeWidth;\n    };\n    TtfReader.prototype.readString = function (length, isUnicode) {\n        if (isUnicode === undefined) {\n            return this.readString(length, false);\n        }\n        else {\n            //let buffer : number[] = this.readBytes(length);\n            var result = '';\n            if (isUnicode) {\n                for (var i = 0; i < length; i++) {\n                    if (i % 2 !== 0) {\n                        result += String.fromCharCode(this.fontData[this.offset]);\n                    }\n                    this.offset += 1;\n                }\n            }\n            else {\n                for (var i = 0; i < length; i++) {\n                    result += String.fromCharCode(this.fontData[this.offset]);\n                    this.offset += 1;\n                }\n            }\n            return result;\n        }\n    };\n    TtfReader.prototype.readFixed = function (offset) {\n        var integer = this.readInt16(offset);\n        var sFraction = this.readInt16(offset + 2);\n        var fraction = sFraction / 16384;\n        return integer + fraction;\n    };\n    TtfReader.prototype.readInt32 = function (offset) {\n        var i1 = this.fontData[offset + 3];\n        var i2 = this.fontData[offset + 2];\n        var i3 = this.fontData[offset + 1];\n        var i4 = this.fontData[offset];\n        this.offset += 4;\n        return i1 + (i2 << 8) + (i3 << 16) + (i4 << 24);\n    };\n    TtfReader.prototype.readUInt32 = function (offset) {\n        var i1 = this.fontData[offset + 3];\n        var i2 = this.fontData[offset + 2];\n        var i3 = this.fontData[offset + 1];\n        var i4 = this.fontData[offset];\n        this.offset += 4;\n        return (i1 | i2 << 8 | i3 << 16 | i4 << 24);\n    };\n    // private readInt16(offset : number) : number {\n    //     let result : number = (this.fontData[offset] << 8) + this.fontData[offset + 1];\n    //     this.offset += 2;\n    //     return result;\n    // }\n    TtfReader.prototype.readInt16 = function (offset) {\n        var result = (this.fontData[offset] << 8) + this.fontData[offset + 1];\n        result = result & (1 << 15) ? result - 0x10000 : result;\n        this.offset += 2;\n        return result;\n    };\n    TtfReader.prototype.readInt64 = function (offset) {\n        var low = this.readInt32(offset + 4);\n        var n = this.readInt32(offset) * 4294967296.0 + low;\n        if (low < 0) {\n            n += 4294967296;\n        }\n        return n;\n    };\n    TtfReader.prototype.readUInt16 = function (offset) {\n        var result = (this.fontData[offset] << 8) | this.fontData[offset + 1];\n        this.offset += 2;\n        return result;\n    };\n    /**\n     * Reads ushort array.\n     */\n    TtfReader.prototype.readUshortArray = function (length) {\n        var buffer = [];\n        for (var i = 0; i < length; i++) {\n            buffer[i] = this.readUInt16(this.offset);\n        }\n        return buffer;\n    };\n    TtfReader.prototype.readBytes = function (length) {\n        var result = [];\n        for (var i = 0; i < length; i++) {\n            result.push(this.fontData[this.offset]);\n            this.offset += 1;\n        }\n        return result;\n    };\n    TtfReader.prototype.readByte = function (offset) {\n        var result = this.fontData[offset];\n        this.offset += 1;\n        return result;\n    };\n    /**\n     * Reads bytes to array in BigEndian order.\n     * @private\n     */\n    TtfReader.prototype.read = function (buffer, index, count) {\n        if (buffer === null) {\n            throw new Error('Argument Null Exception : buffer');\n        }\n        var written = 0;\n        var read = 0;\n        do {\n            for (var i = 0; (i < count - written) && (this.offset + i < this.fontData.length); i++) {\n                buffer[index + i] = this.fontData[this.offset + i];\n            }\n            read = count - written;\n            this.offset += read;\n            written += read;\n        } while (written < count);\n        return { buffer: buffer, written: written };\n    };\n    return TtfReader;\n}());\nexport { TtfReader };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { PdfFont } from './pdf-font';\nimport { PdfSubSuperScript } from './enum';\nimport { PdfArray } from './../../primitives/pdf-array';\n/**\n * `Metrics` of the font.\n * @private\n */\nvar PdfFontMetrics = /** @class */ (function () {\n    function PdfFontMetrics() {\n        /**\n         * `Line gap`.\n         * @private\n         */\n        this.lineGap = 0;\n    }\n    //  Public methods\n    /**\n     * Returns `ascent` taking into consideration font`s size.\n     * @private\n     */\n    PdfFontMetrics.prototype.getAscent = function (format) {\n        var returnValue = this.ascent * PdfFont.charSizeMultiplier * this.getSize(format);\n        return returnValue;\n    };\n    /**\n     * Returns `descent` taking into consideration font`s size.\n     * @private\n     */\n    PdfFontMetrics.prototype.getDescent = function (format) {\n        var returnValue = this.descent * PdfFont.charSizeMultiplier * this.getSize(format);\n        return returnValue;\n    };\n    /**\n     * Returns `Line gap` taking into consideration font`s size.\n     * @private\n     */\n    PdfFontMetrics.prototype.getLineGap = function (format) {\n        var returnValue = this.lineGap * PdfFont.charSizeMultiplier * this.getSize(format);\n        return returnValue;\n    };\n    /**\n     * Returns `height` taking into consideration font`s size.\n     * @private\n     */\n    PdfFontMetrics.prototype.getHeight = function (format) {\n        var height;\n        var clearTypeFonts = ['cambria', 'candara', 'constantia', 'corbel', 'cariadings'];\n        var clearTypeFontCollection = [];\n        for (var index = 0; index < clearTypeFonts.length; index++) {\n            var font = clearTypeFonts[index];\n            clearTypeFontCollection.push(font);\n        }\n        if (this.getDescent(format) < 0) {\n            // if ((clearTypeFontCollection.indexOf(this.name.toLowerCase()) !== -1) && !this.isUnicodeFont) {\n            //     height = (this.GetAscent(format) - this.GetDescent(format) - this.GetLineGap(format));\n            // } else {\n            height = (this.getAscent(format) - this.getDescent(format) + this.getLineGap(format));\n            // }\n        }\n        else {\n            height = (this.getAscent(format) + this.getDescent(format) + this.getLineGap(format));\n        }\n        return height;\n    };\n    /**\n     * Calculates `size` of the font depending on the subscript/superscript value.\n     * @private\n     */\n    PdfFontMetrics.prototype.getSize = function (format) {\n        var size = this.size;\n        if (format != null) {\n            switch (format.subSuperScript) {\n                case PdfSubSuperScript.SubScript:\n                    size /= this.subScriptSizeFactor;\n                    break;\n                case PdfSubSuperScript.SuperScript:\n                    size /= this.superscriptSizeFactor;\n                    break;\n            }\n        }\n        return size;\n    };\n    /**\n     * `Clones` the metrics.\n     * @private\n     */\n    PdfFontMetrics.prototype.clone = function () {\n        var metrics = this;\n        metrics.widthTable = WidthTable.clone();\n        return metrics;\n    };\n    Object.defineProperty(PdfFontMetrics.prototype, \"widthTable\", {\n        //  Properies\n        /**\n         * Gets or sets the `width table`.\n         * @private\n         */\n        get: function () {\n            return this.internalWidthTable;\n        },\n        set: function (value) {\n            this.internalWidthTable = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfFontMetrics;\n}());\nexport { PdfFontMetrics };\nvar WidthTable = /** @class */ (function () {\n    function WidthTable() {\n    }\n    /**\n     * Static `clones` this instance of the WidthTable class.\n     * @private\n     */\n    WidthTable.clone = function () {\n        return null;\n    };\n    return WidthTable;\n}());\nexport { WidthTable };\nvar StandardWidthTable = /** @class */ (function (_super) {\n    __extends(StandardWidthTable, _super);\n    // Constructors\n    /**\n     * Initializes a new instance of the `StandardWidthTable` class.\n     * @private\n     */\n    function StandardWidthTable(widths) {\n        var _this = _super.call(this) || this;\n        if (widths == null) {\n            throw new Error('ArgumentNullException:widths');\n        }\n        _this.widths = widths;\n        return _this;\n    }\n    //Properties\n    /**\n     * Gets the `32 bit number` at the specified index.\n     * @private\n     */\n    StandardWidthTable.prototype.items = function (index) {\n        if (index < 0 || index >= this.widths.length) {\n            throw new Error('ArgumentOutOfRangeException:index, The character is not supported by the font.');\n        }\n        var result = this.widths[index];\n        return result;\n    };\n    Object.defineProperty(StandardWidthTable.prototype, \"length\", {\n        /**\n         * Gets the `length` of the internal array.\n         * @private\n         */\n        get: function () {\n            return this.widths.length;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    //Overrides\n    /**\n     * `Clones` this instance of the WidthTable class.\n     * @private\n     */\n    StandardWidthTable.prototype.clone = function () {\n        var swt = this;\n        swt.widths = this.widths;\n        return swt;\n    };\n    /**\n     * Converts width table to a `PDF array`.\n     * @private\n     */\n    StandardWidthTable.prototype.toArray = function () {\n        var arr = new PdfArray(this.widths);\n        return arr;\n    };\n    return StandardWidthTable;\n}(WidthTable));\nexport { StandardWidthTable };\n","/**\n * TrueTypeFont.ts class for EJ2-PDF\n */\nimport { ByteArray } from './../../graphics/images/index';\nimport { TtfReader } from './ttf-reader';\nimport { PdfDictionary, SaveDescendantFontEventHandler, SaveFontDictionaryEventHandler } from './../../primitives/pdf-dictionary';\nimport { SaveFontProgramEventHandler, SaveCmapEventHandler } from './../../primitives/pdf-stream';\nimport { PdfStream } from './../../primitives/pdf-stream';\nimport { PdfArray } from './../../primitives/pdf-array';\nimport { PdfName } from './../../primitives/pdf-name';\nimport { PdfNumber } from './../../primitives/pdf-number';\nimport { PdfString } from './../../primitives/pdf-string';\nimport { PdfReferenceHolder } from './../../primitives/pdf-reference';\nimport { PdfFontMetrics } from './pdf-font-metrics';\nimport { StandardWidthTable } from './pdf-font-metrics';\nimport { DictionaryProperties } from './../../input-output/pdf-dictionary-properties';\nimport { Dictionary } from './../../collections/dictionary';\nimport { FontDescriptorFlags } from './enum';\nimport { RectangleF } from './../../drawing/pdf-drawing';\nimport { Operators } from './../../input-output/pdf-operators';\nvar UnicodeTrueTypeFont = /** @class */ (function () {\n    /* tslint:enable */\n    //Constructors\n    /**\n     * Initializes a new instance of the `PdfTrueTypeFont` class.\n     * @private\n     */\n    function UnicodeTrueTypeFont(base64String, size) {\n        // Fields\n        this.nameString = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ';\n        /**\n         * Specifies the Internal variable to store fields of `PdfDictionaryProperties`.\n         * @private\n         */\n        this.dictionaryProperties = new DictionaryProperties();\n        /**\n         * Indicates whether the font program is compressed or not.\n         * @private\n         */\n        this.isCompress = false;\n        /**\n         * Indicates whether the font is embedded or not.\n         */\n        this.isEmbedFont = false;\n        /**\n         * Cmap table's start prefix.\n         */\n        /* tslint:disable */\n        this.cmapPrefix = '/CIDInit /ProcSet findresource begin\\n12 dict begin\\nbegincmap' + Operators.newLine + '/CIDSystemInfo << /Registry (Adobe)/Ordering (UCS)/Supplement 0>> def\\n/CMapName ' + '/Adobe-Identity-UCS def\\n/CMapType 2 def\\n1 begincodespacerange' + Operators.newLine;\n        /* tslint:enable */\n        /**\n         * Cmap table's start suffix.\n         */\n        this.cmapEndCodespaceRange = 'endcodespacerange' + Operators.newLine;\n        /**\n         * Cmap's begin range marker.\n         */\n        this.cmapBeginRange = 'beginbfrange' + Operators.newLine;\n        /**\n         * Cmap's end range marker.\n         */\n        this.cmapEndRange = 'endbfrange' + Operators.newLine;\n        /**\n         * Cmap table's end\n         */\n        /* tslint:disable */\n        this.cmapSuffix = 'endbfrange\\nendcmap\\nCMapName currentdict ' + '/CMap defineresource pop\\nend end' + Operators.newLine;\n        if (base64String === null || base64String === undefined) {\n            throw new Error('ArgumentNullException:base64String');\n        }\n        this.fontSize = size;\n        this.fontString = base64String;\n        this.Initialize();\n    }\n    //Implementation\n    /**\n     * Returns width of the char symbol.\n     */\n    UnicodeTrueTypeFont.prototype.getCharWidth = function (charCode) {\n        var codeWidth = this.ttfReader.getCharWidth(charCode);\n        return codeWidth;\n    };\n    /**\n     * Returns width of the text line.\n     */\n    UnicodeTrueTypeFont.prototype.getLineWidth = function (line) {\n        // if (line == null) {\n        //     throw new Error('ArgumentNullException : line');\n        // }\n        var width = 0;\n        for (var i = 0, len = line.length; i < len; i++) {\n            var ch = line[i];\n            var charWidth = this.getCharWidth(ch);\n            width += charWidth;\n        }\n        return width;\n    };\n    /**\n     * Initializes a new instance of the `PdfTrueTypeFont` class.\n     * @private\n     */\n    UnicodeTrueTypeFont.prototype.Initialize = function () {\n        var byteArray = new ByteArray(this.fontString.length);\n        byteArray.writeFromBase64String(this.fontString);\n        this.fontData = byteArray.internalBuffer;\n        this.ttfReader = new TtfReader(this.fontData);\n        this.ttfMetrics = this.ttfReader.metrics;\n    };\n    UnicodeTrueTypeFont.prototype.createInternals = function () {\n        this.fontDictionary = new PdfDictionary();\n        this.fontProgram = new PdfStream();\n        this.cmap = new PdfStream();\n        this.descendantFont = new PdfDictionary();\n        this.metrics = new PdfFontMetrics();\n        this.ttfReader.createInternals();\n        this.ttfMetrics = this.ttfReader.metrics;\n        this.initializeMetrics();\n        // Create all the dictionaries of the font.\n        this.subsetName = this.getFontName();\n        this.createDescendantFont();\n        this.createCmap();\n        this.createFontDictionary();\n        this.createFontProgram();\n    };\n    UnicodeTrueTypeFont.prototype.getInternals = function () {\n        return this.fontDictionary;\n    };\n    /**\n     * Initializes metrics.\n     */\n    UnicodeTrueTypeFont.prototype.initializeMetrics = function () {\n        var ttfMetrics = this.ttfReader.metrics;\n        this.metrics.ascent = ttfMetrics.macAscent;\n        this.metrics.descent = ttfMetrics.macDescent;\n        this.metrics.height = ttfMetrics.macAscent - ttfMetrics.macDescent + ttfMetrics.lineGap;\n        this.metrics.name = ttfMetrics.fontFamily;\n        this.metrics.postScriptName = ttfMetrics.postScriptName;\n        this.metrics.size = this.fontSize;\n        this.metrics.widthTable = new StandardWidthTable(ttfMetrics.widthTable);\n        this.metrics.lineGap = ttfMetrics.lineGap;\n        this.metrics.subScriptSizeFactor = ttfMetrics.subScriptSizeFactor;\n        this.metrics.superscriptSizeFactor = ttfMetrics.superscriptSizeFactor;\n        this.metrics.isBold = ttfMetrics.isBold;\n    };\n    /**\n     * Gets random string.\n     */\n    UnicodeTrueTypeFont.prototype.getFontName = function () {\n        var builder = '';\n        var name;\n        // if (this.isEmbed === false) {\n        for (var i = 0; i < 6; i++) {\n            var index = Math.floor(Math.random() * (25 - 0 + 1)) + 0;\n            builder += this.nameString[index];\n        }\n        builder += '+';\n        // }\n        builder += this.ttfReader.metrics.postScriptName;\n        name = builder.toString();\n        // if (name === '') {\n        //     name = this.ttfReader.metrics.fontFamily;\n        // }\n        name = this.formatName(name);\n        return name;\n    };\n    /**\n     * Generates name of the font.\n     */\n    UnicodeTrueTypeFont.prototype.formatName = function (fontName) {\n        // if (fontName === null) {\n        //     throw new Error('ArgumentNullException : fontName');\n        // }\n        // if (fontName === '') {\n        //     throw new Error('ArgumentOutOfRangeException : fontName, Parameter can not be empty');\n        // }\n        var ret = fontName.replace('(', '#28');\n        ret = ret.replace(')', '#29');\n        ret = ret.replace('[', '#5B');\n        ret = ret.replace(']', '#5D');\n        ret = ret.replace('<', '#3C');\n        ret = ret.replace('>', '#3E');\n        ret = ret.replace('{', '#7B');\n        ret = ret.replace('}', '#7D');\n        ret = ret.replace('/', '#2F');\n        ret = ret.replace('%', '#25');\n        return ret.replace(' ', '#20');\n    };\n    /**\n     * Creates descendant font.\n     */\n    UnicodeTrueTypeFont.prototype.createDescendantFont = function () {\n        // Set property used to clone Font every time\n        this.descendantFont.isResource = true;\n        this.descendantFont.descendantFontBeginSave = new SaveDescendantFontEventHandler(this);\n        this.descendantFont.items.setValue(this.dictionaryProperties.type, new PdfName(this.dictionaryProperties.font));\n        this.descendantFont.items.setValue(this.dictionaryProperties.subtype, new PdfName(this.dictionaryProperties.cIDFontType2));\n        this.descendantFont.items.setValue(this.dictionaryProperties.baseFont, new PdfName(this.subsetName));\n        this.descendantFont.items.setValue(this.dictionaryProperties.cIDToGIDMap, new PdfName(this.dictionaryProperties.identity));\n        this.descendantFont.items.setValue(this.dictionaryProperties.dw, new PdfNumber(1000));\n        this.fontDescriptor = this.createFontDescriptor();\n        this.descendantFont.items.setValue(this.dictionaryProperties.fontDescriptor, new PdfReferenceHolder(this.fontDescriptor));\n        var systemInfo = this.createSystemInfo();\n        this.descendantFont.items.setValue(this.dictionaryProperties.cIDSystemInfo, systemInfo);\n    };\n    /**\n     * Creates font descriptor.\n     */\n    UnicodeTrueTypeFont.prototype.createFontDescriptor = function () {\n        var descriptor = new PdfDictionary();\n        var metrics = this.ttfReader.metrics;\n        // Set property used to clone Font every time\n        descriptor.isResource = true;\n        descriptor.items.setValue(this.dictionaryProperties.type, new PdfName(this.dictionaryProperties.fontDescriptor));\n        descriptor.items.setValue(this.dictionaryProperties.fontName, new PdfName(this.subsetName));\n        descriptor.items.setValue(this.dictionaryProperties.flags, new PdfNumber(this.getDescriptorFlags()));\n        descriptor.items.setValue(this.dictionaryProperties.fontBBox, PdfArray.fromRectangle(this.getBoundBox()));\n        descriptor.items.setValue(this.dictionaryProperties.missingWidth, new PdfNumber(metrics.widthTable[32]));\n        descriptor.items.setValue(this.dictionaryProperties.stemV, new PdfNumber(metrics.stemV));\n        descriptor.items.setValue(this.dictionaryProperties.italicAngle, new PdfNumber(metrics.italicAngle));\n        descriptor.items.setValue(this.dictionaryProperties.capHeight, new PdfNumber(metrics.capHeight));\n        descriptor.items.setValue(this.dictionaryProperties.ascent, new PdfNumber(metrics.winAscent));\n        descriptor.items.setValue(this.dictionaryProperties.descent, new PdfNumber(metrics.winDescent));\n        descriptor.items.setValue(this.dictionaryProperties.leading, new PdfNumber(metrics.leading));\n        descriptor.items.setValue(this.dictionaryProperties.avgWidth, new PdfNumber(metrics.widthTable[32]));\n        descriptor.items.setValue(this.dictionaryProperties.fontFile2, new PdfReferenceHolder(this.fontProgram));\n        descriptor.items.setValue(this.dictionaryProperties.maxWidth, new PdfNumber(metrics.widthTable[32]));\n        descriptor.items.setValue(this.dictionaryProperties.xHeight, new PdfNumber(0));\n        descriptor.items.setValue(this.dictionaryProperties.stemH, new PdfNumber(0));\n        return descriptor;\n    };\n    /**\n     * Generates cmap.\n     * @private\n     */\n    UnicodeTrueTypeFont.prototype.createCmap = function () {\n        this.cmap.cmapBeginSave = new SaveCmapEventHandler(this);\n    };\n    /**\n     * Generates font dictionary.\n     */\n    UnicodeTrueTypeFont.prototype.createFontDictionary = function () {\n        // Set property used to clone Font every time\n        this.fontDictionary.isResource = true;\n        this.fontDictionary.fontDictionaryBeginSave = new SaveFontDictionaryEventHandler(this);\n        this.fontDictionary.items.setValue(this.dictionaryProperties.type, new PdfName(this.dictionaryProperties.font));\n        this.fontDictionary.items.setValue(this.dictionaryProperties.baseFont, new PdfName(this.subsetName));\n        this.fontDictionary.items.setValue(this.dictionaryProperties.subtype, new PdfName(this.dictionaryProperties.type0));\n        this.fontDictionary.items.setValue(this.dictionaryProperties.encoding, new PdfName(this.dictionaryProperties.identityH));\n        var descFonts = new PdfArray();\n        var reference = new PdfReferenceHolder(this.descendantFont);\n        // Set property used to clone Font every time\n        descFonts.isFont = true;\n        descFonts.add(reference);\n        this.fontDictionary.items.setValue(this.dictionaryProperties.descendantFonts, descFonts);\n    };\n    /**\n     * Creates font program.\n     */\n    UnicodeTrueTypeFont.prototype.createFontProgram = function () {\n        this.fontProgram.fontProgramBeginSave = new SaveFontProgramEventHandler(this);\n    };\n    /**\n     * Creates system info dictionary for CID font.\n     * @private\n     */\n    UnicodeTrueTypeFont.prototype.createSystemInfo = function () {\n        var systemInfo = new PdfDictionary();\n        systemInfo.items.setValue(this.dictionaryProperties.registry, new PdfString('Adobe'));\n        systemInfo.items.setValue(this.dictionaryProperties.ordering, new PdfString(this.dictionaryProperties.identity));\n        systemInfo.items.setValue(this.dictionaryProperties.supplement, new PdfNumber(0));\n        return systemInfo;\n    };\n    /**\n     * Runs before font Dictionary will be saved.\n     */\n    UnicodeTrueTypeFont.prototype.descendantFontBeginSave = function () {\n        if (this.usedChars !== null && this.usedChars !== undefined && this.usedChars.size() > 0) {\n            var width = this.getDescendantWidth();\n            if (width !== null) {\n                this.descendantFont.items.setValue(this.dictionaryProperties.w, width);\n            }\n        }\n    };\n    /**\n     * Runs before font Dictionary will be saved.\n     */\n    UnicodeTrueTypeFont.prototype.cmapBeginSave = function () {\n        this.generateCmap();\n    };\n    /**\n     * Runs before font Dictionary will be saved.\n     */\n    /* tslint:disable */\n    UnicodeTrueTypeFont.prototype.fontDictionaryBeginSave = function () {\n        if (this.usedChars !== null && this.usedChars !== undefined && this.usedChars.size() > 0 && !this.fontDictionary.containsKey(this.dictionaryProperties.toUnicode)) {\n            this.fontDictionary.items.setValue(this.dictionaryProperties.toUnicode, new PdfReferenceHolder(this.cmap));\n        }\n    };\n    /* tslint:enable */\n    /**\n     * Runs before font program stream save.\n     */\n    UnicodeTrueTypeFont.prototype.fontProgramBeginSave = function () {\n        this.isCompress = true;\n        this.generateFontProgram();\n    };\n    /**\n     * Gets width description pad array for c i d font.\n     */\n    UnicodeTrueTypeFont.prototype.getDescendantWidth = function () {\n        var array = new PdfArray();\n        if (this.usedChars !== null && this.usedChars !== undefined && this.usedChars.size() > 0) {\n            var glyphInfo = [];\n            // if (!this.isEmbedFont) {\n            var keys = this.usedChars.keys();\n            for (var i = 0; i < keys.length; i++) {\n                var chLen = keys[i];\n                var glyph = this.ttfReader.getGlyph(chLen);\n                if (glyph.empty) {\n                    continue;\n                }\n                glyphInfo.push(glyph);\n            }\n            // } else {\n            //     glyphInfo = this.ttfReader.getAllGlyphs();\n            // }\n            glyphInfo.sort(function (a, b) { return a.index - b.index; });\n            var firstGlyphIndex = 0;\n            var lastGlyphIndex = 0;\n            var firstGlyphIndexWasSet = false;\n            var widthDetails = new PdfArray();\n            // if (!this.isEmbedFont) {\n            for (var i = 0; i < glyphInfo.length; i++) {\n                var glyph = glyphInfo[i];\n                if (!firstGlyphIndexWasSet) {\n                    firstGlyphIndexWasSet = true;\n                    firstGlyphIndex = glyph.index;\n                    lastGlyphIndex = glyph.index - 1;\n                }\n                if ((lastGlyphIndex + 1 !== glyph.index || (i + 1 === glyphInfo.length)) && glyphInfo.length > 1) {\n                    // Add glyph index / width.\n                    array.add(new PdfNumber(firstGlyphIndex));\n                    if (i !== 0) {\n                        array.add(widthDetails);\n                    }\n                    firstGlyphIndex = glyph.index;\n                    widthDetails = new PdfArray();\n                }\n                widthDetails.add(new PdfNumber(glyph.width));\n                if (i + 1 === glyphInfo.length) {\n                    array.add(new PdfNumber(firstGlyphIndex));\n                    array.add(widthDetails);\n                }\n                lastGlyphIndex = glyph.index;\n            }\n            // } else {\n            //     for (let i : number = 0; i < glyphInfo.length; i++) {\n            //         let glyph : TtfGlyphInfo = glyphInfo[i];\n            //         if (!firstGlyphIndexWasSet) {\n            //             firstGlyphIndexWasSet = true;\n            //             lastGlyphIndex = glyph.index - 1;\n            //         }\n            //         firstGlyphIndex = glyph.index;\n            //         if ((lastGlyphIndex + 1 === glyph.index || (i + 1 === glyphInfo.length)) && glyphInfo.length > 1) {\n            //             // Add glyph index / width.\n            //             widthDetails.add(new PdfNumber(glyph.width));\n            //             array.add(new PdfNumber(firstGlyphIndex));\n            //             array.add(widthDetails);\n            //             widthDetails = new PdfArray();\n            //         }\n            //         lastGlyphIndex = glyph.index;\n            //     }\n            // }\n        }\n        return array;\n    };\n    /**\n     * Creates cmap.\n     */\n    UnicodeTrueTypeFont.prototype.generateCmap = function () {\n        if (this.usedChars !== null && this.usedChars !== undefined && this.usedChars.size() > 0) {\n            var glyphChars = this.ttfReader.getGlyphChars(this.usedChars);\n            if (glyphChars.size() > 0) {\n                var keys = glyphChars.keys().sort();\n                // add first and last glyph indexes\n                var first = keys[0];\n                var last = keys[keys.length - 1];\n                var middlePart = this.toHexString(first, false) + this.toHexString(last, false) + Operators.newLine;\n                var builder = '';\n                builder += this.cmapPrefix;\n                builder += middlePart;\n                builder += this.cmapEndCodespaceRange;\n                var nextRange = 0;\n                for (var i = 0; i < keys.length; i++) {\n                    if (nextRange === 0) {\n                        if (i !== 0) {\n                            builder += this.cmapEndRange;\n                        }\n                        nextRange = Math.min(100, keys.length - i);\n                        builder += nextRange;\n                        builder += Operators.whiteSpace;\n                        builder += this.cmapBeginRange;\n                    }\n                    nextRange -= 1;\n                    var key = keys[i];\n                    /* tslint:disable */\n                    builder += this.toHexString(key, true) + this.toHexString(key, true) + this.toHexString(glyphChars.getValue(key), true) + '\\n';\n                    /* tslint:enable */\n                }\n                builder += this.cmapSuffix;\n                this.cmap.clearStream();\n                this.cmap.isResource = true;\n                this.cmap.write(builder);\n            }\n        }\n    };\n    /**\n     * Generates font program.\n     */\n    UnicodeTrueTypeFont.prototype.generateFontProgram = function () {\n        var fontProgram = null;\n        this.usedChars = (this.usedChars === null || this.usedChars === undefined) ? new Dictionary() : this.usedChars;\n        this.ttfReader.setOffset(0);\n        fontProgram = this.ttfReader.readFontProgram(this.usedChars);\n        this.fontProgram.clearStream();\n        this.fontProgram.isResource = true;\n        this.fontProgram.writeBytes(fontProgram);\n    };\n    /**\n     * Calculates flags for the font descriptor.\n     * @private\n     */\n    UnicodeTrueTypeFont.prototype.getDescriptorFlags = function () {\n        var flags = 0;\n        var metrics = this.ttfReader.metrics;\n        if (metrics.isFixedPitch) {\n            flags |= FontDescriptorFlags.FixedPitch;\n        }\n        if (metrics.isSymbol) {\n            flags |= FontDescriptorFlags.Symbolic;\n        }\n        else {\n            flags |= FontDescriptorFlags.Nonsymbolic;\n        }\n        if (metrics.isItalic) {\n            flags |= FontDescriptorFlags.Italic;\n        }\n        if (metrics.isBold) {\n            flags |= FontDescriptorFlags.ForceBold;\n        }\n        return flags;\n    };\n    /**\n     * Calculates BoundBox of the descriptor.\n     * @private\n     */\n    UnicodeTrueTypeFont.prototype.getBoundBox = function () {\n        var rect = this.ttfReader.metrics.fontBox;\n        var width = Math.abs(rect.right - rect.left);\n        var height = Math.abs(rect.top - rect.bottom);\n        var rectangle = new RectangleF(rect.left, rect.bottom, width, height);\n        return rectangle;\n    };\n    /**\n     * Converts integer of decimal system to hex integer.\n     */\n    UnicodeTrueTypeFont.prototype.toHexString = function (n, isCaseChange) {\n        var s = n.toString(16);\n        if (isCaseChange) {\n            s = s.toUpperCase();\n        }\n        return '<0000'.substring(0, 5 - s.length) + s + '>';\n    };\n    /**\n     * Stores used symbols.\n     */\n    UnicodeTrueTypeFont.prototype.setSymbols = function (text) {\n        if (text === null) {\n            throw new Error('Argument Null Exception : text');\n        }\n        if (this.usedChars === null || this.usedChars === undefined) {\n            this.usedChars = new Dictionary();\n        }\n        for (var i = 0; i < text.length; i++) {\n            var ch = text[i];\n            this.usedChars.setValue(ch, String.fromCharCode(0));\n        }\n        // else {\n        //     if (text === null) {\n        //         throw new Error('Argument Null Exception : glyphs');\n        //     }\n        //     if (this.usedChars === null || this.usedChars === undefined) {\n        //             this.usedChars = new Dictionary<string, string>();\n        //     }\n        //     for (let i : number = 0; i < text.length; i++) {\n        //         let glyphIndex : number = text[i];\n        //         let glyph : TtfGlyphInfo =  this.ttfReader.getGlyph(glyphIndex);\n        //         if (!glyph == null) {\n        //             let c : string = glyph.charCode.toLocaleString();\n        //             this.usedChars.setValue(c, String.fromCharCode(0));\n        //         }\n        //     }\n        // }\n        if (this.isEmbedFont === false) {\n            this.getDescendantWidth();\n        }\n    };\n    return UnicodeTrueTypeFont;\n}());\nexport { UnicodeTrueTypeFont };\n","/**\n * ArabicShapeRenderer.ts class for EJ2-PDF\n */\nimport { Dictionary } from './../../../collections/dictionary';\nvar ArabicShapeRenderer = /** @class */ (function () {\n    //#endregion\n    //#region Constructor\n    function ArabicShapeRenderer() {\n        //#region Constants\n        this.arabicCharTable = [['\\u0621', '\\uFE80'], ['\\u0622', '\\uFE81', '\\uFE82'],\n            ['\\u0623', '\\uFE83', '\\uFE84'],\n            ['\\u0624', '\\uFE85', '\\uFE86'],\n            ['\\u0625', '\\uFE87', '\\uFE88'],\n            ['\\u0626', '\\uFE89', '\\uFE8A', '\\uFE8B', '\\uFE8C'],\n            ['\\u0627', '\\uFE8D', '\\uFE8E'],\n            ['\\u0628', '\\uFE8F', '\\uFE90', '\\uFE91', '\\uFE92'],\n            ['\\u0629', '\\uFE93', '\\uFE94'],\n            ['\\u062A', '\\uFE95', '\\uFE96', '\\uFE97', '\\uFE98'],\n            ['\\u062B', '\\uFE99', '\\uFE9A', '\\uFE9B', '\\uFE9C'],\n            ['\\u062C', '\\uFE9D', '\\uFE9E', '\\uFE9F', '\\uFEA0'],\n            ['\\u062D', '\\uFEA1', '\\uFEA2', '\\uFEA3', '\\uFEA4'],\n            ['\\u062E', '\\uFEA5', '\\uFEA6', '\\uFEA7', '\\uFEA8'],\n            ['\\u062F', '\\uFEA9', '\\uFEAA'],\n            ['\\u0630', '\\uFEAB', '\\uFEAC'],\n            ['\\u0631', '\\uFEAD', '\\uFEAE'],\n            ['\\u0632', '\\uFEAF', '\\uFEB0'],\n            ['\\u0633', '\\uFEB1', '\\uFEB2', '\\uFEB3', '\\uFEB4'],\n            ['\\u0634', '\\uFEB5', '\\uFEB6', '\\uFEB7', '\\uFEB8'],\n            ['\\u0635', '\\uFEB9', '\\uFEBA', '\\uFEBB', '\\uFEBC'],\n            ['\\u0636', '\\uFEBD', '\\uFEBE', '\\uFEBF', '\\uFEC0'],\n            ['\\u0637', '\\uFEC1', '\\uFEC2', '\\uFEC3', '\\uFEC4'],\n            ['\\u0638', '\\uFEC5', '\\uFEC6', '\\uFEC7', '\\uFEC8'],\n            ['\\u0639', '\\uFEC9', '\\uFECA', '\\uFECB', '\\uFECC'],\n            ['\\u063A', '\\uFECD', '\\uFECE', '\\uFECF', '\\uFED0'],\n            ['\\u0640', '\\u0640', '\\u0640', '\\u0640', '\\u0640'],\n            ['\\u0641', '\\uFED1', '\\uFED2', '\\uFED3', '\\uFED4'],\n            ['\\u0642', '\\uFED5', '\\uFED6', '\\uFED7', '\\uFED8'],\n            ['\\u0643', '\\uFED9', '\\uFEDA', '\\uFEDB', '\\uFEDC'],\n            ['\\u0644', '\\uFEDD', '\\uFEDE', '\\uFEDF', '\\uFEE0'],\n            ['\\u0645', '\\uFEE1', '\\uFEE2', '\\uFEE3', '\\uFEE4'],\n            ['\\u0646', '\\uFEE5', '\\uFEE6', '\\uFEE7', '\\uFEE8'],\n            ['\\u0647', '\\uFEE9', '\\uFEEA', '\\uFEEB', '\\uFEEC'],\n            ['\\u0648', '\\uFEED', '\\uFEEE'],\n            ['\\u0649', '\\uFEEF', '\\uFEF0', '\\uFBE8', '\\uFBE9'],\n            ['\\u064A', '\\uFEF1', '\\uFEF2', '\\uFEF3', '\\uFEF4'],\n            ['\\u0671', '\\uFB50', '\\uFB51'],\n            ['\\u0679', '\\uFB66', '\\uFB67', '\\uFB68', '\\uFB69'],\n            ['\\u067A', '\\uFB5E', '\\uFB5F', '\\uFB60', '\\uFB61'],\n            ['\\u067B', '\\uFB52', '\\uFB53', '\\uFB54', '\\uFB55'],\n            ['\\u067E', '\\uFB56', '\\uFB57', '\\uFB58', '\\uFB59'],\n            ['\\u067F', '\\uFB62', '\\uFB63', '\\uFB64', '\\uFB65'],\n            ['\\u0680', '\\uFB5A', '\\uFB5B', '\\uFB5C', '\\uFB5D'],\n            ['\\u0683', '\\uFB76', '\\uFB77', '\\uFB78', '\\uFB79'],\n            ['\\u0684', '\\uFB72', '\\uFB73', '\\uFB74', '\\uFB75'],\n            ['\\u0686', '\\uFB7A', '\\uFB7B', '\\uFB7C', '\\uFB7D'],\n            ['\\u0687', '\\uFB7E', '\\uFB7F', '\\uFB80', '\\uFB81'],\n            ['\\u0688', '\\uFB88', '\\uFB89'],\n            ['\\u068C', '\\uFB84', '\\uFB85'],\n            ['\\u068D', '\\uFB82', '\\uFB83'],\n            ['\\u068E', '\\uFB86', '\\uFB87'],\n            ['\\u0691', '\\uFB8C', '\\uFB8D'],\n            ['\\u0698', '\\uFB8A', '\\uFB8B'],\n            ['\\u06A4', '\\uFB6A', '\\uFB6B', '\\uFB6C', '\\uFB6D'],\n            ['\\u06A6', '\\uFB6E', '\\uFB6F', '\\uFB70', '\\uFB71'],\n            ['\\u06A9', '\\uFB8E', '\\uFB8F', '\\uFB90', '\\uFB91'],\n            ['\\u06AD', '\\uFBD3', '\\uFBD4', '\\uFBD5', '\\uFBD6'],\n            ['\\u06AF', '\\uFB92', '\\uFB93', '\\uFB94', '\\uFB95'],\n            ['\\u06B1', '\\uFB9A', '\\uFB9B', '\\uFB9C', '\\uFB9D'],\n            ['\\u06B3', '\\uFB96', '\\uFB97', '\\uFB98', '\\uFB99'],\n            ['\\u06BA', '\\uFB9E', '\\uFB9F'],\n            ['\\u06BB', '\\uFBA0', '\\uFBA1', '\\uFBA2', '\\uFBA3'],\n            ['\\u06BE', '\\uFBAA', '\\uFBAB', '\\uFBAC', '\\uFBAD'],\n            ['\\u06C0', '\\uFBA4', '\\uFBA5'],\n            ['\\u06C1', '\\uFBA6', '\\uFBA7', '\\uFBA8', '\\uFBA9'],\n            ['\\u06C5', '\\uFBE0', '\\uFBE1'],\n            ['\\u06C6', '\\uFBD9', '\\uFBDA'],\n            ['\\u06C7', '\\uFBD7', '\\uFBD8'],\n            ['\\u06C8', '\\uFBDB', '\\uFBDC'],\n            ['\\u06C9', '\\uFBE2', '\\uFBE3'],\n            ['\\u06CB', '\\uFBDE', '\\uFBDF'],\n            ['\\u06CC', '\\uFBFC', '\\uFBFD', '\\uFBFE', '\\uFBFF'],\n            ['\\u06D0', '\\uFBE4', '\\uFBE5', '\\uFBE6', '\\uFBE7'],\n            ['\\u06D2', '\\uFBAE', '\\uFBAF'],\n            ['\\u06D3', '\\uFBB0', '\\uFBB1']\n        ];\n        this.alef = '\\u0627';\n        this.alefHamza = '\\u0623';\n        this.alefHamzaBelow = '\\u0625';\n        this.alefMadda = '\\u0622';\n        this.lam = '\\u0644';\n        this.hamza = '\\u0621';\n        this.zeroWidthJoiner = '\\u200D';\n        this.hamzaAbove = '\\u0654';\n        this.hamzaBelow = '\\u0655';\n        this.wawHamza = '\\u0624';\n        this.yehHamza = '\\u0626';\n        this.waw = '\\u0648';\n        this.alefMaksura = '\\u0649';\n        this.yeh = '\\u064A';\n        this.farsiYeh = '\\u06CC';\n        this.shadda = '\\u0651';\n        this.madda = '\\u0653';\n        this.lwa = '\\uFEFB';\n        this.lwawh = '\\uFEF7';\n        this.lwawhb = '\\uFEF9';\n        this.lwawm = '\\uFEF5';\n        this.bwhb = '\\u06D3';\n        this.fathatan = '\\u064B';\n        this.superScriptalef = '\\u0670';\n        this.vowel = 0x1;\n        // #endregion\n        //#region Fields\n        this.arabicMapTable = new Dictionary();\n        for (var i = 0; i < this.arabicCharTable.length; i++) {\n            this.arabicMapTable.setValue(this.arabicCharTable[i][0], this.arabicCharTable[i]);\n        }\n    }\n    //#endregion\n    //#region implementation\n    ArabicShapeRenderer.prototype.getCharacterShape = function (input, index) {\n        if ((input >= this.hamza) && (input <= this.bwhb)) {\n            var value = [];\n            if (this.arabicMapTable.getValue(input)) {\n                value = this.arabicMapTable.getValue(input);\n                return value[index + 1];\n            }\n        }\n        else if (input >= this.lwawm && input <= this.lwa) {\n            return (input);\n        }\n        return input;\n    };\n    ArabicShapeRenderer.prototype.shape = function (text, level) {\n        var builder = '';\n        var str2 = '';\n        for (var i = 0; i < text.length; i++) {\n            var c = text[i];\n            if (c >= '؀' && c <= 'ۿ') {\n                //if(c>= 0x0600.toString() && c<= 0x06FF.toString()) {\n                str2 = str2 + c;\n            }\n            else {\n                if (str2.length > 0) {\n                    var st = this.doShape(str2.toString(), 0);\n                    builder = builder + st;\n                    str2 = '';\n                }\n                builder = builder + c;\n            }\n        }\n        if (str2.length > 0) {\n            var st = this.doShape(str2.toString(), 0);\n            builder = builder + st;\n        }\n        return builder.toString();\n    };\n    ArabicShapeRenderer.prototype.doShape = function (input, level) {\n        var str = '';\n        var ligature = 0;\n        var len = 0;\n        var i = 0;\n        var next = '';\n        var previous = new ArabicShape();\n        var present = new ArabicShape();\n        while (i < input.length) {\n            next = input[i++];\n            ligature = this.ligature(next, present);\n            if (ligature === 0) {\n                var shapeCount = this.getShapeCount(next);\n                len = (shapeCount === 1) ? 0 : 2;\n                if (previous.Shapes > 2) {\n                    len += 1;\n                }\n                len = len % (present.Shapes);\n                present.Value = this.getCharacterShape(present.Value, len);\n                str = this.append(str, previous, level);\n                previous = present;\n                present = new ArabicShape();\n                present.Value = next;\n                present.Shapes = shapeCount;\n                present.Ligature++;\n            }\n        }\n        len = (previous.Shapes > 2) ? 1 : 0;\n        len = len % (present.Shapes);\n        present.Value = this.getCharacterShape(present.Value, len);\n        str = this.append(str, previous, level);\n        str = this.append(str, present, level);\n        return str.toString();\n    };\n    ArabicShapeRenderer.prototype.append = function (builder, shape, level) {\n        if (shape.Value !== '') {\n            builder = builder + shape.Value;\n            shape.Ligature -= 1;\n            if (shape.Type !== '') {\n                if ((level & this.vowel) === 0) {\n                    builder = builder + shape.Type;\n                    shape.Ligature -= 1;\n                }\n                else {\n                    shape.Ligature -= 1;\n                }\n            }\n            if (shape.vowel !== '') {\n                if ((level & this.vowel) === 0) {\n                    builder = builder + shape.vowel;\n                    shape.Ligature -= 1;\n                }\n                else {\n                    shape.Ligature -= 1;\n                }\n            }\n        }\n        return builder;\n    };\n    ArabicShapeRenderer.prototype.ligature = function (value, shape) {\n        if (shape.Value !== '') {\n            var result = 0;\n            if ((value >= this.fathatan && value <= this.hamzaBelow) || value === this.superScriptalef) {\n                result = 1;\n                if ((shape.vowel !== '') && (value !== this.shadda)) {\n                    result = 2;\n                }\n                if (value === this.shadda) {\n                    if (shape.Type == null) {\n                        shape.Type = this.shadda;\n                    }\n                    else {\n                        return 0;\n                    }\n                }\n                else if (value === this.hamzaBelow) {\n                    if (shape.Value === this.alef) {\n                        shape.Value = this.alefHamzaBelow;\n                        result = 2;\n                    }\n                    else if (value === this.lwa) {\n                        shape.Value = this.lwawhb;\n                        result = 2;\n                    }\n                    else {\n                        shape.Type = this.hamzaBelow;\n                    }\n                }\n                else if (value === this.hamzaAbove) {\n                    if (shape.Value === this.alef) {\n                        shape.Value = this.alefHamza;\n                        result = 2;\n                    }\n                    else if (shape.Value === this.lwa) {\n                        shape.Value = this.lwawh;\n                        result = 2;\n                    }\n                    else if (shape.Value === this.waw) {\n                        shape.Value = this.wawHamza;\n                        result = 2;\n                    }\n                    else if (shape.Value === this.yeh || shape.Value === this.alefMaksura || shape.Value === this.farsiYeh) {\n                        shape.Value = this.yehHamza;\n                        result = 2;\n                    }\n                    else {\n                        shape.Type = this.hamzaAbove;\n                    }\n                }\n                else if (value === this.madda) {\n                    if (shape.Value === this.alef) {\n                        shape.Value = this.alefMadda;\n                        result = 2;\n                    }\n                }\n                else {\n                    shape.vowel = value;\n                }\n                if (result === 1) {\n                    shape.Ligature++;\n                }\n                return result;\n            }\n            if (shape.vowel !== '') {\n                return 0;\n            }\n            if (shape.Value === this.lam) {\n                if (value === this.alef) {\n                    shape.Value = this.lwa;\n                    shape.Shapes = 2;\n                    result = 3;\n                }\n                else if (value === this.alefHamza) {\n                    shape.Value = this.lwawh;\n                    shape.Shapes = 2;\n                    result = 3;\n                }\n                else if (value === this.alefHamzaBelow) {\n                    shape.Value = this.lwawhb;\n                    shape.Shapes = 2;\n                    result = 3;\n                }\n                else if (value === this.alefMadda) {\n                    shape.Value = this.lwawm;\n                    shape.Shapes = 2;\n                    result = 3;\n                }\n            }\n            // else if (shape.Value === '') {\n            //     shape.Value = value;\n            //     shape.Shapes = this.getShapeCount(value);\n            //     result = 1;\n            // }\n            return result;\n        }\n        else {\n            return 0;\n        }\n    };\n    ArabicShapeRenderer.prototype.getShapeCount = function (shape) {\n        if ((shape >= this.hamza) && (shape <= this.bwhb) && !((shape >= this.fathatan && shape <= this.hamzaBelow)\n            || shape === this.superScriptalef)) {\n            var c = [];\n            if (this.arabicMapTable.getValue(shape)) {\n                c = this.arabicMapTable.getValue(shape);\n                return c.length - 1;\n            }\n        }\n        else if (shape === this.zeroWidthJoiner) {\n            return 4;\n        }\n        return 1;\n    };\n    return ArabicShapeRenderer;\n}());\nexport { ArabicShapeRenderer };\n//#endregion\n//#region Internals\nvar ArabicShape = /** @class */ (function () {\n    function ArabicShape() {\n        //#region Fields\n        this.shapeValue = '';\n        this.shapeType = '';\n        this.shapeVowel = '';\n        this.shapeLigature = 0;\n        this.shapeShapes = 1;\n        //#endregion\n    }\n    Object.defineProperty(ArabicShape.prototype, \"Value\", {\n        //#endregion\n        //#region Properties \n        /**\n         * Gets or sets the values.\n         * @private\n         */\n        get: function () {\n            return this.shapeValue;\n        },\n        set: function (value) {\n            this.shapeValue = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ArabicShape.prototype, \"Type\", {\n        /**\n         * Gets or sets the values.\n         * @private\n         */\n        get: function () {\n            return this.shapeType;\n        },\n        set: function (value) {\n            this.shapeType = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ArabicShape.prototype, \"vowel\", {\n        /**\n         * Gets or sets the values.\n         * @private\n         */\n        get: function () {\n            return this.shapeVowel;\n        },\n        set: function (value) {\n            this.shapeVowel = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ArabicShape.prototype, \"Ligature\", {\n        /**\n         * Gets or sets the values.\n         * @private\n         */\n        get: function () {\n            return this.shapeLigature;\n        },\n        set: function (value) {\n            this.shapeLigature = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ArabicShape.prototype, \"Shapes\", {\n        /**\n         * Gets or sets the values.\n         * @private\n         */\n        get: function () {\n            return this.shapeShapes;\n        },\n        set: function (value) {\n            this.shapeShapes = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return ArabicShape;\n}());\nexport { ArabicShape };\n//#endregion\n","/**\n * Bidi.ts class for EJ2-PDF\n */\nimport { Dictionary } from './../../../collections/dictionary';\n/**\n * `Metrics` of the font.\n * @private\n */\nvar Bidi = /** @class */ (function () {\n    //#endregion\n    //#region Constructor\n    function Bidi() {\n        //#region Fields\n        this.indexes = [];\n        this.indexLevels = [];\n        this.mirroringShapeCharacters = new Dictionary();\n        this.update();\n    }\n    //#endregion\n    //#region implementation\n    Bidi.prototype.doMirrorShaping = function (text) {\n        var result = [];\n        for (var i = 0; i < text.length; i++) {\n            if (((this.indexLevels[i] & 1) === 1) && this.mirroringShapeCharacters.containsKey(text[i].charCodeAt(0))) {\n                result[i] = String.fromCharCode(this.mirroringShapeCharacters.getValue(text[i].charCodeAt(0)));\n            }\n            else {\n                result[i] = text[i].toString();\n            }\n        }\n        var res = '';\n        for (var j = 0; j < result.length; j++) {\n            res = res + result[j];\n        }\n        return res;\n    };\n    Bidi.prototype.getLogicalToVisualString = function (inputText, isRtl) {\n        var rtlCharacters = new RtlCharacters();\n        this.indexLevels = rtlCharacters.getVisualOrder(inputText, isRtl);\n        this.setDefaultIndexLevel();\n        this.doOrder(0, this.indexLevels.length - 1);\n        var text = this.doMirrorShaping(inputText);\n        //let text : string = inputText;\n        var resultBuilder = '';\n        for (var i = 0; i < this.indexes.length; i++) {\n            var index = this.indexes[i];\n            resultBuilder += text[index];\n        }\n        return resultBuilder.toString();\n    };\n    Bidi.prototype.setDefaultIndexLevel = function () {\n        for (var i = 0; i < this.indexLevels.length; i++) {\n            this.indexes[i] = i;\n        }\n    };\n    Bidi.prototype.doOrder = function (sIndex, eIndex) {\n        var max = this.indexLevels[sIndex];\n        var min = max;\n        var odd = max;\n        var even = max;\n        for (var i = sIndex + 1; i <= eIndex; ++i) {\n            var data = this.indexLevels[i];\n            if (data > max) {\n                max = data;\n            }\n            else if (data < min) {\n                min = data;\n            }\n            odd &= data;\n            even |= data;\n        }\n        if ((even & 1) === 0) {\n            return;\n        }\n        if ((odd & 1) === 1) {\n            this.reArrange(sIndex, eIndex + 1);\n            return;\n        }\n        min |= 1;\n        while (max >= min) {\n            var pstart = sIndex;\n            /*tslint:disable:no-constant-condition */\n            while (true) {\n                while (pstart <= eIndex) {\n                    if (this.indexLevels[pstart] >= max) {\n                        break;\n                    }\n                    pstart += 1;\n                }\n                if (pstart > eIndex) {\n                    break;\n                }\n                var pend = pstart + 1;\n                while (pend <= eIndex) {\n                    if (this.indexLevels[pend] < max) {\n                        break;\n                    }\n                    pend += 1;\n                }\n                this.reArrange(pstart, pend);\n                pstart = pend + 1;\n            }\n            max -= 1;\n        }\n    };\n    Bidi.prototype.reArrange = function (i, j) {\n        var length = (i + j) / 2;\n        --j;\n        for (; i < length; ++i, --j) {\n            var temp = this.indexes[i];\n            this.indexes[i] = this.indexes[j];\n            this.indexes[j] = temp;\n        }\n    };\n    Bidi.prototype.update = function () {\n        this.mirroringShapeCharacters.setValue(40, 41);\n        this.mirroringShapeCharacters.setValue(41, 40);\n        this.mirroringShapeCharacters.setValue(60, 62);\n        this.mirroringShapeCharacters.setValue(62, 60);\n        this.mirroringShapeCharacters.setValue(91, 93);\n        this.mirroringShapeCharacters.setValue(93, 91);\n        this.mirroringShapeCharacters.setValue(123, 125);\n        this.mirroringShapeCharacters.setValue(125, 123);\n        this.mirroringShapeCharacters.setValue(171, 187);\n        this.mirroringShapeCharacters.setValue(187, 171);\n        this.mirroringShapeCharacters.setValue(8249, 8250);\n        this.mirroringShapeCharacters.setValue(8250, 8249);\n        this.mirroringShapeCharacters.setValue(8261, 8262);\n        this.mirroringShapeCharacters.setValue(8262, 8261);\n        this.mirroringShapeCharacters.setValue(8317, 8318);\n        this.mirroringShapeCharacters.setValue(8318, 8317);\n        this.mirroringShapeCharacters.setValue(8333, 8334);\n        this.mirroringShapeCharacters.setValue(8334, 8333);\n        this.mirroringShapeCharacters.setValue(8712, 8715);\n        this.mirroringShapeCharacters.setValue(8713, 8716);\n        this.mirroringShapeCharacters.setValue(8714, 8717);\n        this.mirroringShapeCharacters.setValue(8715, 8712);\n        this.mirroringShapeCharacters.setValue(8716, 8713);\n        this.mirroringShapeCharacters.setValue(8717, 8714);\n        this.mirroringShapeCharacters.setValue(8725, 10741);\n        this.mirroringShapeCharacters.setValue(8764, 8765);\n        this.mirroringShapeCharacters.setValue(8765, 8764);\n        this.mirroringShapeCharacters.setValue(8771, 8909);\n        this.mirroringShapeCharacters.setValue(8786, 8787);\n        this.mirroringShapeCharacters.setValue(8787, 8786);\n        this.mirroringShapeCharacters.setValue(8788, 8789);\n        this.mirroringShapeCharacters.setValue(8789, 8788);\n        this.mirroringShapeCharacters.setValue(8804, 8805);\n        this.mirroringShapeCharacters.setValue(8805, 8804);\n        this.mirroringShapeCharacters.setValue(8806, 8807);\n        this.mirroringShapeCharacters.setValue(8807, 8806);\n        this.mirroringShapeCharacters.setValue(8808, 8809);\n        this.mirroringShapeCharacters.setValue(8809, 8808);\n        this.mirroringShapeCharacters.setValue(8810, 8811);\n        this.mirroringShapeCharacters.setValue(8811, 8810);\n        this.mirroringShapeCharacters.setValue(8814, 8815);\n        this.mirroringShapeCharacters.setValue(8815, 8814);\n        this.mirroringShapeCharacters.setValue(8816, 8817);\n        this.mirroringShapeCharacters.setValue(8817, 8816);\n        this.mirroringShapeCharacters.setValue(8818, 8819);\n        this.mirroringShapeCharacters.setValue(8819, 8818);\n        this.mirroringShapeCharacters.setValue(8820, 8821);\n        this.mirroringShapeCharacters.setValue(8821, 8820);\n        this.mirroringShapeCharacters.setValue(8822, 8823);\n        this.mirroringShapeCharacters.setValue(8823, 8822);\n        this.mirroringShapeCharacters.setValue(8824, 8825);\n        this.mirroringShapeCharacters.setValue(8825, 8824);\n        this.mirroringShapeCharacters.setValue(8826, 8827);\n        this.mirroringShapeCharacters.setValue(8827, 8826);\n        this.mirroringShapeCharacters.setValue(8828, 8829);\n        this.mirroringShapeCharacters.setValue(8829, 8828);\n        this.mirroringShapeCharacters.setValue(8830, 8831);\n        this.mirroringShapeCharacters.setValue(8831, 8830);\n        this.mirroringShapeCharacters.setValue(8832, 8833);\n        this.mirroringShapeCharacters.setValue(8833, 8832);\n        this.mirroringShapeCharacters.setValue(8834, 8835);\n        this.mirroringShapeCharacters.setValue(8835, 8834);\n        this.mirroringShapeCharacters.setValue(8836, 8837);\n        this.mirroringShapeCharacters.setValue(8837, 8836);\n        this.mirroringShapeCharacters.setValue(8838, 8839);\n        this.mirroringShapeCharacters.setValue(8839, 8838);\n        this.mirroringShapeCharacters.setValue(8840, 8841);\n        this.mirroringShapeCharacters.setValue(8841, 8840);\n        this.mirroringShapeCharacters.setValue(8842, 8843);\n        this.mirroringShapeCharacters.setValue(8843, 8842);\n        this.mirroringShapeCharacters.setValue(8847, 8848);\n        this.mirroringShapeCharacters.setValue(8848, 8847);\n        this.mirroringShapeCharacters.setValue(8849, 8850);\n        this.mirroringShapeCharacters.setValue(8850, 8849);\n        this.mirroringShapeCharacters.setValue(8856, 10680);\n        this.mirroringShapeCharacters.setValue(8866, 8867);\n        this.mirroringShapeCharacters.setValue(8867, 8866);\n        this.mirroringShapeCharacters.setValue(8870, 10974);\n        this.mirroringShapeCharacters.setValue(8872, 10980);\n        this.mirroringShapeCharacters.setValue(8873, 10979);\n        this.mirroringShapeCharacters.setValue(8875, 10981);\n        this.mirroringShapeCharacters.setValue(8880, 8881);\n        this.mirroringShapeCharacters.setValue(8881, 8880);\n        this.mirroringShapeCharacters.setValue(8882, 8883);\n        this.mirroringShapeCharacters.setValue(8883, 8882);\n        this.mirroringShapeCharacters.setValue(8884, 8885);\n        this.mirroringShapeCharacters.setValue(8885, 8884);\n        /*tslint:disable:max-func-body-length */\n        this.mirroringShapeCharacters.setValue(8886, 8887);\n        this.mirroringShapeCharacters.setValue(8887, 8886);\n        this.mirroringShapeCharacters.setValue(8905, 8906);\n        this.mirroringShapeCharacters.setValue(8906, 8905);\n        this.mirroringShapeCharacters.setValue(8907, 8908);\n        this.mirroringShapeCharacters.setValue(8908, 8907);\n        this.mirroringShapeCharacters.setValue(8909, 8771);\n        this.mirroringShapeCharacters.setValue(8912, 8913);\n        this.mirroringShapeCharacters.setValue(8913, 8912);\n        this.mirroringShapeCharacters.setValue(8918, 8919);\n        this.mirroringShapeCharacters.setValue(8919, 8918);\n        this.mirroringShapeCharacters.setValue(8920, 8921);\n        this.mirroringShapeCharacters.setValue(8921, 8920);\n        this.mirroringShapeCharacters.setValue(8922, 8923);\n        this.mirroringShapeCharacters.setValue(8923, 8922);\n        this.mirroringShapeCharacters.setValue(8924, 8925);\n        this.mirroringShapeCharacters.setValue(8925, 8924);\n        this.mirroringShapeCharacters.setValue(8926, 8927);\n        this.mirroringShapeCharacters.setValue(8927, 8926);\n        this.mirroringShapeCharacters.setValue(8928, 8929);\n        this.mirroringShapeCharacters.setValue(8929, 8928);\n        this.mirroringShapeCharacters.setValue(8930, 8931);\n        this.mirroringShapeCharacters.setValue(8931, 8930);\n        this.mirroringShapeCharacters.setValue(8932, 8933);\n        this.mirroringShapeCharacters.setValue(8933, 8932);\n        this.mirroringShapeCharacters.setValue(8934, 8935);\n        this.mirroringShapeCharacters.setValue(8935, 8934);\n        this.mirroringShapeCharacters.setValue(8936, 8937);\n        this.mirroringShapeCharacters.setValue(8937, 8936);\n        this.mirroringShapeCharacters.setValue(8938, 8939);\n        this.mirroringShapeCharacters.setValue(8939, 8938);\n        this.mirroringShapeCharacters.setValue(8940, 8941);\n        this.mirroringShapeCharacters.setValue(8941, 8940);\n        this.mirroringShapeCharacters.setValue(8944, 8945);\n        this.mirroringShapeCharacters.setValue(8945, 8944);\n        this.mirroringShapeCharacters.setValue(8946, 8954);\n        this.mirroringShapeCharacters.setValue(8947, 8955);\n        this.mirroringShapeCharacters.setValue(8948, 8956);\n        this.mirroringShapeCharacters.setValue(8950, 8957);\n        this.mirroringShapeCharacters.setValue(8951, 8958);\n        this.mirroringShapeCharacters.setValue(8954, 8946);\n        this.mirroringShapeCharacters.setValue(8955, 8947);\n        this.mirroringShapeCharacters.setValue(8956, 8948);\n        this.mirroringShapeCharacters.setValue(8957, 8950);\n        this.mirroringShapeCharacters.setValue(8958, 8951);\n        this.mirroringShapeCharacters.setValue(8968, 8969);\n        this.mirroringShapeCharacters.setValue(8969, 8968);\n        this.mirroringShapeCharacters.setValue(8970, 8971);\n        this.mirroringShapeCharacters.setValue(8971, 8970);\n        this.mirroringShapeCharacters.setValue(9001, 9002);\n        this.mirroringShapeCharacters.setValue(9002, 9001);\n        this.mirroringShapeCharacters.setValue(10088, 10089);\n        this.mirroringShapeCharacters.setValue(10089, 10088);\n        this.mirroringShapeCharacters.setValue(10090, 10091);\n        this.mirroringShapeCharacters.setValue(10091, 10090);\n        this.mirroringShapeCharacters.setValue(10092, 10093);\n        this.mirroringShapeCharacters.setValue(10093, 10092);\n        this.mirroringShapeCharacters.setValue(10094, 10095);\n        this.mirroringShapeCharacters.setValue(10095, 10094);\n        this.mirroringShapeCharacters.setValue(10096, 10097);\n        this.mirroringShapeCharacters.setValue(10097, 10096);\n        this.mirroringShapeCharacters.setValue(10098, 10099);\n        this.mirroringShapeCharacters.setValue(10099, 10098);\n        this.mirroringShapeCharacters.setValue(10100, 10101);\n        this.mirroringShapeCharacters.setValue(10101, 10100);\n        this.mirroringShapeCharacters.setValue(10197, 10198);\n        this.mirroringShapeCharacters.setValue(10198, 10197);\n        this.mirroringShapeCharacters.setValue(10205, 10206);\n        this.mirroringShapeCharacters.setValue(10206, 10205);\n        this.mirroringShapeCharacters.setValue(10210, 10211);\n        this.mirroringShapeCharacters.setValue(10211, 10210);\n        this.mirroringShapeCharacters.setValue(10212, 10213);\n        this.mirroringShapeCharacters.setValue(10213, 10212);\n        this.mirroringShapeCharacters.setValue(10214, 10215);\n        this.mirroringShapeCharacters.setValue(10215, 10214);\n        this.mirroringShapeCharacters.setValue(10216, 10217);\n        this.mirroringShapeCharacters.setValue(10217, 10216);\n        this.mirroringShapeCharacters.setValue(10218, 10219);\n        this.mirroringShapeCharacters.setValue(10219, 10218);\n        this.mirroringShapeCharacters.setValue(10627, 10628);\n        this.mirroringShapeCharacters.setValue(10628, 10627);\n        this.mirroringShapeCharacters.setValue(10629, 10630);\n        this.mirroringShapeCharacters.setValue(10630, 10629);\n        this.mirroringShapeCharacters.setValue(10631, 10632);\n        this.mirroringShapeCharacters.setValue(10632, 10631);\n        this.mirroringShapeCharacters.setValue(10633, 10634);\n        this.mirroringShapeCharacters.setValue(10634, 10633);\n        this.mirroringShapeCharacters.setValue(10635, 10636);\n        this.mirroringShapeCharacters.setValue(10636, 10635);\n        this.mirroringShapeCharacters.setValue(10637, 10640);\n        this.mirroringShapeCharacters.setValue(10638, 10639);\n        this.mirroringShapeCharacters.setValue(10639, 10638);\n        this.mirroringShapeCharacters.setValue(10640, 10637);\n        this.mirroringShapeCharacters.setValue(10641, 10642);\n        this.mirroringShapeCharacters.setValue(10642, 10641);\n        this.mirroringShapeCharacters.setValue(10643, 10644);\n        this.mirroringShapeCharacters.setValue(10644, 10643);\n        this.mirroringShapeCharacters.setValue(10645, 10646);\n        this.mirroringShapeCharacters.setValue(10646, 10645);\n        this.mirroringShapeCharacters.setValue(10647, 10648);\n        this.mirroringShapeCharacters.setValue(10648, 10647);\n        this.mirroringShapeCharacters.setValue(10680, 8856);\n        this.mirroringShapeCharacters.setValue(10688, 10689);\n        this.mirroringShapeCharacters.setValue(10689, 10688);\n        this.mirroringShapeCharacters.setValue(10692, 10693);\n        this.mirroringShapeCharacters.setValue(10693, 10692);\n        this.mirroringShapeCharacters.setValue(10703, 10704);\n        this.mirroringShapeCharacters.setValue(10704, 10703);\n        this.mirroringShapeCharacters.setValue(10705, 10706);\n        this.mirroringShapeCharacters.setValue(10706, 10705);\n        this.mirroringShapeCharacters.setValue(10708, 10709);\n        this.mirroringShapeCharacters.setValue(10709, 10708);\n        this.mirroringShapeCharacters.setValue(10712, 10713);\n        this.mirroringShapeCharacters.setValue(10713, 10712);\n        this.mirroringShapeCharacters.setValue(10714, 10715);\n        this.mirroringShapeCharacters.setValue(10715, 10714);\n        this.mirroringShapeCharacters.setValue(10741, 8725);\n        this.mirroringShapeCharacters.setValue(10744, 10745);\n        this.mirroringShapeCharacters.setValue(10745, 10744);\n        this.mirroringShapeCharacters.setValue(10748, 10749);\n        this.mirroringShapeCharacters.setValue(10749, 10748);\n        this.mirroringShapeCharacters.setValue(10795, 10796);\n        this.mirroringShapeCharacters.setValue(10796, 10795);\n        this.mirroringShapeCharacters.setValue(10797, 10796);\n        this.mirroringShapeCharacters.setValue(10798, 10797);\n        this.mirroringShapeCharacters.setValue(10804, 10805);\n        this.mirroringShapeCharacters.setValue(10805, 10804);\n        this.mirroringShapeCharacters.setValue(10812, 10813);\n        this.mirroringShapeCharacters.setValue(10813, 10812);\n        this.mirroringShapeCharacters.setValue(10852, 10853);\n        this.mirroringShapeCharacters.setValue(10853, 10852);\n        this.mirroringShapeCharacters.setValue(10873, 10874);\n        this.mirroringShapeCharacters.setValue(10874, 10873);\n        this.mirroringShapeCharacters.setValue(10877, 10878);\n        this.mirroringShapeCharacters.setValue(10878, 10877);\n        this.mirroringShapeCharacters.setValue(10879, 10880);\n        this.mirroringShapeCharacters.setValue(10880, 10879);\n        this.mirroringShapeCharacters.setValue(10881, 10882);\n        this.mirroringShapeCharacters.setValue(10882, 10881);\n        this.mirroringShapeCharacters.setValue(10883, 10884);\n        this.mirroringShapeCharacters.setValue(10884, 10883);\n        this.mirroringShapeCharacters.setValue(10891, 10892);\n        this.mirroringShapeCharacters.setValue(10892, 10891);\n        this.mirroringShapeCharacters.setValue(10897, 10898);\n        this.mirroringShapeCharacters.setValue(10898, 10897);\n        this.mirroringShapeCharacters.setValue(10899, 10900);\n        this.mirroringShapeCharacters.setValue(10900, 10899);\n        this.mirroringShapeCharacters.setValue(10901, 10902);\n        this.mirroringShapeCharacters.setValue(10902, 10901);\n        this.mirroringShapeCharacters.setValue(10903, 10904);\n        this.mirroringShapeCharacters.setValue(10904, 10903);\n        this.mirroringShapeCharacters.setValue(10905, 10906);\n        this.mirroringShapeCharacters.setValue(10906, 10905);\n        this.mirroringShapeCharacters.setValue(10907, 10908);\n        this.mirroringShapeCharacters.setValue(10908, 10907);\n        this.mirroringShapeCharacters.setValue(10913, 10914);\n        this.mirroringShapeCharacters.setValue(10914, 10913);\n        this.mirroringShapeCharacters.setValue(10918, 10919);\n        this.mirroringShapeCharacters.setValue(10919, 10918);\n        this.mirroringShapeCharacters.setValue(10920, 10921);\n        this.mirroringShapeCharacters.setValue(10921, 10920);\n        this.mirroringShapeCharacters.setValue(10922, 10923);\n        this.mirroringShapeCharacters.setValue(10923, 10922);\n        this.mirroringShapeCharacters.setValue(10924, 10925);\n        this.mirroringShapeCharacters.setValue(10925, 10924);\n        this.mirroringShapeCharacters.setValue(10927, 10928);\n        this.mirroringShapeCharacters.setValue(10928, 10927);\n        this.mirroringShapeCharacters.setValue(10931, 10932);\n        this.mirroringShapeCharacters.setValue(10932, 10931);\n        this.mirroringShapeCharacters.setValue(10939, 10940);\n        this.mirroringShapeCharacters.setValue(10940, 10939);\n        this.mirroringShapeCharacters.setValue(10941, 10942);\n        this.mirroringShapeCharacters.setValue(10942, 10941);\n        this.mirroringShapeCharacters.setValue(10943, 10944);\n        this.mirroringShapeCharacters.setValue(10944, 10943);\n        this.mirroringShapeCharacters.setValue(10945, 10946);\n        this.mirroringShapeCharacters.setValue(10946, 10945);\n        this.mirroringShapeCharacters.setValue(10947, 10948);\n        this.mirroringShapeCharacters.setValue(10948, 10947);\n        this.mirroringShapeCharacters.setValue(10949, 10950);\n        this.mirroringShapeCharacters.setValue(10950, 10949);\n        this.mirroringShapeCharacters.setValue(10957, 10958);\n        this.mirroringShapeCharacters.setValue(10958, 10957);\n        this.mirroringShapeCharacters.setValue(10959, 10960);\n        this.mirroringShapeCharacters.setValue(10960, 10959);\n        this.mirroringShapeCharacters.setValue(10961, 10962);\n        this.mirroringShapeCharacters.setValue(10962, 10961);\n        this.mirroringShapeCharacters.setValue(10963, 10964);\n        this.mirroringShapeCharacters.setValue(10964, 10963);\n        this.mirroringShapeCharacters.setValue(10965, 10966);\n        this.mirroringShapeCharacters.setValue(10966, 10965);\n        this.mirroringShapeCharacters.setValue(10974, 8870);\n        this.mirroringShapeCharacters.setValue(10979, 8873);\n        this.mirroringShapeCharacters.setValue(10980, 8872);\n        this.mirroringShapeCharacters.setValue(10981, 8875);\n        this.mirroringShapeCharacters.setValue(10988, 10989);\n        this.mirroringShapeCharacters.setValue(10989, 10988);\n        this.mirroringShapeCharacters.setValue(10999, 11000);\n        this.mirroringShapeCharacters.setValue(11000, 10999);\n        this.mirroringShapeCharacters.setValue(11001, 11002);\n        this.mirroringShapeCharacters.setValue(11002, 11001);\n        this.mirroringShapeCharacters.setValue(12296, 12297);\n        this.mirroringShapeCharacters.setValue(12297, 12296);\n        this.mirroringShapeCharacters.setValue(12298, 12299);\n        this.mirroringShapeCharacters.setValue(12299, 12298);\n        this.mirroringShapeCharacters.setValue(12300, 12301);\n        this.mirroringShapeCharacters.setValue(12301, 12300);\n        this.mirroringShapeCharacters.setValue(12302, 12303);\n        this.mirroringShapeCharacters.setValue(12303, 12302);\n        this.mirroringShapeCharacters.setValue(12304, 12305);\n        this.mirroringShapeCharacters.setValue(12305, 12304);\n        this.mirroringShapeCharacters.setValue(12308, 12309);\n        this.mirroringShapeCharacters.setValue(12309, 12308);\n        this.mirroringShapeCharacters.setValue(12310, 12311);\n        this.mirroringShapeCharacters.setValue(12311, 12310);\n        this.mirroringShapeCharacters.setValue(12312, 12313);\n        this.mirroringShapeCharacters.setValue(12313, 12312);\n        this.mirroringShapeCharacters.setValue(12314, 12315);\n        this.mirroringShapeCharacters.setValue(12315, 12314);\n        this.mirroringShapeCharacters.setValue(65288, 65289);\n        this.mirroringShapeCharacters.setValue(65289, 65288);\n        this.mirroringShapeCharacters.setValue(65308, 65310);\n        this.mirroringShapeCharacters.setValue(65310, 65308);\n        this.mirroringShapeCharacters.setValue(65339, 65341);\n        this.mirroringShapeCharacters.setValue(65341, 65339);\n        this.mirroringShapeCharacters.setValue(65371, 65373);\n        this.mirroringShapeCharacters.setValue(65373, 65371);\n        this.mirroringShapeCharacters.setValue(65375, 65376);\n        this.mirroringShapeCharacters.setValue(65376, 65375);\n        this.mirroringShapeCharacters.setValue(65378, 65379);\n        this.mirroringShapeCharacters.setValue(65379, 65378);\n    };\n    return Bidi;\n}());\nexport { Bidi };\nvar RtlCharacters = /** @class */ (function () {\n    //#endregion\n    //#region constructors\n    function RtlCharacters() {\n        //#region fields\n        /// <summary>\n        /// Specifies the character types.\n        /// </summary>\n        this.types = [];\n        /// <summary>\n        /// Specifies the text order (RTL or LTR).\n        /// </summary>\n        this.textOrder = -1;\n        /// <summary>\n        /// Specifies the RTL character types.\n        /// </summary>\n        /* tslint:disable-next-line:prefer-array-literal */\n        this.rtlCharacterTypes = new Array(65536);\n        //#endregion\n        //#region constants\n        /// <summary>\n        /// Left-to-Right (Non-European or non-Arabic digits).\n        /// </summary>\n        this.L = 0;\n        /// <summary>\n        /// Left-to-Right Embedding\n        /// </summary>\n        this.LRE = 1;\n        /// <summary>\n        /// Left-to-Right Override\n        /// </summary>\n        this.LRO = 2;\n        /// <summary>\n        /// Right-to-Left (Hebrew alphabet, and related punctuation).\n        /// </summary>\n        this.R = 3;\n        /// <summary>\n        /// Right-to-Left Arabic \n        /// </summary>\n        this.AL = 4;\n        /// <summary>\n        /// Right-to-Left Embedding.\n        /// </summary>\n        this.RLE = 5;\n        /// <summary>\n        /// Right-to-Left Override\n        /// </summary>\n        this.RLO = 6;\n        /// <summary>\n        /// Pop Directional Format\n        /// </summary>\n        this.PDF = 7;\n        /// <summary>\n        /// European Number (European digits, Eastern Arabic-Indic digits).\n        /// </summary>\n        this.EN = 8;\n        /// <summary>\n        /// European Number Separator (Plus sign, Minus sign).\n        /// </summary>\n        this.ES = 9;\n        /// <summary>\n        /// European Number Terminator (Degree sign, currency symbols).\n        /// </summary>\n        this.ET = 10;\n        /// <summary>\n        /// Arabic Number (Arabic-Indic digits, Arabic decimal and thousands separators).\n        /// </summary>\n        this.AN = 11;\n        /// <summary>\n        /// Common Number Separator (Colon, Comma, Full Stop, No-Break Space.\n        /// </summary>\n        this.CS = 12;\n        /// <summary>\n        /// Nonspacing Mark (Characters with the General_Category values).\n        /// </summary>\n        this.NSM = 13;\n        /// <summary>\n        /// Boundary Neutral (Default ignorables, non-characters, and control characters, other than those explicitly given other types.)\n        /// </summary>\n        this.BN = 14;\n        /// <summary>\n        /// Paragraph Separator (Paragraph separator, appropriate Newline Functions, higher-level protocol paragraph determination).\n        /// </summary>\n        this.B = 15;\n        /// <summary>\n        /// \tSegment Separator (tab).\n        /// </summary>\n        this.S = 16;\n        /// <summary>\n        /// Whitespace (Space, Figure space, Line separator, Form feed, General Punctuation spaces).\n        /// </summary>\n        this.WS = 17;\n        /// <summary>\n        /// Other Neutrals (All other characters, including object replacement character).\n        /// </summary>\n        this.ON = 18;\n        /// <summary>\n        /// RTL character types.\n        /// </summary>\n        this.charTypes = [\n            this.L, this.EN, this.BN, this.ES, this.ES, this.S, this.ET, this.ET, this.B, this.AN, this.AN, this.S, this.CS, this.CS,\n            this.WS, this.NSM, this.NSM, this.B, this.BN, 27, this.BN, 28, 30, this.B, 31, 31, this.S, 32, 32, this.WS, 33, 34,\n            this.ON, 35, 37, this.ET, 38, 42, this.ON, 43, 43, this.ET, 44, 44, this.CS, 45, 45, this.ET, 46, 46, this.CS,\n            47, 47, this.CS, 48, 57, this.EN, 58, 58, this.CS, 59, 64, this.ON, 65, 90, this.L, 91, 96, this.ON, 97, 122, this.L,\n            123, 126, this.ON, 127, 132, this.BN, 133, 133, this.B, 134, 159, this.BN, 160, 160, this.CS,\n            161, 161, this.ON, 162, 165, this.ET, 166, 169, this.ON, 170, 170, this.L, 171, 175, this.ON,\n            176, 177, this.ET, 178, 179, this.EN, 180, 180, this.ON, 181, 181, this.L, 182, 184, this.ON,\n            185, 185, this.EN, 186, 186, this.L, 187, 191, this.ON, 192, 214, this.L, 215, 215, this.ON,\n            216, 246, this.L, 247, 247, this.ON, 248, 696, this.L, 697, 698, this.ON, 699, 705, this.L,\n            706, 719, this.ON, 720, 721, this.L, 722, 735, this.ON, 736, 740, this.L, 741, 749, this.ON,\n            750, 750, this.L, 751, 767, this.ON, 768, 855, this.NSM, 856, 860, this.L, 861, 879, this.NSM,\n            880, 883, this.L, 884, 885, this.ON, 886, 893, this.L, 894, 894, this.ON, 895, 899, this.L,\n            900, 901, this.ON, 902, 902, this.L, 903, 903, this.ON, 904, 1013, this.L, 1014, 1014, this.ON,\n            1015, 1154, this.L, 1155, 1158, this.NSM, 1159, 1159, this.L, 1160, 1161, this.NSM,\n            1162, 1417, this.L, 1418, 1418, this.ON, 1419, 1424, this.L, 1425, 1441, this.NSM,\n            1442, 1442, this.L, 1443, 1465, this.NSM, 1466, 1466, this.L, 1467, 1469, this.NSM,\n            1470, 1470, this.R, 1471, 1471, this.NSM, 1472, 1472, this.R, 1473, 1474, this.NSM,\n            1475, 1475, this.R, 1476, 1476, this.NSM, 1477, 1487, this.L, 1488, 1514, this.R,\n            1515, 1519, this.L, 1520, 1524, this.R, 1525, 1535, this.L, 1536, 1539, this.AL,\n            1540, 1547, this.L, 1548, 1548, this.CS, 1549, 1549, this.AL, 1550, 1551, this.ON,\n            1552, 1557, this.NSM, 1558, 1562, this.L, 1563, 1563, this.AL, 1564, 1566, this.L,\n            1567, 1567, this.AL, 1568, 1568, this.L, 1569, 1594, this.AL, 1595, 1599, this.L,\n            1600, 1610, this.AL, 1611, 1624, this.NSM, 1625, 1631, this.L, 1632, 1641, this.AN,\n            1642, 1642, this.ET, 1643, 1644, this.AN, 1645, 1647, this.AL, 1648, 1648, this.NSM,\n            1649, 1749, this.AL, 1750, 1756, this.NSM, 1757, 1757, this.AL, 1758, 1764, this.NSM,\n            1765, 1766, this.AL, 1767, 1768, this.NSM, 1769, 1769, this.ON, 1770, 1773, this.NSM,\n            1774, 1775, this.AL, 1776, 1785, this.EN, 1786, 1805, this.AL, 1806, 1806, this.L,\n            1807, 1807, this.BN, 1808, 1808, this.AL, 1809, 1809, this.NSM, 1810, 1839, this.AL,\n            1840, 1866, this.NSM, 1867, 1868, this.L, 1869, 1871, this.AL, 1872, 1919, this.L,\n            1920, 1957, this.AL, 1958, 1968, this.NSM, 1969, 1969, this.AL, 1970, 2304, this.L,\n            2305, 2306, this.NSM, 2307, 2363, this.L, 2364, 2364, this.NSM, 2365, 2368, this.L,\n            2369, 2376, this.NSM, 2377, 2380, this.L, 2381, 2381, this.NSM, 2382, 2384, this.L,\n            2385, 2388, this.NSM, 2389, 2401, this.L, 2402, 2403, this.NSM, 2404, 2432, this.L,\n            2433, 2433, this.NSM, 2434, 2491, this.L, 2492, 2492, this.NSM, 2493, 2496, this.L,\n            2497, 2500, this.NSM, 2501, 2508, this.L, 2509, 2509, this.NSM, 2510, 2529, this.L,\n            2530, 2531, this.NSM, 2532, 2545, this.L, 2546, 2547, this.ET, 2548, 2560, this.L,\n            2561, 2562, this.NSM, 2563, 2619, this.L, 2620, 2620, this.NSM, 2621, 2624, this.L,\n            2625, 2626, this.NSM, 2627, 2630, this.L, 2631, 2632, this.NSM, 2633, 2634, this.L,\n            2635, 2637, this.NSM, 2638, 2671, this.L, 2672, 2673, this.NSM, 2674, 2688, this.L,\n            2689, 2690, this.NSM, 2691, 2747, this.L, 2748, 2748, this.NSM, 2749, 2752, this.L,\n            2753, 2757, this.NSM, 2758, 2758, this.L, 2759, 2760, this.NSM, 2761, 2764, this.L,\n            2765, 2765, this.NSM, 2766, 2785, this.L, 2786, 2787, this.NSM, 2788, 2800, this.L,\n            2801, 2801, this.ET, 2802, 2816, this.L, 2817, 2817, this.NSM, 2818, 2875, this.L,\n            2876, 2876, this.NSM, 2877, 2878, this.L, 2879, 2879, this.NSM, 2880, 2880, this.L,\n            2881, 2883, this.NSM, 2884, 2892, this.L, 2893, 2893, this.NSM, 2894, 2901, this.L,\n            2902, 2902, this.NSM, 2903, 2945, this.L, 2946, 2946, this.NSM, 2947, 3007, this.L,\n            3008, 3008, this.NSM, 3009, 3020, this.L, 3021, 3021, this.NSM, 3022, 3058, this.L,\n            3059, 3064, this.ON, 3065, 3065, this.ET, 3066, 3066, this.ON, 3067, 3133, this.L,\n            3134, 3136, this.NSM, 3137, 3141, this.L, 3142, 3144, this.NSM, 3145, 3145, this.L,\n            3146, 3149, this.NSM, 3150, 3156, this.L, 3157, 3158, this.NSM, 3159, 3259, this.L,\n            3260, 3260, this.NSM, 3261, 3275, this.L, 3276, 3277, this.NSM, 3278, 3392, this.L,\n            3393, 3395, this.NSM, 3396, 3404, this.L, 3405, 3405, this.NSM, 3406, 3529, this.L,\n            3530, 3530, this.NSM, 3531, 3537, this.L, 3538, 3540, this.NSM, 3541, 3541, this.L,\n            3542, 3542, this.NSM, 3543, 3632, this.L, 3633, 3633, this.NSM, 3634, 3635, this.L,\n            3636, 3642, this.NSM, 3643, 3646, this.L, 3647, 3647, this.ET, 3648, 3654, this.L,\n            3655, 3662, this.NSM, 3663, 3760, this.L, 3761, 3761, this.NSM, 3762, 3763, this.L,\n            3764, 3769, this.NSM, 3770, 3770, this.L, 3771, 3772, this.NSM, 3773, 3783, this.L,\n            3784, 3789, this.NSM, 3790, 3863, this.L, 3864, 3865, this.NSM, 3866, 3892, this.L,\n            3893, 3893, this.NSM, 3894, 3894, this.L, 3895, 3895, this.NSM, 3896, 3896, this.L,\n            3897, 3897, this.NSM, 3898, 3901, this.ON, 3902, 3952, this.L, 3953, 3966, this.NSM,\n            3967, 3967, this.L, 3968, 3972, this.NSM, 3973, 3973, this.L, 3974, 3975, this.NSM,\n            3976, 3983, this.L, 3984, 3991, this.NSM, 3992, 3992, this.L, 3993, 4028, this.NSM,\n            4029, 4037, this.L, 4038, 4038, this.NSM, 4039, 4140, this.L, 4141, 4144, this.NSM,\n            4145, 4145, this.L, 4146, 4146, this.NSM, 4147, 4149, this.L, 4150, 4151, this.NSM,\n            4152, 4152, this.L, 4153, 4153, this.NSM, 4154, 4183, this.L, 4184, 4185, this.NSM,\n            4186, 5759, this.L, 5760, 5760, this.WS, 5761, 5786, this.L, 5787, 5788, this.ON,\n            5789, 5905, this.L, 5906, 5908, this.NSM, 5909, 5937, this.L, 5938, 5940, this.NSM,\n            5941, 5969, this.L, 5970, 5971, this.NSM, 5972, 6001, this.L, 6002, 6003, this.NSM,\n            6004, 6070, this.L, 6071, 6077, this.NSM, 6078, 6085, this.L, 6086, 6086, this.NSM,\n            6087, 6088, this.L, 6089, 6099, this.NSM, 6100, 6106, this.L, 6107, 6107, this.ET,\n            6108, 6108, this.L, 6109, 6109, this.NSM, 6110, 6127, this.L, 6128, 6137, this.ON,\n            6138, 6143, this.L, 6144, 6154, this.ON, 6155, 6157, this.NSM, 6158, 6158, this.WS,\n            6159, 6312, this.L, 6313, 6313, this.NSM, 6314, 6431, this.L, 6432, 6434, this.NSM,\n            6435, 6438, this.L, 6439, 6443, this.NSM, 6444, 6449, this.L, 6450, 6450, this.NSM,\n            6451, 6456, this.L, 6457, 6459, this.NSM, 6460, 6463, this.L, 6464, 6464, this.ON,\n            6465, 6467, this.L, 6468, 6469, this.ON, 6470, 6623, this.L, 6624, 6655, this.ON,\n            6656, 8124, this.L, 8125, 8125, this.ON, 8126, 8126, this.L, 8127, 8129, this.ON,\n            8130, 8140, this.L, 8141, 8143, this.ON, 8144, 8156, this.L, 8157, 8159, this.ON,\n            8160, 8172, this.L, 8173, 8175, this.ON, 8176, 8188, this.L, 8189, 8190, this.ON,\n            8191, 8191, this.L, 8192, 8202, this.WS, 8203, 8205, this.BN, 8206, 8206, this.L,\n            8207, 8207, this.R, 8208, 8231, this.ON, 8232, 8232, this.WS, 8233, 8233, this.B,\n            8234, 8234, this.LRE, 8235, 8235, this.RLE, 8236, 8236, this.PDF, 8237, 8237, this.LRO,\n            8238, 8238, this.RLO, 8239, 8239, this.WS, 8240, 8244, this.ET, 8245, 8276, this.ON,\n            8277, 8278, this.L, 8279, 8279, this.ON, 8280, 8286, this.L, 8287, 8287, this.WS,\n            8288, 8291, this.BN, 8292, 8297, this.L, 8298, 8303, this.BN, 8304, 8304, this.EN,\n            8305, 8307, this.L, 8308, 8313, this.EN, 8314, 8315, this.ET, 8316, 8318, this.ON,\n            8319, 8319, this.L, 8320, 8329, this.EN, 8330, 8331, this.ET, 8332, 8334, this.ON,\n            8335, 8351, this.L, 8352, 8369, this.ET, 8370, 8399, this.L, 8400, 8426, this.NSM,\n            8427, 8447, this.L, 8448, 8449, this.ON, 8450, 8450, this.L, 8451, 8454, this.ON,\n            8455, 8455, this.L, 8456, 8457, this.ON, 8458, 8467, this.L, 8468, 8468, this.ON,\n            8469, 8469, this.L, 8470, 8472, this.ON, 8473, 8477, this.L, 8478, 8483, this.ON,\n            8484, 8484, this.L, 8485, 8485, this.ON, 8486, 8486, this.L, 8487, 8487, this.ON,\n            8488, 8488, this.L, 8489, 8489, this.ON, 8490, 8493, this.L, 8494, 8494, this.ET,\n            8495, 8497, this.L, 8498, 8498, this.ON, 8499, 8505, this.L, 8506, 8507, this.ON,\n            8508, 8511, this.L, 8512, 8516, this.ON, 8517, 8521, this.L, 8522, 8523, this.ON,\n            8524, 8530, this.L, 8531, 8543, this.ON, 8544, 8591, this.L, 8592, 8721, this.ON,\n            8722, 8723, this.ET, 8724, 9013, this.ON, 9014, 9082, this.L, 9083, 9108, this.ON,\n            9109, 9109, this.L, 9110, 9168, this.ON, 9169, 9215, this.L, 9216, 9254, this.ON,\n            9255, 9279, this.L, 9280, 9290, this.ON, 9291, 9311, this.L, 9312, 9371, this.EN,\n            9372, 9449, this.L, 9450, 9450, this.EN, 9451, 9751, this.ON, 9752, 9752, this.L,\n            9753, 9853, this.ON, 9854, 9855, this.L, 9856, 9873, this.ON, 9874, 9887, this.L,\n            9888, 9889, this.ON, 9890, 9984, this.L, 9985, 9988, this.ON, 9989, 9989, this.L,\n            9990, 9993, this.ON, 9994, 9995, this.L, 9996, 10023, this.ON, 10024, 10024, this.L,\n            10025, 10059, this.ON, 10060, 10060, this.L, 10061, 10061, this.ON, 10062, 10062, this.L,\n            10063, 10066, this.ON, 10067, 10069, this.L, 10070, 10070, this.ON, 10071, 10071, this.L,\n            10072, 10078, this.ON, 10079, 10080, this.L, 10081, 10132, this.ON, 10133, 10135, this.L,\n            10136, 10159, this.ON, 10160, 10160, this.L, 10161, 10174, this.ON, 10175, 10191, this.L,\n            10192, 10219, this.ON, 10220, 10223, this.L, 10224, 11021, this.ON, 11022, 11903, this.L,\n            11904, 11929, this.ON, 11930, 11930, this.L, 11931, 12019, this.ON, 12020, 12031, this.L,\n            12032, 12245, this.ON, 12246, 12271, this.L, 12272, 12283, this.ON, 12284, 12287, this.L,\n            12288, 12288, this.WS, 12289, 12292, this.ON, 12293, 12295, this.L, 12296, 12320, this.ON,\n            12321, 12329, this.L, 12330, 12335, this.NSM, 12336, 12336, this.ON, 12337, 12341, this.L,\n            12342, 12343, this.ON, 12344, 12348, this.L, 12349, 12351, this.ON, 12352, 12440, this.L,\n            12441, 12442, this.NSM, 12443, 12444, this.ON, 12445, 12447, this.L, 12448, 12448, this.ON,\n            12449, 12538, this.L, 12539, 12539, this.ON, 12540, 12828, this.L, 12829, 12830, this.ON,\n            12831, 12879, this.L, 12880, 12895, this.ON, 12896, 12923, this.L, 12924, 12925, this.ON,\n            12926, 12976, this.L, 12977, 12991, this.ON, 12992, 13003, this.L, 13004, 13007, this.ON,\n            13008, 13174, this.L, 13175, 13178, this.ON, 13179, 13277, this.L, 13278, 13279, this.ON,\n            13280, 13310, this.L, 13311, 13311, this.ON, 13312, 19903, this.L, 19904, 19967, this.ON,\n            19968, 42127, this.L, 42128, 42182, this.ON, 42183, 64284, this.L, 64285, 64285, this.R,\n            64286, 64286, this.NSM, 64287, 64296, this.R, 64297, 64297, this.ET, 64298, 64310, this.R,\n            64311, 64311, this.L, 64312, 64316, this.R, 64317, 64317, this.L, 64318, 64318, this.R,\n            64319, 64319, this.L, 64320, 64321, this.R, 64322, 64322, this.L, 64323, 64324, this.R,\n            64325, 64325, this.L, 64326, 64335, this.R, 64336, 64433, this.AL, 64434, 64466, this.L,\n            64467, 64829, this.AL, 64830, 64831, this.ON, 64832, 64847, this.L, 64848, 64911, this.AL,\n            64912, 64913, this.L, 64914, 64967, this.AL, 64968, 65007, this.L, 65008, 65020, this.AL,\n            65021, 65021, this.ON, 65022, 65023, this.L, 65024, 65039, this.NSM, 65040, 65055, this.L,\n            65056, 65059, this.NSM, 65060, 65071, this.L, 65072, 65103, this.ON, 65104, 65104, this.CS,\n            65105, 65105, this.ON, 65106, 65106, this.CS, 65107, 65107, this.L, 65108, 65108, this.ON,\n            65109, 65109, this.CS, 65110, 65118, this.ON, 65119, 65119, this.ET, 65120, 65121, this.ON,\n            65122, 65123, this.ET, 65124, 65126, this.ON, 65127, 65127, this.L, 65128, 65128, this.ON,\n            65129, 65130, this.ET, 65131, 65131, this.ON, 65132, 65135, this.L, 65136, 65140, this.AL,\n            65141, 65141, this.L, 65142, 65276, this.AL, 65277, 65278, this.L, 65279, 65279, this.BN,\n            65280, 65280, this.L, 65281, 65282, this.ON, 65283, 65285, this.ET, 65286, 65290, this.ON,\n            65291, 65291, this.ET, 65292, 65292, this.CS, 65293, 65293, this.ET, 65294, 65294, this.CS,\n            65295, 65295, this.ES, 65296, 65305, this.EN, 65306, 65306, this.CS, 65307, 65312, this.ON,\n            65313, 65338, this.L, 65339, 65344, this.ON, 65345, 65370, this.L, 65371, 65381, this.ON,\n            65382, 65503, this.L, 65504, 65505, this.ET, 65506, 65508, this.ON, 65509, 65510, this.ET,\n            65511, 65511, this.L, 65512, 65518, this.ON, 65519, 65528, this.L, 65529, 65531, this.BN,\n            65532, 65533, this.ON, 65534, 65535, this.L\n        ];\n        for (var i = 0; i < this.charTypes.length; ++i) {\n            var start = this.charTypes[i];\n            var end = this.charTypes[++i];\n            var b = this.charTypes[++i];\n            while (start <= end) {\n                this.rtlCharacterTypes[start++] = b;\n            }\n        }\n    }\n    //#endregion\n    //#region implementation\n    RtlCharacters.prototype.getVisualOrder = function (inputText, isRtl) {\n        this.types = this.getCharacterCode(inputText);\n        this.textOrder = isRtl ? this.LRE : this.L;\n        this.doVisualOrder();\n        var result = [];\n        for (var i = 0; i < this.levels.length; i++) {\n            result[i] = this.levels[i];\n        }\n        return result;\n    };\n    RtlCharacters.prototype.getCharacterCode = function (text) {\n        var characterCodes = [];\n        for (var i = 0; i < text.length; i++) {\n            characterCodes[i] = this.rtlCharacterTypes[text[i].charCodeAt(0)];\n        }\n        return characterCodes;\n    };\n    RtlCharacters.prototype.setDefaultLevels = function () {\n        for (var i = 0; i < this.length; i++) {\n            this.levels[i] = this.textOrder;\n        }\n    };\n    RtlCharacters.prototype.setLevels = function () {\n        this.setDefaultLevels();\n        for (var n = 0; n < this.length; ++n) {\n            var level = this.levels[n];\n            if ((level & 0x80) !== 0) {\n                level &= 0x7f;\n                this.result[n] = ((level & 0x1) === 0) ? this.L : this.R;\n            }\n            this.levels[n] = level;\n        }\n    };\n    RtlCharacters.prototype.updateLevels = function (index, level, length) {\n        if ((level & 1) === 0) {\n            for (var i = index; i < length; ++i) {\n                if (this.result[i] === this.R) {\n                    this.levels[i] += 1;\n                }\n                else if (this.result[i] !== this.L) {\n                    this.levels[i] += 2;\n                }\n            }\n        }\n        else {\n            for (var i = index; i < length; ++i) {\n                if (this.result[i] !== this.R) {\n                    this.levels[i] += 1;\n                }\n            }\n        }\n    };\n    RtlCharacters.prototype.doVisualOrder = function () {\n        this.length = this.types.length;\n        this.result = this.types;\n        this.levels = [];\n        this.setLevels();\n        this.length = this.getEmbeddedCharactersLength();\n        var preview = this.textOrder;\n        var i = 0;\n        while (i < this.length) {\n            var level = this.levels[i];\n            var preType = ((Math.max(preview, level) & 0x1) === 0) ? this.L : this.R;\n            var length_1 = i + 1;\n            while (length_1 < this.length && this.levels[length_1] === level) {\n                ++length_1;\n            }\n            var success = length_1 < this.length ? this.levels[length_1] : this.textOrder;\n            var type = ((Math.max(success, level) & 0x1) === 0) ? this.L : this.R;\n            this.checkNSM(i, length_1, level, preType, type);\n            this.updateLevels(i, level, length_1);\n            preview = level;\n            i = length_1;\n        }\n        this.checkEmbeddedCharacters(this.length);\n    };\n    RtlCharacters.prototype.getEmbeddedCharactersLength = function () {\n        var index = 0;\n        for (var i = 0; i < this.length; ++i) {\n            if (!(this.types[i] === this.LRE || this.types[i] === this.RLE || this.types[i] === this.LRO ||\n                this.types[i] === this.RLO || this.types[i] === this.PDF || this.types[i] === this.BN)) {\n                this.result[index] = this.result[i];\n                this.levels[index] = this.levels[i];\n                index++;\n            }\n        }\n        return index;\n    };\n    RtlCharacters.prototype.checkEmbeddedCharacters = function (length) {\n        for (var i = this.types.length - 1; i >= 0; --i) {\n            if (this.types[i] === this.LRE || this.types[i] === this.RLE || this.types[i] === this.LRO ||\n                this.types[i] === this.RLO || this.types[i] === this.PDF || this.types[i] === this.BN) {\n                this.result[i] = this.types[i];\n                this.levels[i] = -1;\n            }\n            else {\n                length -= 1;\n                this.result[i] = this.result[length];\n                this.levels[i] = this.levels[length];\n            }\n        }\n        for (var i = 0; i < this.types.length; i++) {\n            if (this.levels[i] === -1) {\n                if (i === 0) {\n                    this.levels[i] = this.textOrder;\n                }\n                else {\n                    this.levels[i] = this.levels[i - 1];\n                }\n            }\n        }\n    };\n    RtlCharacters.prototype.checkNSM = function (index, length, level, startType, endType) {\n        var charType = startType;\n        for (var i = index; i < length; ++i) {\n            if (this.result[i] === this.NSM) {\n                this.result[i] = charType;\n            }\n            else {\n                charType = this.result[i];\n            }\n        }\n        this.checkEuropeanDigits(index, length, level, startType, endType);\n    };\n    RtlCharacters.prototype.checkEuropeanDigits = function (index, length, level, startType, endType) {\n        for (var i = index; i < length; ++i) {\n            if (this.result[i] === this.EN) {\n                for (var j = i - 1; j >= index; --j) {\n                    if (this.result[j] === this.L || this.result[j] === this.R || this.result[j] === this.AL) {\n                        if (this.result[j] === this.AL) {\n                            this.result[i] = this.AN;\n                        }\n                        break;\n                    }\n                }\n            }\n        }\n        this.checkArabicCharacters(index, length, level, startType, endType);\n    };\n    RtlCharacters.prototype.checkArabicCharacters = function (index, length, level, startType, endType) {\n        for (var i = index; i < length; ++i) {\n            if (this.result[i] === this.AL) {\n                this.result[i] = this.R;\n            }\n        }\n        this.checkEuropeanNumberSeparator(index, length, level, startType, endType);\n    };\n    RtlCharacters.prototype.checkEuropeanNumberSeparator = function (index, length, level, startType, endType) {\n        for (var i = index + 1; i < length - 1; ++i) {\n            if (this.result[i] === this.ES || this.result[i] === this.CS) {\n                var preview = this.result[i - 1];\n                var success = this.result[i + 1];\n                if (preview === this.EN && success === this.EN) {\n                    this.result[i] = this.EN;\n                }\n                else if (this.result[i] === this.CS && preview === this.AN && success === this.AN) {\n                    this.result[i] = this.AN;\n                }\n            }\n        }\n        this.checkEuropeanNumberTerminator(index, length, level, startType, endType);\n    };\n    RtlCharacters.prototype.checkEuropeanNumberTerminator = function (index, length, level, startType, endType) {\n        for (var i = index; i < length; ++i) {\n            if (this.result[i] === this.ET) {\n                var s = i;\n                var b = [];\n                b.push(this.ET);\n                var l = this.getLength(s, length, b);\n                var data = s === index ? startType : this.result[s - 1];\n                if (data !== this.EN) {\n                    data = (l === length) ? endType : this.result[l];\n                }\n                if (data === this.EN) {\n                    for (var j = s; j < l; ++j) {\n                        this.result[j] = this.EN;\n                    }\n                }\n                i = l;\n            }\n        }\n        this.checkOtherNeutrals(index, length, level, startType, endType);\n    };\n    RtlCharacters.prototype.checkOtherNeutrals = function (index, length, level, startType, endType) {\n        for (var i = index; i < length; ++i) {\n            if (this.result[i] === this.ES || this.result[i] === this.ET || this.result[i] === this.CS) {\n                this.result[i] = this.ON;\n            }\n        }\n        this.checkOtherCharacters(index, length, level, startType, endType);\n    };\n    RtlCharacters.prototype.checkOtherCharacters = function (index, length, level, startType, endType) {\n        for (var i = index; i < length; ++i) {\n            if (this.result[i] === this.EN) {\n                var pst = startType;\n                for (var j = i - 1; j >= index; --j) {\n                    if (this.result[j] === this.L || this.result[j] === this.R) {\n                        pst = this.result[j];\n                        break;\n                    }\n                }\n                if (pst === this.L) {\n                    this.result[i] = this.L;\n                }\n            }\n        }\n        this.checkCommanCharacters(index, length, level, startType, endType);\n    };\n    RtlCharacters.prototype.getLength = function (index, length, validSet) {\n        --index;\n        while (++index < length) {\n            var t = this.result[index];\n            for (var i = 0; i < validSet.length; ++i) {\n                if (t === validSet[i]) {\n                    index = this.getLength(++index, length, validSet);\n                }\n            }\n            return index;\n        }\n        return length;\n    };\n    RtlCharacters.prototype.checkCommanCharacters = function (index, length, level, startType, endType) {\n        for (var i = index; i < length; ++i) {\n            if (this.result[i] === this.WS || this.result[i] === this.ON || this.result[i] === this.B ||\n                this.result[i] === this.S) {\n                var s = i;\n                var byte = [this.B, this.S, this.WS, this.ON];\n                var l = this.getLength(s, length, byte);\n                var lt = 0;\n                var tt = 0;\n                var rt = 0;\n                if (s === index) {\n                    lt = startType;\n                }\n                else {\n                    lt = this.result[s - 1];\n                    if (lt === this.AN) {\n                        lt = this.R;\n                    }\n                    else if (lt === this.EN) {\n                        lt = this.R;\n                    }\n                }\n                if (l === length) {\n                    tt = endType;\n                }\n                else {\n                    tt = this.result[l];\n                    if (tt === this.AN) {\n                        tt = this.R;\n                    }\n                    else if (tt === this.EN) {\n                        tt = this.R;\n                    }\n                }\n                if (lt === tt) {\n                    rt = lt;\n                }\n                else {\n                    rt = ((level & 0x1) === 0) ? this.L : this.R;\n                }\n                for (var j = s; j < l; ++j) {\n                    this.result[j] = rt;\n                }\n                i = l;\n            }\n        }\n    };\n    return RtlCharacters;\n}());\nexport { RtlCharacters };\n","import { PdfString } from './../../primitives/pdf-string';\nimport { ArabicShapeRenderer } from './rtl/rtl-text-shape';\nimport { PdfTextDirection } from './../enum';\nimport { Bidi } from './rtl/rtl-bidirectional';\n/**\n * `Metrics` of the font.\n * @private\n */\nvar RtlRenderer = /** @class */ (function () {\n    function RtlRenderer() {\n        //region Constants\n        /// Open bracket symbol.\n        /// </summary>\n        this.openBracket = '(';\n        /// <summary>\n        /// Close bracket symbol.\n        /// </summary>\n        this.closeBracket = ')';\n        //#endregion\n    }\n    //#region Constructors\n    /// <summary>\n    /// Initializes a new instance of the <see cref=\"RtlRenderer\"/> class.\n    /// </summary>\n    // public constructor() {\n    // }\n    //#region Public Methods\n    /// <summary>\n    /// Layouts text. Changes blocks position in the RTL text.\n    /// Ligates the text if needed.\n    /// </summary>\n    /// <param name=\"line\">Line of the text.</param>\n    /// <param name=\"font\">Font to be used for string printing.</param>\n    /// <param name=\"rtl\">Font alignment.</param>\n    /// <param name=\"wordSpace\">Indicates whether Word Spacing used or not.</param>\n    /// <returns>Layout string.</returns>\n    RtlRenderer.prototype.layout = function (line, font, rtl, wordSpace, format) {\n        if (line == null) {\n            throw new Error('ArgumentNullException : line');\n        }\n        if (font == null) {\n            throw new Error('ArgumentNullException : font');\n        }\n        var result = [];\n        if (font.Unicode) {\n            result = this.customLayout(line, rtl, format, font, wordSpace);\n        }\n        else {\n            result = [];\n            result[0] = line;\n        }\n        return result;\n    };\n    /// <summary>\n    /// Layouts a string and splits it by the words and using correct lay outing.\n    /// </summary>\n    /// <param name=\"line\">Text line.</param>\n    /// <param name=\"font\">Font object.</param>\n    /// <param name=\"rtl\">Indicates whether RTL should be applied.</param>\n    /// <param name=\"wordSpace\">Indicates whether word spacing is used.</param>\n    /// <returns>Array of words if converted, null otherwise.</returns>\n    RtlRenderer.prototype.splitLayout = function (line, font, rtl, wordSpace, format) {\n        if (line == null) {\n            throw new Error('ArgumentNullException : line');\n        }\n        if (font == null) {\n            throw new Error('ArgumentNullException : font');\n        }\n        var words = [];\n        var system = false;\n        if (!system || words == null) {\n            words = this.customSplitLayout(line, font, rtl, wordSpace, format);\n        }\n        return words;\n    };\n    //#endregion\n    //#region Implementation\n    // private isEnglish( word : string) : boolean\n    // {\n    //     let c : string = (word.length > 0) ? word[0] : '';\n    //     return (c >= '0' && c < 'ÿ');\n    // }\n    // private keepOrder( words : string, startIndex : number, count: number, result : string[], resultIndex : number) : void\n    // {\n    //     for (let i : number = 0, ri = resultIndex - count + 1; i < count; ++i, ++ri) {\n    //         result[ri] = words[i + startIndex];\n    //     }\n    // }\n    /// <summary>\n    /// Uses system API to layout the text.\n    /// </summary>\n    /// <param name=\"line\">Line of the text to be layouted.</param>\n    /// <param name=\"font\">Font which is used for text printing.</param>\n    /// <param name=\"rtl\">Indicates whether we use RTL or RTL lay outing of the text container.</param>\n    /// <returns>Layout string.</returns>\n    /* tslint:disable-next-line:max-line-length */\n    RtlRenderer.prototype.getGlyphIndex = function (line, font, rtl, /*out*/ glyphs, custom) {\n        var success = true;\n        var fail = false;\n        if (line == null) {\n            throw new Error('ArgumentNullException : line');\n        }\n        if (font == null) {\n            throw new Error('ArgumentNullException : font');\n        }\n        glyphs = null;\n        if (line.length === 0) {\n            return { success: fail, glyphs: glyphs };\n        }\n        var renderer = new ArabicShapeRenderer();\n        var text = renderer.shape(line, 0);\n        var internalFont = font.fontInternal;\n        var ttfReader = internalFont.ttfReader;\n        glyphs = new Uint16Array(text.length);\n        var i = 0;\n        for (var k = 0, len = text.length; k < len; k++) {\n            var ch = text[k];\n            var glyphInfo = ttfReader.getGlyph(ch);\n            if (glyphInfo !== null && typeof glyphInfo !== 'undefined') {\n                glyphs[i++] = (glyphInfo).index;\n            }\n        }\n        return { success: success, glyphs: glyphs };\n    };\n    /* tslint:disable-next-line:max-line-length */\n    RtlRenderer.prototype.customLayout = function (line, rtl, format, font, wordSpace) {\n        if (wordSpace === null || typeof wordSpace === 'undefined') {\n            if (line == null) {\n                throw new Error('ArgumentNullException : line');\n            }\n            var result = null;\n            //bidirectional order.\n            if (format !== null && typeof format !== 'undefined' && format.textDirection !== PdfTextDirection.None) {\n                var bidi = new Bidi();\n                result = bidi.getLogicalToVisualString(line, rtl);\n            }\n            return result;\n        }\n        else {\n            if (line == null) {\n                throw new Error('ArgumentNullException : line');\n            }\n            if (font == null) {\n                throw new Error('ArgumentNullException : font');\n            }\n            var layouted = null;\n            if (format !== null && typeof format !== 'undefined' && format.textDirection !== PdfTextDirection.None) {\n                var renderer = new ArabicShapeRenderer();\n                var txt = renderer.shape(line, 0);\n                layouted = this.customLayout(txt, rtl, format);\n            }\n            // else {\n            //     layouted = this.customLayout(line, rtl, format);\n            // }\n            // We have unicode font, but from the file.        \n            var result = [];\n            // Split the text by words if word spacing is not default.\n            if (wordSpace) {\n                var words = layouted.split('');\n                var count = words.length;\n                for (var i = 0; i < count; i++) {\n                    words[i] = this.addChars(font, words[i]);\n                }\n                result = words;\n            }\n            else {\n                result = [];\n                result[0] = this.addChars(font, layouted);\n            }\n            return result;\n        }\n    };\n    /// <summary>\n    /// Add information about used glyphs to the font.\n    /// </summary>\n    /// <param name=\"font\">Font used for text rendering.</param>\n    /// <param name=\"glyphs\">Array of used glyphs.</param>\n    /// <returns>String in the form to be written to the file.</returns>\n    RtlRenderer.prototype.addChars = function (font, glyphs) {\n        var line = glyphs;\n        if (font == null) {\n            throw new Error('ArgumentNullException : font');\n        }\n        if (line == null) {\n            throw new Error('ArgumentNullException : line');\n        }\n        var text = line;\n        var internalFont = font.fontInternal;\n        var ttfReader = internalFont.ttfReader;\n        font.setSymbols(text);\n        // Reconvert string according to unicode standard.\n        text = ttfReader.convertString(text);\n        var bytes = PdfString.toUnicodeArray(text, false);\n        text = PdfString.byteToString(bytes);\n        return text;\n        // else {\n        //     if (font == null) {\n        //         throw new Error('ArgumentNullException : font');\n        //     }\n        //     if (glyphs == null) {\n        //         throw new Error('ArgumentNullException : glyphs');\n        //     }\n        //     // Mark the chars as used.\n        //     let text : string = '';\n        //     font.setSymbols(glyphs);\n        //     // Create string from the glyphs.\n        //     \n        //     let chars : string[] = [];\n        //     for (let i : number = 0; i < glyphs.length; i++) {\n        //         chars[i] = glyphs[i].toString();\n        //     }\n        //     for (let j : number = 0 ; j < chars.length; j++) {\n        //         text = text + chars[j];\n        //     }\n        //     let bytes : number[] = PdfString.toUnicodeArray(text, false);\n        //     text = PdfString.byteToString(bytes);\n        //     return text;\n        // }\n    };\n    /// <summary>\n    /// Layouts a string and splits it by the words by using custom lay outing.\n    /// </summary>\n    /// <param name=\"line\">Text line.</param>\n    /// <param name=\"font\">Font object.</param>\n    /// <param name=\"rtl\">Indicates whether RTL should be applied.</param>\n    /// <param name=\"wordSpace\">Indicates whether word spacing is used.</param>\n    /// <returns>Array of words if converted, null otherwise.</returns>\n    /* tslint:disable-next-line:max-line-length */\n    RtlRenderer.prototype.customSplitLayout = function (line, font, rtl, wordSpace, format) {\n        if (line == null) {\n            throw new Error('ArgumentNullException : line');\n        }\n        if (font == null) {\n            throw new Error('ArgumentNullException : font');\n        }\n        var reversedLine = this.customLayout(line, rtl, format);\n        var words = reversedLine.split('');\n        return words;\n    };\n    return RtlRenderer;\n}());\nexport { RtlRenderer };\n","/**\n * public Enum for `PdfLayoutType`.\n * @private\n */\nexport var PdfLayoutType;\n(function (PdfLayoutType) {\n    /**\n     * Specifies the type of `Paginate`.\n     * @private\n     */\n    PdfLayoutType[PdfLayoutType[\"Paginate\"] = 0] = \"Paginate\";\n    /**\n     * Specifies the type of `OnePage`.\n     * @private\n     */\n    PdfLayoutType[PdfLayoutType[\"OnePage\"] = 1] = \"OnePage\";\n})(PdfLayoutType || (PdfLayoutType = {}));\n/**\n * public Enum for `PdfLayoutBreakType`.\n * @private\n */\nexport var PdfLayoutBreakType;\n(function (PdfLayoutBreakType) {\n    /**\n     * Specifies the type of `FitPage`.\n     * @private\n     */\n    PdfLayoutBreakType[PdfLayoutBreakType[\"FitPage\"] = 0] = \"FitPage\";\n    /**\n     * Specifies the type of `FitElement`.\n     * @private\n     */\n    PdfLayoutBreakType[PdfLayoutBreakType[\"FitElement\"] = 1] = \"FitElement\";\n    /**\n     * Specifies the type of `FitColumnsToPage`.\n     * @private\n     */\n    PdfLayoutBreakType[PdfLayoutBreakType[\"FitColumnsToPage\"] = 2] = \"FitColumnsToPage\";\n})(PdfLayoutBreakType || (PdfLayoutBreakType = {}));\nexport var PathPointType;\n(function (PathPointType) {\n    /**\n     * Specifies the path point type of `Start`.\n     * @private\n     */\n    PathPointType[PathPointType[\"Start\"] = 0] = \"Start\";\n    /**\n     * Specifies the path point type of `Line`.\n     * @private\n     */\n    PathPointType[PathPointType[\"Line\"] = 1] = \"Line\";\n    /**\n     * Specifies the path point type of `Bezier3`.\n     * @private\n     */\n    PathPointType[PathPointType[\"Bezier3\"] = 3] = \"Bezier3\";\n    /**\n     * Specifies the path point type of `Bezier`.\n     * @private\n     */\n    PathPointType[PathPointType[\"Bezier\"] = 3] = \"Bezier\";\n    /**\n     * Specifies the path point type of `PathTypeMask`.\n     * @private\n     */\n    PathPointType[PathPointType[\"PathTypeMask\"] = 7] = \"PathTypeMask\";\n    /**\n     * Specifies the path point type of `DashMode`.\n     * @private\n     */\n    PathPointType[PathPointType[\"DashMode\"] = 16] = \"DashMode\";\n    /**\n     * Specifies the path point type of `PathMarker`.\n     * @private\n     */\n    PathPointType[PathPointType[\"PathMarker\"] = 32] = \"PathMarker\";\n    /**\n     * Specifies the path point type of `CloseSubpath`.\n     * @private\n     */\n    PathPointType[PathPointType[\"CloseSubpath\"] = 128] = \"CloseSubpath\";\n})(PathPointType || (PathPointType = {}));\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { PdfColorSpace } from './../enum';\nimport { PdfColor } from './../pdf-color';\nimport { PdfBrush } from './pdf-brush';\nimport { PdfDictionary } from '../../primitives/pdf-dictionary';\nimport { DictionaryProperties } from './../../input-output/pdf-dictionary-properties';\nimport { PdfBoolean } from './../../primitives/pdf-boolean';\nimport { PdfArray } from './../../primitives/pdf-array';\nimport { PdfName } from '../../primitives/pdf-name';\nimport { PdfNumber } from '../../primitives/pdf-number';\nimport { PdfReferenceHolder } from '../../primitives/pdf-reference';\n/**\n * `PdfGradientBrush` class provides objects used to fill the interiors of graphical shapes such as rectangles,\n * ellipses, pies, polygons, and paths.\n * @private\n */\nvar PdfGradientBrush = /** @class */ (function (_super) {\n    __extends(PdfGradientBrush, _super);\n    //Constructor\n    /**\n     * Initializes a new instance of the `PdfGradientBrush` class.\n     * @public\n     */\n    /* tslint:disable-next-line:max-line-length */\n    function PdfGradientBrush(shading) {\n        var _this = _super.call(this) || this;\n        // Fields\n        /**\n         * Local variable to store the background color.\n         * @private\n         */\n        _this.mbackground = new PdfColor(255, 255, 255);\n        /**\n         * Local variable to store the stroking color.\n         * @private\n         */\n        _this.mbStroking = false;\n        /**\n         * Local variable to store the function.\n         * @private\n         */\n        _this.mfunction = null;\n        /**\n         * Local variable to store the DictionaryProperties.\n         * @private\n         */\n        _this.dictionaryProperties = new DictionaryProperties();\n        _this.mpatternDictionary = new PdfDictionary();\n        _this.mpatternDictionary.items.setValue(_this.dictionaryProperties.type, new PdfName(_this.dictionaryProperties.pattern));\n        _this.mpatternDictionary.items.setValue(_this.dictionaryProperties.patternType, new PdfNumber(2));\n        _this.shading = shading;\n        _this.colorSpace = PdfColorSpace.Rgb;\n        return _this;\n    }\n    Object.defineProperty(PdfGradientBrush.prototype, \"background\", {\n        //Properties\n        /**\n         * Gets or sets the background color of the brush.\n         * @public\n         */\n        get: function () {\n            return this.mbackground;\n        },\n        set: function (value) {\n            this.mbackground = value;\n            var sh = this.shading;\n            if (value.isEmpty) {\n                sh.remove(this.dictionaryProperties.background);\n            }\n            else {\n                sh.items.setValue(this.dictionaryProperties.background, value.toArray(this.colorSpace));\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGradientBrush.prototype, \"antiAlias\", {\n        /**\n         * Gets or sets a value indicating whether use anti aliasing algorithm.\n         * @public\n         */\n        get: function () {\n            var sh = this.shading;\n            var aa = (sh.items.getValue(this.dictionaryProperties.antiAlias));\n            return aa.value;\n        },\n        set: function (value) {\n            var sh = this.shading;\n            var aa = (sh.items.getValue(this.dictionaryProperties.antiAlias));\n            if ((aa == null && typeof aa === 'undefined')) {\n                aa = new PdfBoolean(value);\n                sh.items.setValue(this.dictionaryProperties.antiAlias, aa);\n            }\n            else {\n                aa.value = value;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGradientBrush.prototype, \"function\", {\n        /**\n         * Gets or sets the function of the brush.\n         * @protected\n         */\n        get: function () {\n            return this.mfunction;\n        },\n        set: function (value) {\n            this.mfunction = value;\n            if (value != null && typeof value !== 'undefined') {\n                this.shading.items.setValue(this.dictionaryProperties.function, new PdfReferenceHolder(this.mfunction));\n            }\n            else {\n                this.shading.remove(this.dictionaryProperties.function);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGradientBrush.prototype, \"bBox\", {\n        /**\n         * Gets or sets the boundary box of the brush.\n         * @protected\n         */\n        get: function () {\n            var sh = this.shading;\n            var box = (sh.items.getValue(this.dictionaryProperties.bBox));\n            return box;\n        },\n        set: function (value) {\n            var sh = this.shading;\n            if (value == null && typeof value === 'undefined') {\n                sh.remove(this.dictionaryProperties.bBox);\n            }\n            else {\n                sh.items.setValue(this.dictionaryProperties.bBox, value);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGradientBrush.prototype, \"colorSpace\", {\n        /**\n         * Gets or sets the color space of the brush.\n         * @public\n         */\n        get: function () {\n            return this.mcolorSpace;\n        },\n        set: function (value) {\n            var colorSpace = this.shading.items.getValue(this.dictionaryProperties.colorSpace);\n            if ((value !== this.mcolorSpace) || (colorSpace == null)) {\n                this.mcolorSpace = value;\n                var csValue = this.colorSpaceToDeviceName(value);\n                this.shading.items.setValue(this.dictionaryProperties.colorSpace, new PdfName(csValue));\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGradientBrush.prototype, \"stroking\", {\n        /**\n         * Gets or sets a value indicating whether this PdfGradientBrush is stroking.\n         * @public\n         */\n        get: function () {\n            return this.mbStroking;\n        },\n        set: function (value) {\n            this.mbStroking = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGradientBrush.prototype, \"patternDictionary\", {\n        /**\n         * Gets the pattern dictionary.\n         * @protected\n         */\n        get: function () {\n            if (this.mpatternDictionary == null) {\n                this.mpatternDictionary = new PdfDictionary();\n            }\n            return this.mpatternDictionary;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGradientBrush.prototype, \"shading\", {\n        /**\n         * Gets or sets the shading dictionary.\n         * @protected\n         */\n        get: function () {\n            return this.mshading;\n        },\n        set: function (value) {\n            if (value == null) {\n                throw new Error('ArgumentNullException : Shading');\n            }\n            if (value !== this.mshading) {\n                this.mshading = value;\n                this.patternDictionary.items.setValue(this.dictionaryProperties.shading, new PdfReferenceHolder(this.mshading));\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGradientBrush.prototype, \"matrix\", {\n        /**\n         * Gets or sets the transformation matrix.\n         * @public\n         */\n        get: function () {\n            return this.mmatrix;\n        },\n        set: function (value) {\n            if (value == null) {\n                throw new Error('ArgumentNullException : Matrix');\n            }\n            if (value !== this.mmatrix) {\n                this.mmatrix = value.clone();\n                var m = new PdfArray(this.mmatrix.matrix.elements);\n                this.mpatternDictionary.items.setValue(this.dictionaryProperties.matrix, m);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    //Overrides\n    /**\n     * Monitors the changes of the brush and modify PDF state respectfully.\n     * @param brush The brush.\n     * @param streamWriter The stream writer.\n     * @param getResources The get resources delegate.\n     * @param saveChanges if set to true the changes should be saved anyway.\n     * @param currentColorSpace The current color space.\n     */\n    /* tslint:disable-next-line:max-line-length */\n    PdfGradientBrush.prototype.monitorChanges = function (brush, streamWriter, getResources, saveChanges, currentColorSpace) {\n        var diff = false;\n        if (brush instanceof PdfGradientBrush) {\n            if ((this.colorSpace !== currentColorSpace)) {\n                this.colorSpace = currentColorSpace;\n                this.resetFunction();\n            }\n            //  Set the /Pattern colour space.\n            streamWriter.setColorSpace('Pattern', this.mbStroking);\n            //  Set the pattern for non-stroking operations.\n            var resources = getResources.getResources();\n            var name_1 = resources.getName(this);\n            streamWriter.setColourWithPattern(null, name_1, this.mbStroking);\n            diff = true;\n        }\n        return diff;\n    };\n    /**\n     * Resets the changes, which were made by the brush.\n     * In other words resets the state to the initial one.\n     * @param streamWriter The stream writer.\n     */\n    PdfGradientBrush.prototype.resetChanges = function (streamWriter) {\n        //  Unable reset.\n    };\n    //Implementation\n    /**\n     * Converts colorspace enum to a PDF name.\n     * @param colorSpace The color space enum value.\n     */\n    PdfGradientBrush.prototype.colorSpaceToDeviceName = function (colorSpace) {\n        var result;\n        switch (colorSpace) {\n            case PdfColorSpace.Rgb:\n                result = 'DeviceRGB';\n                break;\n        }\n        return result;\n    };\n    /**\n     * Resets the pattern dictionary.\n     * @param dictionary A new pattern dictionary.\n     */\n    PdfGradientBrush.prototype.resetPatternDictionary = function (dictionary) {\n        this.mpatternDictionary = dictionary;\n    };\n    /**\n     * Clones the anti aliasing value.\n     * @param brush The brush.\n     */\n    PdfGradientBrush.prototype.cloneAntiAliasingValue = function (brush) {\n        if ((brush == null)) {\n            throw new Error('ArgumentNullException : brush');\n        }\n        var sh = this.shading;\n        var aa = (sh.items.getValue(this.dictionaryProperties.antiAlias));\n        if ((aa != null)) {\n            brush.shading.items.setValue(this.dictionaryProperties.antiAlias, new PdfBoolean(aa.value));\n        }\n    };\n    /**\n     * Clones the background value.\n     * @param brush The brush.\n     */\n    PdfGradientBrush.prototype.cloneBackgroundValue = function (brush) {\n        var background = this.background;\n        if (!background.isEmpty) {\n            brush.background = background;\n        }\n    };\n    Object.defineProperty(PdfGradientBrush.prototype, \"element\", {\n        /* tslint:enable */\n        // IPdfWrapper Members\n        /**\n         * Gets the `element`.\n         * @private\n         */\n        get: function () {\n            return this.patternDictionary;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfGradientBrush;\n}(PdfBrush));\nexport { PdfGradientBrush };\n","/**\n * PdfTemplate.ts class for EJ2-PDF\n */\nimport { PdfStream } from './../../primitives/pdf-stream';\nimport { DictionaryProperties } from './../../input-output/pdf-dictionary-properties';\nimport { PdfArray } from './../../primitives/pdf-array';\nimport { PdfGraphics } from './../pdf-graphics';\nimport { PdfResources } from './../pdf-resources';\nimport { PdfName } from './../../primitives/pdf-name';\nimport { PointF, SizeF, RectangleF } from './../../drawing/pdf-drawing';\nimport { GetResourceEventHandler } from './../pdf-graphics';\n/**\n * Represents `Pdf Template` object.\n * @private\n */\nvar PdfTemplate = /** @class */ (function () {\n    function PdfTemplate(arg1, arg2) {\n        /**\n         * Initialize an instance for `DictionaryProperties` class.\n         * @private\n         * @hidden\n         */\n        this.dictionaryProperties = new DictionaryProperties();\n        /**\n         * Checks whether the transformation 'is performed'.\n         * @default true\n         * @private\n         */\n        this.writeTransformation = true;\n        if (typeof arg1 === 'undefined') {\n            //\n        }\n        else if (arg1 instanceof SizeF && typeof arg2 === 'undefined') {\n            this.content = new PdfStream();\n            var tempSize = new SizeF(arg1.width, arg1.height);\n            this.setSize(tempSize);\n            this.initialize();\n        }\n        else {\n            this.content = new PdfStream();\n            this.setSize(new SizeF(arg1, arg2));\n            this.initialize();\n        }\n    }\n    Object.defineProperty(PdfTemplate.prototype, \"size\", {\n        //Properties\n        /**\n         * Gets the size of the 'PdfTemplate'.\n         */\n        get: function () {\n            return this.templateSize;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfTemplate.prototype, \"width\", {\n        /**\n         * Gets the width of the 'PdfTemplate'.\n         */\n        get: function () {\n            return this.size.width;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfTemplate.prototype, \"height\", {\n        /**\n         * Gets the height of the 'PdfTemplate'.\n         */\n        get: function () {\n            return this.size.height;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfTemplate.prototype, \"graphics\", {\n        /**\n         * Gets the `graphics` of the 'PdfTemplate'.\n         */\n        get: function () {\n            if (this.pdfGraphics == null || typeof this.pdfGraphics === 'undefined') {\n                var gr = new GetResourceEventHandler(this);\n                var g = new PdfGraphics(this.size, gr, this.content);\n                this.pdfGraphics = g;\n                // if(this.writeTransformation) {\n                // Transform co-ordinates to Top/Left.\n                this.pdfGraphics.initializeCoordinates();\n                // }\n            }\n            return this.pdfGraphics;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Gets the resources and modifies the template dictionary.\n     * @private\n     */\n    PdfTemplate.prototype.getResources = function () {\n        if (this.resources == null) {\n            this.resources = new PdfResources();\n            this.content.items.setValue(this.dictionaryProperties.resources, this.resources);\n        }\n        return this.resources;\n    };\n    // Public methods\n    /**\n     * `Initialize` the type and subtype of the template.\n     * @private\n     */\n    PdfTemplate.prototype.initialize = function () {\n        this.addType();\n        this.addSubType();\n    };\n    /**\n     * `Adds type key`.\n     * @private\n     */\n    PdfTemplate.prototype.addType = function () {\n        var value = new PdfName(this.dictionaryProperties.xObject);\n        this.content.items.setValue(this.dictionaryProperties.type, value);\n    };\n    /**\n     * `Adds SubType key`.\n     * @private\n     */\n    PdfTemplate.prototype.addSubType = function () {\n        var value = new PdfName(this.dictionaryProperties.form);\n        this.content.items.setValue(this.dictionaryProperties.subtype, value);\n    };\n    PdfTemplate.prototype.reset = function (size) {\n        if (typeof size === 'undefined') {\n            if (this.resources != null) {\n                this.resources = null;\n                this.content.remove(this.dictionaryProperties.resources);\n            }\n            if (this.graphics != null) {\n                this.graphics.reset(this.size);\n            }\n        }\n        else {\n            this.setSize(size);\n            this.reset();\n        }\n    };\n    /**\n     * `Set the size` of the 'PdfTemplate'.\n     * @private\n     */\n    PdfTemplate.prototype.setSize = function (size) {\n        var rect = new RectangleF(new PointF(0, 0), size);\n        var val = PdfArray.fromRectangle(rect);\n        this.content.items.setValue(this.dictionaryProperties.bBox, val);\n        this.templateSize = size;\n    };\n    Object.defineProperty(PdfTemplate.prototype, \"element\", {\n        // /**\n        //  * Returns the value of current graphics.\n        //  * @private\n        //  */\n        // public GetGraphics(g : PdfGraphics) : PdfGraphics {\n        //     if (this.graphics == null || typeof this.graphics === 'undefined') {\n        //         this.graphics = g;\n        //         this.graphics.Size = this.Size;\n        //         this.graphics.StreamWriter = new PdfStreamWriter(this.content)\n        //         this.graphics.Initialize();\n        //         if(this.writeTransformation) {\n        //             this.graphics.InitializeCoordinates();\n        //         }\n        //     }\n        //     return this.graphics;\n        // }\n        // IPdfWrapper Members\n        /**\n         * Gets the `content stream` of 'PdfTemplate' class.\n         * @private\n         */\n        get: function () {\n            return this.content;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfTemplate;\n}());\nexport { PdfTemplate };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * PdfResources.ts class for EJ2-PDF\n */\nimport { PdfDictionary } from './../primitives/pdf-dictionary';\nimport { TemporaryDictionary } from './../collections/object-object-pair/dictionary';\nimport { PdfName } from './../primitives/pdf-name';\nimport { PdfArray } from './../primitives/pdf-array';\nimport { PdfReferenceHolder } from './../primitives/pdf-reference';\nimport { PdfCrossTable } from './../input-output/pdf-cross-table';\nimport { PdfFont } from './fonts/pdf-font';\nimport { PdfTemplate } from './figures/pdf-template';\nimport { PdfBrush } from './brushes/pdf-brush';\nimport { PdfTransparency } from './pdf-transparency';\nimport { PdfBitmap } from './../graphics/images/pdf-bitmap';\nimport { PdfImage } from './../graphics/images/pdf-image';\nimport { PdfGradientBrush } from './brushes/pdf-gradient-brush';\nimport { PdfTilingBrush } from './brushes/pdf-tiling-brush';\n/**\n * `PdfResources` class used to set resource contents like font, image.\n * @private\n */\nvar PdfResources = /** @class */ (function (_super) {\n    __extends(PdfResources, _super);\n    function PdfResources(baseDictionary) {\n        var _this = _super.call(this, baseDictionary) || this;\n        /**\n         * Dictionary for the `properties names`.\n         * @private\n         */\n        _this.properties = new PdfDictionary();\n        return _this;\n    }\n    Object.defineProperty(PdfResources.prototype, \"names\", {\n        //Properties\n        /**\n         * Gets the `font names`.\n         * @private\n         */\n        get: function () {\n            return this.getNames();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfResources.prototype, \"document\", {\n        /**\n         * Get or set the `page document`.\n         * @private\n         */\n        get: function () {\n            return this.pdfDocument;\n        },\n        set: function (value) {\n            this.pdfDocument = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    //Public Methods\n    /**\n     * `Generates name` for the object and adds to the resource if the object is new.\n     * @private\n     */\n    PdfResources.prototype.getName = function (obj) {\n        var primitive = obj.element;\n        var name = null;\n        if (this.names.containsKey(primitive)) {\n            name = this.names.getValue(primitive);\n        }\n        // Object is new.\n        if (name == null) {\n            var sName = this.generateName();\n            name = new PdfName(sName);\n            this.names.setValue(primitive, name);\n            if (obj instanceof PdfFont) {\n                this.add(obj, name);\n            }\n            else if (obj instanceof PdfTemplate) {\n                this.add(obj, name);\n            }\n            else if (obj instanceof PdfGradientBrush || obj instanceof PdfTilingBrush) {\n                this.add(obj, name);\n            }\n            else if (obj instanceof PdfTransparency) {\n                this.add(obj, name);\n            }\n            else if (obj instanceof PdfImage || obj instanceof PdfBitmap) {\n                this.add(obj, name);\n            }\n        }\n        return name;\n    };\n    /**\n     * Gets `resource names` to font dictionaries.\n     * @private\n     */\n    PdfResources.prototype.getNames = function () {\n        if (this.pdfNames == null) {\n            this.pdfNames = new TemporaryDictionary();\n        }\n        var fonts = this.items.getValue(this.dictionaryProperties.font);\n        if (fonts != null) {\n            var reference = fonts;\n            var dictionary = fonts;\n            dictionary = PdfCrossTable.dereference(fonts);\n        }\n        return this.pdfNames;\n    };\n    /**\n     * Add `RequireProcedureSet` into procset array.\n     * @private\n     */\n    PdfResources.prototype.requireProcedureSet = function (procedureSetName) {\n        if (procedureSetName == null) {\n            throw new Error('ArgumentNullException:procedureSetName');\n        }\n        var procSets = this.items.getValue(this.dictionaryProperties.procset);\n        if (procSets == null) {\n            procSets = new PdfArray();\n            this.items.setValue(this.dictionaryProperties.procset, procSets);\n        }\n        var name = new PdfName(procedureSetName);\n        if (!procSets.contains(name)) {\n            procSets.add(name);\n        }\n    };\n    //Helper Methods\n    /**\n     * `Remove font` from array.\n     * @private\n     */\n    PdfResources.prototype.removeFont = function (name) {\n        var key = null;\n        var keys = this.pdfNames.keys();\n        for (var index = 0; index < this.pdfNames.size(); index++) {\n            if (this.pdfNames.getValue(keys[index]) === new PdfName(name)) {\n                key = keys[index];\n                break;\n            }\n        }\n        if (key != null) {\n            this.pdfNames.remove(key);\n        }\n    };\n    /**\n     * Generates `Unique string name`.\n     * @private\n     */\n    PdfResources.prototype.generateName = function () {\n        var name = Guid.getNewGuidString();\n        return name;\n    };\n    PdfResources.prototype.add = function (arg1, arg2) {\n        if (arg1 instanceof PdfFont) {\n            var dictionary = null;\n            var fonts = this.items.getValue(this.dictionaryProperties.font);\n            if (fonts != null) {\n                var reference = fonts;\n                dictionary = fonts;\n                dictionary = fonts;\n            }\n            else {\n                dictionary = new PdfDictionary();\n                this.items.setValue(this.dictionaryProperties.font, dictionary);\n            }\n            dictionary.items.setValue(arg2.value, new PdfReferenceHolder(arg1.element));\n        }\n        else if (arg1 instanceof PdfTemplate) {\n            var xobjects = void 0;\n            xobjects = this.items.getValue(this.dictionaryProperties.xObject);\n            // Create fonts dictionary.\n            if (xobjects == null) {\n                xobjects = new PdfDictionary();\n                this.items.setValue(this.dictionaryProperties.xObject, xobjects);\n            }\n            xobjects.items.setValue(arg2.value, new PdfReferenceHolder(arg1.element));\n        }\n        else if (arg1 instanceof PdfBrush) {\n            if (arg1 instanceof PdfGradientBrush || arg1 instanceof PdfTilingBrush) {\n                var savable = arg1.element;\n                if (savable != null) {\n                    var pattern = this.items.getValue(this.dictionaryProperties.pattern);\n                    // Create a new pattern dictionary.\n                    if (pattern == null) {\n                        pattern = new PdfDictionary();\n                        this.items.setValue(this.dictionaryProperties.pattern, pattern);\n                    }\n                    pattern.items.setValue(arg2.value, new PdfReferenceHolder(savable));\n                }\n            }\n        }\n        else if (arg1 instanceof PdfTransparency) {\n            var savable = arg1.element;\n            var transDic = null;\n            transDic = this.items.getValue(this.dictionaryProperties.extGState);\n            // Create a new pattern dictionary.\n            if (transDic == null) {\n                transDic = new PdfDictionary();\n                this.items.setValue(this.dictionaryProperties.extGState, transDic);\n            }\n            transDic.items.setValue(arg2.value, new PdfReferenceHolder(savable));\n        }\n        else {\n            /* tslint:disable */\n            var xobjects = this.Dictionary.items.getValue(this.dictionaryProperties.xObject);\n            var parentXObjects = void 0;\n            if (typeof this.pdfDocument !== 'undefined') {\n                parentXObjects = this.pdfDocument.sections.element.items.getValue(this.dictionaryProperties.resources).items.getValue(this.dictionaryProperties.xObject);\n            }\n            var values = this.Dictionary.items.values();\n            var hasSameImageStream = false;\n            var oldReference = void 0;\n            if (typeof this.pdfDocument !== 'undefined' && (typeof parentXObjects === undefined || parentXObjects == null)) {\n                parentXObjects = new PdfDictionary();\n                this.pdfDocument.sections.element.items.getValue(this.dictionaryProperties.resources).items.setValue(this.dictionaryProperties.xObject, parentXObjects);\n            }\n            else if (typeof this.pdfDocument !== 'undefined') {\n                var values_1 = parentXObjects.items.values();\n                for (var i = 0; i < values_1.length; i++) {\n                    if (typeof values_1[i] !== 'undefined' && typeof values_1[i].element !== 'undefined') {\n                        if (values_1[i].element.data[0] === arg1.element.data[0]) {\n                            oldReference = values_1[i];\n                            hasSameImageStream = true;\n                        }\n                    }\n                }\n            }\n            if (xobjects == null) {\n                xobjects = new PdfDictionary();\n                this.Dictionary.items.setValue(this.dictionaryProperties.xObject, xobjects);\n            }\n            if (hasSameImageStream && typeof oldReference !== 'undefined') {\n                xobjects.items.setValue(arg2.value, oldReference);\n            }\n            else {\n                var reference = new PdfReferenceHolder(arg1.element);\n                xobjects.items.setValue(arg2.value, reference);\n                if (typeof this.pdfDocument !== 'undefined') {\n                    parentXObjects.items.setValue(arg2.value, reference);\n                }\n            }\n            /* tslint:enable */\n        }\n    };\n    return PdfResources;\n}(PdfDictionary));\nexport { PdfResources };\n/* tslint:disable */\n/**\n * Used to create new guid for resources.\n * @private\n */\nvar Guid = /** @class */ (function () {\n    function Guid() {\n    }\n    /**\n     * Generate `new GUID`.\n     * @private\n     */\n    Guid.getNewGuidString = function () {\n        return 'aaaaaaaa-aaaa-4aaa-baaa-aaaaaaaaaaaa'.replace(/[ab]/g, function (c) {\n            var random = Math.random() * 16 | 0;\n            var result = c === 'a' ? random : (random & 0x3 | 0x8);\n            return result.toString(16);\n        });\n    };\n    return Guid;\n}());\nexport { Guid };\n/* tslint:enable */ \n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { GetResourceEventHandler } from './../pdf-graphics';\nimport { PdfBrush } from './pdf-brush';\nimport { PointF, SizeF, RectangleF, Rectangle } from './../../drawing/pdf-drawing';\nimport { DictionaryProperties } from './../../input-output/pdf-dictionary-properties';\nimport { PdfArray } from './../../primitives/pdf-array';\nimport { PdfNumber } from './../../primitives/pdf-number';\nimport { PdfGraphics } from './../pdf-graphics';\nimport { PdfResources } from './../pdf-resources';\nimport { PdfStream } from './../../primitives/pdf-stream';\nimport { PdfPage } from './../../pages/pdf-page';\n/**\n * `PdfTilingBrush` Implements a colored tiling brush.\n */\nvar PdfTilingBrush = /** @class */ (function (_super) {\n    __extends(PdfTilingBrush, _super);\n    /**\n     * Initializes a new instance of the `PdfTilingBrush` class.\n     * @public\n     */\n    function PdfTilingBrush(arg1, arg2) {\n        var _this = _super.call(this) || this;\n        /**\n         * Local variable to store Stroking.\n         * @private\n         */\n        _this.mStroking = false;\n        /**\n         * Local variable to store the tile start location.\n         * @private\n         */\n        _this.mLocation = new PointF(0, 0);\n        /**\n         * Local variable to store the dictionary properties.\n         * @private\n         */\n        _this.mDictionaryProperties = new DictionaryProperties();\n        var rect = null;\n        if (arg1 instanceof Rectangle) {\n            rect = arg1;\n        }\n        else if (arg1 instanceof SizeF) {\n            rect = new Rectangle(0, 0, arg1.width, arg1.height);\n        }\n        if (arg2 !== null && arg2 instanceof PdfPage) {\n            _this.mPage = arg2;\n        }\n        _this.brushStream = new PdfStream();\n        _this.mResources = new PdfResources();\n        _this.brushStream.items.setValue(_this.mDictionaryProperties.resources, _this.mResources);\n        _this.setBox(rect);\n        _this.setObligatoryFields();\n        if (arg2 !== null && arg2 instanceof PdfPage) {\n            _this.mPage = arg2;\n            _this.graphics.colorSpace = arg2.document.colorSpace;\n        }\n        return _this;\n    }\n    /**\n     * Initializes a new instance of the `PdfTilingBrush` class.\n     * @private\n     * @param rectangle The size of the smallest brush cell.\n     * @param page The Current Page Object.\n     * @param location The Tile start location.\n     * @param matrix The matrix.\n     */\n    PdfTilingBrush.prototype.initialize = function (rectangle, page, location, matrix) {\n        this.mPage = page;\n        this.mLocation = location;\n        this.mTransformationMatrix = matrix;\n        this.tempBrushStream = this.brushStream;\n        this.brushStream = new PdfStream();\n        var tempResource = new PdfResources();\n        this.brushStream.items.setValue(this.mDictionaryProperties.resources, tempResource);\n        this.setBox(rectangle);\n        this.setObligatoryFields();\n        return this;\n    };\n    Object.defineProperty(PdfTilingBrush.prototype, \"location\", {\n        //Properties\n        /**\n         * Location representing the start position of the tiles.\n         * @public\n         */\n        get: function () {\n            return this.mLocation;\n        },\n        set: function (value) {\n            this.mLocation = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Sets the obligatory fields.\n     * @private\n     */\n    PdfTilingBrush.prototype.setObligatoryFields = function () {\n        this.brushStream.items.setValue(this.mDictionaryProperties.patternType, new PdfNumber(1));\n        //  Tiling brush.\n        this.brushStream.items.setValue(this.mDictionaryProperties.paintType, new PdfNumber(1));\n        //  Coloured.\n        this.brushStream.items.setValue(this.mDictionaryProperties.tilingType, new PdfNumber(1));\n        //  Constant spacing.\n        this.brushStream.items.setValue(this.mDictionaryProperties.xStep, new PdfNumber((this.mBox.right - this.mBox.left)));\n        this.brushStream.items.setValue(this.mDictionaryProperties.yStep, new PdfNumber((this.mBox.bottom - this.mBox.top)));\n        if ((this.mPage != null) && (this.mLocation != null)) {\n            if ((this.mTransformationMatrix == null && typeof this.mTransformationMatrix === 'undefined')) {\n                // Transform the tile origin to fit the location\n                var tileTransform = (this.mPage.size.height % this.rectangle.size.height) - (this.mLocation.y);\n                /* tslint:disable-next-line:max-line-length */\n                this.brushStream.items.setValue(this.mDictionaryProperties.matrix, new PdfArray([1, 0, 0, 1, this.mLocation.x, tileTransform]));\n            }\n            else {\n                var tileTransform = 0;\n                // Transform the tile origin to fit the location\n                var elements = this.mTransformationMatrix.matrix.elements;\n                if ((this.mPage.size.height > this.rectangle.size.height)) {\n                    tileTransform = (this.mTransformationMatrix.matrix.offsetY\n                        - (this.mPage.size.height % this.rectangle.size.height));\n                }\n                else {\n                    tileTransform = ((this.mPage.size.height % this.rectangle.size.height) + this.mTransformationMatrix.matrix.offsetY);\n                }\n                this.brushStream.items.setValue(this.mDictionaryProperties.matrix, new PdfArray([\n                    elements[0], elements[1], elements[2], elements[3], elements[4], tileTransform\n                ]));\n            }\n        }\n    };\n    /**\n     * Sets the BBox coordinates.\n     * @private\n     */\n    PdfTilingBrush.prototype.setBox = function (box) {\n        this.mBox = box;\n        var rect = new RectangleF(this.mBox.left, this.mBox.top, this.mBox.right, this.mBox.bottom);\n        this.brushStream.items.setValue(this.mDictionaryProperties.bBox, PdfArray.fromRectangle(rect));\n    };\n    Object.defineProperty(PdfTilingBrush.prototype, \"rectangle\", {\n        //Properties\n        /**\n         * Gets the boundary box of the smallest brush cell.\n         * @public\n         */\n        get: function () {\n            return this.mBox;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfTilingBrush.prototype, \"size\", {\n        /**\n         * Gets the size of the smallest brush cell.\n         * @public\n         */\n        get: function () {\n            return this.mBox.size;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfTilingBrush.prototype, \"graphics\", {\n        /**\n         * Gets Graphics context of the brush.\n         */\n        get: function () {\n            if ((this.mGraphics == null && typeof this.mGraphics === 'undefined')) {\n                var gr = new GetResourceEventHandler(this);\n                var g = new PdfGraphics(this.size, gr, this.brushStream);\n                this.mGraphics = g;\n                this.mResources = this.getResources();\n                this.mGraphics.initializeCoordinates();\n            }\n            return this.mGraphics;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Gets the resources and modifies the template dictionary.\n     * @public\n     */\n    PdfTilingBrush.prototype.getResources = function () {\n        return this.mResources;\n    };\n    Object.defineProperty(PdfTilingBrush.prototype, \"stroking\", {\n        /**\n         * Gets or sets a value indicating whether this PdfTilingBrush\n         * is used for stroking operations.\n         */\n        get: function () {\n            return this.mStroking;\n        },\n        set: function (value) {\n            this.mStroking = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    //PdfBrush methods\n    /**\n     * Creates a new copy of a brush.\n     * @public\n     */\n    PdfTilingBrush.prototype.clone = function () {\n        var brush = this.initialize(this.rectangle, this.mPage, this.location, this.mTransformationMatrix);\n        if ((this.mTransformationMatrix != null) && (this.mTransformationMatrix.matrix != null)) {\n            /* tslint:disable-next-line:max-line-length */\n            brush.brushStream.items.setValue(this.mDictionaryProperties.matrix, new PdfArray(this.mTransformationMatrix.matrix.elements));\n        }\n        brush.brushStream.data = this.tempBrushStream.data;\n        brush.mResources = new PdfResources(this.mResources);\n        brush.brushStream.items.setValue(this.mDictionaryProperties.resources, brush.mResources);\n        return brush;\n    };\n    /**\n     * Monitors the changes of the brush and modify PDF state respectfully.\n     * @param brush The brush\n     * @param streamWriter The stream writer\n     * @param getResources The get resources delegate.\n     * @param saveChanges if set to true the changes should be saved anyway.\n     * @param currentColorSpace The current color space.\n     */\n    /* tslint:disable-next-line:max-line-length */\n    PdfTilingBrush.prototype.monitorChanges = function (brush, streamWriter, getResources, saveChanges, currentColorSpace) {\n        var diff = false;\n        if (brush !== this) {\n            //  Set the Pattern colour space.\n            streamWriter.setColorSpace('Pattern', this.mStroking);\n            //  Set the pattern for non-stroking operations.\n            var resources1 = getResources.getResources();\n            var name1 = resources1.getName(this);\n            streamWriter.setColourWithPattern(null, name1, this.mStroking);\n            diff = true;\n        }\n        else if (brush instanceof PdfTilingBrush) {\n            //  Set the /Pattern colour space.\n            streamWriter.setColorSpace('Pattern', this.mStroking);\n            //  Set the pattern for non-stroking operations.\n            var resources = getResources.getResources();\n            var name_1 = resources.getName(this);\n            streamWriter.setColourWithPattern(null, name_1, this.mStroking);\n            diff = true;\n        }\n        return diff;\n    };\n    /**\n     * Resets the changes, which were made by the brush.\n     * In other words resets the state to the initial one.\n     * @param streamWriter The stream writer.\n     */\n    PdfTilingBrush.prototype.resetChanges = function (streamWriter) {\n        //  We shouldn't do anything to reset changes.\n        //  All changes will be reset automatically by setting a new colour space.\n    };\n    Object.defineProperty(PdfTilingBrush.prototype, \"element\", {\n        /* tslint:enable */\n        // IPdfWrapper Members\n        /**\n         * Gets the `element`.\n         * @public\n         */\n        get: function () {\n            return this.brushStream;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfTilingBrush;\n}(PdfBrush));\nexport { PdfTilingBrush };\n","/**\n * PdfGraphics.ts class for EJ2-PDF\n */\nimport { PdfColorSpace, TextRenderingMode, PdfFillMode, PdfTextAlignment } from './enum';\nimport { PdfVerticalAlignment, PdfBlendMode } from './enum';\nimport { PdfSubSuperScript } from './fonts/enum';\nimport { PdfStreamWriter } from './../input-output/pdf-stream-writer';\nimport { PdfPen } from './pdf-pen';\nimport { PdfBrush } from './brushes/pdf-brush';\nimport { PdfSolidBrush } from './brushes/pdf-solid-brush';\nimport { PdfFont } from './fonts/pdf-font';\nimport { PdfTransformationMatrix, Matrix } from './pdf-transformation-matrix';\nimport { PointF, SizeF, RectangleF } from './../drawing/pdf-drawing';\nimport { ProcedureSets } from './constants';\nimport { PdfString } from './../primitives/pdf-string';\nimport { PdfStringFormat } from './fonts/pdf-string-format';\nimport { TemporaryDictionary } from './../collections/object-object-pair/dictionary';\nimport { PdfTransparency } from './pdf-transparency';\nimport { PdfStringLayouter, LineType } from './fonts/string-layouter';\nimport { DictionaryProperties } from './../input-output/pdf-dictionary-properties';\nimport { StringTokenizer } from './fonts/string-tokenizer';\nimport { PdfAutomaticFieldInfoCollection } from './../document/automatic-fields/automatic-field-info-collection';\nimport { PdfAutomaticFieldInfo } from './../document/automatic-fields/automatic-field-info';\nimport { Operators } from './../input-output/pdf-operators';\nimport { UnicodeTrueTypeFont } from './fonts/unicode-true-type-font';\nimport { InternalEnum } from './../primitives/pdf-string';\nimport { RtlRenderer } from './fonts/rtl-renderer';\nimport { PdfTextDirection } from './enum';\nimport { PathPointType } from './figures/enum';\nimport { PdfGradientBrush } from './../../implementation/graphics/brushes/pdf-gradient-brush';\nimport { PdfTilingBrush } from './brushes/pdf-tiling-brush';\n/**\n * `PdfGraphics` class represents a graphics context of the objects.\n * It's used for performing all the graphics operations.\n * ```typescript\n * // create a new PDF document\n * let document : PdfDocument = new PdfDocument();\n * // add a new page to the document\n * let page1 : PdfPage = document.pages.add();\n * // set the font\n * let font : PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 20);\n * // create black brush\n * let blackBrush : PdfSolidBrush = new PdfSolidBrush(new PdfColor(0, 0, 0));\n * //\n * //graphics of the page\n * let page1Graphics : PdfGraphics = page1.graphics;\n * // draw the text on the page1 graphics\n * page1Graphics.drawString('Hello World', font, blackBrush, new PointF(0, 0));\n * //\n * // save the document\n * document.save('output.pdf');\n * // destroy the document\n * document.destroy();\n * ```\n */\nvar PdfGraphics = /** @class */ (function () {\n    function PdfGraphics(arg1, arg2, arg3) {\n        /**\n         * Represents the `Current color space`.\n         * @private\n         */\n        this.currentColorSpace = PdfColorSpace.Rgb;\n        /**\n         * Stores `previous rendering mode`.\n         * @private\n         */\n        this.previousTextRenderingMode = TextRenderingMode.Fill;\n        /**\n         * Previous `character spacing` value or 0.\n         * @private\n         */\n        this.previousCharacterSpacing = 0.0;\n        /**\n         * Previous `word spacing` value or 0.\n         * @private\n         */\n        this.previousWordSpacing = 0.0;\n        /**\n         * The `previously used text scaling` value.\n         * @private\n         */\n        this.previousTextScaling = 100.0;\n        /**\n         * Instance of `ProcedureSets` class.\n         * @private\n         */\n        this.procedureSets = new ProcedureSets();\n        /**\n         * To check wihether it is a `direct text rendering`.\n         * @default true\n         * @private\n         */\n        this.isNormalRender = true;\n        /**\n         * check whether to `use font size` to calculate the shift.\n         * @default false\n         * @private\n         */\n        this.isUseFontSize = false;\n        /**\n         * check whether the font is in `italic type`.\n         * @default false\n         * @private\n         */\n        this.isItalic = false;\n        /**\n         * Check whether it is an `emf Text Matrix`.\n         * @default false\n         * @private\n         */\n        this.isEmfTextScaled = false;\n        /**\n         * Check whether it is an `emf` call.\n         * @default false\n         * @private\n         */\n        this.isEmf = false;\n        /**\n         * Check whether it is an `emf plus` call.\n         * @default false\n         * @private\n         */\n        this.isEmfPlus = false;\n        /**\n         * Check whether it is in `base line format`.\n         * @default true\n         * @private\n         */\n        this.isBaselineFormat = true;\n        /**\n         * Emf Text `Scaling Factor`.\n         * @private\n         */\n        this.emfScalingFactor = new SizeF(0, 0);\n        /**\n         * To check whether the `last color space` of document and garphics is saved.\n         * @private\n         */\n        this.colorSpaceChanged = false;\n        /**\n         * Stores an instance of `DictionaryProperties`.\n         * @private\n         */\n        this.dictionaryProperties = new DictionaryProperties();\n        /**\n         * Checks whether the x co-ordinate is need to set as client size or not.\n         * @hidden\n         * @private\n         */\n        this.isOverloadWithPosition = false;\n        /**\n         * Checks whether the x co-ordinate is need to set as client size or not.\n         * @hidden\n         * @private\n         */\n        this.isPointOverload = false;\n        /**\n         * Current colorspaces.\n         * @hidden\n         * @private\n         */\n        this.currentColorSpaces = ['RGB', 'CMYK', 'GrayScale', 'Indexed'];\n        /**\n         * Checks the current image `is optimized` or not.\n         * @default false.\n         * @private\n         */\n        this.isImageOptimized = false;\n        /**\n         * Stores the `graphics states`.\n         * @private\n         */\n        this.graphicsState = [];\n        /**\n         * Indicates whether the object `had trasparency`.\n         * @default false\n         * @private\n         */\n        this.istransparencySet = false;\n        /**\n         * Stores the instance of `PdfAutomaticFieldInfoCollection` class .\n         * @default null\n         * @private\n         */\n        this.internalAutomaticFields = null;\n        /**\n         * Stores the index of the start line that should draw with in the next page.\n         * @private\n         */\n        this.startCutIndex = -1;\n        this.getResources = arg2;\n        this.canvasSize = arg1;\n        if (arg3 instanceof PdfStreamWriter) {\n            this.pdfStreamWriter = arg3;\n        }\n        else {\n            this.pdfStreamWriter = new PdfStreamWriter(arg3);\n        }\n        this.initialize();\n    }\n    Object.defineProperty(PdfGraphics.prototype, \"stringLayoutResult\", {\n        //  Properties\n        /**\n         * Returns the `result` after drawing string.\n         * @private\n         */\n        get: function () {\n            return this.pdfStringLayoutResult;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGraphics.prototype, \"size\", {\n        /**\n         * Gets the `size` of the canvas.\n         * @private\n         */\n        get: function () {\n            return this.canvasSize;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGraphics.prototype, \"mediaBoxUpperRightBound\", {\n        /**\n         * Gets and Sets the value of `MediaBox upper right bound`.\n         * @private\n         */\n        get: function () {\n            if (typeof this.internalMediaBoxUpperRightBound === 'undefined') {\n                this.internalMediaBoxUpperRightBound = 0;\n            }\n            return this.internalMediaBoxUpperRightBound;\n        },\n        set: function (value) {\n            this.internalMediaBoxUpperRightBound = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGraphics.prototype, \"clientSize\", {\n        /**\n         * Gets the `size` of the canvas reduced by margins and page templates.\n         * @private\n         */\n        get: function () {\n            return new SizeF(this.clipBounds.width, this.clipBounds.height);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGraphics.prototype, \"colorSpace\", {\n        /**\n         * Gets or sets the current `color space` of the document\n         * @private\n         */\n        get: function () {\n            return this.currentColorSpace;\n        },\n        set: function (value) {\n            this.currentColorSpace = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGraphics.prototype, \"streamWriter\", {\n        /**\n         * Gets the `stream writer`.\n         * @private\n         */\n        get: function () {\n            return this.pdfStreamWriter;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGraphics.prototype, \"matrix\", {\n        /**\n         * Gets the `transformation matrix` reflecting current transformation.\n         * @private\n         */\n        get: function () {\n            if (this.transformationMatrix == null) {\n                this.transformationMatrix = new PdfTransformationMatrix();\n            }\n            return this.transformationMatrix;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGraphics.prototype, \"layer\", {\n        /**\n         * Gets the `layer` for the graphics, if exists.\n         * @private\n         */\n        get: function () {\n            return this.pageLayer;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGraphics.prototype, \"page\", {\n        /**\n         * Gets the `page` for this graphics, if exists.\n         * @private\n         */\n        get: function () {\n            return this.pageLayer.page;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGraphics.prototype, \"automaticFields\", {\n        get: function () {\n            if (this.internalAutomaticFields == null || typeof this.internalAutomaticFields === 'undefined') {\n                this.internalAutomaticFields = new PdfAutomaticFieldInfoCollection();\n            }\n            return this.internalAutomaticFields;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    //Implementation\n    /**\n     * `Initializes` this instance.\n     * @private\n     */\n    PdfGraphics.prototype.initialize = function () {\n        this.bStateSaved = false;\n        this.currentPen = null;\n        this.currentBrush = null;\n        this.currentFont = null;\n        this.currentColorSpace = PdfColorSpace.Rgb;\n        this.bCSInitialized = false;\n        this.transformationMatrix = null;\n        this.previousTextRenderingMode = (-1); //.Fill;\n        this.previousCharacterSpacing = -1.0;\n        this.previousWordSpacing = -1.0;\n        this.previousTextScaling = -100.0;\n        // this.m_trasparencies = null;\n        this.currentStringFormat = null;\n        this.clipBounds = new RectangleF(new PointF(0, 0), this.size);\n        this.getResources.getResources().requireProcedureSet(this.procedureSets.pdf);\n    };\n    PdfGraphics.prototype.drawPdfTemplate = function (template, location, size) {\n        if (typeof size === 'undefined') {\n            if (template == null) {\n                throw Error('ArgumentNullException-template');\n            }\n            this.drawPdfTemplate(template, location, template.size);\n        }\n        else {\n            // let crossTable : PdfCrossTable = null;\n            // if (this.pageLayer != null) {\n            //     crossTable = (this.page as PdfPage).section.parentDocument.crossTable;\n            // }\n            if (template == null) {\n                throw Error('ArgumentNullException-template');\n            }\n            var scaleX = (template.width > 0) ? size.width / template.width : 1;\n            var scaleY = (template.height > 0) ? size.height / template.height : 1;\n            var bNeedScale = !(scaleX === 1 && scaleY === 1);\n            // Save state.\n            var state = this.save();\n            // Take into consideration that rect location is bottom/left.\n            var matrix = new PdfTransformationMatrix();\n            if (this.pageLayer != null) {\n                this.getTranslateTransform(location.x, location.y + size.height, matrix);\n            }\n            if (bNeedScale) {\n                this.getScaleTransform(scaleX, scaleY, matrix);\n            }\n            this.pdfStreamWriter.modifyCtm(matrix);\n            // Output template.\n            var resources = this.getResources.getResources();\n            var name_1 = resources.getName(template);\n            this.pdfStreamWriter.executeObject(name_1);\n            // Restore state.\n            this.restore(state);\n            //Transfer automatic fields from template.\n            var g = template.graphics;\n            if (g != null) {\n                for (var index = 0; index < g.automaticFields.automaticFields.length; index++) {\n                    var fieldInfo = g.automaticFields.automaticFields[index];\n                    var newLocation = new PointF(fieldInfo.location.x + location.x, fieldInfo.location.y + location.y);\n                    var scalingX = template.size.width == 0 ? 0 : size.width / template.size.width;\n                    var scalingY = template.size.height == 0 ? 0 : size.height / template.size.height;\n                    this.automaticFields.add(new PdfAutomaticFieldInfo(fieldInfo.field, newLocation, scalingX, scalingY));\n                    this.page.dictionary.modify();\n                }\n            }\n            this.getResources.getResources().requireProcedureSet(this.procedureSets.imageB);\n            this.getResources.getResources().requireProcedureSet(this.procedureSets.imageC);\n            this.getResources.getResources().requireProcedureSet(this.procedureSets.imageI);\n            this.getResources.getResources().requireProcedureSet(this.procedureSets.text);\n        }\n    };\n    /**\n     * @public\n     */\n    PdfGraphics.prototype.drawString = function (arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9) {\n        if (typeof arg1 === 'string' && arg2 instanceof PdfFont && (arg3 instanceof PdfPen || arg3 === null) && (arg4 instanceof PdfBrush || arg4 === null) && typeof arg5 === 'number' && typeof arg6 === 'number' && (arg7 instanceof PdfStringFormat || arg7 === null) && typeof arg8 === 'undefined') {\n            this.isOverloadWithPosition = true;\n            this.drawString(arg1, arg2, arg3, arg4, arg5, arg6, (this.clientSize.width - arg5), 0, arg7);\n        }\n        else {\n            var temparg3 = arg3;\n            var temparg4 = arg4;\n            var temparg5 = arg5;\n            var temparg6 = arg6;\n            var temparg7 = arg7;\n            var temparg8 = arg8;\n            var temparg9 = arg9;\n            var layouter = new PdfStringLayouter();\n            var result = layouter.layout(arg1, arg2, temparg9, new SizeF(temparg7, temparg8), this.isOverloadWithPosition, this.clientSize);\n            if (!result.empty) {\n                var rect = this.checkCorrectLayoutRectangle(result.actualSize, temparg5, temparg6, temparg9);\n                if (temparg7 <= 0) {\n                    temparg5 = rect.x;\n                    temparg7 = rect.width;\n                }\n                if (temparg8 <= 0) {\n                    temparg6 = rect.y;\n                    temparg8 = rect.height;\n                }\n                this.drawStringLayoutResult(result, arg2, temparg3, temparg4, new RectangleF(temparg5, temparg6, temparg7, temparg8), temparg9);\n                this.isEmfTextScaled = false;\n                this.emfScalingFactor = new SizeF(0, 0);\n            }\n            this.getResources.getResources().requireProcedureSet(this.procedureSets.text);\n            this.isNormalRender = true;\n            this.pdfStringLayoutResult = result;\n            this.isUseFontSize = false;\n        }\n    };\n    PdfGraphics.prototype.drawLine = function (arg1, arg2, arg3, arg4, arg5) {\n        if (arg2 instanceof PointF) {\n            var temparg2 = arg2;\n            var temparg3 = arg3;\n            this.drawLine(arg1, temparg2.x, temparg2.y, temparg3.x, temparg3.y);\n        }\n        else {\n            var temparg2 = arg2;\n            var temparg3 = arg3;\n            var temparg4 = arg4;\n            var temparg5 = arg5;\n            this.stateControl(arg1, null, null);\n            var sw = this.streamWriter;\n            sw.beginPath(temparg2, temparg3);\n            sw.appendLineSegment(temparg4, temparg5);\n            sw.strokePath();\n            this.getResources.getResources().requireProcedureSet(this.procedureSets.pdf);\n        }\n    };\n    PdfGraphics.prototype.drawRectangle = function (arg1, arg2, arg3, arg4, arg5, arg6) {\n        if (arg1 instanceof PdfPen && typeof arg2 === 'number') {\n            var temparg3 = arg3;\n            this.drawRectangle(arg1, null, arg2, temparg3, arg4, arg5);\n        }\n        else if (arg1 instanceof PdfBrush && typeof arg2 === 'number') {\n            var temparg3 = arg3;\n            this.drawRectangle(null, arg1, arg2, temparg3, arg4, arg5);\n        }\n        else {\n            var temparg3 = arg3;\n            var temparg4 = arg4;\n            var temparg5 = arg5;\n            var temparg6 = arg6;\n            if ((arg2 instanceof PdfTilingBrush)) {\n                this.bCSInitialized = false;\n                var xOffset = (this.matrix.matrix.offsetX + temparg3);\n                var yOffset = void 0;\n                if (((this.layer != null) && (this.layer.page != null))) {\n                    yOffset = ((this.layer.page.size.height - this.matrix.matrix.offsetY) + temparg4);\n                }\n                else {\n                    yOffset = ((this.clientSize.height - this.matrix.matrix.offsetY) + temparg4);\n                }\n                (arg2).location = new PointF(xOffset, yOffset);\n                (arg2).graphics.colorSpace = this.colorSpace;\n            }\n            else if ((arg2 instanceof PdfGradientBrush)) {\n                arg2.colorSpace = this.colorSpace;\n            }\n            if (arg2 instanceof PdfSolidBrush && arg2.color.isEmpty) {\n                arg2 = null;\n            }\n            var temparg1 = arg1;\n            var temparg2 = arg2;\n            this.stateControl(temparg1, temparg2, null);\n            this.streamWriter.appendRectangle(temparg3, temparg4, temparg5, temparg6);\n            this.drawPathHelper(temparg1, temparg2, false);\n        }\n    };\n    /**\n     * Draw rounded rectangle specified by a brush, pen, coordinate pair, a width, a height and a radius.\n     * ```typescript\n     * // Create a new PDF document.\n     * let document : PdfDocument = new PdfDocument();\n     * // Create a new page\n     * let page : PdfPage = document.pages.add();\n     * // Create brush for draw rectangle\n     * let brush : PdfSolidBrush = new PdfSolidBrush(new PdfColor(238, 130, 238));\n     * // Create a new PDF pen\n     * let pen: PdfPen = new PdfPen(new PdfColor(255, 0, 0), 1);\n     * // Draw rounded rectangle\n     * page.graphics.drawRoundedRectangle(pen, brush, 20, 20, 100, 50, 5);\n     * // save the document\n     * document.save('output.pdf');\n     * // destroy the document\n     * document.destroy();\n     * ```\n     * @param pen Stoke color of the rectangle.\n     * @param brush Fill color of the rectangle.\n     * @param x The x-coordinate of the upper-left corner of the rectangle to draw.\n     * @param y The y-coordinate of the upper-left corner of the rectangle to draw.\n     * @param width Width of the rectangle to draw.\n     * @param height Height of the rectangle to draw.\n     * @param radius Radius of the arcs to draw.\n     */\n    PdfGraphics.prototype.drawRoundedRectangle = function (pen, brush, x, y, width, height, radius) {\n        if (pen === null) {\n            throw new Error('pen');\n        }\n        if (brush === null) {\n            throw new Error('brush');\n        }\n        if (radius === 0) {\n            this.drawRectangle(pen, brush, x, y, width, height);\n        }\n        else {\n            var bounds = [x, y, width, height];\n            var diameter = radius * 2;\n            var size = [diameter, diameter];\n            var arc = [bounds[0], bounds[1], size[0], size[1]];\n            this._pathPoints = [];\n            this._pathTypes = [];\n            var startFigure = true;\n            startFigure = this._addArc(arc[0], arc[1], arc[2], arc[3], 180, 90, startFigure);\n            arc[0] = (bounds[0] + bounds[2]) - diameter;\n            startFigure = this._addArc(arc[0], arc[1], arc[2], arc[3], 270, 90, startFigure);\n            arc[1] = (bounds[1] + bounds[3]) - diameter;\n            startFigure = this._addArc(arc[0], arc[1], arc[2], arc[3], 0, 90, startFigure);\n            arc[0] = bounds[0];\n            startFigure = this._addArc(arc[0], arc[1], arc[2], arc[3], 90, 90, startFigure);\n            var index = this._pathPoints.length - 1;\n            var type = ((this._pathTypes[index]));\n            type = (type | PathPointType.CloseSubpath);\n            this._pathTypes[index] = (type);\n            this._drawPath(pen, brush, this._pathPoints, this._pathTypes, PdfFillMode.Alternate);\n            this._pathPoints = [];\n            this._pathTypes = [];\n        }\n    };\n    PdfGraphics.prototype._addArc = function (x, y, width, height, startAngle, sweepAngle, startFigure) {\n        var points = this._getBezierArcPoints(x, y, (x + width), (y + height), startAngle, sweepAngle);\n        for (var i = 0; i < points.length; i = i + 8) {\n            var point = [points[i], points[i + 1], points[i + 2], points[i + 3], points[i + 4], points[i + 5], points[i + 6], points[i + 7]];\n            startFigure = this._addArcPoints(point, PathPointType.Bezier3, startFigure);\n        }\n        return startFigure;\n    };\n    PdfGraphics.prototype._addArcPoints = function (points, pointType, startFigure) {\n        for (var i = 0; i < points.length; i++) {\n            var point = new PointF(points[i], points[(i + 1)]);\n            if (i === 0) {\n                if (this._pathPoints.length === 0 || startFigure) {\n                    this._addPoint(point, PathPointType.Start);\n                    startFigure = false;\n                }\n                else if (point.x !== this._getLastPoint().x || point.y !== this._getLastPoint().y) {\n                    this._addPoint(point, PathPointType.Line);\n                }\n            }\n            else {\n                this._addPoint(point, pointType);\n            }\n            i++;\n        }\n        return startFigure;\n    };\n    PdfGraphics.prototype._getLastPoint = function () {\n        var lastPoint = new PointF(0, 0);\n        var count = this._pathPoints.length;\n        if (count > 0) {\n            lastPoint.x = this._pathPoints[(count - 1)].x;\n            lastPoint.y = this._pathPoints[(count - 1)].y;\n        }\n        return lastPoint;\n    };\n    PdfGraphics.prototype._addPoint = function (point, type) {\n        this._pathPoints.push(point);\n        this._pathTypes.push(type);\n    };\n    PdfGraphics.prototype._getBezierArcPoints = function (x1, y1, x2, y2, s1, e1) {\n        if ((x1 > x2)) {\n            var tmp = void 0;\n            tmp = x1;\n            x1 = x2;\n            x2 = tmp;\n        }\n        if ((y2 > y1)) {\n            var tmp = void 0;\n            tmp = y1;\n            y1 = y2;\n            y2 = tmp;\n        }\n        var fragAngle;\n        var numFragments;\n        if ((Math.abs(e1) <= 90)) {\n            fragAngle = e1;\n            numFragments = 1;\n        }\n        else {\n            numFragments = (Math.ceil((Math.abs(e1) / 90)));\n            fragAngle = (e1 / numFragments);\n        }\n        var xcen = ((x1 + x2) / 2);\n        var ycen = ((y1 + y2) / 2);\n        var rx = ((x2 - x1) / 2);\n        var ry = ((y2 - y1) / 2);\n        var halfAng = ((fragAngle * (Math.PI / 360)));\n        var kappa = (Math.abs(4.0 / 3.0 * (1.0 - Math.cos(halfAng)) / Math.sin(halfAng)));\n        var pointList = [];\n        for (var i = 0; (i < numFragments); i++) {\n            var theta0 = (((s1 + (i * fragAngle)) * (Math.PI / 180)));\n            var theta1 = (((s1 + ((i + 1) * fragAngle)) * (Math.PI / 180)));\n            var cos0 = (Math.cos(theta0));\n            var cos1 = (Math.cos(theta1));\n            var sin0 = (Math.sin(theta0));\n            var sin1 = (Math.sin(theta1));\n            if ((fragAngle > 0)) {\n                pointList.push((xcen + (rx * cos0)), (ycen - (ry * sin0)), (xcen + (rx * (cos0 - (kappa * sin0)))), (ycen - (ry * (sin0 + (kappa * cos0)))), (xcen + (rx * (cos1 + (kappa * sin1)))), (ycen - (ry * (sin1 - (kappa * cos1)))), (xcen + (rx * cos1)), (ycen - (ry * sin1)));\n            }\n            else {\n                pointList.push((xcen + (rx * cos0)), (ycen - (ry * sin0)), (xcen + (rx * (cos0 + (kappa * sin0)))), (ycen - (ry * (sin0 - (kappa * cos0)))), (xcen + (rx * (cos1 - (kappa * sin1)))), (ycen - (ry * (sin1 + (kappa * cos1)))), (xcen + (rx * cos1)), (ycen - (ry * sin1)));\n            }\n        }\n        return pointList;\n    };\n    PdfGraphics.prototype.drawPathHelper = function (arg1, arg2, arg3, arg4) {\n        if (typeof arg3 === 'boolean') {\n            var temparg3 = arg3;\n            this.drawPathHelper(arg1, arg2, PdfFillMode.Winding, temparg3);\n        }\n        else {\n            var temparg3 = arg3;\n            var temparg4 = arg4;\n            var isPen = arg1 != null;\n            var isBrush = arg2 != null;\n            var isEvenOdd = (temparg3 === PdfFillMode.Alternate);\n            if (isPen && isBrush) {\n                this.streamWriter.fillStrokePath(isEvenOdd);\n            }\n            else if (!isPen && !isBrush) {\n                this.streamWriter.endPath();\n            }\n            else if (isPen) {\n                this.streamWriter.strokePath();\n            }\n            else {\n                this.streamWriter.fillPath(isEvenOdd);\n            }\n        }\n    };\n    PdfGraphics.prototype.drawImage = function (arg1, arg2, arg3, arg4, arg5) {\n        if (typeof arg2 === 'number' && typeof arg3 === 'number' && typeof arg4 === 'undefined') {\n            var size = arg1.physicalDimension;\n            this.drawImage(arg1, arg2, arg3, size.width, size.height);\n        }\n        else {\n            var temparg2 = arg2;\n            var temparg3 = arg3;\n            var temparg4 = arg4;\n            var temparg5 = arg5;\n            arg1.save();\n            var matrix = new PdfTransformationMatrix();\n            this.getTranslateTransform(temparg2, (temparg3 + temparg5), matrix);\n            this.getScaleTransform(arg4, arg5, matrix);\n            this.pdfStreamWriter.write('q');\n            this.pdfStreamWriter.modifyCtm(matrix);\n            // Output template.\n            var resources = this.getResources.getResources();\n            if (typeof this.pageLayer !== 'undefined' && this.page != null) {\n                resources.document = this.page.document;\n            }\n            var name_2 = resources.getName(arg1);\n            if (typeof this.pageLayer !== 'undefined') {\n                this.page.setResources(resources);\n            }\n            this.pdfStreamWriter.executeObject(name_2);\n            this.pdfStreamWriter.write(Operators.restoreState);\n            this.pdfStreamWriter.write(Operators.newLine);\n            var resource = this.getResources.getResources();\n            resource.requireProcedureSet(this.procedureSets.imageB);\n            resource.requireProcedureSet(this.procedureSets.imageC);\n            resource.requireProcedureSet(this.procedureSets.imageI);\n            resource.requireProcedureSet(this.procedureSets.text);\n        }\n    };\n    //Implementation\n    /**\n     * Returns `bounds` of the line info.\n     * @private\n     */\n    PdfGraphics.prototype.getLineBounds = function (lineIndex, result, font, layoutRectangle, format) {\n        var bounds;\n        if (!result.empty && lineIndex < result.lineCount && lineIndex >= 0) {\n            var line = result.lines[lineIndex];\n            var vShift = this.getTextVerticalAlignShift(result.actualSize.height, layoutRectangle.height, format);\n            var y = vShift + layoutRectangle.y + (result.lineHeight * lineIndex);\n            var lineWidth = line.width;\n            var hShift = this.getHorizontalAlignShift(lineWidth, layoutRectangle.width, format);\n            var lineIndent = this.getLineIndent(line, format, layoutRectangle, (lineIndex === 0));\n            hShift += (!this.rightToLeft(format)) ? lineIndent : 0;\n            var x = layoutRectangle.x + hShift;\n            var width = (!this.shouldJustify(line, layoutRectangle.width, format)) ? lineWidth - lineIndent : layoutRectangle.width - lineIndent;\n            var height = result.lineHeight;\n            bounds = new RectangleF(x, y, width, height);\n        }\n        else {\n            bounds = new RectangleF(0, 0, 0, 0);\n        }\n        return bounds;\n    };\n    /**\n     * Creates `lay outed rectangle` depending on the text settings.\n     * @private\n     */\n    PdfGraphics.prototype.checkCorrectLayoutRectangle = function (textSize, x, y, format) {\n        var layoutedRectangle = new RectangleF(x, y, textSize.width, textSize.width);\n        if (format != null) {\n            switch (format.alignment) {\n                case PdfTextAlignment.Center:\n                    layoutedRectangle.x -= layoutedRectangle.width / 2;\n                    break;\n                case PdfTextAlignment.Right:\n                    layoutedRectangle.x -= layoutedRectangle.width;\n                    break;\n            }\n            switch (format.lineAlignment) {\n                case PdfVerticalAlignment.Middle:\n                    layoutedRectangle.y -= layoutedRectangle.height / 2;\n                    break;\n                case PdfVerticalAlignment.Bottom:\n                    layoutedRectangle.y -= layoutedRectangle.height;\n                    break;\n            }\n        }\n        return layoutedRectangle;\n    };\n    /**\n     * Sets the `layer` for the graphics.\n     * @private\n     */\n    PdfGraphics.prototype.setLayer = function (layer) {\n        this.pageLayer = layer;\n        var page = layer.page;\n        if (page != null && typeof page !== 'undefined') {\n            page.beginSave = this.pageSave;\n        }\n    };\n    /**\n     * Adding page number field before page saving.\n     * @private\n     */\n    PdfGraphics.prototype.pageSave = function (page) {\n        if (page.graphics.automaticFields != null) {\n            for (var i = 0; i < page.graphics.automaticFields.automaticFields.length; i++) {\n                var fieldInfo = page.graphics.automaticFields.automaticFields[i];\n                fieldInfo.field.performDraw(page.graphics, fieldInfo.location, fieldInfo.scalingX, fieldInfo.scalingY);\n            }\n        }\n    };\n    /**\n     * `Draws a layout result`.\n     * @private\n     */\n    PdfGraphics.prototype.drawStringLayoutResult = function (result, font, pen, brush, layoutRectangle, format) {\n        if (!result.empty) {\n            this.applyStringSettings(font, pen, brush, format, layoutRectangle);\n            // Set text scaling\n            var textScaling = (format != null) ? format.horizontalScalingFactor : 100.0;\n            if (textScaling !== this.previousTextScaling && !this.isEmfTextScaled) {\n                this.pdfStreamWriter.setTextScaling(textScaling);\n                this.previousTextScaling = textScaling;\n            }\n            var height = (format == null || format.lineSpacing === 0) ? font.height : format.lineSpacing + font.height;\n            var subScript = (format != null && format.subSuperScript === PdfSubSuperScript.SubScript);\n            var shift = 0;\n            shift = (subScript) ? height - (font.height + font.metrics.getDescent(format)) : (height - font.metrics.getAscent(format));\n            this.shift = shift;\n            this.pdfStreamWriter.startNextLine(layoutRectangle.x, layoutRectangle.y - shift);\n            this.pdfStreamWriter.setLeading(+height);\n            var resultHeight = 0;\n            var remainingString = '';\n            for (var i = 0; i < result.lines.length; i++) {\n                resultHeight += result.lineHeight;\n                if ((layoutRectangle.y + resultHeight) > this.clientSize.height) {\n                    this.startCutIndex = i;\n                    break;\n                }\n            }\n            for (var j = this.startCutIndex; (j < result.lines.length && j >= 0); j++) {\n                remainingString += result.lines[j].text;\n            }\n            var bounds = new RectangleF(layoutRectangle.x, layoutRectangle.y, layoutRectangle.width, layoutRectangle.height);\n            this.drawLayoutResult(result, font, format, layoutRectangle);\n            this.underlineStrikeoutText(pen, brush, result, font, bounds, format);\n            this.isEmfPlus = false;\n            this.isUseFontSize = false;\n            if (this.startCutIndex !== -1) {\n                var page = this.getNextPage();\n                page.graphics.drawString(remainingString, font, pen, brush, layoutRectangle.x, 0, layoutRectangle.width, 0, format);\n            }\n        }\n        else {\n            throw new Error('ArgumentNullException:result');\n        }\n    };\n    /**\n     * Gets the `next page`.\n     * @private\n     */\n    PdfGraphics.prototype.getNextPage = function () {\n        var section = this.currentPage.section;\n        var nextPage = null;\n        var index = section.indexOf(this.currentPage);\n        if (index === section.count - 1) {\n            nextPage = section.add();\n        }\n        else {\n            nextPage = section.getPages()[index + 1];\n        }\n        return nextPage;\n    };\n    PdfGraphics.prototype.setClip = function (rectangle, mode) {\n        if (typeof mode === 'undefined') {\n            this.setClip(rectangle, PdfFillMode.Winding);\n        }\n        else {\n            this.pdfStreamWriter.appendRectangle(rectangle);\n            this.pdfStreamWriter.clipPath((mode === PdfFillMode.Alternate));\n        }\n    };\n    /**\n     * Applies all the `text settings`.\n     * @private\n     */\n    PdfGraphics.prototype.applyStringSettings = function (font, pen, brush, format, bounds) {\n        if (brush instanceof PdfTilingBrush) {\n            this.bCSInitialized = false;\n            brush.graphics.colorSpace = this.colorSpace;\n        }\n        else if ((brush instanceof PdfGradientBrush)) {\n            this.bCSInitialized = false;\n            brush.colorSpace = this.colorSpace;\n        }\n        var setLineWidth = false;\n        var tm = this.getTextRenderingMode(pen, brush, format);\n        this.stateControl(pen, brush, font, format);\n        this.pdfStreamWriter.beginText();\n        if ((tm) !== this.previousTextRenderingMode) {\n            this.pdfStreamWriter.setTextRenderingMode(tm);\n            this.previousTextRenderingMode = tm;\n        }\n        // Set character spacing.\n        var cs = (format != null) ? format.characterSpacing : 0;\n        if (cs !== this.previousCharacterSpacing && !this.isEmfTextScaled) {\n            this.pdfStreamWriter.setCharacterSpacing(cs);\n            this.previousCharacterSpacing = cs;\n        }\n        // Set word spacing.\n        // NOTE: it works only if the space code is equal to 32 (0x20).\n        var ws = (format != null) ? format.wordSpacing : 0;\n        if (ws !== this.previousWordSpacing) {\n            this.pdfStreamWriter.setWordSpacing(ws);\n            this.previousWordSpacing = ws;\n        }\n    };\n    /**\n     * Calculates `shift value` if the text is vertically aligned.\n     * @private\n     */\n    PdfGraphics.prototype.getTextVerticalAlignShift = function (textHeight, boundsHeight, format) {\n        var shift = 0;\n        if (boundsHeight >= 0 && format != null && format.lineAlignment !== PdfVerticalAlignment.Top) {\n            switch (format.lineAlignment) {\n                case PdfVerticalAlignment.Middle:\n                    shift = (boundsHeight - textHeight) / 2;\n                    break;\n                case PdfVerticalAlignment.Bottom:\n                    shift = boundsHeight - textHeight;\n                    break;\n            }\n        }\n        return shift;\n    };\n    /**\n     * `Draws layout result`.\n     * @private\n     */\n    PdfGraphics.prototype.drawLayoutResult = function (result, font, format, layoutRectangle) {\n        var vAlignShift = this.getTextVerticalAlignShift(result.actualSize.height, layoutRectangle.height, format);\n        if (vAlignShift !== 0) {\n            this.pdfStreamWriter.startNextLine(0, vAlignShift);\n        }\n        var ttfFont = font;\n        var unicode = (ttfFont != null && ttfFont.isUnicode);\n        var embed = (ttfFont != null && ttfFont.isEmbedFont);\n        var lines = result.lines;\n        for (var i = 0, len = lines.length; (i < len && i !== this.startCutIndex); i++) {\n            var lineInfo = lines[i];\n            var line = lineInfo.text;\n            var lineWidth = lineInfo.width;\n            var hAlignShift = this.getHorizontalAlignShift(lineWidth, layoutRectangle.width, format);\n            var lineIndent = this.getLineIndent(lineInfo, format, layoutRectangle, (i === 0));\n            hAlignShift += (!this.rightToLeft(format)) ? lineIndent : 0;\n            if (hAlignShift !== 0 && !this.isEmfTextScaled) {\n                this.pdfStreamWriter.startNextLine(hAlignShift, 0);\n            }\n            if (unicode) {\n                this.drawUnicodeLine(lineInfo, layoutRectangle, font, format);\n            }\n            else {\n                this.drawAsciiLine(lineInfo, layoutRectangle, font, format);\n            }\n            if (hAlignShift !== 0 && !this.isEmfTextScaled) {\n                this.pdfStreamWriter.startNextLine(-hAlignShift, 0);\n            }\n            if (this.isOverloadWithPosition && lines.length > 1) {\n                this.pdfStreamWriter.startNextLine(-(layoutRectangle.x), 0);\n                layoutRectangle.x = 0;\n                layoutRectangle.width = this.clientSize.width;\n                this.isOverloadWithPosition = false;\n                this.isPointOverload = true;\n            }\n        }\n        this.getResources.getResources().requireProcedureSet(this.procedureSets.text);\n        if (vAlignShift !== 0) {\n            this.pdfStreamWriter.startNextLine(0, -(vAlignShift - result.lineHeight));\n        }\n        this.pdfStreamWriter.endText();\n    };\n    /**\n     * `Draws Ascii line`.\n     * @private\n     */\n    PdfGraphics.prototype.drawAsciiLine = function (lineInfo, layoutRectangle, font, format) {\n        this.justifyLine(lineInfo, layoutRectangle.width, format);\n        var value = '';\n        if (lineInfo.text.indexOf('(') !== -1 || lineInfo.text.indexOf(')') !== -1) {\n            for (var i = 0; i < lineInfo.text.length; i++) {\n                if (lineInfo.text[i] === '(') {\n                    value += '\\\\\\(';\n                }\n                else if (lineInfo.text[i] === ')') {\n                    value += '\\\\\\)';\n                }\n                else {\n                    value += lineInfo.text[i];\n                }\n            }\n        }\n        if (value === '') {\n            value = lineInfo.text;\n        }\n        var line = '(' + value + ')';\n        this.pdfStreamWriter.showNextLineText(new PdfString(line));\n    };\n    /**\n     * Draws unicode line.\n     * @private\n     */\n    PdfGraphics.prototype.drawUnicodeLine = function (lineInfo, layoutRectangle, font, format) {\n        var line = lineInfo.text;\n        var lineWidth = lineInfo.width;\n        var rtl = (format !== null && typeof format !== 'undefined' && format.rightToLeft);\n        var useWordSpace = (format !== null && typeof format !== 'undefined' && (format.wordSpacing !== 0 || format.alignment === PdfTextAlignment.Justify));\n        var ttfFont = font;\n        var wordSpacing = this.justifyLine(lineInfo, layoutRectangle.width, format);\n        var rtlRender = new RtlRenderer();\n        if (rtl || (format !== null && typeof format !== 'undefined' && format.textDirection !== PdfTextDirection.None)) {\n            var blocks = null;\n            var rightAlign = (format !== null && typeof format !== 'undefined' && format.alignment === PdfTextAlignment.Right);\n            if (format !== null && typeof format !== 'undefined' && format.textDirection !== PdfTextDirection.None) {\n                /* tslint:disable-next-line:max-line-length */\n                blocks = rtlRender.layout(line, ttfFont, (format.textDirection === PdfTextDirection.RightToLeft) ? true : false, useWordSpace, format);\n            }\n            else {\n                blocks = rtlRender.layout(line, ttfFont, rightAlign, useWordSpace, format);\n            }\n            var words = null;\n            if (blocks.length > 1) {\n                if (format !== null && typeof format !== 'undefined' && format.textDirection !== PdfTextDirection.None) {\n                    /* tslint:disable-next-line:max-line-length */\n                    words = rtlRender.splitLayout(line, ttfFont, (format.textDirection === PdfTextDirection.RightToLeft) ? true : false, useWordSpace, format);\n                }\n                else {\n                    words = rtlRender.splitLayout(line, ttfFont, rightAlign, useWordSpace, format);\n                }\n            }\n            else {\n                words = [line];\n            }\n            this.drawUnicodeBlocks(blocks, words, ttfFont, format, wordSpacing);\n        }\n        else {\n            if (useWordSpace) {\n                var result = this.breakUnicodeLine(line, ttfFont, null);\n                var blocks = result.tokens;\n                var words = result.words;\n                this.drawUnicodeBlocks(blocks, words, ttfFont, format, wordSpacing);\n            }\n            else {\n                var token = this.convertToUnicode(line, ttfFont);\n                var value = this.getUnicodeString(token);\n                this.streamWriter.showNextLineText(value);\n            }\n        }\n    };\n    /**\n     * Draws array of unicode tokens.\n     */\n    PdfGraphics.prototype.drawUnicodeBlocks = function (blocks, words, font, format, wordSpacing) {\n        if (blocks == null) {\n            throw new Error('Argument Null Exception : blocks');\n        }\n        if (words == null) {\n            throw new Error('Argument Null Exception : words');\n        }\n        if (font == null) {\n            throw new Error('Argument Null Exception : font');\n        }\n        this.streamWriter.startNextLine();\n        var x = 0;\n        var xShift = 0;\n        var firstLineIndent = 0;\n        var paragraphIndent = 0;\n        try {\n            if (format !== null && typeof format !== 'undefined') {\n                firstLineIndent = format.firstLineIndent;\n                paragraphIndent = format.paragraphIndent;\n                format.firstLineIndent = 0;\n                format.paragraphIndent = 0;\n            }\n            var spaceWidth = font.getCharWidth(StringTokenizer.whiteSpace, format) + wordSpacing;\n            var characterSpacing = (format != null) ? format.characterSpacing : 0;\n            var wordSpace = (format !== null && typeof format !== 'undefined' && wordSpacing === 0) ? format.wordSpacing : 0;\n            spaceWidth += characterSpacing + wordSpace;\n            for (var i = 0; i < blocks.length; i++) {\n                var token = blocks[i];\n                var word = words[i];\n                var tokenWidth = 0;\n                if (x !== 0) {\n                    this.streamWriter.startNextLine(x, 0);\n                }\n                if (word.length > 0) {\n                    tokenWidth += /*Utils.Round(*/ font.measureString(word, format).width /*)*/;\n                    tokenWidth += characterSpacing;\n                    var val = this.getUnicodeString(token);\n                    this.streamWriter.showText(val);\n                }\n                if (i !== blocks.length - 1) {\n                    x = tokenWidth + spaceWidth;\n                    xShift += x;\n                }\n            }\n            // Rolback current line position.\n            if (xShift > 0) {\n                this.streamWriter.startNextLine(-xShift, 0);\n            }\n        }\n        finally {\n            if (format !== null && typeof format !== 'undefined') {\n                format.firstLineIndent = firstLineIndent;\n                format.paragraphIndent = paragraphIndent;\n            }\n        }\n    };\n    /**\n     * Breakes the unicode line to the words and converts symbols to glyphs.\n     */\n    PdfGraphics.prototype.breakUnicodeLine = function (line, ttfFont, words) {\n        if (line === null) {\n            throw new Error('Argument Null Exception : line');\n        }\n        words = line.split(null);\n        var tokens = [];\n        for (var i = 0; i < words.length; i++) {\n            // Reconvert string according to unicode standard.\n            var word = words[i];\n            var token = this.convertToUnicode(word, ttfFont);\n            tokens[i] = token;\n        }\n        return { tokens: tokens, words: words };\n    };\n    /**\n     * Creates PdfString from the unicode text.\n     */\n    PdfGraphics.prototype.getUnicodeString = function (token) {\n        if (token === null) {\n            throw new Error('Argument Null Exception : token');\n        }\n        var val = new PdfString(token);\n        val.converted = true;\n        val.encode = InternalEnum.ForceEncoding.Ascii;\n        return val;\n    };\n    /**\n     * Converts to unicode format.\n     */\n    PdfGraphics.prototype.convertToUnicode = function (text, ttfFont) {\n        var token = null;\n        if (text == null) {\n            throw new Error('Argument Null Exception : text');\n        }\n        if (ttfFont == null) {\n            throw new Error('Argument Null Exception : ttfFont');\n        }\n        if (ttfFont.fontInternal instanceof UnicodeTrueTypeFont) {\n            var ttfReader = ttfFont.fontInternal.ttfReader;\n            ttfFont.setSymbols(text);\n            token = ttfReader.convertString(text);\n            var bytes = PdfString.toUnicodeArray(token, false);\n            token = PdfString.byteToString(bytes);\n        }\n        return token;\n    };\n    /**\n     * `Justifies` the line if needed.\n     * @private\n     */\n    PdfGraphics.prototype.justifyLine = function (lineInfo, boundsWidth, format) {\n        var line = lineInfo.text;\n        var lineWidth = lineInfo.width;\n        var shouldJustify = this.shouldJustify(lineInfo, boundsWidth, format);\n        var hasWordSpacing = (format != null && format.wordSpacing !== 0);\n        var symbols = StringTokenizer.spaces;\n        var whitespacesCount = StringTokenizer.getCharsCount(line, symbols);\n        var wordSpace = 0;\n        if (shouldJustify) {\n            // Correct line width.\n            if (hasWordSpacing) {\n                lineWidth -= (whitespacesCount * format.wordSpacing);\n            }\n            var difference = boundsWidth - lineWidth;\n            wordSpace = difference / whitespacesCount;\n            this.pdfStreamWriter.setWordSpacing(wordSpace);\n        }\n        else {\n            // If there is justifying, but the line shouldn't be justified, restore default word spacing.\n            if (hasWordSpacing) {\n                this.pdfStreamWriter.setWordSpacing(format.wordSpacing);\n            }\n            else {\n                this.pdfStreamWriter.setWordSpacing(0);\n            }\n        }\n        return wordSpace;\n    };\n    /**\n     * `Reset` or reinitialize the current graphic value.\n     * @private\n     */\n    PdfGraphics.prototype.reset = function (size) {\n        this.canvasSize = size;\n        this.streamWriter.clear();\n        this.initialize();\n        this.initializeCoordinates();\n    };\n    /**\n     * Checks whether the line should be `justified`.\n     * @private\n     */\n    PdfGraphics.prototype.shouldJustify = function (lineInfo, boundsWidth, format) {\n        var line = lineInfo.text;\n        var lineWidth = lineInfo.width;\n        var justifyStyle = (format != null && format.alignment === PdfTextAlignment.Justify);\n        var goodWidth = (boundsWidth >= 0 && lineWidth < boundsWidth);\n        var symbols = StringTokenizer.spaces;\n        var whitespacesCount = StringTokenizer.getCharsCount(line, symbols);\n        var hasSpaces = (whitespacesCount > 0 && line[0] !== StringTokenizer.whiteSpace);\n        var goodLineBreakStyle = ((lineInfo.lineType & LineType.LayoutBreak) > 0);\n        var shouldJustify = (justifyStyle && goodWidth && hasSpaces && (goodLineBreakStyle || format.alignment === PdfTextAlignment.Justify));\n        return shouldJustify;\n    };\n    /**\n     * Emulates `Underline, Strikeout` of the text if needed.\n     * @private\n     */\n    PdfGraphics.prototype.underlineStrikeoutText = function (pen, brush, result, font, layoutRectangle, format) {\n        if (font.underline || font.strikeout) {\n            // Calculate line width.\n            var linePen = this.createUnderlineStikeoutPen(pen, brush, font, format);\n            if (linePen != null) {\n                // Approximate line positions.\n                var vShift = this.getTextVerticalAlignShift(result.actualSize.height, layoutRectangle.height, format);\n                var underlineYOffset = 0;\n                underlineYOffset = layoutRectangle.y + vShift + font.metrics.getAscent(format) + 1.5 * linePen.width;\n                var strikeoutYOffset = layoutRectangle.y + vShift + font.metrics.getHeight(format) / 2 + 1.5 * linePen.width;\n                var lines = result.lines;\n                // Run through the text and draw lines.\n                for (var i = 0, len = result.lineCount; i < len; i++) {\n                    var lineInfo = lines[i];\n                    var line = lineInfo.text;\n                    var lineWidth = lineInfo.width;\n                    var hShift = this.getHorizontalAlignShift(lineWidth, layoutRectangle.width, format);\n                    var lineIndent = this.getLineIndent(lineInfo, format, layoutRectangle, (i === 0));\n                    hShift += (!this.rightToLeft(format)) ? lineIndent : 0;\n                    var x1 = layoutRectangle.x + hShift;\n                    var x2 = (!this.shouldJustify(lineInfo, layoutRectangle.width, format)) ? x1 + lineWidth - lineIndent : x1 + layoutRectangle.width - lineIndent;\n                    if (font.underline) {\n                        var y = underlineYOffset;\n                        this.drawLine(linePen, x1, y, x2, y);\n                        underlineYOffset += result.lineHeight;\n                    }\n                    if (font.strikeout) {\n                        var y = strikeoutYOffset;\n                        this.drawLine(linePen, x1, y, x2, y);\n                        strikeoutYOffset += result.lineHeight;\n                    }\n                    if (this.isPointOverload && lines.length > 1) {\n                        layoutRectangle.x = 0;\n                        layoutRectangle.width = this.clientSize.width;\n                    }\n                }\n                this.isPointOverload = false;\n            }\n        }\n    };\n    /**\n     * `Creates a pen` for drawing lines in the text.\n     * @private\n     */\n    PdfGraphics.prototype.createUnderlineStikeoutPen = function (pen, brush, font, format) {\n        // Calculate line width.\n        var lineWidth = font.metrics.getSize(format) / 20;\n        var linePen = null;\n        // Create a pen fo the lines.\n        if (pen != null) {\n            linePen = new PdfPen(pen.color, lineWidth);\n        }\n        else if (brush != null) {\n            linePen = new PdfPen(brush, lineWidth);\n        }\n        return linePen;\n    };\n    /**\n     * Return `text rendering mode`.\n     * @private\n     */\n    PdfGraphics.prototype.getTextRenderingMode = function (pen, brush, format) {\n        var tm = TextRenderingMode.None;\n        if (pen != null && brush != null) {\n            tm = TextRenderingMode.FillStroke;\n        }\n        else if (pen != null) {\n            tm = TextRenderingMode.Stroke;\n        }\n        else {\n            tm = TextRenderingMode.Fill;\n        }\n        if (format != null && format.clipPath) {\n            tm |= TextRenderingMode.ClipFlag;\n        }\n        return tm;\n    };\n    /**\n     * Returns `line indent` for the line.\n     * @private\n     */\n    PdfGraphics.prototype.getLineIndent = function (lineInfo, format, layoutBounds, firstLine) {\n        var lineIndent = 0;\n        var firstParagraphLine = ((lineInfo.lineType & LineType.FirstParagraphLine) > 0);\n        if (format != null && firstParagraphLine) {\n            lineIndent = (firstLine) ? format.firstLineIndent : format.paragraphIndent;\n            lineIndent = (layoutBounds.width > 0) ? Math.min(layoutBounds.width, lineIndent) : lineIndent;\n        }\n        return lineIndent;\n    };\n    /**\n     * Calculates shift value if the line is `horizontaly aligned`.\n     * @private\n     */\n    PdfGraphics.prototype.getHorizontalAlignShift = function (lineWidth, boundsWidth, format) {\n        var shift = 0;\n        if (boundsWidth >= 0 && format != null && format.alignment !== PdfTextAlignment.Left) {\n            switch (format.alignment) {\n                case PdfTextAlignment.Center:\n                    shift = (boundsWidth - lineWidth) / 2;\n                    break;\n                case PdfTextAlignment.Right:\n                    shift = boundsWidth - lineWidth;\n                    break;\n            }\n        }\n        return shift;\n    };\n    /**\n     * Gets or sets the value that indicates `text direction` mode.\n     * @private\n     */\n    PdfGraphics.prototype.rightToLeft = function (format) {\n        var rtl = (format !== null && typeof format !== 'undefined' && format.rightToLeft);\n        if (format !== null && typeof format !== 'undefined') {\n            if (format.textDirection !== PdfTextDirection.None && typeof format.textDirection !== 'undefined') {\n                rtl = true;\n            }\n        }\n        return rtl;\n    };\n    PdfGraphics.prototype.stateControl = function (pen, brush, font, format) {\n        if (typeof format === 'undefined') {\n            this.stateControl(pen, brush, font, null);\n        }\n        else {\n            if (brush instanceof PdfGradientBrush) {\n                this.bCSInitialized = false;\n                brush.colorSpace = this.colorSpace;\n            }\n            if (brush instanceof PdfTilingBrush) {\n                this.bCSInitialized = false;\n                brush.graphics.colorSpace = this.colorSpace;\n            }\n            var saveState = false;\n            if (brush !== null) {\n                var solidBrush = brush;\n                if (typeof this.pageLayer !== 'undefined' && this.pageLayer != null) {\n                    if (this.colorSpaceChanged === false) {\n                        this.lastDocumentCS = this.pageLayer.page.document.colorSpace;\n                        this.lastGraphicsCS = this.pageLayer.page.graphics.colorSpace;\n                        this.colorSpace = this.pageLayer.page.document.colorSpace;\n                        this.currentColorSpace = this.pageLayer.page.document.colorSpace;\n                        this.colorSpaceChanged = true;\n                    }\n                }\n                this.initCurrentColorSpace(this.currentColorSpace);\n            }\n            else if (pen != null) {\n                var pdfPen = pen;\n                if (typeof this.pageLayer !== 'undefined' && this.pageLayer != null) {\n                    this.colorSpace = this.pageLayer.page.document.colorSpace;\n                    this.currentColorSpace = this.pageLayer.page.document.colorSpace;\n                }\n                this.initCurrentColorSpace(this.currentColorSpace);\n            }\n            this.penControl(pen, saveState);\n            this.brushControl(brush, saveState);\n            this.fontControl(font, format, saveState);\n        }\n    };\n    /**\n     * Initializes the `current color space`.\n     * @private\n     */\n    PdfGraphics.prototype.initCurrentColorSpace = function (colorspace) {\n        var re = this.getResources.getResources();\n        if (!this.bCSInitialized) {\n            if (this.currentColorSpace != PdfColorSpace.GrayScale) {\n                this.pdfStreamWriter.setColorSpace('Device' + this.currentColorSpaces[this.currentColorSpace], true);\n                this.pdfStreamWriter.setColorSpace('Device' + this.currentColorSpaces[this.currentColorSpace], false);\n                this.bCSInitialized = true;\n            }\n            else {\n                this.pdfStreamWriter.setColorSpace('DeviceGray', true);\n                this.pdfStreamWriter.setColorSpace('DeviceGray', false);\n                this.bCSInitialized = true;\n            }\n        }\n    };\n    /**\n     * Controls the `pen state`.\n     * @private\n     */\n    PdfGraphics.prototype.penControl = function (pen, saveState) {\n        if (pen != null) {\n            this.currentPen = pen;\n            pen.monitorChanges(this.currentPen, this.pdfStreamWriter, this.getResources, saveState, this.colorSpace, this.matrix.clone());\n            this.currentPen = pen.clone();\n        }\n    };\n    /**\n     * Controls the `brush state`.\n     * @private\n     */\n    PdfGraphics.prototype.brushControl = function (brush, saveState) {\n        if (brush != null && typeof brush !== 'undefined') {\n            var b = brush.clone();\n            var lgb = b;\n            if (lgb !== null && typeof lgb !== 'undefined' && !(brush instanceof PdfSolidBrush) && !(brush instanceof PdfTilingBrush)) {\n                var m = lgb.matrix;\n                var matrix = this.matrix.clone();\n                if ((m != null)) {\n                    m.multiply(matrix);\n                    matrix = m;\n                }\n                lgb.matrix = matrix;\n            }\n            this.currentBrush = lgb;\n            var br = (brush);\n            b.monitorChanges(this.currentBrush, this.pdfStreamWriter, this.getResources, saveState, this.colorSpace);\n            this.currentBrush = brush;\n            brush = null;\n        }\n    };\n    /**\n     * Saves the font and other `font settings`.\n     * @private\n     */\n    PdfGraphics.prototype.fontControl = function (font, format, saveState) {\n        if (font != null) {\n            var curSubSuper = (format != null) ? format.subSuperScript : PdfSubSuperScript.None;\n            var prevSubSuper = (this.currentStringFormat != null) ? this.currentStringFormat.subSuperScript : PdfSubSuperScript.None;\n            if (saveState || font !== this.currentFont || curSubSuper !== prevSubSuper) {\n                var resources = this.getResources.getResources();\n                this.currentFont = font;\n                this.currentStringFormat = format;\n                var size = font.metrics.getSize(format);\n                this.isEmfTextScaled = false;\n                var fontName = resources.getName(font);\n                this.pdfStreamWriter.setFont(font, fontName, size);\n            }\n        }\n    };\n    PdfGraphics.prototype.setTransparency = function (arg1, arg2, arg3) {\n        if (typeof arg2 === 'undefined') {\n            this.istransparencySet = true;\n            this.setTransparency(arg1, arg1, PdfBlendMode.Normal);\n        }\n        else if (typeof arg2 === 'number' && typeof arg3 === 'undefined') {\n            this.setTransparency(arg1, arg2, PdfBlendMode.Normal);\n        }\n        else {\n            if (this.trasparencies == null) {\n                this.trasparencies = new TemporaryDictionary();\n            }\n            var transp = null;\n            var td = new TransparencyData(arg1, arg2, arg3);\n            if (this.trasparencies.containsKey(td)) {\n                transp = this.trasparencies.getValue(td);\n            }\n            if (transp == null) {\n                transp = new PdfTransparency(arg1, arg2, arg3);\n                this.trasparencies.setValue(td, transp);\n            }\n            var resources = this.getResources.getResources();\n            var name_3 = resources.getName(transp);\n            var sw = this.streamWriter;\n            sw.setGraphicsState(name_3);\n        }\n    };\n    PdfGraphics.prototype.clipTranslateMargins = function (x, y, left, top, right, bottom) {\n        if (x instanceof RectangleF && typeof y === 'undefined') {\n            this.clipBounds = x;\n            this.pdfStreamWriter.writeComment('Clip margins.');\n            this.pdfStreamWriter.appendRectangle(x);\n            this.pdfStreamWriter.closePath();\n            this.pdfStreamWriter.clipPath(false);\n            this.pdfStreamWriter.writeComment('Translate co-ordinate system.');\n            this.translateTransform(x.x, x.y);\n        }\n        else if (typeof x === 'number') {\n            var clipArea = new RectangleF(left, top, this.size.width - left - right, this.size.height - top - bottom);\n            this.clipBounds = clipArea;\n            this.pdfStreamWriter.writeComment(\"Clip margins.\");\n            this.pdfStreamWriter.appendRectangle(clipArea);\n            this.pdfStreamWriter.closePath();\n            this.pdfStreamWriter.clipPath(false);\n            this.pdfStreamWriter.writeComment(\"Translate co-ordinate system.\");\n            this.translateTransform(x, y);\n        }\n    };\n    /**\n     * `Updates y` co-ordinate.\n     * @private\n     */\n    PdfGraphics.prototype.updateY = function (y) {\n        return -y;\n    };\n    /**\n     * Used to `translate the transformation`.\n     * ```typescript\n     * // create a new PDF document\n     * let document : PdfDocument = new PdfDocument();\n     * // create a new page\n     * let page1 : PdfPage = document.pages.add();\n     * // set pen\n     * let pen : PdfPen = new PdfPen(new PdfColor(0, 0, 0));\n     * //\n     * // set translate transform\n     * page1.graphics.translateTransform(100, 100);\n     * //\n     * // draw the rectangle after applying translate transform\n     * page1.graphics.drawRectangle(pen, new RectangleF({x : 0, y : 0}, {width : 100, height : 50}));\n     * // save the document.\n     * document.save('output.pdf');\n     * // destroy the document\n     * document.destroy();\n     * ```\n     * @param offsetX The x-coordinate of the translation.\n     * @param offsetY The y-coordinate of the translation.\n     */\n    PdfGraphics.prototype.translateTransform = function (offsetX, offsetY) {\n        var matrix = new PdfTransformationMatrix();\n        this.getTranslateTransform(offsetX, offsetY, matrix);\n        this.pdfStreamWriter.modifyCtm(matrix);\n        this.matrix.multiply(matrix);\n    };\n    /**\n     * `Translates` coordinates of the input matrix.\n     * @private\n     */\n    PdfGraphics.prototype.getTranslateTransform = function (x, y, input) {\n        input.translate(x, this.updateY(y));\n        return input;\n    };\n    /**\n     * Applies the specified `scaling operation` to the transformation matrix of this Graphics by prepending it to the object's transformation matrix.\n     * ```typescript\n     * // create a new PDF document\n     * let document : PdfDocument = new PdfDocument();\n     * // create a new page\n     * let page1 : PdfPage = document.pages.add();\n     * // create pen\n     * let pen : PdfPen = new PdfPen(new PdfColor(0, 0, 0));\n     * //\n     * // apply scaling trasformation\n     * page1.graphics.scaleTransform(1.5, 2);\n     * //\n     * // draw the rectangle after applying scaling transform\n     * page1.graphics.drawRectangle(pen, new RectangleF({x : 100, y : 100}, {width : 100, height : 50}));\n     * // save the document.\n     * document.save('output.pdf');\n     * // destroy the document\n     * document.destroy();\n     * ```\n     * @param scaleX Scale factor in the x direction.\n     * @param scaleY Scale factor in the y direction.\n     */\n    PdfGraphics.prototype.scaleTransform = function (scaleX, scaleY) {\n        var matrix = new PdfTransformationMatrix();\n        this.getScaleTransform(scaleX, scaleY, matrix);\n        this.pdfStreamWriter.modifyCtm(matrix);\n        this.matrix.multiply(matrix);\n    };\n    /**\n     * `Scales` coordinates of the input matrix.\n     * @private\n     */\n    PdfGraphics.prototype.getScaleTransform = function (x, y, input) {\n        if (input == null) {\n            input = new PdfTransformationMatrix();\n        }\n        input.scale(x, y);\n        return input;\n    };\n    /**\n     * Applies the specified `rotation` to the transformation matrix of this Graphics.\n     * ```typescript\n     * // create a new PDF document\n     * let document : PdfDocument = new PdfDocument();\n     * // create a new page\n     * let page1 : PdfPage = document.pages.add();\n     * // create pen\n     * let pen : PdfPen = new PdfPen(new PdfColor(0, 0, 0));\n     * //\n     * // set RotateTransform with 25 degree of angle\n     * page1.graphics.rotateTransform(25);\n     * //\n     * // draw the rectangle after RotateTransformation\n     * page1.graphics.drawRectangle(pen, new RectangleF({x : 100, y : 100}, {width : 100, height : 50}));\n     * // save the document.\n     * document.save('output.pdf');\n     * // destroy the document\n     * document.destroy();\n     * ```\n     * @param angle Angle of rotation in degrees.\n     */\n    PdfGraphics.prototype.rotateTransform = function (angle) {\n        var matrix = new PdfTransformationMatrix();\n        this.getRotateTransform(angle, matrix);\n        this.pdfStreamWriter.modifyCtm(matrix);\n        this.matrix.multiply(matrix);\n    };\n    /**\n     * `Initializes coordinate system`.\n     * @private\n     */\n    PdfGraphics.prototype.initializeCoordinates = function () {\n        // Matrix equation: TM(T-1)=M', where T=[1 0 0 -1 0 h]\n        this.pdfStreamWriter.writeComment('Change co-ordinate system to left/top.');\n        // Translate co-ordinates only, don't flip.\n        if (this.mediaBoxUpperRightBound !== -(this.size.height)) {\n            if (this.cropBox == null) {\n                if (this.mediaBoxUpperRightBound === this.size.height || this.mediaBoxUpperRightBound === 0) {\n                    this.translateTransform(0, this.updateY(this.size.height));\n                }\n                else {\n                    this.translateTransform(0, this.updateY(this.mediaBoxUpperRightBound));\n                }\n            }\n        }\n    };\n    /**\n     * `Rotates` coordinates of the input matrix.\n     * @private\n     */\n    PdfGraphics.prototype.getRotateTransform = function (angle, input) {\n        if (input == null || typeof input === 'undefined') {\n            input = new PdfTransformationMatrix();\n        }\n        input.rotate(this.updateY(angle));\n        return input;\n    };\n    /**\n     * `Saves` the current state of this Graphics and identifies the saved state with a GraphicsState.\n     * ```typescript\n     * // create a new PDF document\n     * let document : PdfDocument = new PdfDocument();\n     * // create a new page\n     * let page1 : PdfPage = document.pages.add();\n     * // create pen\n     * let pen : PdfPen = new PdfPen(new PdfColor(0, 0, 0));\n     * //\n     * // save the graphics state\n     * let state1 : PdfGraphicsState = page1.graphics.save();\n     * //\n     * page1.graphics.scaleTransform(1.5, 2);\n     * // draw the rectangle\n     * page1.graphics.drawRectangle(pen, new RectangleF({x : 100, y : 100}, {width : 100, height : 50}));\n     * // restore the graphics state\n     * page1.graphics.restore(state1);\n     * // save the document.\n     * document.save('output.pdf');\n     * // destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfGraphics.prototype.save = function () {\n        var state = new PdfGraphicsState(this, this.matrix.clone());\n        state.brush = this.currentBrush;\n        state.pen = this.currentPen;\n        state.font = this.currentFont;\n        state.colorSpace = this.currentColorSpace;\n        state.characterSpacing = this.previousCharacterSpacing;\n        state.wordSpacing = this.previousWordSpacing;\n        state.textScaling = this.previousTextScaling;\n        state.textRenderingMode = this.previousTextRenderingMode;\n        this.graphicsState.push(state);\n        this.pdfStreamWriter.saveGraphicsState();\n        return state;\n    };\n    PdfGraphics.prototype.restore = function (state) {\n        if (typeof state === 'undefined') {\n            if (this.graphicsState.length > 0) {\n                this.doRestoreState();\n            }\n        }\n        else {\n            if (this.graphicsState.indexOf(state) !== -1) {\n                for (;;) {\n                    if (this.graphicsState.length === 0) {\n                        break;\n                    }\n                    var popState = this.doRestoreState();\n                    if (popState === state) {\n                        break;\n                    }\n                }\n            }\n        }\n    };\n    /**\n     * `Restores graphics state`.\n     * @private\n     */\n    PdfGraphics.prototype.doRestoreState = function () {\n        var state = this.graphicsState.pop();\n        this.transformationMatrix = state.matrix;\n        this.currentBrush = state.brush;\n        this.currentPen = state.pen;\n        this.currentFont = state.font;\n        this.currentColorSpace = state.colorSpace;\n        this.previousCharacterSpacing = state.characterSpacing;\n        this.previousWordSpacing = state.wordSpacing;\n        this.previousTextScaling = state.textScaling;\n        this.previousTextRenderingMode = state.textRenderingMode;\n        this.pdfStreamWriter.restoreGraphicsState();\n        return state;\n    };\n    /**\n     * `Draws the specified path`, using its original physical size, at the location specified by a coordinate pair.\n     * ```typescript\n     * // create a new PDF document.\n     * let document : PdfDocument = new PdfDocument();\n     * // add a page to the document.\n     * let page1 : PdfPage = document.pages.add();\n     * //Create new PDF path.\n     * let path : PdfPath = new PdfPath();\n     * //Add line path points.\n     * path.addLine(new PointF(10, 100), new PointF(10, 200));\n     * path.addLine(new PointF(100, 100), new PointF(100, 200));\n     * path.addLine(new PointF(100, 200), new PointF(55, 150));\n     * // set pen\n     * let pen : PdfPen = new PdfPen(new PdfColor(255, 0, 0));\n     * // set brush\n     * let brush : PdfSolidBrush = new PdfSolidBrush(new PdfColor(0, 0, 0));\n     * // draw the path\n     * page1.graphics.drawPath(pen, brush, path);\n     * //\n     * // save the document.\n     * document.save('output.pdf');\n     * // destroy the document\n     * document.destroy();\n     * ```\n     * @param pen Color of the text.\n     * @param brush Color of the text.\n     * @param path Draw path.\n     */\n    PdfGraphics.prototype.drawPath = function (pen, brush, path) {\n        this._drawPath(pen, brush, path.pathPoints, path.pathTypes, path.fillMode);\n    };\n    PdfGraphics.prototype._drawPath = function (pen, brush, pathPoints, pathTypes, fillMode) {\n        if (brush instanceof PdfTilingBrush) {\n            this.bCSInitialized = false;\n            brush.graphics.colorSpace = this.colorSpace;\n        }\n        else if (brush instanceof PdfGradientBrush) {\n            this.bCSInitialized = false;\n            brush.colorSpace = this.colorSpace;\n        }\n        this.stateControl(pen, brush, null);\n        this.buildUpPath(pathPoints, pathTypes);\n        this.drawPathHelper(pen, brush, fillMode, false);\n    };\n    /* tslint:disable-next-line:max-line-length */\n    PdfGraphics.prototype.drawArc = function (arg1, arg2, arg3, arg4, arg5, arg6, arg7) {\n        if (arg2 instanceof RectangleF) {\n            this.drawArc(arg1, arg2.x, arg2.y, arg2.width, arg2.height, arg3, arg4);\n        }\n        else {\n            if ((arg7 !== 0)) {\n                this.stateControl(arg1, null, null);\n                this.constructArcPath(arg2, arg3, (arg2 + arg4), (arg3 + arg5), arg6, arg7);\n                this.drawPathHelper(arg1, null, false);\n            }\n        }\n    };\n    /**\n     * Builds up the path.\n     * @private\n     */\n    PdfGraphics.prototype.buildUpPath = function (arg1, arg2) {\n        var cnt = arg1.length;\n        for (var i = 0; i < cnt; ++i) {\n            var typeValue = 0;\n            var point = arg1[i];\n            switch (((arg2[i] & (PdfGraphics.pathTypesValuesMask)))) {\n                case PathPointType.Start:\n                    this.pdfStreamWriter.beginPath(point.x, point.y);\n                    break;\n                case PathPointType.Bezier3:\n                    var p2 = new PointF(0, 0);\n                    var p3 = new PointF(0, 0);\n                    var result1 = this.getBezierPoints(arg1, arg2, i, p2, p3);\n                    this.pdfStreamWriter.appendBezierSegment(point, result1.p2, result1.p3);\n                    i = result1.i;\n                    break;\n                case PathPointType.Line:\n                    this.pdfStreamWriter.appendLineSegment(point);\n                    break;\n                default:\n                    throw new Error('ArithmeticException - Incorrect path formation.');\n            }\n            typeValue = arg2[i];\n            this.checkFlags(typeValue);\n        }\n    };\n    /**\n     * Gets the bezier points from respective arrays.\n     * @private\n     */\n    /* tslint:disable-next-line:max-line-length */\n    PdfGraphics.prototype.getBezierPoints = function (points, types, i, p2, p3) {\n        var errorMsg = 'Malforming path.';\n        ++i;\n        if ((((types[i] & PdfGraphics.pathTypesValuesMask)) === PathPointType.Bezier3)) {\n            p2 = points[i];\n            ++i;\n            if ((((types[i] & PdfGraphics.pathTypesValuesMask)) === PathPointType.Bezier3)) {\n                p3 = points[i];\n            }\n            else {\n                throw new Error('ArgumentException : errorMsg');\n            }\n        }\n        else {\n            throw new Error('ArgumentException : errorMsg');\n        }\n        return { i: i, p2: p2, p3: p3 };\n    };\n    /**\n     * Checks path point type flags.\n     * @private\n     */\n    PdfGraphics.prototype.checkFlags = function (type) {\n        if ((((type & (PathPointType.CloseSubpath))) === PathPointType.CloseSubpath)) {\n            this.pdfStreamWriter.closePath();\n        }\n    };\n    /**\n     * Constructs the arc path using Bezier curves.\n     * @private\n     */\n    PdfGraphics.prototype.constructArcPath = function (x1, y1, x2, y2, startAng, sweepAngle) {\n        var points = this.getBezierArc(x1, y1, x2, y2, startAng, sweepAngle);\n        if ((points.length === 0)) {\n            return;\n        }\n        var pt = [points[0], points[1], points[2], points[3], points[4], points[5], points[6], points[7]];\n        this.pdfStreamWriter.beginPath(pt[0], pt[1]);\n        var i = 0;\n        for (i = 0; i < points.length; i = i + 8) {\n            pt = [points[i], points[i + 1], points[i + 2], points[i + 3], points[i + 4], points[i + 5], points[i + 6], points[i + 7]];\n            this.pdfStreamWriter.appendBezierSegment(pt[2], pt[3], pt[4], pt[5], pt[6], pt[7]);\n        }\n    };\n    /**\n     * Gets the bezier points for arc constructing.\n     * @private\n     */\n    PdfGraphics.prototype.getBezierArc = function (numX1, numY1, numX2, numY2, s1, e1) {\n        if ((numX1 > numX2)) {\n            var tmp = void 0;\n            tmp = numX1;\n            numX1 = numX2;\n            numX2 = tmp;\n        }\n        if ((numY2 > numY1)) {\n            var tmp = void 0;\n            tmp = numY1;\n            numY1 = numY2;\n            numY2 = tmp;\n        }\n        var fragAngle1;\n        var numFragments;\n        if ((Math.abs(e1) <= 90)) {\n            fragAngle1 = e1;\n            numFragments = 1;\n        }\n        else {\n            numFragments = (Math.ceil((Math.abs(e1) / 90)));\n            fragAngle1 = (e1 / numFragments);\n        }\n        var xcen = ((numX1 + numX2) / 2);\n        var ycen = ((numY1 + numY2) / 2);\n        var rx = ((numX2 - numX1) / 2);\n        var ry = ((numY2 - numY1) / 2);\n        var halfAng = ((fragAngle1 * (Math.PI / 360)));\n        var kappa = (Math.abs(4.0 / 3.0 * (1.0 - Math.cos(halfAng)) / Math.sin(halfAng)));\n        var pointsList = [];\n        for (var i = 0; (i < numFragments); i++) {\n            var thetaValue0 = (((s1 + (i * fragAngle1)) * (Math.PI / 180)));\n            var thetaValue1 = (((s1 + ((i + 1) * fragAngle1)) * (Math.PI / 180)));\n            var cos0 = (Math.cos(thetaValue0));\n            var cos1 = (Math.cos(thetaValue1));\n            var sin0 = (Math.sin(thetaValue0));\n            var sin1 = (Math.sin(thetaValue1));\n            if ((fragAngle1 > 0)) {\n                /* tslint:disable-next-line:max-line-length */\n                pointsList.push((xcen + (rx * cos0)), (ycen - (ry * sin0)), (xcen + (rx * (cos0 - (kappa * sin0)))), (ycen - (ry * (sin0 + (kappa * cos0)))), (xcen + (rx * (cos1 + (kappa * sin1)))), (ycen - (ry * (sin1 - (kappa * cos1)))), (xcen + (rx * cos1)), (ycen - (ry * sin1)));\n            }\n            else {\n                /* tslint:disable-next-line:max-line-length */\n                pointsList.push((xcen + (rx * cos0)), (ycen - (ry * sin0)), (xcen + (rx * (cos0 + (kappa * sin0)))), (ycen - (ry * (sin0 - (kappa * cos0)))), (xcen + (rx * (cos1 - (kappa * sin1)))), (ycen - (ry * (sin1 + (kappa * cos1)))), (xcen + (rx * cos1)), (ycen - (ry * sin1)));\n            }\n        }\n        return pointsList;\n    };\n    /* tslint:disable */\n    // Constants\n    /**\n     * Specifies the mask of `path type values`.\n     * @private\n     */\n    PdfGraphics.pathTypesValuesMask = 0xf;\n    /**\n     * Checks whether the object is `transparencyObject`.\n     * @hidden\n     * @private\n     */\n    PdfGraphics.transparencyObject = false;\n    return PdfGraphics;\n}());\nexport { PdfGraphics };\n/**\n * `GetResourceEventHandler` class is alternate for event handlers and delegates.\n * @private\n * @hidden\n */\nvar GetResourceEventHandler = /** @class */ (function () {\n    /**\n     * Initialize instance of `GetResourceEventHandler` class.\n     * Alternate for event handlers and delegates.\n     * @private\n     */\n    function GetResourceEventHandler(sender) {\n        this.sender = sender;\n    }\n    /**\n     * Return the instance of `PdfResources` class.\n     * @private\n     */\n    GetResourceEventHandler.prototype.getResources = function () {\n        return this.sender.getResources();\n    };\n    return GetResourceEventHandler;\n}());\nexport { GetResourceEventHandler };\nvar PdfGraphicsState = /** @class */ (function () {\n    function PdfGraphicsState(graphics, matrix) {\n        /**\n         * Stores `previous rendering mode`.\n         * @default TextRenderingMode.Fill\n         * @private\n         */\n        this.internalTextRenderingMode = TextRenderingMode.Fill;\n        /**\n         * `Previous character spacing` value or 0.\n         * @default 0.0\n         * @private\n         */\n        this.internalCharacterSpacing = 0.0;\n        /**\n         * `Previous word spacing` value or 0.\n         * @default 0.0\n         * @private\n         */\n        this.internalWordSpacing = 0.0;\n        /**\n         * The previously used `text scaling value`.\n         * @default 100.0\n         * @private\n         */\n        this.internalTextScaling = 100.0;\n        /**\n         * `Current color space`.\n         * @default PdfColorSpace.Rgb\n         * @private\n         */\n        this.pdfColorSpace = PdfColorSpace.Rgb;\n        if (typeof graphics !== 'undefined') {\n            this.pdfGraphics = graphics;\n            var elements_1 = [];\n            graphics.matrix.matrix.elements.forEach(function (element) {\n                elements_1.push(element);\n            });\n            this.transformationMatrix = new PdfTransformationMatrix();\n            this.transformationMatrix.matrix = new Matrix(elements_1);\n        }\n    }\n    Object.defineProperty(PdfGraphicsState.prototype, \"graphics\", {\n        // Properties\n        /**\n         * Gets the parent `graphics object`.\n         * @private\n         */\n        get: function () {\n            return this.pdfGraphics;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGraphicsState.prototype, \"matrix\", {\n        /**\n         * Gets the `current matrix`.\n         * @private\n         */\n        get: function () {\n            return this.transformationMatrix;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGraphicsState.prototype, \"characterSpacing\", {\n        /**\n         * Gets or sets the `current character spacing`.\n         * @private\n         */\n        get: function () {\n            return this.internalCharacterSpacing;\n        },\n        set: function (value) {\n            this.internalCharacterSpacing = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGraphicsState.prototype, \"wordSpacing\", {\n        /**\n         * Gets or sets the `word spacing` value.\n         * @private\n         */\n        get: function () {\n            return this.internalWordSpacing;\n        },\n        set: function (value) {\n            this.internalWordSpacing = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGraphicsState.prototype, \"textScaling\", {\n        /**\n         * Gets or sets the `text scaling` value.\n         * @private\n         */\n        get: function () {\n            return this.internalTextScaling;\n        },\n        set: function (value) {\n            this.internalTextScaling = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGraphicsState.prototype, \"pen\", {\n        /**\n         * Gets or sets the `current pen` object.\n         * @private\n         */\n        get: function () {\n            return this.pdfPen;\n        },\n        set: function (value) {\n            this.pdfPen = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGraphicsState.prototype, \"brush\", {\n        /**\n         * Gets or sets the `brush`.\n         * @private\n         */\n        get: function () {\n            return this.pdfBrush;\n        },\n        set: function (value) {\n            this.pdfBrush = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGraphicsState.prototype, \"font\", {\n        /**\n         * Gets or sets the `current font` object.\n         * @private\n         */\n        get: function () {\n            return this.pdfFont;\n        },\n        set: function (value) {\n            this.pdfFont = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGraphicsState.prototype, \"colorSpace\", {\n        /**\n         * Gets or sets the `current color space` value.\n         * @private\n         */\n        get: function () {\n            return this.pdfColorSpace;\n        },\n        set: function (value) {\n            this.pdfColorSpace = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGraphicsState.prototype, \"textRenderingMode\", {\n        /**\n         * Gets or sets the `text rendering mode`.\n         * @private\n         */\n        get: function () {\n            return this.internalTextRenderingMode;\n        },\n        set: function (value) {\n            this.internalTextRenderingMode = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfGraphicsState;\n}());\nexport { PdfGraphicsState };\nvar TransparencyData = /** @class */ (function () {\n    // Constructors\n    /**\n     * Initializes a new instance of the `TransparencyData` class.\n     * @private\n     */\n    function TransparencyData(alphaPen, alphaBrush, blendMode) {\n        this.alphaPen = alphaPen;\n        this.alphaBrush = alphaBrush;\n        this.blendMode = blendMode;\n    }\n    return TransparencyData;\n}());\n/* tslint:enable */\n","import { PdfStream } from './../primitives/pdf-stream';\nimport { PdfGraphics, GetResourceEventHandler } from './../graphics/pdf-graphics';\nimport { PdfPageLayerCollection } from './pdf-page-layer-collection';\nimport { DictionaryProperties } from './../input-output/pdf-dictionary-properties';\nimport { PdfColorSpace } from './../graphics/enum';\n/**\n * The `PdfPageLayer` used to create layers in PDF document.\n * @private\n */\nvar PdfPageLayer = /** @class */ (function () {\n    function PdfPageLayer(page, streamClipPageTemplates) {\n        // private bSaved : boolean;\n        /**\n         * Local Variable to store the `color space` of the document.\n         * @private\n         */\n        this.pdfColorSpace = PdfColorSpace.Rgb;\n        /**\n         * Local Variable to set `visibility`.\n         * @default true\n         * @private\n         */\n        this.isVisible = true;\n        /**\n         * Indicates if `Sublayer` is present.\n         * @default false\n         * @private\n         */\n        this.sublayer = false;\n        /**\n         * Local variable to store `length` of the graphics.\n         * @default 0\n         * @private\n         */\n        this.contentLength = 0;\n        /**\n         * Instance for `PdfDictionaryProperties` Class.\n         * @private\n         */\n        this.dictionaryProperties = new DictionaryProperties();\n        if (page === null) {\n            throw new Error('ArgumentNullException:page');\n        }\n        this.pdfPage = page;\n        this.clipPageTemplates = true;\n        if (typeof streamClipPageTemplates === 'undefined') {\n            this.content = new PdfStream();\n        }\n        else if (streamClipPageTemplates instanceof PdfStream || streamClipPageTemplates === null) {\n            if (streamClipPageTemplates === null) {\n                throw new Error('ArgumentNullException:stream');\n            }\n            this.content = streamClipPageTemplates;\n        }\n        else {\n            this.content = new PdfStream();\n            this.clipPageTemplates = streamClipPageTemplates;\n        }\n    }\n    Object.defineProperty(PdfPageLayer.prototype, \"colorSpace\", {\n        // Properties\n        /**\n         * Get or set the `color space`.\n         * @private\n         */\n        get: function () {\n            return this.pdfColorSpace;\n        },\n        set: function (value) {\n            this.pdfColorSpace = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageLayer.prototype, \"page\", {\n        /**\n         * Gets parent `page` of the layer.\n         * @private\n         */\n        get: function () {\n            return this.pdfPage;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageLayer.prototype, \"layerId\", {\n        /**\n         * Gets and Sets the `id of the layer`.\n         * @private\n         */\n        get: function () {\n            return this.layerid;\n        },\n        set: function (value) {\n            this.layerid = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageLayer.prototype, \"name\", {\n        /**\n         * Gets or sets the `name` of the layer.\n         * @private\n         */\n        get: function () {\n            return this.layerName;\n        },\n        set: function (value) {\n            this.layerName = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageLayer.prototype, \"visible\", {\n        /**\n         * Gets or sets the `visibility` of the layer.\n         * @private\n         */\n        get: function () {\n            return this.isVisible;\n        },\n        set: function (value) {\n            this.isVisible = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageLayer.prototype, \"graphics\", {\n        /**\n         * Gets `Graphics` context of the layer, used to draw various graphical content on layer.\n         * @private\n         */\n        get: function () {\n            if ((this.pdfGraphics == null)) {\n                this.initializeGraphics(this.page);\n            }\n            return this.pdfGraphics;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageLayer.prototype, \"layers\", {\n        /**\n         * Gets the collection of `PdfPageLayer`, this collection handle by the class 'PdfPageLayerCollection'.\n         * @private\n         */\n        get: function () {\n            if (this.layer == null) {\n                this.layer = new PdfPageLayerCollection(this.page);\n                this.layer.sublayer = true;\n                return this.layer;\n            }\n            else {\n                return this.layer;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    // Implementation\n    /**\n     * `Adds` a new PDF Page layer.\n     * @private\n     */\n    PdfPageLayer.prototype.add = function () {\n        var layer = new PdfPageLayer(this.pdfPage);\n        layer.name = '';\n        return layer;\n    };\n    /**\n     * Returns a value indicating the `sign` of a single-precision floating-point number.\n     * @private\n     */\n    PdfPageLayer.prototype.sign = function (number) {\n        if (number === 0) {\n            return 0;\n        }\n        else if (number > 0) {\n            return 1;\n        }\n        else {\n            return -1;\n        }\n    };\n    /**\n     * `Initializes Graphics context` of the layer.\n     * @private\n     */\n    PdfPageLayer.prototype.initializeGraphics = function (page) {\n        var oPage = page;\n        var gr = new GetResourceEventHandler(this.page);\n        var cropBox = null;\n        this.pdfGraphics = new PdfGraphics(page.size, gr, this.content);\n        this.pdfGraphics.mediaBoxUpperRightBound = 0;\n        if (oPage != null) {\n            var sc = oPage.section.parent;\n            if (sc != null) {\n                this.pdfGraphics.colorSpace = sc.document.colorSpace;\n                this.colorSpace = sc.document.colorSpace;\n            }\n        }\n        // Transform coordinates to the left/top and activate margins.\n        var isSame = (this.sign(page.origin.y) === this.sign(page.origin.x));\n        // if (page != null) {\n        if (page.origin.x >= 0 && page.origin.y >= 0 || !(isSame)) {\n            this.pdfGraphics.initializeCoordinates();\n        }\n        else {\n            // this.m_graphics.InitializeCoordinates(page);\n        }\n        var clipRect = oPage.section.getActualBounds(oPage, true);\n        var margins = oPage.section.pageSettings.margins;\n        if (this.clipPageTemplates) {\n            if (page.origin.x >= 0 && page.origin.y >= 0) {\n                this.pdfGraphics.clipTranslateMargins(clipRect);\n            }\n        }\n        else {\n            this.graphics.clipTranslateMargins(clipRect.x, clipRect.y, margins.left, margins.top, margins.right, margins.bottom);\n        }\n        this.pdfGraphics.setLayer(this);\n        // this.bSaved = false;\n    };\n    Object.defineProperty(PdfPageLayer.prototype, \"element\", {\n        // IPdfWrapper Members\n        /**\n         * Gets the wrapped `element`.\n         * @private\n         */\n        get: function () {\n            return this.content;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfPageLayer;\n}());\nexport { PdfPageLayer };\n","/**\n * PdfCollection.ts class for EJ2-PDF\n * The class used to handle the collection of PdF objects.\n */\nvar PdfCollection = /** @class */ (function () {\n    // Constructors\n    /**\n     * Initializes a new instance of the `Collection` class.\n     * @private\n     */\n    function PdfCollection() {\n        //\n    }\n    Object.defineProperty(PdfCollection.prototype, \"count\", {\n        // Properties\n        /**\n         * Gets the `Count` of stored objects.\n         * @private\n         */\n        get: function () {\n            if (typeof this.collection === 'undefined') {\n                this.collection = [];\n            }\n            return this.collection.length;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfCollection.prototype, \"list\", {\n        /**\n         * Gets the `list` of stored objects.\n         * @private\n         */\n        get: function () {\n            if (typeof this.collection === 'undefined') {\n                this.collection = [];\n            }\n            return this.collection;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfCollection;\n}());\nexport { PdfCollection };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * PdfPageLayerCollection.ts class for EJ2-PDF\n */\nimport { PdfPageBase } from './pdf-page-base';\nimport { PdfDictionary } from './../primitives/pdf-dictionary';\nimport { PdfPageLayer } from './pdf-page-layer';\nimport { PdfCollection } from './../general/pdf-collection';\nimport { PdfReferenceHolder } from './../primitives/pdf-reference';\nimport { PdfStream } from './../primitives/pdf-stream';\n/**\n * The class provides methods and properties to handle the collections of `PdfPageLayer`.\n */\nvar PdfPageLayerCollection = /** @class */ (function (_super) {\n    __extends(PdfPageLayerCollection, _super);\n    function PdfPageLayerCollection(page) {\n        var _this = _super.call(this) || this;\n        /**\n         * Stores the `number of first level layers` in the document.\n         * @default 0\n         * @private\n         */\n        _this.parentLayerCount = 0;\n        /**\n         * Indicates if `Sublayer` is present.\n         * @default false\n         * @private\n         */\n        _this.sublayer = false;\n        /**\n         * Stores the `optional content dictionary`.\n         * @private\n         */\n        _this.optionalContent = new PdfDictionary();\n        if (page instanceof PdfPageBase) {\n            // if (page == null) {\n            //     throw new Error('ArgumentNullException:page');\n            // }\n            _this.page = page;\n            var lPage = page;\n            // if (lPage != null) {\n            _this.parseLayers(lPage);\n            // }\n        }\n        return _this;\n    }\n    PdfPageLayerCollection.prototype.items = function (index, value) {\n        if (typeof index === 'number' && typeof value === 'undefined') {\n            var obj = this.list[index];\n            return obj;\n        }\n        else {\n            if (value == null) {\n                throw new Error('ArgumentNullException: layer');\n            }\n            if (value.page !== this.page) {\n                throw new Error('ArgumentException: The layer belongs to another page');\n            }\n            // // Add/remove the layer.\n            // let layer : PdfPageLayer = this.items(index);\n            // if (layer != null) {\n            //     this.RemoveLayer(layer);\n            // }\n            // this.List[index] = value;\n            // this.InsertLayer(index, value);\n        }\n    };\n    PdfPageLayerCollection.prototype.add = function (firstArgument, secondArgument) {\n        if (typeof firstArgument === 'undefined') {\n            var layer = new PdfPageLayer(this.page);\n            layer.name = '';\n            this.add(layer);\n            return layer;\n        }\n        else if (firstArgument instanceof PdfPageLayer) {\n            // if (layer == null)\n            //     throw new ArgumentNullException(\"layer\");\n            // if (layer.Page != m_page)\n            //     throw new ArgumentException(\"The layer belongs to another page\");\n            var index = this.list.push(firstArgument);\n            // Register layer.\n            this.addLayer(index, firstArgument);\n            return index;\n        }\n        else {\n            return 0;\n        }\n    };\n    /**\n     * Registers `layer` at the page.\n     * @private\n     */\n    PdfPageLayerCollection.prototype.addLayer = function (index, layer) {\n        var reference = new PdfReferenceHolder(layer);\n        this.page.contents.add(reference);\n    };\n    // private RemoveLayer(layer : PdfPageLayer) : void {\n    //     if (layer == null) {\n    //         throw new Error('ArgumentNullException:layer');\n    //     }\n    //     let reference : PdfReferenceHolder = new PdfReferenceHolder(layer);\n    //     if (this.page != null) {\n    //         this.page.Contents.Remove(reference);\n    //     }\n    // }\n    /**\n     * Inserts `PdfPageLayer` into the collection at specified index.\n     * @private\n     */\n    PdfPageLayerCollection.prototype.insert = function (index, layer) {\n        // if (index < 0)\n        //     throw new ArgumentOutOfRangeException(\"index\", \"Value can not be less 0\");\n        // if (layer == null)\n        //     throw new ArgumentNullException(\"layer\");\n        // if (layer.Page != m_page)\n        //     throw new ArgumentException(\"The layer belongs to another page\");\n        var list = [];\n        var length = this.list.length;\n        for (var i = index; i < length; i++) {\n            list.push(this.list.pop());\n        }\n        this.list.push(layer);\n        for (var i = 0; i < list.length; i++) {\n            this.list.push(list[i]);\n        }\n        // Register layer.\n        this.insertLayer(index, layer);\n    };\n    /**\n     * Registers layer at the page.\n     * @private\n     */\n    PdfPageLayerCollection.prototype.insertLayer = function (index, layer) {\n        if (layer == null) {\n            throw new Error('ArgumentNullException:layer');\n        }\n        var reference = new PdfReferenceHolder(layer);\n        this.page.contents.insert(index, reference);\n    };\n    // tslint:disable\n    /**\n     * `Parses the layers`.\n     * @private\n     */\n    PdfPageLayerCollection.prototype.parseLayers = function (loadedPage) {\n        // if (loadedPage == null) {\n        //     throw new Error('ArgumentNullException:loadedPage');\n        // }\n        var contents = this.page.contents;\n        var resource = this.page.getResources();\n        var crossTable = null;\n        var ocproperties = null;\n        var propertie = null;\n        var isLayerAdded = false;\n        // if (loadedPage instanceof PdfPage) {\n        crossTable = loadedPage.crossTable;\n        // } else {\n        //     crossTable = (loadedPage as PdfLoadedPage).CrossTable;\n        //     Propertie = PdfCrossTable.Dereference(Resource[DictionaryProperties.Properties]) as PdfDictionary;\n        //     ocproperties = PdfCrossTable.Dereference((loadedPage as PdfLoadedPage).\n        //     Document.Catalog[DictionaryProperties.OCProperties]) as PdfDictionary;\n        // }\n        var saveStream = new PdfStream();\n        var restoreStream = new PdfStream();\n        var saveState = 'q';\n        var newLine = '\\n';\n        var restoreState = 'Q';\n        // for (let index : number = 0; index < contents.Items.length; index++) {\n        //     let obj : IPdfPrimitive = contents[index];\n        //     let stream : PdfStream = crossTable.GetObject(obj) as PdfStream;\n        //     if (stream == null)\n        //         throw new PdfDocumentException(\"Invalid contents array.\");\n        //     // if (stream.Compress)\n        //     {\n        //         if (!loadedPage.Imported)\n        //             stream.Decompress();\n        //     }\n        //     byte[] contentId = stream.Data;\n        //     string str = PdfString.ByteToString(contentId);\n        //     if (!loadedPage.Imported && (contents.Count == 1) && ((stream.Data[stream.Data.Length - 2] ==\n        //     RestoreState) || (stream.Data[stream.Data.Length - 1] == RestoreState)))\n        //     {\n        //         byte[] content = stream.Data;\n        //         byte[] data = new byte[content.Length + 4];\n        //         data[0] = SaveState;\n        //         data[1] = NewLine;\n        //         content.CopyTo(data, 2);\n        //         data[data.Length - 2] = NewLine;\n        //         data[data.Length - 1] = RestoreState;\n        //         stream.Data = data;\n        //     }\n        //     if (ocproperties != null)\n        //     {\n        //         if (Propertie != null)\n        //         {\n        //             foreach (KeyValuePair<PdfName, IPdfPrimitive> prop in Propertie.Items)\n        //             {\n        //                 String Key = prop.Key.ToString();\n        //                 PdfReferenceHolder refh = prop.Value as PdfReferenceHolder;\n        //                 PdfDictionary Dict = null;\n        //                 if (refh != null)\n        //                 {\n        //                     Dict = refh.Object as PdfDictionary;\n        //                 }\n        //                 else\n        //                 {\n        //                     Dict = prop.Value as PdfDictionary;\n        //                 }\n        //                 PdfDictionary m_usage = PdfCrossTable.Dereference(Dict[DictionaryProperties.Usage]) as PdfDictionary;\n        //                 if (m_usage != null)\n        //                 {\n        //                     if (str.Contains(Key))\n        //                     {\n        //                         PdfPageLayer layer = new PdfPageLayer(loadedPage, stream);\n        //                         PdfDictionary printoption = PdfCrossTable.Dereference(m_usage[DictionaryProperties.Print])\n        //                         as PdfDictionary;\n        //                         if (printoption != null)\n        //                         {\n        //                             layer.m_printOption = printoption;\n        //                             foreach (KeyValuePair<PdfName, IPdfPrimitive> value in printoption.Items)\n        //                             {\n        //                                 if (value.Key.Value.Equals(DictionaryProperties.PrintState))\n        //                                 {\n        //                                     string printState = (value.Value as PdfName).Value;\n        //                                     if (printState.Equals(DictionaryProperties.OCGON))\n        //                                     {\n        //                                         layer.PrintState = PdfPrintState.AlwaysPrint;\n        //                                         break;\n        //                                     }\n        //                                     else\n        //                                     {\n        //                                         layer.PrintState = PdfPrintState.NeverPrint;\n        //                                         break;\n        //                                     }\n        //                                 }\n        //                             }\n        //                         }\n        //                         PdfString layerName = PdfCrossTable.Dereference(Dict[DictionaryProperties.Name]) as PdfString;\n        //                         layer.Name = layerName.Value;\n        //                         List.add(layer);\n        //                         isLayerAdded = true;\n        //                         if(!str.Contains(\"EMC\"))\n        //                         break;\n        //                     }\n        //                 }\n        //                 else\n        //                 {\n        //                     if (str.Contains(Key))\n        //                     {\n        //                         PdfPageLayer layer = new PdfPageLayer(loadedPage, stream);\n        //                         List.add(layer);\n        //                         if(Dict.ContainsKey(DictionaryProperties.Name))\n        //                         {\n        //                         PdfString layerName = PdfCrossTable.Dereference(Dict[DictionaryProperties.Name]) as PdfString;\n        //                         layer.Name = layerName.Value;\n        //                         }\n        //                         isLayerAdded = true;\n        //                         break;\n        //                     }\n        //                 }\n        //             }\n        //         }\n        //     }\n        //     if (!isLayerAdded)\n        //     {\n        //         PdfPageLayer layer = new PdfPageLayer(loadedPage, stream);\n        //         List.add(layer);\n        //     }\n        //     else\n        //         isLayerAdded = false;\n        // }\n        var saveData = [];\n        saveData.push(saveState);\n        saveStream.data = saveData;\n        contents.insert(0, new PdfReferenceHolder(saveStream));\n        saveData = [];\n        saveData.push(restoreState);\n        restoreStream.data = saveData;\n        contents.insert(contents.count, new PdfReferenceHolder(restoreStream));\n    };\n    /**\n     * Returns `index of` the `PdfPageLayer` in the collection if exists, -1 otherwise.\n     * @private\n     */\n    PdfPageLayerCollection.prototype.indexOf = function (layer) {\n        if (layer == null) {\n            throw new Error('ArgumentNullException: layer');\n        }\n        var index = this.list.indexOf(layer);\n        return index;\n    };\n    return PdfPageLayerCollection;\n}(PdfCollection));\nexport { PdfPageLayerCollection };\n","import { PdfArray } from './../primitives/pdf-array';\nimport { PdfPageLayerCollection } from './pdf-page-layer-collection';\nimport { DictionaryProperties } from './../input-output/pdf-dictionary-properties';\nimport { PdfResources } from './../graphics/pdf-resources';\n/**\n * The abstract base class for all pages,\n * `PdfPageBase` class provides methods and properties to create PDF pages and its elements.\n * @private\n */\nvar PdfPageBase = /** @class */ (function () {\n    //constructors\n    /**\n     * Initializes a new instance of the `PdfPageBase` class.\n     * @private\n     */\n    function PdfPageBase(dictionary) {\n        /**\n         * `Index` of the default layer.\n         * @default -1.\n         * @private\n         */\n        this.defLayerIndex = -1;\n        /**\n         * Local variable to store if page `updated`.\n         * @default false.\n         * @private\n         */\n        this.modified = false;\n        /**\n         * Instance of `DictionaryProperties` class.\n         * @hidden\n         * @private\n         */\n        this.dictionaryProperties = new DictionaryProperties();\n        this.pageDictionary = dictionary;\n    }\n    Object.defineProperty(PdfPageBase.prototype, \"section\", {\n        //Properties\n        /**\n         * Gets the `section` of a page.\n         * @private\n         */\n        get: function () {\n            // if (this.pdfSection === null) {\n            //     throw new Error('PdfException : Page must be added to some section before using.');\n            // }\n            return this.pdfSection;\n        },\n        set: function (value) {\n            this.pdfSection = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageBase.prototype, \"dictionary\", {\n        /**\n         * Gets the page `dictionary`.\n         * @private\n         */\n        get: function () {\n            return this.pageDictionary;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageBase.prototype, \"element\", {\n        /**\n         * Gets the wrapped `element`.\n         * @private\n         */\n        get: function () {\n            return this.pageDictionary;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageBase.prototype, \"defaultLayer\", {\n        /**\n         * Gets the `default layer` of the page (Read only).\n         * @private\n         */\n        get: function () {\n            var layer = this.layers;\n            var index = this.defaultLayerIndex;\n            var returnlayer = layer.items(index);\n            return returnlayer;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageBase.prototype, \"defaultLayerIndex\", {\n        /**\n         * Gets or sets `index of the default layer`.\n         * @private\n         */\n        get: function () {\n            if (this.layerCollection.count === 0 || this.defLayerIndex === -1) {\n                var layer = this.layerCollection.add();\n                this.defLayerIndex = this.layerCollection.indexOf(layer);\n            }\n            return this.defLayerIndex;\n        },\n        /**\n         * Gets or sets` index of the default layer`.\n         * @private\n         */\n        set: function (value) {\n            if (value < 0 || value > this.layers.count - 1) {\n                throw new Error('ArgumentOutOfRangeException : value, Index can not be less 0 and greater Layers.Count - 1');\n            }\n            else {\n                this.defLayerIndex = value;\n                this.modified = true;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageBase.prototype, \"layers\", {\n        /**\n         * Gets the collection of the page's `layers` (Read only).\n         * @private\n         */\n        get: function () {\n            if (this.layerCollection == null || typeof this.layerCollection === 'undefined') {\n                this.layerCollection = new PdfPageLayerCollection(this);\n            }\n            return this.layerCollection;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Return an instance of `PdfResources` class.\n     * @private\n     */\n    PdfPageBase.prototype.getResources = function () {\n        if (this.resources == null) {\n            this.resources = new PdfResources();\n            this.dictionary.items.setValue(this.dictionaryProperties.resources, this.resources);\n        }\n        return this.resources;\n    };\n    Object.defineProperty(PdfPageBase.prototype, \"contents\", {\n        /**\n         * Gets `array of page's content`.\n         * @private\n         */\n        get: function () {\n            var obj = this.pageDictionary.items.getValue(this.dictionaryProperties.contents);\n            var contents = obj;\n            var rh = obj;\n            if (contents == null) {\n                contents = new PdfArray();\n                this.pageDictionary.items.setValue(this.dictionaryProperties.contents, contents);\n            }\n            return contents;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Sets the `resources`.\n     * @private\n     */\n    PdfPageBase.prototype.setResources = function (res) {\n        this.resources = res;\n        this.dictionary.items.setValue(this.dictionaryProperties.resources, this.resources);\n        this.modified = true;\n    };\n    return PdfPageBase;\n}());\nexport { PdfPageBase };\n","import { PdfArray } from './../primitives/pdf-array';\nimport { PdfReferenceHolder } from './../primitives/pdf-reference';\nimport { DictionaryProperties } from './../input-output/pdf-dictionary-properties';\nimport { SizeF, RectangleF, PointF } from './../drawing/pdf-drawing';\nimport { PdfStringLayouter } from './../graphics/fonts/string-layouter';\nimport { PdfColorSpace } from './../graphics/enum';\n/**\n * `PdfAnnotationCollection` class represents the collection of 'PdfAnnotation' objects.\n * @private\n */\nvar PdfAnnotationCollection = /** @class */ (function () {\n    function PdfAnnotationCollection(page) {\n        // Constants\n        /**\n         * `Error` constant message.\n         * @private\n         */\n        this.alreadyExistsAnnotationError = 'This annotatation had been already added to page';\n        /**\n         * `Error` constant message.\n         * @private\n         */\n        this.missingAnnotationException = 'Annotation is not contained in collection.';\n        /**\n         * Specifies the Internal variable to store fields of `PdfDictionaryProperties`.\n         * @private\n         */\n        this.dictionaryProperties = new DictionaryProperties();\n        /**\n         * Array of the `annotations`.\n         * @private\n         */\n        this.internalAnnotations = new PdfArray();\n        /**\n         * privte `list` for the annotations.\n         * @private\n         */\n        this.lists = [];\n        if (typeof page !== 'undefined') {\n            this.page = page;\n        }\n    }\n    Object.defineProperty(PdfAnnotationCollection.prototype, \"annotations\", {\n        /**\n         * Gets the `PdfAnnotation` object at the specified index. Read-Only.\n         * @private\n         */\n        get: function () {\n            return this.internalAnnotations;\n        },\n        set: function (value) {\n            this.internalAnnotations = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    // Public methods\n    /**\n     * `Adds` a new annotation to the collection.\n     * @private\n     */\n    PdfAnnotationCollection.prototype.add = function (annotation) {\n        // this.SetPrint(annotation);\n        this.doAdd(annotation);\n    };\n    /**\n     * `Adds` a Annotation to collection.\n     * @private\n     */\n    /* tslint:disable */\n    PdfAnnotationCollection.prototype.doAdd = function (annotation) {\n        if (typeof annotation.destination !== 'undefined') {\n            var layout = new PdfStringLayouter();\n            var layoutResult = layout.layout(annotation.text, annotation.font, annotation.stringFormat, new SizeF((annotation.bounds.width), 0), false, new SizeF(0, 0));\n            var lastPosition = annotation.bounds.y;\n            if (layoutResult.lines.length === 1) {\n                var size = annotation.font.measureString(layoutResult.lines[0].text);\n                annotation.bounds = new RectangleF(new PointF(annotation.bounds.x, lastPosition), size);\n                annotation.text = layoutResult.lines[0].text;\n                //Draw Annotation Text.\n                this.page.graphics.drawString(annotation.text, annotation.font, null, annotation.brush, annotation.bounds.x, annotation.bounds.y, annotation.bounds.width, annotation.bounds.height, null);\n                //Add annotation to dictionary.\n                annotation.setPage(this.page);\n                this.setColor(annotation);\n                this.internalAnnotations.add(new PdfReferenceHolder(annotation));\n                this.lists.push(annotation);\n            }\n            else {\n                for (var i = 0; i < layoutResult.lines.length; i++) {\n                    var size = annotation.font.measureString(layoutResult.lines[i].text);\n                    if (i === 0) {\n                        annotation.bounds = new RectangleF(annotation.bounds.x, lastPosition, size.width, size.height);\n                        annotation.text = layoutResult.lines[i].text;\n                        //Draw Annotation Text.\n                        this.page.graphics.drawString(annotation.text, annotation.font, null, annotation.brush, annotation.bounds.x, lastPosition, size.width, size.height, null);\n                        //Add annotation to dictionary.\n                        annotation.setPage(this.page);\n                        this.setColor(annotation);\n                        this.internalAnnotations.add(new PdfReferenceHolder(annotation));\n                        this.lists.push(annotation);\n                        //Update y for drawing next line of the text.\n                        lastPosition += annotation.bounds.height;\n                    }\n                    else {\n                        var annot = annotation.clone();\n                        annot.bounds = new RectangleF(new PointF(annotation.bounds.x, lastPosition), size);\n                        annot.text = layoutResult.lines[i].text;\n                        //Draw Annotation Text.\n                        this.page.graphics.drawString(annot.text, annot.font, null, annot.brush, annot.bounds.x, annot.bounds.y, annot.bounds.width, annot.bounds.height, null);\n                        //Add annotation to dictionary.\n                        annot.setPage(this.page);\n                        this.setColor(annot);\n                        this.internalAnnotations.add(new PdfReferenceHolder(annot));\n                        this.lists.push(annot);\n                        //Update y for drawing next line of the text.\n                        lastPosition += annot.bounds.height;\n                    }\n                }\n            }\n        }\n        else {\n            annotation.setPage(this.page);\n            this.internalAnnotations.add(new PdfReferenceHolder(annotation));\n            return this.lists.push(annotation);\n        }\n    };\n    /* tslint:enable */\n    /**\n     * `Set a color of an annotation`.\n     * @private\n     */\n    PdfAnnotationCollection.prototype.setColor = function (annotation) {\n        var cs = PdfColorSpace.Rgb;\n        var colours = annotation.color.toArray(cs);\n        annotation.dictionary.items.setValue(this.dictionaryProperties.c, colours);\n    };\n    Object.defineProperty(PdfAnnotationCollection.prototype, \"element\", {\n        // IPdfWrapper Members\n        /**\n         * Gets the `Element` representing this object.\n         * @private\n         */\n        get: function () {\n            return this.internalAnnotations;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfAnnotationCollection;\n}());\nexport { PdfAnnotationCollection };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { PdfPageBase } from './pdf-page-base';\nimport { PdfDictionary, SaveTemplateEventHandler } from './../primitives/pdf-dictionary';\nimport { PdfName } from './../primitives/pdf-name';\nimport { PdfReferenceHolder } from './../primitives/pdf-reference';\nimport { SizeF } from './../drawing/pdf-drawing';\nimport { PdfAnnotationCollection } from './../annotations/annotation-collection';\nimport { PdfPageLayer } from './pdf-page-layer';\n/**\n * Provides methods and properties to create pages and its elements.\n * `PdfPage` class inherited from the `PdfPageBase` class.\n * ```typescript\n * // create a new PDF document\n * let document : PdfDocument = new PdfDocument();\n * //\n * // add a new page to the document\n * let page1 : PdfPage = document.pages.add();\n * //\n * // set the font\n * let font : PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 20);\n * // create black brush\n * let blackBrush : PdfSolidBrush = new PdfSolidBrush(new PdfColor(0, 0, 0));\n * // draw the text\n * page1.graphics.drawString('Hello World', font, blackBrush, new PointF(0, 0));\n * // save the document\n * document.save('output.pdf');\n * // destroy the document\n * document.destroy();\n * ```\n */\nvar PdfPage = /** @class */ (function (_super) {\n    __extends(PdfPage, _super);\n    //constructors\n    /**\n     * Initialize the new instance for `PdfPage` class.\n     * @private\n     */\n    function PdfPage() {\n        var _this = _super.call(this, new PdfDictionary()) || this;\n        /**\n         * Stores the instance of `PdfAnnotationCollection` class.\n         * @hidden\n         * @default null\n         * @private\n         */\n        _this.annotationCollection = null;\n        /**\n         * Stores the instance of `PageBeginSave` event for Page Number Field.\n         * @default null\n         * @private\n         */\n        _this.beginSave = null;\n        _this.initialize();\n        return _this;\n    }\n    Object.defineProperty(PdfPage.prototype, \"document\", {\n        //Properties\n        /**\n         * Gets current `document`.\n         * @private\n         */\n        get: function () {\n            if (this.section !== null && this.section.parent !== null) {\n                return this.section.parent.document;\n            }\n            else {\n                return null;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPage.prototype, \"graphics\", {\n        /**\n         * Get the current `graphics`.\n         * ```typescript\n         * // create a new PDF document\n         * let document : PdfDocument = new PdfDocument();\n         * // add a new page to the document\n         * let page1 : PdfPage = document.pages.add();\n         * //\n         * // get graphics\n         * let graphics : PdfGraphics = page1.graphics;\n         * //\n         * // set the font\n         * let font : PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 20);\n         * // create black brush\n         * let blackBrush : PdfSolidBrush = new PdfSolidBrush(new PdfColor(0, 0, 0));\n         * // draw the text\n         * graphics.drawString('Hello World', font, blackBrush, new PointF(0, 0));\n         * // save the document\n         * document.save('output.pdf');\n         * // destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            var result = this.defaultLayer.graphics;\n            result.currentPage = this;\n            return result;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPage.prototype, \"crossTable\", {\n        /**\n         * Gets the `cross table`.\n         * @private\n         */\n        get: function () {\n            if (this.section === null) {\n                throw new Error('PdfDocumentException : Page is not created');\n            }\n            return this.section.parent === null ? this.section.parentDocument.crossTable : this.section.parent.document.crossTable;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPage.prototype, \"size\", {\n        /**\n         * Gets the size of the PDF page- Read only.\n         * @public\n         */\n        get: function () {\n            return this.section.pageSettings.size;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPage.prototype, \"origin\", {\n        /**\n         * Gets the `origin` of the page.\n         * @private\n         */\n        get: function () {\n            return this.section.pageSettings.origin;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPage.prototype, \"annotations\", {\n        /**\n         * Gets a collection of the `annotations` of the page- Read only.\n         * @private\n         */\n        get: function () {\n            if (this.annotationCollection == null) {\n                this.annotationCollection = new PdfAnnotationCollection(this);\n                // if (!this.Dictionary.ContainsKey(this.dictionaryProperties.annots)) {\n                this.dictionary.items.setValue(this.dictionaryProperties.annots, this.annotationCollection.element);\n                // }\n                this.annotationCollection.annotations = this.dictionary.items.getValue(this.dictionaryProperties.annots);\n            }\n            return this.annotationCollection;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    //Implementation\n    /**\n     * `Initializes` a page.\n     * @private\n     */\n    PdfPage.prototype.initialize = function () {\n        this.dictionary.items.setValue(this.dictionaryProperties.type, new PdfName('Page'));\n        this.dictionary.pageBeginDrawTemplate = new SaveTemplateEventHandler(this);\n    };\n    /**\n     * Sets parent `section` to the page.\n     * @private\n     */\n    PdfPage.prototype.setSection = function (section) {\n        this.section = section;\n        this.dictionary.items.setValue(this.dictionaryProperties.parent, new PdfReferenceHolder(section));\n    };\n    /**\n     * `Resets the progress`.\n     * @private\n     */\n    PdfPage.prototype.resetProgress = function () {\n        this.isProgressOn = false;\n    };\n    /**\n     * Get the page size reduced by page margins and page template dimensions.\n     * ```typescript\n     * // create a new PDF document\n     * let document : PdfDocument = new PdfDocument();\n     * // add a pages to the document\n     * let page1 : PdfPage = document.pages.add();\n     * // create new standard font\n     * let font : PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 20);\n     * // set brush\n     * let blackBrush : PdfSolidBrush = new PdfSolidBrush(new PdfColor(0, 0, 0));\n     * //\n     * // set the specified point using `getClientSize` method\n     * let point : PointF = new PointF(page1.getClientSize().width - 200, page1.getClientSize().height - 200);\n     * // draw the text\n     * page1.graphics.drawString('Hello World', font, blackBrush, point);\n     * //\n     * // save the document\n     * document.save('output.pdf');\n     * // destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfPage.prototype.getClientSize = function () {\n        var returnValue = this.section.getActualBounds(this, true);\n        return new SizeF(returnValue.width, returnValue.height);\n    };\n    /**\n     * Helper method to retrive the instance of `PageBeginSave` event for header and footer elements.\n     * @private\n     */\n    PdfPage.prototype.pageBeginSave = function () {\n        var doc = this.document;\n        if (typeof doc !== undefined && doc != null) {\n            this.drawPageTemplates(doc);\n        }\n        if (this.beginSave != null && typeof this.beginSave !== 'undefined') {\n            this.beginSave(this);\n        }\n    };\n    /**\n     * Helper method to draw template elements.\n     * @private\n     */\n    PdfPage.prototype.drawPageTemplates = function (document) {\n        // Draw Background templates.\n        var hasBackTemplates = this.section.containsTemplates(document, this, false);\n        if (hasBackTemplates) {\n            var backLayer = new PdfPageLayer(this, false);\n            this.layers.insert(0, backLayer);\n            this.section.drawTemplates(this, backLayer, document, false);\n            if (backLayer.graphics !== null && typeof backLayer.graphics !== 'undefined') {\n                for (var i = 0; i < backLayer.graphics.automaticFields.automaticFields.length; i++) {\n                    var fieldInfo = backLayer.graphics.automaticFields.automaticFields[i];\n                    fieldInfo.field.performDraw(backLayer.graphics, fieldInfo.location, fieldInfo.scalingX, fieldInfo.scalingY);\n                }\n            }\n        }\n        // Draw Foreground templates.\n        var hasFrontTemplates = this.section.containsTemplates(document, this, true);\n        if (hasFrontTemplates) {\n            var frontLayer = new PdfPageLayer(this, false);\n            this.layers.add(frontLayer);\n            this.section.drawTemplates(this, frontLayer, document, true);\n        }\n    };\n    return PdfPage;\n}(PdfPageBase));\nexport { PdfPage };\n","/**\n * Provides data for `PageAddedEventHandler` event.\n * This event raises when adding the new PDF page to the PDF document.\n */\nvar PageAddedEventArgs = /** @class */ (function () {\n    function PageAddedEventArgs(page) {\n        if (typeof page !== 'undefined') {\n            this.pdfPage = page;\n        }\n        else {\n            this.pdfPage = null;\n        }\n    }\n    Object.defineProperty(PageAddedEventArgs.prototype, \"page\", {\n        /**\n         * Gets the `newly added page`.\n         * @private\n         */\n        get: function () {\n            return this.pdfPage;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PageAddedEventArgs;\n}());\nexport { PageAddedEventArgs };\n","/**\n * Represents the `collection of pages in a section`.\n * @private\n */\nvar PdfSectionPageCollection = /** @class */ (function () {\n    // Constructors\n    /**\n     * Initializes a new instance of the `PdfSectionPageCollection` class.\n     * @private\n     */\n    function PdfSectionPageCollection(section) {\n        //  Fields\n        /**\n         * @hidden\n         * @private\n         */\n        this.pdfSection = null;\n        if (section == null) {\n            throw Error('ArgumentNullException(\"section\")');\n        }\n        this.section = section;\n    }\n    Object.defineProperty(PdfSectionPageCollection.prototype, \"section\", {\n        // Properties\n        /**\n         * Gets the `PdfPage` at the specified index.\n         * @private\n         */\n        get: function () {\n            return this.pdfSection;\n        },\n        set: function (value) {\n            this.pdfSection = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    // Public Methods\n    /**\n     * `Determines` whether the specified page is within the collection.\n     * @private\n     */\n    PdfSectionPageCollection.prototype.contains = function (page) {\n        return this.section.contains(page);\n    };\n    /**\n     * `Removes` the specified page from collection.\n     * @private\n     */\n    PdfSectionPageCollection.prototype.remove = function (page) {\n        this.section.remove(page);\n    };\n    /**\n     * `Adds` a new page from collection.\n     * @private\n     */\n    PdfSectionPageCollection.prototype.add = function () {\n        return this.section.add();\n    };\n    return PdfSectionPageCollection;\n}());\nexport { PdfSectionPageCollection };\n","import { TemplateType } from './../pages/enum';\n// import { PdfStampCollection } from `./../Pages/PdfStampCollection`;\n/**\n * `PdfDocumentTemplate` class encapsulates a page template for all the pages in the document.\n * @private\n */\nvar PdfDocumentTemplate = /** @class */ (function () {\n    // Constructors\n    /**\n     * Initializes a new instance of the `PdfDocumentTemplate` class.\n     * @public\n     */\n    function PdfDocumentTemplate() {\n        //\n    }\n    Object.defineProperty(PdfDocumentTemplate.prototype, \"left\", {\n        // private m_stamps : PdfStampCollection;\n        // Properties\n        /**\n         * `Left` page template object.\n         * @public\n         */\n        get: function () {\n            return this.leftTemplate;\n        },\n        set: function (value) {\n            this.leftTemplate = this.checkElement(value, TemplateType.Left);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocumentTemplate.prototype, \"top\", {\n        /**\n         * `Top` page template object.\n         * @public\n         */\n        get: function () {\n            return this.topTemplate;\n        },\n        set: function (value) {\n            this.topTemplate = this.checkElement(value, TemplateType.Top);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocumentTemplate.prototype, \"right\", {\n        /**\n         * `Right` page template object.\n         * @public\n         */\n        get: function () {\n            return this.rightTemplate;\n        },\n        set: function (value) {\n            this.rightTemplate = this.checkElement(value, TemplateType.Right);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocumentTemplate.prototype, \"bottom\", {\n        /**\n         * `Bottom` page template object.\n         * @public\n         */\n        get: function () {\n            return this.bottomTemplate;\n        },\n        set: function (value) {\n            this.bottomTemplate = this.checkElement(value, TemplateType.Bottom);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocumentTemplate.prototype, \"EvenLeft\", {\n        /**\n         * `EvenLeft` page template object.\n         * @public\n         */\n        get: function () {\n            return this.evenLeft;\n        },\n        set: function (value) {\n            this.evenLeft = this.checkElement(value, TemplateType.Left);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocumentTemplate.prototype, \"EvenTop\", {\n        /**\n         * `EvenTop` page template object.\n         * @public\n         */\n        get: function () {\n            return this.evenTop;\n        },\n        set: function (value) {\n            this.evenTop = this.checkElement(value, TemplateType.Top);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocumentTemplate.prototype, \"EvenRight\", {\n        /**\n         * `EvenRight` page template object.\n         * @public\n         */\n        get: function () {\n            return this.evenRight;\n        },\n        set: function (value) {\n            this.evenRight = this.checkElement(value, TemplateType.Right);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocumentTemplate.prototype, \"EvenBottom\", {\n        /**\n         * `EvenBottom` page template object.\n         * @public\n         */\n        get: function () {\n            return this.evenBottom;\n        },\n        set: function (value) {\n            this.evenBottom = this.checkElement(value, TemplateType.Bottom);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocumentTemplate.prototype, \"OddLeft\", {\n        /**\n         * `OddLeft` page template object.\n         * @public\n         */\n        get: function () {\n            return this.oddLeft;\n        },\n        set: function (value) {\n            this.oddLeft = this.checkElement(value, TemplateType.Left);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocumentTemplate.prototype, \"OddTop\", {\n        /**\n         * `OddTop` page template object.\n         * @public\n         */\n        get: function () {\n            return this.oddTop;\n        },\n        set: function (value) {\n            this.oddTop = this.checkElement(value, TemplateType.Top);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocumentTemplate.prototype, \"OddRight\", {\n        /**\n         * `OddRight` page template object.\n         * @public\n         */\n        get: function () {\n            return this.oddRight;\n        },\n        set: function (value) {\n            this.oddRight = this.checkElement(value, TemplateType.Right);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocumentTemplate.prototype, \"OddBottom\", {\n        /**\n         * `OddBottom` page template object.\n         * @public\n         */\n        get: function () {\n            return this.oddBottom;\n        },\n        set: function (value) {\n            this.oddBottom = this.checkElement(value, TemplateType.Bottom);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    // Implementation\n    /**\n     * Returns `left` template.\n     * @public\n     */\n    PdfDocumentTemplate.prototype.getLeft = function (page) {\n        if (page == null) {\n            throw new Error('ArgumentNullException:page');\n        }\n        var template = null;\n        // if (page.Document.Pages != null) {\n        var even = this.isEven(page);\n        if (even) {\n            template = (this.EvenLeft != null) ? this.EvenLeft : this.left;\n        }\n        else {\n            template = (this.OddLeft != null) ? this.OddLeft : this.left;\n        }\n        // }\n        return template;\n    };\n    /**\n     * Returns `top` template.\n     * @public\n     */\n    PdfDocumentTemplate.prototype.getTop = function (page) {\n        if (page == null) {\n            throw new Error('ArgumentNullException:page');\n        }\n        var template = null;\n        // if (page.Document.Pages != null) {\n        var even = this.isEven(page);\n        if (even) {\n            template = (this.EvenTop != null) ? this.EvenTop : this.top;\n        }\n        else {\n            template = (this.OddTop != null) ? this.OddTop : this.top;\n        }\n        // }\n        return template;\n    };\n    /**\n     * Returns `right` template.\n     * @public\n     */\n    PdfDocumentTemplate.prototype.getRight = function (page) {\n        if (page == null) {\n            throw new Error('ArgumentNullException:page');\n        }\n        var template = null;\n        // if (page.Document.Pages != null) {\n        var even = this.isEven(page);\n        if (even) {\n            template = (this.EvenRight != null) ? this.EvenRight : this.right;\n        }\n        else {\n            template = (this.OddRight != null) ? this.OddRight : this.right;\n        }\n        // }\n        return template;\n    };\n    /**\n     * Returns `bottom` template.\n     * @public\n     */\n    PdfDocumentTemplate.prototype.getBottom = function (page) {\n        if (page == null) {\n            throw new Error('ArgumentNullException:page');\n        }\n        var template = null;\n        // if (page.Document.Pages != null) {\n        var even = this.isEven(page);\n        if (even) {\n            template = (this.EvenBottom != null) ? this.EvenBottom : this.bottom;\n        }\n        else {\n            template = (this.OddBottom != null) ? this.OddBottom : this.bottom;\n        }\n        // }\n        return template;\n    };\n    /**\n     * Checks whether the page `is even`.\n     * @private\n     */\n    PdfDocumentTemplate.prototype.isEven = function (page) {\n        var pages = page.section.document.pages;\n        var index = 0;\n        if (pages.pageCollectionIndex.containsKey(page)) {\n            index = pages.pageCollectionIndex.getValue(page) + 1;\n        }\n        else {\n            index = pages.indexOf(page) + 1;\n        }\n        var even = ((index % 2) === 0);\n        return even;\n    };\n    /**\n     * Checks a `template element`.\n     * @private\n     */\n    PdfDocumentTemplate.prototype.checkElement = function (templateElement, type) {\n        if (templateElement != null) {\n            if ((typeof templateElement.type !== 'undefined') && (templateElement.type !== TemplateType.None)) {\n                throw new Error('NotSupportedException:Can not reassign the template element. Please, create new one.');\n            }\n            templateElement.type = type;\n        }\n        return templateElement;\n    };\n    return PdfDocumentTemplate;\n}());\nexport { PdfDocumentTemplate };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * PdfSectionTemplate.ts class for EJ2-PDF\n */\nimport { PdfDocumentTemplate } from './../document/pdf-document-template';\n/**\n * Represents a `page template` for all the pages in the section.\n */\nvar PdfSectionTemplate = /** @class */ (function (_super) {\n    __extends(PdfSectionTemplate, _super);\n    // Constructors\n    /**\n     * `Creates a new object`.\n     * @private\n     */\n    function PdfSectionTemplate() {\n        var _this = _super.call(this) || this;\n        _this.leftValue = _this.topValue = _this.rightValue = _this.bottomValue = _this.stampValue = true;\n        return _this;\n    }\n    Object.defineProperty(PdfSectionTemplate.prototype, \"applyDocumentLeftTemplate\", {\n        // Properties\n        /**\n         * Gets or sets value indicating whether parent `Left page template should be used or not`.\n         * @private\n         */\n        get: function () {\n            return this.leftValue;\n        },\n        set: function (value) {\n            this.leftValue = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfSectionTemplate.prototype, \"applyDocumentTopTemplate\", {\n        /**\n         * Gets or sets value indicating whether parent `Top page template should be used or not`.\n         * @private\n         */\n        get: function () {\n            return this.topValue;\n        },\n        set: function (value) {\n            this.topValue = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfSectionTemplate.prototype, \"applyDocumentRightTemplate\", {\n        /**\n         * Gets or sets value indicating whether parent `Right page template should be used or not`.\n         * @private\n         */\n        get: function () {\n            return this.rightValue;\n        },\n        set: function (value) {\n            this.rightValue = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfSectionTemplate.prototype, \"applyDocumentBottomTemplate\", {\n        /**\n         * Gets or sets value indicating whether parent `Bottom page template should be used or not`.\n         * @private\n         */\n        get: function () {\n            return this.bottomValue;\n        },\n        set: function (value) {\n            this.bottomValue = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfSectionTemplate.prototype, \"applyDocumentStamps\", {\n        /**\n         * Gets or sets value indicating whether the `stamp value` is true or not.\n         * @private\n         */\n        get: function () {\n            return this.stampValue;\n        },\n        set: function (value) {\n            this.stampValue = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfSectionTemplate;\n}(PdfDocumentTemplate));\nexport { PdfSectionTemplate };\n","import { PdfPage } from './pdf-page';\nimport { PageAddedEventArgs } from './page-added-event-arguments';\nimport { PdfReferenceHolder } from './../primitives/pdf-reference';\nimport { PdfArray } from './../primitives/pdf-array';\nimport { PdfNumber } from './../primitives/pdf-number';\nimport { PdfName } from './../primitives/pdf-name';\nimport { PdfDictionary } from './../primitives/pdf-dictionary';\nimport { SaveSectionEventHandler } from './../primitives/pdf-dictionary';\nimport { DictionaryProperties } from './../input-output/pdf-dictionary-properties';\nimport { PdfSectionCollection } from './pdf-section-collection';\nimport { PdfSectionPageCollection } from './pdf-section-page-collection';\nimport { RectangleF } from './../drawing/pdf-drawing';\nimport { PdfSectionTemplate } from './pdf-section-templates';\n/**\n * Represents a `section` entity. A section it's a set of the pages with similar page settings.\n */\nvar PdfSection = /** @class */ (function () {\n    function PdfSection(document, pageSettings) {\n        //Fields\n        //public PageAdded() : PageAddedEventArgs.PageAddedEventHandler = new PageAddedEventArgs.PageAddedEventHandler(Object,args)\n        /**\n         * @hidden\n         * @private\n         */\n        this.pageAdded = new PageAddedEventArgs();\n        /**\n         * @hidden\n         * @private\n         */\n        this.pdfPages = [];\n        /**\n         * @hidden\n         * @private\n         */\n        this.dictionaryProperties = new DictionaryProperties();\n        this.pdfDocument = document;\n        if (typeof pageSettings === 'undefined') {\n            this.settings = document.pageSettings.clone();\n            this.initialSettings = this.settings.clone();\n        }\n        else {\n            this.settings = pageSettings.clone();\n            this.initialSettings = this.settings.clone();\n        }\n        this.initialize();\n    }\n    Object.defineProperty(PdfSection.prototype, \"parent\", {\n        //Property\n        /**\n         * Gets or sets the `parent`.\n         * @private\n         */\n        get: function () {\n            return this.sectionCollection;\n        },\n        set: function (value) {\n            this.sectionCollection = value;\n            this.section.items.setValue(this.dictionaryProperties.parent, new PdfReferenceHolder(value));\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfSection.prototype, \"parentDocument\", {\n        /**\n         * Gets the `parent document`.\n         * @private\n         */\n        get: function () {\n            return this.pdfDocument;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfSection.prototype, \"pageSettings\", {\n        /**\n         * Gets or sets the `page settings` of the section.\n         * @private\n         */\n        get: function () {\n            return this.settings;\n        },\n        set: function (value) {\n            if (value != null) {\n                this.settings = value;\n            }\n            else {\n                throw Error('Value can not be null.');\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfSection.prototype, \"element\", {\n        /**\n         * Gets the wrapped `element`.\n         * @private\n         */\n        get: function () {\n            return this.section;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfSection.prototype, \"count\", {\n        /**\n         * Gets the `count` of the pages in the section.\n         * @private\n         */\n        get: function () {\n            return this.pagesReferences.count;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfSection.prototype, \"template\", {\n        /**\n         * Gets or sets a `template` for the pages in the section.\n         * @private\n         */\n        get: function () {\n            if (this.pageTemplate == null) {\n                this.pageTemplate = new PdfSectionTemplate();\n            }\n            return this.pageTemplate;\n        },\n        set: function (value) {\n            this.pageTemplate = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfSection.prototype, \"document\", {\n        /**\n         * Gets the `document`.\n         * @private\n         */\n        get: function () {\n            return this.sectionCollection.document;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfSection.prototype, \"pages\", {\n        /**\n         * Gets the collection of `pages` in a section (Read only)\n         * @private\n         */\n        get: function () {\n            if (this.pagesCollection == null || typeof this.pagesCollection === 'undefined') {\n                this.pagesCollection = new PdfSectionPageCollection(this);\n            }\n            return this.pagesCollection;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    //methods\n    /**\n     * `Return the page collection` of current section.\n     * @private\n     */\n    PdfSection.prototype.getPages = function () {\n        return this.pdfPages;\n    };\n    /**\n     * `Translates` point into native coordinates of the page.\n     * @private\n     */\n    PdfSection.prototype.pointToNativePdf = function (page, point) {\n        var bounds = this.getActualBounds(page, true);\n        point.x += bounds.x;\n        point.y = this.pageSettings.height - (point.y);\n        return point;\n    };\n    /**\n     * Sets the page setting of the current section.\n     * @public\n     * @param settings Instance of `PdfPageSettings`\n     */\n    PdfSection.prototype.setPageSettings = function (settings) {\n        this.settings = settings;\n        this.state.orientation = settings.orientation;\n        this.state.rotate = settings.rotate;\n        this.state.size = settings.size;\n        this.state.origin = settings.origin;\n    };\n    /**\n     * `Initializes` the object.\n     * @private\n     */\n    PdfSection.prototype.initialize = function () {\n        this.pagesReferences = new PdfArray();\n        this.section = new PdfDictionary();\n        this.state = new PageSettingsState(this.pdfDocument);\n        this.section.sectionBeginSave = new SaveSectionEventHandler(this, this.state);\n        this.pageCount = new PdfNumber(0);\n        this.section.items.setValue(this.dictionaryProperties.count, this.pageCount);\n        this.section.items.setValue(this.dictionaryProperties.type, new PdfName(this.dictionaryProperties.pages));\n        this.section.items.setValue(this.dictionaryProperties.kids, this.pagesReferences);\n    };\n    /**\n     * Checks whether any template should be printed on this layer.\n     * @private\n     * @param document The parent document.\n     * @param page The parent page.\n     * @param foreground Layer z-order.\n     * @returns True - if some content should be printed on the layer, False otherwise.\n     */\n    PdfSection.prototype.containsTemplates = function (document, page, foreground) {\n        var documentHeaders = this.getDocumentTemplates(document, page, foreground);\n        var sectionTemplates = this.getSectionTemplates(page, foreground);\n        return (documentHeaders.length > 0 || sectionTemplates.length > 0);\n    };\n    /**\n     * Returns array of the document templates.\n     * @private\n     * @param document The parent document.\n     * @param page The parent page.\n     * @param headers If true - return headers/footers, if false - return simple templates.\n     * @param foreground If true - return foreground templates, if false - return background templates.\n     * @returns Returns array of the document templates.\n     */\n    /* tslint:disable */\n    PdfSection.prototype.getDocumentTemplates = function (document, page, foreground) {\n        var templates = [];\n        if (this.template.applyDocumentTopTemplate && document.template.getTop(page) != null) {\n            if ((!(document.template.getTop(page).foreground || foreground)) || (document.template.getTop(page).foreground && foreground)) {\n                templates.push(document.template.getTop(page));\n            }\n        }\n        if (this.template.applyDocumentBottomTemplate && document.template.getBottom(page) != null) {\n            if ((!(document.template.getBottom(page).foreground || foreground)) || (document.template.getBottom(page).foreground && foreground)) {\n                templates.push(document.template.getBottom(page));\n            }\n        }\n        if (this.template.applyDocumentLeftTemplate && document.template.getLeft(page) != null) {\n            if ((!(document.template.getLeft(page).foreground || foreground)) || (document.template.getLeft(page).foreground && foreground)) {\n                templates.push(document.template.getLeft(page));\n            }\n        }\n        if (this.template.applyDocumentRightTemplate && document.template.getRight(page) != null) {\n            if ((!(document.template.getRight(page).foreground || foreground)) || (document.template.getRight(page).foreground && foreground)) {\n                templates.push(document.template.getRight(page));\n            }\n        }\n        return templates;\n    };\n    /**\n     * Returns array of the section templates.\n     * @private\n     * @param page The parent page.\n     * @param foreground If true - return foreground templates, if false - return background templates.\n     * @returns Returns array of the section templates.\n     */\n    /* tslint:disable */\n    PdfSection.prototype.getSectionTemplates = function (page, foreground) {\n        var templates = [];\n        if (this.template.getTop(page) != null) {\n            var pageTemplate = this.template.getTop(page);\n            if ((!(pageTemplate.foreground || foreground)) || (pageTemplate.foreground && foreground)) {\n                templates.push(pageTemplate);\n            }\n        }\n        if (this.template.getBottom(page) != null) {\n            var pageTemplate = this.template.getBottom(page);\n            if ((!(pageTemplate.foreground || foreground)) || (pageTemplate.foreground && foreground)) {\n                templates.push(pageTemplate);\n            }\n        }\n        if (this.template.getLeft(page) != null) {\n            var pageTemplate = this.template.getLeft(page);\n            if ((!(pageTemplate.foreground || foreground)) || (pageTemplate.foreground && foreground)) {\n                templates.push(pageTemplate);\n            }\n        }\n        if (this.template.getRight(page) != null) {\n            var pageTemplate = this.template.getRight(page);\n            if ((!(pageTemplate.foreground || foreground)) || (pageTemplate.foreground && foreground)) {\n                templates.push(pageTemplate);\n            }\n        }\n        return templates;\n    };\n    /* tslint:enable */\n    /**\n     * `Adds` the specified page.\n     * @private\n     */\n    PdfSection.prototype.add = function (page) {\n        if (typeof page === 'undefined') {\n            var page_1 = new PdfPage();\n            this.add(page_1);\n            return page_1;\n        }\n        else {\n            var r = this.checkPresence(page);\n            this.pdfPages.push(page);\n            this.pagesReferences.add(r);\n            page.setSection(this);\n            page.resetProgress();\n            this.pageAddedMethod(page);\n        }\n    };\n    /**\n     * `Checks the presence`.\n     * @private\n     */\n    PdfSection.prototype.checkPresence = function (page) {\n        var rh = new PdfReferenceHolder(page);\n        var contains = false;\n        var sc = this.parent;\n        for (var index = 0; index < sc.section.length; index++) {\n            var section = sc.section[index];\n            contains = contains || section.contains(page);\n        }\n        return rh;\n    };\n    /**\n     * `Determines` whether the page in within the section.\n     * @private\n     */\n    PdfSection.prototype.contains = function (page) {\n        var index = this.indexOf(page);\n        return (0 <= index);\n    };\n    /**\n     * Get the `index of` the page.\n     * @private\n     */\n    PdfSection.prototype.indexOf = function (page) {\n        for (var index = 0; index < this.pdfPages.length; index++) {\n            if (this.pdfPages[index] === page) {\n                return this.pdfPages.indexOf(page);\n            }\n        }\n        var r = new PdfReferenceHolder(page);\n        return this.pagesReferences.indexOf(r);\n    };\n    /**\n     * Call two event's methods.\n     * @hidden\n     * @private\n     */\n    PdfSection.prototype.pageAddedMethod = function (page) {\n        //Create event's arguments\n        var args = new PageAddedEventArgs(page);\n        this.onPageAdded(args);\n        var parent = this.parent;\n        parent.document.pages.onPageAdded(args);\n        this.pageCount.intValue = this.count;\n    };\n    /**\n     * Called when the page has been added.\n     * @hidden\n     * @private\n     */\n    PdfSection.prototype.onPageAdded = function (args) {\n        //\n    };\n    PdfSection.prototype.getActualBounds = function (arg1, arg2, arg3) {\n        if (arg1 instanceof PdfPage && typeof arg2 === 'boolean') {\n            var result = void 0;\n            var document_1 = this.parent.document;\n            result = this.getActualBounds(document_1, arg1, arg2);\n            return result;\n        }\n        else {\n            arg1 = arg1;\n            arg2 = arg2;\n            arg3 = arg3;\n            var bounds = new RectangleF(0, 0, 0, 0);\n            bounds.height = (arg3) ? this.pageSettings.size.height : this.pageSettings.getActualSize().height;\n            bounds.width = (arg3) ? this.pageSettings.size.width : this.pageSettings.getActualSize().width;\n            var left = this.getLeftIndentWidth(arg1, arg2, arg3);\n            var top_1 = this.getTopIndentHeight(arg1, arg2, arg3);\n            var right = this.getRightIndentWidth(arg1, arg2, arg3);\n            var bottom = this.getBottomIndentHeight(arg1, arg2, arg3);\n            bounds.x += left;\n            bounds.y += top_1;\n            bounds.width -= (left + right);\n            bounds.height -= (top_1 + bottom);\n            return bounds;\n        }\n    };\n    /**\n     * Calculates width of the `left indent`.\n     * @private\n     */\n    PdfSection.prototype.getLeftIndentWidth = function (document, page, includeMargins) {\n        if (document == null) {\n            throw new Error('ArgumentNullException:document');\n        }\n        if (page == null) {\n            throw new Error('ArgumentNullException:page');\n        }\n        var value = (includeMargins) ? this.pageSettings.margins.left : 0;\n        var templateWidth = (this.template.getLeft(page) != null) ? this.template.getLeft(page).width : 0;\n        var docTemplateWidth = (document.template.getLeft(page) != null) ? document.template.getLeft(page).width : 0;\n        value += (this.template.applyDocumentLeftTemplate) ? Math.max(templateWidth, docTemplateWidth) : templateWidth;\n        return value;\n    };\n    /**\n     * Calculates `Height` of the top indent.\n     * @private\n     */\n    PdfSection.prototype.getTopIndentHeight = function (document, page, includeMargins) {\n        if (document == null) {\n            throw new Error('ArgumentNullException:document');\n        }\n        if (page == null) {\n            throw new Error('ArgumentNullException:page');\n        }\n        var value = (includeMargins) ? this.pageSettings.margins.top : 0;\n        var templateHeight = (this.template.getTop(page) != null) ? this.template.getTop(page).height : 0;\n        var docTemplateHeight = (document.template.getTop(page) != null) ? document.template.getTop(page).height : 0;\n        value += (this.template.applyDocumentTopTemplate) ? Math.max(templateHeight, docTemplateHeight) : templateHeight;\n        return value;\n    };\n    /**\n     * Calculates `width` of the right indent.\n     * @private\n     */\n    PdfSection.prototype.getRightIndentWidth = function (document, page, includeMargins) {\n        if (document == null) {\n            throw new Error('ArgumentNullException:document');\n        }\n        if (page == null) {\n            throw new Error('ArgumentNullException:page');\n        }\n        var value = (includeMargins) ? this.pageSettings.margins.right : 0;\n        var templateWidth = (this.template.getRight(page) != null) ? this.template.getRight(page).width : 0;\n        var docTemplateWidth = (document.template.getRight(page) != null) ? document.template.getRight(page).width : 0;\n        value += (this.template.applyDocumentRightTemplate) ? Math.max(templateWidth, docTemplateWidth) : templateWidth;\n        return value;\n    };\n    /**\n     * Calculates `Height` of the bottom indent.\n     * @private\n     */\n    PdfSection.prototype.getBottomIndentHeight = function (document, page, includeMargins) {\n        if (document == null) {\n            throw new Error('ArgumentNullException:document');\n        }\n        if (page == null) {\n            throw new Error('ArgumentNullException:page');\n        }\n        var value = (includeMargins) ? this.pageSettings.margins.bottom : 0;\n        var templateHeight = (this.template.getBottom(page) != null) ? this.template.getBottom(page).height : 0;\n        var docTemplateHeight = (document.template.getBottom(page) != null) ? document.template.getBottom(page).height : 0;\n        value += (this.template.applyDocumentBottomTemplate) ? Math.max(templateHeight, docTemplateHeight) : templateHeight;\n        return value;\n    };\n    /**\n     * `Removes` the page from the section.\n     * @private\n     */\n    PdfSection.prototype.remove = function (page) {\n        if (page == null) {\n            throw Error('ArgumentNullException(\"page\")');\n        }\n        var index = this.pdfPages.indexOf(page);\n        this.pagesReferences.removeAt(index);\n        var temproaryPages = [];\n        for (var j = 0; j < index; j++) {\n            temproaryPages.push(this.pdfPages[j]);\n        }\n        for (var j = index + 1; j < this.pdfPages.length; j++) {\n            temproaryPages.push(this.pdfPages[j]);\n        }\n        this.pdfPages = temproaryPages;\n    };\n    /**\n     * In fills dictionary by the data from `Page settings`.\n     * @private\n     */\n    PdfSection.prototype.applyPageSettings = function (container, parentSettings, state) {\n        var bounds = new RectangleF(state.origin, state.size);\n        container.items.setValue(this.dictionaryProperties.mediaBox, PdfArray.fromRectangle(bounds));\n        var rotate = 0;\n        rotate = PdfSectionCollection.rotateFactor * state.rotate;\n        var angle = new PdfNumber(rotate);\n        container.items.setValue(this.dictionaryProperties.rotate, angle);\n    };\n    /**\n     * Catches the Save event of the dictionary.\n     * @hidden\n     * @private\n     */\n    PdfSection.prototype.beginSave = function (state, writer) {\n        var doc = writer.document;\n        this.applyPageSettings(this.section, doc.pageSettings, state);\n    };\n    /**\n     * Draws page templates on the page.\n     * @private\n     */\n    PdfSection.prototype.drawTemplates = function (page, layer, document, foreground) {\n        var documentHeaders = this.getDocumentTemplates(document, page, foreground);\n        var sectionHeaders = this.getSectionTemplates(page, foreground);\n        this.drawTemplatesHelper(layer, document, documentHeaders);\n        this.drawTemplatesHelper(layer, document, sectionHeaders);\n    };\n    /**\n     * Draws page templates on the page.\n     * @private\n     */\n    PdfSection.prototype.drawTemplatesHelper = function (layer, document, templates) {\n        if (templates != null && templates.length > 0) {\n            var len = templates.length;\n            for (var i = 0; i < len; i++) {\n                var template = templates[i];\n                template.draw(layer, document);\n            }\n        }\n    };\n    return PdfSection;\n}());\nexport { PdfSection };\nvar PageSettingsState = /** @class */ (function () {\n    //Public Constructor\n    /**\n     * New instance to store the `PageSettings`.\n     * @private\n     */\n    function PageSettingsState(document) {\n        this.pageOrientation = document.pageSettings.orientation;\n        this.pageRotate = document.pageSettings.rotate;\n        this.pageSize = document.pageSettings.size;\n        this.pageOrigin = document.pageSettings.origin;\n    }\n    Object.defineProperty(PageSettingsState.prototype, \"orientation\", {\n        //public Properties\n        /**\n         * @hidden\n         * @private\n         */\n        get: function () {\n            return this.pageOrientation;\n        },\n        set: function (value) {\n            this.pageOrientation = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PageSettingsState.prototype, \"rotate\", {\n        /**\n         * @hidden\n         * @private\n         */\n        get: function () {\n            return this.pageRotate;\n        },\n        set: function (value) {\n            this.pageRotate = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PageSettingsState.prototype, \"size\", {\n        /**\n         * @hidden\n         * @private\n         */\n        get: function () {\n            return this.pageSize;\n        },\n        set: function (value) {\n            this.pageSize = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PageSettingsState.prototype, \"origin\", {\n        /**\n         * @hidden\n         * @private\n         */\n        get: function () {\n            return this.pageOrigin;\n        },\n        set: function (value) {\n            this.pageOrigin = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PageSettingsState;\n}());\nexport { PageSettingsState };\n","import { PdfNumber } from './../primitives/pdf-number';\nimport { PdfName } from './../primitives/pdf-name';\nimport { PdfArray } from './../primitives/pdf-array';\nimport { PdfDictionary, SaveSectionCollectionEventHandler } from './../primitives/pdf-dictionary';\nimport { PdfReferenceHolder } from './../primitives/pdf-reference';\nimport { RectangleF, PointF } from './../drawing/pdf-drawing';\nimport { PdfSection } from './pdf-section';\nimport { DictionaryProperties } from './../input-output/pdf-dictionary-properties';\n/**\n * Represents the `collection of the sections`.\n * @private\n */\nvar PdfSectionCollection = /** @class */ (function () {\n    //constructor\n    /**\n     * Initializes a new instance of the `PdfSectionCollection` class.\n     * @private\n     */\n    function PdfSectionCollection(document) {\n        /**\n         * @hidden\n         * @private\n         */\n        this.sections = [];\n        /**\n         * @hidden\n         * @private\n         */\n        this.dictionaryProperties = new DictionaryProperties();\n        // if (document === null) {\n        //     throw new Error('ArgumentNullException : document');\n        // }\n        this.pdfDocument = document.clone();\n        this.initialize();\n    }\n    Object.defineProperty(PdfSectionCollection.prototype, \"section\", {\n        //Properties\n        /**\n         * Gets the `Section` collection.\n         */\n        get: function () {\n            return this.sections;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfSectionCollection.prototype, \"document\", {\n        /**\n         * Gets a parent `document`.\n         * @private\n         */\n        get: function () {\n            return this.pdfDocument;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfSectionCollection.prototype, \"count\", {\n        /**\n         * Gets the `number of sections` in a document.\n         * @private\n         */\n        get: function () {\n            return this.sections.length;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfSectionCollection.prototype, \"element\", {\n        /**\n         * Gets the wrapped `element`.\n         * @private\n         */\n        get: function () {\n            return this.pages;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    //Methods\n    /**\n     * `Initializes the object`.\n     * @private\n     */\n    PdfSectionCollection.prototype.initialize = function () {\n        this.sectionCount = new PdfNumber(0);\n        this.sectionCollection = new PdfArray();\n        this.pages = new PdfDictionary();\n        this.pages.beginSave = new SaveSectionCollectionEventHandler(this);\n        this.pages.items.setValue(this.dictionaryProperties.type, new PdfName('Pages'));\n        this.pages.items.setValue(this.dictionaryProperties.kids, this.sectionCollection);\n        this.pages.items.setValue(this.dictionaryProperties.count, this.sectionCount);\n        this.pages.items.setValue(this.dictionaryProperties.resources, new PdfDictionary());\n        this.setPageSettings(this.pages, this.pdfDocument.pageSettings);\n    };\n    /**\n     * Initializes a new instance of the `PdfSectionCollection` class.\n     * @private\n     */\n    PdfSectionCollection.prototype.pdfSectionCollection = function (index) {\n        if (index < 0 || index >= this.count) {\n            throw new Error('IndexOutOfRangeException()');\n        }\n        return this.sections[index];\n    };\n    /**\n     * In fills dictionary by the data from `Page settings`.\n     * @private\n     */\n    PdfSectionCollection.prototype.setPageSettings = function (container, pageSettings) {\n        // if (container === null) {\n        //     throw new Error('ArgumentNullException : container');\n        // }\n        // if (pageSettings === null) {\n        //     throw new Error('ArgumentNullException : pageSettings');\n        // }\n        var bounds = new RectangleF(new PointF(), pageSettings.size);\n        container.items.setValue(this.dictionaryProperties.mediaBox, PdfArray.fromRectangle(bounds));\n    };\n    /**\n     * `Adds` the specified section.\n     * @private\n     */\n    PdfSectionCollection.prototype.add = function (section) {\n        if (typeof section === 'undefined') {\n            var section_1 = new PdfSection(this.pdfDocument);\n            this.add(section_1);\n            return section_1;\n        }\n        else {\n            // if (section === null) {\n            //     throw new Error('ArgumentNullException : section');\n            // }\n            var r = this.checkSection(section);\n            this.sections.push(section);\n            section.parent = this;\n            this.sectionCollection.add(r);\n            return this.sections.indexOf(section);\n        }\n    };\n    /**\n     * `Checks` if the section is within the collection.\n     * @private\n     */\n    PdfSectionCollection.prototype.checkSection = function (section) {\n        var r = new PdfReferenceHolder(section);\n        var contains = this.sectionCollection.contains(r);\n        // if (contains) {\n        //     throw new Error('ArgumentException : The object can not be added twice to the collection,section');\n        // }\n        return r;\n    };\n    /**\n     * Catches the Save event of the dictionary to `count the pages`.\n     * @private\n     */\n    PdfSectionCollection.prototype.countPages = function () {\n        var count = 0;\n        this.sections.forEach(function (n) { return (count += n.count); });\n        return count;\n    };\n    /**\n     * Catches the Save event of the dictionary to `count the pages`.\n     * @hidden\n     * @private\n     */\n    PdfSectionCollection.prototype.beginSave = function () {\n        this.sectionCount.intValue = this.countPages();\n    };\n    //Fields\n    /**\n     * Rotate factor for page `rotation`.\n     * @default 90\n     * @private\n     */\n    PdfSectionCollection.rotateFactor = 90;\n    return PdfSectionCollection;\n}());\nexport { PdfSectionCollection };\n","import { PdfPage } from './pdf-page';\nimport { Dictionary } from './../collections/dictionary';\n/**\n * Represents a virtual collection of all the pages in the document.\n * @private\n */\nvar PdfDocumentPageCollection = /** @class */ (function () {\n    //constructor\n    /**\n     * Initializes a new instance of the `PdfPageCollection` class.\n     * @private\n     */\n    function PdfDocumentPageCollection(document) {\n        /**\n         * It holds the page collection with the `index`.\n         * @private\n         */\n        this.pdfPageCollectionIndex = new Dictionary();\n        this.document = document;\n    }\n    Object.defineProperty(PdfDocumentPageCollection.prototype, \"count\", {\n        //Property\n        /**\n         * Gets the total `number of the pages`.\n         * @private\n         */\n        get: function () {\n            return this.countPages();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocumentPageCollection.prototype, \"pageCollectionIndex\", {\n        /**\n         * Gets a `page index` from the document.\n         * @private\n         */\n        get: function () {\n            return this.pdfPageCollectionIndex;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfDocumentPageCollection.prototype.add = function (page) {\n        if (typeof page === 'undefined') {\n            var page_1 = new PdfPage();\n            this.add(page_1);\n            return page_1;\n        }\n        else {\n            var section = this.getLastSection();\n            section.add(page);\n        }\n    };\n    /**\n     * Returns `last section` in the document.\n     * @private\n     */\n    PdfDocumentPageCollection.prototype.getLastSection = function () {\n        var sc = this.document.sections;\n        if (sc.section.length === 0) {\n            sc.add();\n        }\n        var section = sc.section[sc.section.length - 1];\n        return section;\n    };\n    /**\n     * Called when `new page has been added`.\n     * @private\n     */\n    PdfDocumentPageCollection.prototype.onPageAdded = function (args) {\n        // if (PageAdded !== null)\n        // {\n        //     PageAdded(this, args);\n        // }\n    };\n    /**\n     * Gets the `total number of pages`.\n     * @private\n     */\n    PdfDocumentPageCollection.prototype.countPages = function () {\n        var sc = this.document.sections;\n        var count = 0;\n        for (var index = 0; index < sc.section.length; index++) {\n            count += sc.section[index].count;\n        }\n        return count;\n    };\n    /**\n     * Gets the `page object` from page index.\n     * @private\n     */\n    PdfDocumentPageCollection.prototype.getPageByIndex = function (index) {\n        return this.getPage(index);\n    };\n    /**\n     * Gets a page by its `index` in the document.\n     * @private\n     */\n    PdfDocumentPageCollection.prototype.getPage = function (index) {\n        if ((index < 0) || (index >= this.count)) {\n            throw Error('ArgumentOutOfRangeException(\"index\", \"Value can not be less 0\")');\n        }\n        var page = null;\n        var sectionStartIndex = 0;\n        var sectionCount = 0;\n        var pageIndex = 0;\n        var length = this.document.sections.count;\n        for (var i = 0; i < length; i++) {\n            var section = this.document.sections.section[i];\n            sectionCount = section.count;\n            pageIndex = index - sectionStartIndex;\n            // We found a section containing the page.\n            if ((index >= sectionStartIndex && pageIndex < sectionCount)) {\n                page = section.getPages()[pageIndex];\n                break;\n            }\n            sectionStartIndex += sectionCount;\n        }\n        return page;\n    };\n    /**\n     * Gets the `index of` the page in the document.\n     * @private\n     */\n    PdfDocumentPageCollection.prototype.indexOf = function (page) {\n        var index = -1;\n        if (page == null) {\n            throw new Error('ArgumentNullException: page');\n        }\n        else {\n            var numPages = 0;\n            for (var i = 0, len = this.document.sections.count; i < len; i++) {\n                var section = this.document.sections.pdfSectionCollection(i);\n                index = section.indexOf(page);\n                if (index >= 0) {\n                    index += numPages;\n                    break;\n                }\n                else {\n                    index = -1;\n                }\n                numPages += section.count;\n            }\n        }\n        return index;\n    };\n    /**\n     * `Removes` the specified page.\n     * @private\n     */\n    PdfDocumentPageCollection.prototype.remove = function (page) {\n        if (page == null) {\n            throw Error('ArgumentNullException(\"page\")');\n        }\n        var section = null;\n        var len;\n        for (var i = 0, len_1 = this.document.sections.count; i < len_1; i++) {\n            section = this.document.sections.pdfSectionCollection(i);\n            if (section.pages.contains(page)) {\n                section.pages.remove(page);\n                break;\n            }\n        }\n        return section;\n    };\n    return PdfDocumentPageCollection;\n}());\nexport { PdfDocumentPageCollection };\n","/**\n * PdfCacheCollection.ts class for EJ2-PDF\n */\nimport { Dictionary } from './../collections/dictionary';\n/**\n * `Collection of the cached objects`.\n * @private\n */\nvar PdfCacheCollection = /** @class */ (function () {\n    // Constructors\n    /**\n     * Initializes a new instance of the `PdfCacheCollection` class.\n     * @private\n     */\n    function PdfCacheCollection() {\n        this.referenceObjects = [];\n        this.pdfFontCollection = new Dictionary();\n    }\n    // Public methods\n    /**\n     * `Searches` for the similar cached object. If is not found - adds the object to the cache.\n     * @private\n     */\n    PdfCacheCollection.prototype.search = function (obj) {\n        var result = null;\n        var group = this.getGroup(obj);\n        if (group == null) {\n            group = this.createNewGroup();\n        }\n        else if (group.length > 0) {\n            result = group[0];\n        }\n        group.push(obj);\n        return result;\n    };\n    // Implementation\n    /**\n     * `Creates` a new group.\n     * @private\n     */\n    PdfCacheCollection.prototype.createNewGroup = function () {\n        var group = [];\n        this.referenceObjects.push(group);\n        return group;\n    };\n    /**\n     * `Find and Return` a group.\n     * @private\n     */\n    PdfCacheCollection.prototype.getGroup = function (result) {\n        var group = null;\n        if (result !== null) {\n            var len = this.referenceObjects.length;\n            for (var i = 0; i < len; i++) {\n                if (this.referenceObjects.length > 0) {\n                    var tGroup = this.referenceObjects[i];\n                    if (tGroup.length > 0) {\n                        var representative = tGroup[0];\n                        if (result.equalsTo(representative)) {\n                            group = tGroup;\n                            break;\n                        }\n                    }\n                    else {\n                        this.removeGroup(tGroup);\n                    }\n                }\n                len = this.referenceObjects.length;\n            }\n        }\n        return group;\n    };\n    /**\n     * Remove a group from the storage.\n     */\n    PdfCacheCollection.prototype.removeGroup = function (group) {\n        if (group !== null) {\n            var index = this.referenceObjects.indexOf(group);\n            this.referenceObjects.slice(index, index + 1);\n        }\n    };\n    PdfCacheCollection.prototype.destroy = function () {\n        this.pdfFontCollection = undefined;\n        this.referenceObjects = undefined;\n    };\n    return PdfCacheCollection;\n}());\nexport { PdfCacheCollection };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { PdfWriter } from './../input-output/pdf-writer';\nimport { PdfMainObjectCollection } from './../input-output/pdf-main-object-collection';\nimport { PdfDocumentBase } from './pdf-document-base';\nimport { PdfCrossTable } from './../input-output/pdf-cross-table';\nimport { PdfCatalog } from './pdf-catalog';\nimport { PdfPageSettings } from './../pages/pdf-page-settings';\nimport { PdfSectionCollection } from './../pages/pdf-section-collection';\nimport { PdfDocumentPageCollection } from './../pages/pdf-document-page-collection';\nimport { PdfCacheCollection } from './../general/pdf-cache-collection';\nimport { PdfColorSpace } from './../graphics/enum';\nimport { PdfDocumentTemplate } from './pdf-document-template';\nimport { PdfFontFamily } from './../graphics/fonts/enum';\nimport { PdfStandardFont } from './../graphics/fonts/pdf-standard-font';\n/**\n * Represents a PDF document and can be used to create a new PDF document from the scratch.\n * ```typescript\n * // create a new PDF document\n * let document : PdfDocument = new PdfDocument();\n * // add a new page to the document\n * let page1 : PdfPage = document.pages.add();\n * // set the font\n * let font : PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 20);\n * // create black brush\n * let blackBrush : PdfSolidBrush = new PdfSolidBrush(new PdfColor(0, 0, 0));\n * // draw the text\n * page1.graphics.drawString('Hello World', font, blackBrush, new PointF(0, 0));\n * // save the document\n * document.save('output.pdf');\n * // destroy the document\n * document.destroy();\n * ```\n */\nvar PdfDocument = /** @class */ (function (_super) {\n    __extends(PdfDocument, _super);\n    function PdfDocument(isMerging) {\n        var _this = _super.call(this) || this;\n        /**\n         * Default `margin` value.\n         * @default 40.0\n         * @private\n         */\n        _this.defaultMargin = 40.0;\n        /**\n         * Internal variable to store instance of `StreamWriter` classes..\n         * @default null\n         * @private\n         */\n        _this.streamWriter = null;\n        _this.document = _this;\n        var isMerge = false;\n        if (typeof isMerging === 'undefined') {\n            PdfDocument.cacheCollection = new PdfCacheCollection();\n            isMerge = false;\n        }\n        else {\n            isMerge = isMerging;\n        }\n        var objects = new PdfMainObjectCollection();\n        _this.setMainObjectCollection(objects);\n        var crossTable = new PdfCrossTable();\n        crossTable.isMerging = isMerge;\n        crossTable.document = _this;\n        _this.setCrossTable(crossTable);\n        var catalog = new PdfCatalog();\n        _this.setCatalog(catalog);\n        objects.add(catalog);\n        catalog.position = -1;\n        _this.sectionCollection = new PdfSectionCollection(_this);\n        _this.documentPageCollection = new PdfDocumentPageCollection(_this);\n        catalog.pages = _this.sectionCollection;\n        return _this;\n    }\n    Object.defineProperty(PdfDocument, \"defaultFont\", {\n        //Properties\n        /**\n         * Gets the `default font`. It is used for complex objects when font is not explicitly defined.\n         * @private\n         */\n        get: function () {\n            if (this.defaultStandardFont == null) {\n                this.defaultStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 8);\n            }\n            return this.defaultStandardFont;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocument.prototype, \"sections\", {\n        /**\n         * Gets the collection of the `sections` in the document.\n         * @private\n         */\n        get: function () {\n            return this.sectionCollection;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocument.prototype, \"pageSettings\", {\n        /**\n         * Gets the document's page setting.\n         * @public\n         */\n        get: function () {\n            if (this.settings == null) {\n                this.settings = new PdfPageSettings(this.defaultMargin);\n            }\n            return this.settings;\n        },\n        /**\n         * Sets the document's page setting.\n         * ```typescript\n         * // create a new PDF document\n         * let document : PdfDocument = new PdfDocument();\n         *\n         * // sets the right margin of the page\n         * document.pageSettings.margins.right = 0;\n         * // set the page size.\n         * document.pageSettings.size = new SizeF(500, 500);\n         * // change the page orientation to landscape\n         * document.pageSettings.orientation = PdfPageOrientation.Landscape;\n         * // apply 90 degree rotation on the page\n         * document.pageSettings.rotate = PdfPageRotateAngle.RotateAngle90;\n         *\n         * // add a pages to the document\n         * let page1 : PdfPage = document.pages.add();\n         * // set font\n         * let font : PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 20);\n         * // set brush\n         * let blackBrush : PdfSolidBrush = new PdfSolidBrush(new PdfColor(0, 0, 0));\n         * // set the specified Point\n         * let point : PointF = new PointF(page1.getClientSize().width - 200, page1.getClientSize().height - 200);\n         * // draw the text\n         * page1.graphics.drawString('Hello World', font, blackBrush, point);\n         * // save the document\n         * document.save('output.pdf');\n         * // destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this.settings = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocument.prototype, \"pages\", {\n        /**\n         * Represents the collection of pages in the PDF document.\n         * ```typescript\n         * // create a new PDF document\n         * let document : PdfDocument = new PdfDocument();\n         * //\n         * // get the collection of pages in the document\n         * let pageCollection : PdfDocumentPageCollection  = document.pages;\n         * //\n         * // add pages\n         * let page1 : PdfPage = pageCollection.add();\n         * // save the document\n         * document.save('output.pdf');\n         * // destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this.documentPageCollection;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocument, \"cache\", {\n        /**\n         * Gets collection of the `cached objects`.\n         * @private\n         */\n        get: function () {\n            if (typeof PdfDocument.cacheCollection === 'undefined' || PdfDocument.cacheCollection == null) {\n                return new PdfCacheCollection();\n            }\n            return PdfDocument.cacheCollection;\n        },\n        /**\n         * Sets collection of the `cached objects`.\n         * @private\n         */\n        set: function (value) {\n            this.cacheCollection = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocument, \"enableCache\", {\n        /**\n         * Gets the value of enable cache.\n         * @private\n         */\n        get: function () {\n            return this.isCacheEnabled;\n        },\n        /**\n         * Sets thie value of enable cache.\n         * @private\n         */\n        set: function (value) {\n            this.isCacheEnabled = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocument.prototype, \"colorSpace\", {\n        /* tslint:disable */\n        /**\n         * Gets or sets the `color space` of the document. This property can be used to create PDF document in RGB, Gray scale or CMYK color spaces.\n         * @private\n         */\n        get: function () {\n            if ((this.pdfColorSpace === PdfColorSpace.Rgb) || ((this.pdfColorSpace === PdfColorSpace.Cmyk)\n                || (this.pdfColorSpace === PdfColorSpace.GrayScale))) {\n                return this.pdfColorSpace;\n            }\n            else {\n                return PdfColorSpace.Rgb;\n            }\n        },\n        set: function (value) {\n            if ((value === PdfColorSpace.Rgb) || ((value === PdfColorSpace.Cmyk) ||\n                (value === PdfColorSpace.GrayScale))) {\n                this.pdfColorSpace = value;\n            }\n            else {\n                this.pdfColorSpace = PdfColorSpace.Rgb;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocument.prototype, \"template\", {\n        /* tslint:enable */\n        /**\n         * Gets or sets a `template` to all pages in the document.\n         * @private\n         */\n        get: function () {\n            if (this.pageTemplate == null) {\n                this.pageTemplate = new PdfDocumentTemplate();\n            }\n            return this.pageTemplate;\n        },\n        set: function (value) {\n            this.pageTemplate = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfDocument.prototype.docSave = function (stream, arg2, arg3) {\n        this.checkPagesPresence();\n        if (stream === null) {\n            throw new Error('ArgumentNullException : stream');\n        }\n        this.streamWriter = stream;\n        var writer = new PdfWriter(stream);\n        writer.document = this;\n        if (typeof arg2 === 'boolean' && typeof arg3 === 'undefined') {\n            return this.crossTable.save(writer);\n        }\n        else {\n            this.crossTable.save(writer, arg2);\n        }\n    };\n    /**\n     * Checks the pages `presence`.\n     * @private\n     */\n    PdfDocument.prototype.checkPagesPresence = function () {\n        if (this.pages.count === 0) {\n            this.pages.add();\n        }\n    };\n    /**\n     * disposes the current instance of `PdfDocument` class.\n     * ```typescript\n     * // create a new PDF document\n     * let document : PdfDocument = new PdfDocument();\n     * // add a new page to the document\n     * let page1 : PdfPage = document.pages.add();\n     * // set the font\n     * let font : PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 20);\n     * // create black brush\n     * let blackBrush : PdfSolidBrush = new PdfSolidBrush(new PdfColor(0, 0, 0));\n     * // draw the text\n     * page1.graphics.drawString('Hello World', font, blackBrush, new PointF(0, 0));\n     * // save the document\n     * document.save('output.pdf');\n     * // destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfDocument.prototype.destroy = function () {\n        this.catalog = undefined;\n        this.colorSpace = undefined;\n        this.currentSavingObj = undefined;\n        this.documentPageCollection = undefined;\n        this.isStreamCopied = undefined;\n        this.pageSettings = undefined;\n        this.pageTemplate = undefined;\n        this.pdfColorSpace = undefined;\n        this.sectionCollection = undefined;\n        PdfDocument.cache.destroy();\n        this.crossTable.pdfObjects.destroy();\n        PdfDocument.cache = undefined;\n        this.streamWriter.destroy();\n    };\n    /**\n     * `Font` used in complex objects to draw strings and text when it is not defined explicitly.\n     * @default null\n     * @private\n     */\n    PdfDocument.defaultStandardFont = null;\n    /**\n     * Indicates whether enable cache or not\n     * @default true\n     * @private\n     */\n    PdfDocument.isCacheEnabled = true;\n    return PdfDocument;\n}(PdfDocumentBase));\nexport { PdfDocument };\n","/**\n * PdfStandardFontMetricsFactory.ts class for EJ2-PDF\n */\nimport { PdfFontStyle, PdfFontFamily } from './enum';\nimport { PdfFontMetrics, StandardWidthTable } from './pdf-font-metrics';\n/**\n * @private\n * `Factory of the standard fonts metrics`.\n */\nvar PdfStandardFontMetricsFactory = /** @class */ (function () {\n    function PdfStandardFontMetricsFactory() {\n    }\n    /**\n     * Returns `metrics` of the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.getMetrics = function (fontFamily, fontStyle, size) {\n        var metrics = null;\n        switch (fontFamily) {\n            case PdfFontFamily.Helvetica:\n                metrics = this.getHelveticaMetrics(fontFamily, fontStyle, size);\n                break;\n            case PdfFontFamily.Courier:\n                metrics = this.getCourierMetrics(fontFamily, fontStyle, size);\n                break;\n            case PdfFontFamily.TimesRoman:\n                metrics = this.getTimesMetrics(fontFamily, fontStyle, size);\n                break;\n            case PdfFontFamily.Symbol:\n                metrics = this.getSymbolMetrics(fontFamily, fontStyle, size);\n                break;\n            case PdfFontFamily.ZapfDingbats:\n                metrics = this.getZapfDingbatsMetrics(fontFamily, fontStyle, size);\n                break;\n            default:\n                metrics = this.getHelveticaMetrics(PdfFontFamily.Helvetica, fontStyle, size);\n                break;\n        }\n        metrics.name = fontFamily.toString();\n        metrics.subScriptSizeFactor = this.subSuperScriptFactor;\n        metrics.superscriptSizeFactor = this.subSuperScriptFactor;\n        return metrics;\n    };\n    // Implementation\n    /**\n     * Creates `Helvetica font metrics`.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.getHelveticaMetrics = function (fontFamily, fontStyle, size) {\n        var metrics = new PdfFontMetrics();\n        if ((fontStyle & PdfFontStyle.Bold) > 0 && (fontStyle & PdfFontStyle.Italic) > 0) {\n            metrics.ascent = this.helveticaBoldItalicAscent;\n            metrics.descent = this.helveticaBoldItalicDescent;\n            metrics.postScriptName = this.helveticaBoldItalicName;\n            metrics.size = size;\n            metrics.widthTable = new StandardWidthTable(this.arialBoldWidth);\n            metrics.height = metrics.ascent - metrics.descent;\n        }\n        else if ((fontStyle & PdfFontStyle.Bold) > 0) {\n            metrics.ascent = this.helveticaBoldAscent;\n            metrics.descent = this.helveticaBoldDescent;\n            metrics.postScriptName = this.helveticaBoldName;\n            metrics.size = size;\n            metrics.widthTable = new StandardWidthTable(this.arialBoldWidth);\n            metrics.height = metrics.ascent - metrics.descent;\n        }\n        else if ((fontStyle & PdfFontStyle.Italic) > 0) {\n            metrics.ascent = this.helveticaItalicAscent;\n            metrics.descent = this.helveticaItalicDescent;\n            metrics.postScriptName = this.helveticaItalicName;\n            metrics.size = size;\n            metrics.widthTable = new StandardWidthTable(this.arialWidth);\n            metrics.height = metrics.ascent - metrics.descent;\n        }\n        else {\n            metrics.ascent = this.helveticaAscent;\n            metrics.descent = this.helveticaDescent;\n            metrics.postScriptName = this.helveticaName;\n            metrics.size = size;\n            metrics.widthTable = new StandardWidthTable(this.arialWidth);\n            metrics.height = metrics.ascent - metrics.descent;\n        }\n        return metrics;\n    };\n    /**\n     * Creates `Courier font metrics`.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.getCourierMetrics = function (fontFamily, fontStyle, size) {\n        var metrics = new PdfFontMetrics();\n        if ((fontStyle & PdfFontStyle.Bold) > 0 && (fontStyle & PdfFontStyle.Italic) > 0) {\n            metrics.ascent = this.courierBoldItalicAscent;\n            metrics.descent = this.courierBoldItalicDescent;\n            metrics.postScriptName = this.courierBoldItalicName;\n            metrics.size = size;\n            metrics.widthTable = new StandardWidthTable(this.fixedWidth);\n            metrics.height = metrics.ascent - metrics.descent;\n        }\n        else if ((fontStyle & PdfFontStyle.Bold) > 0) {\n            metrics.ascent = this.courierBoldAscent;\n            metrics.descent = this.courierBoldDescent;\n            metrics.postScriptName = this.courierBoldName;\n            metrics.size = size;\n            metrics.widthTable = new StandardWidthTable(this.fixedWidth);\n            metrics.height = metrics.ascent - metrics.descent;\n        }\n        else if ((fontStyle & PdfFontStyle.Italic) > 0) {\n            metrics.ascent = this.courierItalicAscent;\n            metrics.descent = this.courierItalicDescent;\n            metrics.postScriptName = this.courierItalicName;\n            metrics.size = size;\n            metrics.widthTable = new StandardWidthTable(this.fixedWidth);\n            metrics.height = metrics.ascent - metrics.descent;\n        }\n        else {\n            metrics.ascent = this.courierAscent;\n            metrics.descent = this.courierDescent;\n            metrics.postScriptName = this.courierName;\n            metrics.size = size;\n            metrics.widthTable = new StandardWidthTable(this.fixedWidth);\n            metrics.height = metrics.ascent - metrics.descent;\n        }\n        return metrics;\n    };\n    /**\n     * Creates `Times font metrics`.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.getTimesMetrics = function (fontFamily, fontStyle, size) {\n        var metrics = new PdfFontMetrics();\n        if ((fontStyle & PdfFontStyle.Bold) > 0 && (fontStyle & PdfFontStyle.Italic) > 0) {\n            metrics.ascent = this.timesBoldItalicAscent;\n            metrics.descent = this.timesBoldItalicDescent;\n            metrics.postScriptName = this.timesBoldItalicName;\n            metrics.size = size;\n            metrics.widthTable = new StandardWidthTable(this.timesRomanBoldItalicWidths);\n            metrics.height = metrics.ascent - metrics.descent;\n        }\n        else if ((fontStyle & PdfFontStyle.Bold) > 0) {\n            metrics.ascent = this.timesBoldAscent;\n            metrics.descent = this.timesBoldDescent;\n            metrics.postScriptName = this.timesBoldName;\n            metrics.size = size;\n            metrics.widthTable = new StandardWidthTable(this.timesRomanBoldWidth);\n            metrics.height = metrics.ascent - metrics.descent;\n        }\n        else if ((fontStyle & PdfFontStyle.Italic) > 0) {\n            metrics.ascent = this.timesItalicAscent;\n            metrics.descent = this.timesItalicDescent;\n            metrics.postScriptName = this.timesItalicName;\n            metrics.size = size;\n            metrics.widthTable = new StandardWidthTable(this.timesRomanItalicWidth);\n            metrics.height = metrics.ascent - metrics.descent;\n        }\n        else {\n            metrics.ascent = this.timesAscent;\n            metrics.descent = this.timesDescent;\n            metrics.postScriptName = this.timesName;\n            metrics.size = size;\n            metrics.widthTable = new StandardWidthTable(this.timesRomanWidth);\n            metrics.height = metrics.ascent - metrics.descent;\n        }\n        return metrics;\n    };\n    /**\n     * Creates `Symbol font metrics`.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.getSymbolMetrics = function (fontFamily, fontStyle, size) {\n        var metrics = new PdfFontMetrics();\n        metrics.ascent = this.symbolAscent;\n        metrics.descent = this.symbolDescent;\n        metrics.postScriptName = this.symbolName;\n        metrics.size = size;\n        metrics.widthTable = new StandardWidthTable(this.symbolWidth);\n        metrics.height = metrics.ascent - metrics.descent;\n        return metrics;\n    };\n    /**\n     * Creates `ZapfDingbats font metrics`.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.getZapfDingbatsMetrics = function (fontFamily, fontStyle, size) {\n        var metrics = new PdfFontMetrics();\n        metrics.ascent = this.zapfDingbatsAscent;\n        metrics.descent = this.zapfDingbatsDescent;\n        metrics.postScriptName = this.zapfDingbatsName;\n        metrics.size = size;\n        metrics.widthTable = new StandardWidthTable(this.zapfDingbatsWidth);\n        metrics.height = metrics.ascent - metrics.descent;\n        return metrics;\n    };\n    /**\n     * `Multiplier` os subscript superscript.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.subSuperScriptFactor = 1.52;\n    /**\n     * `Ascender` value for the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.helveticaAscent = 931;\n    /**\n     * `Ascender` value for the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.helveticaDescent = -225;\n    /**\n     * `Font type`.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.helveticaName = 'Helvetica';\n    /**\n     * `Ascender` value for the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.helveticaBoldAscent = 962;\n    /**\n     * `Ascender` value for the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.helveticaBoldDescent = -228;\n    /**\n     * `Font type`.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.helveticaBoldName = 'Helvetica-Bold';\n    /**\n     * `Ascender` value for the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.helveticaItalicAscent = 931;\n    /**\n     * `Ascender` value for the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.helveticaItalicDescent = -225;\n    /**\n     * `Font type`.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.helveticaItalicName = 'Helvetica-Oblique';\n    /**\n     * `Ascender` value for the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.helveticaBoldItalicAscent = 962;\n    /**\n     * `Ascender` value for the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.helveticaBoldItalicDescent = -228;\n    /**\n     * `Font type`.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.helveticaBoldItalicName = 'Helvetica-BoldOblique';\n    /**\n     * `Ascender` value for the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.courierAscent = 805;\n    /**\n     * `Ascender` value for the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.courierDescent = -250;\n    /**\n     * `Font type`.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.courierName = 'Courier';\n    /**\n     * `Ascender` value for the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.courierBoldAscent = 801;\n    /**\n     * `Ascender` value for the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.courierBoldDescent = -250;\n    /**\n     * `Font type`.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.courierBoldName = 'Courier-Bold';\n    /**\n     * `Ascender` value for the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.courierItalicAscent = 805;\n    /**\n     * `Ascender` value for the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.courierItalicDescent = -250;\n    /**\n     * `Font type`.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.courierItalicName = 'Courier-Oblique';\n    /**\n     * `Ascender` value for the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.courierBoldItalicAscent = 801;\n    /**\n     * `Ascender` value for the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.courierBoldItalicDescent = -250;\n    /**\n     * `Font type`.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.courierBoldItalicName = 'Courier-BoldOblique';\n    /**\n     * `Ascender` value for the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.timesAscent = 898;\n    /**\n     * `Ascender` value for the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.timesDescent = -218;\n    /**\n     * `Font type`.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.timesName = 'Times-Roman';\n    /**\n     * `Ascender` value for the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.timesBoldAscent = 935;\n    /**\n     * `Ascender` value for the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.timesBoldDescent = -218;\n    /**\n     * `Font type`.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.timesBoldName = 'Times-Bold';\n    /**\n     * `Ascender` value for the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.timesItalicAscent = 883;\n    /**\n     * `Ascender` value for the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.timesItalicDescent = -217;\n    /**\n     * `Font type`.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.timesItalicName = 'Times-Italic';\n    /**\n     * `Ascender` value for the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.timesBoldItalicAscent = 921;\n    /**\n     * `Ascender` value for the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.timesBoldItalicDescent = -218;\n    /**\n     * `Font type`.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.timesBoldItalicName = 'Times-BoldItalic';\n    /**\n     * `Ascender` value for the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.symbolAscent = 1010;\n    /**\n     * `Ascender` value for the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.symbolDescent = -293;\n    /**\n     * `Font type`.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.symbolName = 'Symbol';\n    /**\n     * `Ascender` value for the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.zapfDingbatsAscent = 820;\n    /**\n     * `Ascender` value for the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.zapfDingbatsDescent = -143;\n    /**\n     * `Font type`.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.zapfDingbatsName = 'ZapfDingbats';\n    /**\n     * `Arial` widths table.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.arialWidth = [\n        278, 278, 355, 556, 556, 889, 667, 191, 333, 333, 389, 584, 278, 333,\n        278, 278, 556, 556, 556, 556, 556, 556, 556, 556, 556, 556, 278, 278, 584, 584,\n        584, 556, 1015, 667, 667, 722, 722, 667, 611, 778, 722, 278, 500, 667, 556, 833,\n        722, 778, 667, 778, 722, 667, 611, 722, 667, 944, 667, 667, 611, 278, 278, 278,\n        469, 556, 333, 556, 556, 500, 556, 556, 278, 556, 556, 222, 222, 500, 222, 833,\n        556, 556, 556, 556, 333, 500, 278, 556, 500, 722, 500, 500, 500, 334, 260, 334,\n        584, 0, 556, 0, 222, 556, 333, 1000, 556, 556, 333, 1000, 667, 333, 1000, 0,\n        611, 0, 0, 222, 222, 333, 333, 350, 556, 1000, 333, 1000, 500, 333, 944, 0,\n        500, 667, 0, 333, 556, 556, 556, 556, 260, 556, 333, 737, 370, 556, 584, 0,\n        737, 333, 400, 584, 333, 333, 333, 556, 537, 278, 333, 333, 365, 556, 834, 834,\n        834, 611, 667, 667, 667, 667, 667, 667, 1000, 722, 667, 667, 667, 667, 278, 278,\n        278, 278, 722, 722, 778, 778, 778, 778, 778, 584, 778, 722, 722, 722, 722, 667,\n        667, 611, 556, 556, 556, 556, 556, 556, 889, 500, 556, 556, 556, 556, 278, 278,\n        278, 278, 556, 556, 556, 556, 556, 556, 556, 584, 611, 556, 556, 556, 556, 500,\n        556, 500\n    ];\n    /**\n     * `Arial bold` widths table.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.arialBoldWidth = [\n        278, 333, 474, 556, 556, 889, 722, 238, 333, 333, 389, 584, 278, 333,\n        278, 278, 556, 556, 556, 556, 556, 556, 556, 556, 556, 556, 333, 333, 584, 584,\n        584, 611, 975, 722, 722, 722, 722, 667, 611, 778, 722, 278, 556, 722, 611, 833,\n        722, 778, 667, 778, 722, 667, 611, 722, 667, 944, 667, 667, 611, 333, 278, 333,\n        584, 556, 333, 556, 611, 556, 611, 556, 333, 611, 611, 278, 278, 556, 278, 889,\n        611, 611, 611, 611, 389, 556, 333, 611, 556, 778, 556, 556, 500, 389, 280, 389,\n        584, 0, 556, 0, 278, 556, 500, 1000, 556, 556, 333, 1000, 667, 333, 1000, 0,\n        611, 0, 0, 278, 278, 500, 500, 350, 556, 1000, 333, 1000, 556, 333, 944, 0,\n        500, 667, 0, 333, 556, 556, 556, 556, 280, 556, 333, 737, 370, 556, 584, 0,\n        737, 333, 400, 584, 333, 333, 333, 611, 556, 278, 333, 333, 365, 556, 834, 834,\n        834, 611, 722, 722, 722, 722, 722, 722, 1000, 722, 667, 667, 667, 667, 278, 278,\n        278, 278, 722, 722, 778, 778, 778, 778, 778, 584, 778, 722, 722, 722, 722, 667,\n        667, 611, 556, 556, 556, 556, 556, 556, 889, 556, 556, 556, 556, 556, 278, 278,\n        278, 278, 611, 611, 611, 611, 611, 611, 611, 584, 611, 611, 611, 611, 611, 556,\n        611, 556\n    ];\n    /**\n     * `Fixed` widths table.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.fixedWidth = [\n        600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600,\n        600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600,\n        600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600,\n        600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600,\n        600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600,\n        600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600,\n        600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600,\n        600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600,\n        600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600,\n        600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600,\n        600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600,\n        600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600,\n        600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600,\n        600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600\n    ];\n    /**\n     * `Times` widths table.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.timesRomanWidth = [\n        250, 333, 408, 500, 500, 833, 778, 180, 333, 333, 500, 564, 250, 333,\n        250, 278, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 278, 278, 564, 564,\n        564, 444, 921, 722, 667, 667, 722, 611, 556, 722, 722, 333, 389, 722, 611, 889,\n        722, 722, 556, 722, 667, 556, 611, 722, 722, 944, 722, 722, 611, 333, 278, 333,\n        469, 500, 333, 444, 500, 444, 500, 444, 333, 500, 500, 278, 278, 500, 278, 778,\n        500, 500, 500, 500, 333, 389, 278, 500, 500, 722, 500, 500, 444, 480, 200, 480,\n        541, 0, 500, 0, 333, 500, 444, 1000, 500, 500, 333, 1000, 556, 333, 889, 0,\n        611, 0, 0, 333, 333, 444, 444, 350, 500, 1000, 333, 980, 389, 333, 722, 0,\n        444, 722, 0, 333, 500, 500, 500, 500, 200, 500, 333, 760, 276, 500, 564, 0,\n        760, 333, 400, 564, 300, 300, 333, 500, 453, 250, 333, 300, 310, 500, 750, 750,\n        750, 444, 722, 722, 722, 722, 722, 722, 889, 667, 611, 611, 611, 611, 333, 333,\n        333, 333, 722, 722, 722, 722, 722, 722, 722, 564, 722, 722, 722, 722, 722, 722,\n        556, 500, 444, 444, 444, 444, 444, 444, 667, 444, 444, 444, 444, 444, 278, 278,\n        278, 278, 500, 500, 500, 500, 500, 500, 500, 564, 500, 500, 500, 500, 500, 500,\n        500, 500\n    ];\n    /**\n     * `Times bold` widths table.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.timesRomanBoldWidth = [\n        250, 333, 555, 500, 500, 1000, 833, 278, 333, 333, 500, 570, 250, 333,\n        250, 278, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 333, 333, 570, 570,\n        570, 500, 930, 722, 667, 722, 722, 667, 611, 778, 778, 389, 500, 778, 667, 944,\n        722, 778, 611, 778, 722, 556, 667, 722, 722, 1000, 722, 722, 667, 333, 278, 333,\n        581, 500, 333, 500, 556, 444, 556, 444, 333, 500, 556, 278, 333, 556, 278, 833,\n        556, 500, 556, 556, 444, 389, 333, 556, 500, 722, 500, 500, 444, 394, 220, 394,\n        520, 0, 500, 0, 333, 500, 500, 1000, 500, 500, 333, 1000, 556, 333, 1000, 0,\n        667, 0, 0, 333, 333, 500, 500, 350, 500, 1000, 333, 1000, 389, 333, 722, 0,\n        444, 722, 0, 333, 500, 500, 500, 500, 220, 500, 333, 747, 300, 500, 570, 0,\n        747, 333, 400, 570, 300, 300, 333, 556, 540, 250, 333, 300, 330, 500, 750, 750,\n        750, 500, 722, 722, 722, 722, 722, 722, 1000, 722, 667, 667, 667, 667, 389, 389,\n        389, 389, 722, 722, 778, 778, 778, 778, 778, 570, 778, 722, 722, 722, 722, 722,\n        611, 556, 500, 500, 500, 500, 500, 500, 722, 444, 444, 444, 444, 444, 278, 278,\n        278, 278, 500, 556, 500, 500, 500, 500, 500, 570, 500, 556, 556, 556, 556, 500,\n        556, 500\n    ];\n    /**\n     * `Times italic` widths table.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.timesRomanItalicWidth = [\n        250, 333, 420, 500, 500, 833, 778, 214, 333, 333, 500, 675, 250, 333,\n        250, 278, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 333, 333, 675, 675,\n        675, 500, 920, 611, 611, 667, 722, 611, 611, 722, 722, 333, 444, 667, 556, 833,\n        667, 722, 611, 722, 611, 500, 556, 722, 611, 833, 611, 556, 556, 389, 278, 389,\n        422, 500, 333, 500, 500, 444, 500, 444, 278, 500, 500, 278, 278, 444, 278, 722,\n        500, 500, 500, 500, 389, 389, 278, 500, 444, 667, 444, 444, 389, 400, 275, 400,\n        541, 0, 500, 0, 333, 500, 556, 889, 500, 500, 333, 1000, 500, 333, 944, 0,\n        556, 0, 0, 333, 333, 556, 556, 350, 500, 889, 333, 980, 389, 333, 667, 0,\n        389, 556, 0, 389, 500, 500, 500, 500, 275, 500, 333, 760, 276, 500, 675, 0,\n        760, 333, 400, 675, 300, 300, 333, 500, 523, 250, 333, 300, 310, 500, 750, 750,\n        750, 500, 611, 611, 611, 611, 611, 611, 889, 667, 611, 611, 611, 611, 333, 333,\n        333, 333, 722, 667, 722, 722, 722, 722, 722, 675, 722, 722, 722, 722, 722, 556,\n        611, 500, 500, 500, 500, 500, 500, 500, 667, 444, 444, 444, 444, 444, 278, 278,\n        278, 278, 500, 500, 500, 500, 500, 500, 500, 675, 500, 500, 500, 500, 500, 444,\n        500, 444\n    ];\n    /**\n     * `Times bold italic` widths table.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.timesRomanBoldItalicWidths = [\n        250, 389, 555, 500, 500, 833, 778, 278, 333, 333, 500, 570, 250, 333,\n        250, 278, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 333, 333, 570, 570,\n        570, 500, 832, 667, 667, 667, 722, 667, 667, 722, 778, 389, 500, 667, 611, 889,\n        722, 722, 611, 722, 667, 556, 611, 722, 667, 889, 667, 611, 611, 333, 278, 333,\n        570, 500, 333, 500, 500, 444, 500, 444, 333, 500, 556, 278, 278, 500, 278, 778,\n        556, 500, 500, 500, 389, 389, 278, 556, 444, 667, 500, 444, 389, 348, 220, 348,\n        570, 0, 500, 0, 333, 500, 500, 1000, 500, 500, 333, 1000, 556, 333, 944, 0,\n        611, 0, 0, 333, 333, 500, 500, 350, 500, 1000, 333, 1000, 389, 333, 722, 0,\n        389, 611, 0, 389, 500, 500, 500, 500, 220, 500, 333, 747, 266, 500, 606, 0,\n        747, 333, 400, 570, 300, 300, 333, 576, 500, 250, 333, 300, 300, 500, 750, 750,\n        750, 500, 667, 667, 667, 667, 667, 667, 944, 667, 667, 667, 667, 667, 389, 389,\n        389, 389, 722, 722, 722, 722, 722, 722, 722, 570, 722, 722, 722, 722, 722, 611,\n        611, 500, 500, 500, 500, 500, 500, 500, 722, 444, 444, 444, 444, 444, 278, 278,\n        278, 278, 500, 556, 500, 500, 500, 500, 500, 570, 500, 556, 556, 556, 556, 444,\n        500, 444\n    ];\n    /**\n     * `Symbol` widths table.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.symbolWidth = [\n        250, 333, 713, 500, 549, 833, 778, 439, 333, 333, 500, 549, 250, 549,\n        250, 278, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 278, 278,\n        549, 549, 549, 444, 549, 722, 667, 722, 612, 611, 763, 603, 722, 333,\n        631, 722, 686, 889, 722, 722, 768, 741, 556, 592, 611, 690, 439, 768,\n        645, 795, 611, 333, 863, 333, 658, 500, 500, 631, 549, 549, 494, 439,\n        521, 411, 603, 329, 603, 549, 549, 576, 521, 549, 549, 521, 549, 603,\n        439, 576, 713, 686, 493, 686, 494, 480, 200, 480, 549, 750, 620, 247,\n        549, 167, 713, 500, 753, 753, 753, 753, 1042, 987, 603, 987, 603, 400,\n        549, 411, 549, 549, 713, 494, 460, 549, 549, 549, 549, 1000, 603, 1000,\n        658, 823, 686, 795, 987, 768, 768, 823, 768, 768, 713, 713, 713, 713,\n        713, 713, 713, 768, 713, 790, 790, 890, 823, 549, 250, 713, 603, 603,\n        1042, 987, 603, 987, 603, 494, 329, 790, 790, 786, 713, 384, 384, 384,\n        384, 384, 384, 494, 494, 494, 494, 329, 274, 686, 686, 686, 384, 384,\n        384, 384, 384, 384, 494, 494, 494, -1\n    ];\n    /**\n     * `Zip dingbats` widths table.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.zapfDingbatsWidth = [\n        278, 974, 961, 974, 980, 719, 789, 790, 791, 690, 960, 939, 549, 855,\n        911, 933, 911, 945, 974, 755, 846, 762, 761, 571, 677, 763, 760, 759,\n        754, 494, 552, 537, 577, 692, 786, 788, 788, 790, 793, 794, 816, 823,\n        789, 841, 823, 833, 816, 831, 923, 744, 723, 749, 790, 792, 695, 776,\n        768, 792, 759, 707, 708, 682, 701, 826, 815, 789, 789, 707, 687, 696,\n        689, 786, 787, 713, 791, 785, 791, 873, 761, 762, 762, 759, 759, 892,\n        892, 788, 784, 438, 138, 277, 415, 392, 392, 668, 668, 390, 390, 317,\n        317, 276, 276, 509, 509, 410, 410, 234, 234, 334, 334, 732, 544, 544,\n        910, 667, 760, 760, 776, 595, 694, 626, 788, 788, 788, 788, 788, 788,\n        788, 788, 788, 788, 788, 788, 788, 788, 788, 788, 788, 788, 788, 788,\n        788, 788, 788, 788, 788, 788, 788, 788, 788, 788, 788, 788, 788, 788,\n        788, 788, 788, 788, 788, 788, 894, 838, 1016, 458, 748, 924, 748, 918,\n        927, 928, 928, 834, 873, 828, 924, 924, 917, 930, 931, 463, 883, 836,\n        836, 867, 867, 696, 696, 874, 874, 760, 946, 771, 865, 771, 888, 967,\n        888, 831, 873, 927, 970, 918\n    ];\n    return PdfStandardFontMetricsFactory;\n}());\nexport { PdfStandardFontMetricsFactory };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { PdfFontFamily, PdfFontStyle, FontEncoding } from './enum';\nimport { PdfFont } from './pdf-font';\nimport { PdfDocument } from './../../document/pdf-document';\nimport { PdfStandardFontMetricsFactory } from './pdf-standard-font-metrics-factory';\nimport { PdfDictionary } from './../../primitives/pdf-dictionary';\nimport { DictionaryProperties } from './../../input-output/pdf-dictionary-properties';\nimport { PdfName } from './../../primitives/pdf-name';\n/**\n * Represents one of the 14 standard fonts.\n * It's used to create a standard PDF font to draw the text in to the PDF.\n * ```typescript\n * // create a new PDF document\n * let document : PdfDocument = new PdfDocument();\n * // add a new page to the document\n * let page1 : PdfPage = document.pages.add();\n * //\n * // create new standard font\n * let font : PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 20);\n * //\n * // create black brush\n * let blackBrush : PdfSolidBrush = new PdfSolidBrush(new PdfColor(0, 0, 0));\n * // draw the text\n * page1.graphics.drawString('Hello World', font, blackBrush, new PointF(0, 0));\n * // save the document\n * document.save('output.pdf');\n * // destroy the document\n * document.destroy();\n * ```\n */\nvar PdfStandardFont = /** @class */ (function (_super) {\n    __extends(PdfStandardFont, _super);\n    function PdfStandardFont(fontFamilyPrototype, size, style) {\n        var _this = _super.call(this, size, (typeof style === 'undefined') ? ((fontFamilyPrototype instanceof PdfStandardFont) ? fontFamilyPrototype.style : PdfFontStyle.Regular) : style) || this;\n        /**\n         * Gets `ascent` of the font.\n         * @private\n         */\n        _this.dictionaryProperties = new DictionaryProperties();\n        /**\n         * Gets `encodings` for internal class use.\n         * @hidden\n         * @private\n         */\n        _this.encodings = ['Unknown', 'StandardEncoding', 'MacRomanEncoding', 'MacExpertEncoding',\n            'WinAnsiEncoding', 'PDFDocEncoding', 'IdentityH'];\n        if (typeof fontFamilyPrototype === 'undefined') {\n            _this.pdfFontFamily = PdfFontFamily.Helvetica;\n        }\n        else if ((fontFamilyPrototype instanceof PdfStandardFont)) {\n            _this.pdfFontFamily = fontFamilyPrototype.fontFamily;\n        }\n        else {\n            _this.pdfFontFamily = fontFamilyPrototype;\n        }\n        _this.checkStyle();\n        _this.initializeInternals();\n        return _this;\n    }\n    Object.defineProperty(PdfStandardFont.prototype, \"fontFamily\", {\n        /* tslint:enable */\n        //Properties\n        /**\n         * Gets the `FontFamily`.\n         * @private\n         */\n        get: function () {\n            return this.pdfFontFamily;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    //methods\n    /**\n     * Checks font `style` of the font.\n     * @private\n     */\n    PdfStandardFont.prototype.checkStyle = function () {\n        if (this.fontFamily === PdfFontFamily.Symbol || this.fontFamily === PdfFontFamily.ZapfDingbats) {\n            var style = this.style;\n            style &= ~(PdfFontStyle.Bold | PdfFontStyle.Italic);\n            this.setStyle(style);\n        }\n    };\n    /**\n     * Returns `width` of the line.\n     * @public\n     */\n    PdfStandardFont.prototype.getLineWidth = function (line, format) {\n        if (line == null) {\n            throw new Error('ArgumentNullException:line');\n        }\n        var width = 0;\n        var name = this.name;\n        line = PdfStandardFont.convert(line);\n        for (var i = 0, len = line.length; i < len; i++) {\n            var ch = line[i];\n            var charWidth = this.getCharWidthInternal(ch, format);\n            width += charWidth;\n        }\n        var size = this.metrics.getSize(format);\n        width *= (PdfFont.charSizeMultiplier * size);\n        width = this.applyFormatSettings(line, format, width);\n        return width;\n    };\n    /**\n     * Checks whether fonts are `equals`.\n     * @private\n     */\n    PdfStandardFont.prototype.equalsToFont = function (font) {\n        var equal = false;\n        var stFont = font;\n        if (stFont != null) {\n            var fontFamilyEqual = (this.fontFamily === stFont.fontFamily);\n            var lineReducer = (~(PdfFontStyle.Underline | PdfFontStyle.Strikeout));\n            var styleEqual = (this.style & lineReducer) === (stFont.style & lineReducer);\n            equal = (fontFamilyEqual && styleEqual);\n        }\n        return equal;\n    };\n    /**\n     * `Initializes` font internals..\n     * @private\n     */\n    PdfStandardFont.prototype.initializeInternals = function () {\n        var equalFont = null;\n        // if (PdfDocument.EnableCache) {\n        equalFont = PdfDocument.cache.search(this);\n        // }\n        var internals = null;\n        // if (equalFont == null) {\n        // Create font metrics.\n        var metrics = PdfStandardFontMetricsFactory.getMetrics(this.pdfFontFamily, this.style, this.size);\n        this.metrics = metrics;\n        internals = this.createInternals();\n        this.setInternals(internals);\n    };\n    /**\n     * `Creates` font`s dictionary.\n     * @private\n     */\n    PdfStandardFont.prototype.createInternals = function () {\n        var dictionary = new PdfDictionary();\n        dictionary.items.setValue(this.dictionaryProperties.type, new PdfName(this.dictionaryProperties.font));\n        dictionary.items.setValue(this.dictionaryProperties.subtype, new PdfName(this.dictionaryProperties.type1));\n        dictionary.items.setValue(this.dictionaryProperties.baseFont, new PdfName(this.metrics.postScriptName));\n        if (this.fontFamily !== PdfFontFamily.Symbol && this.fontFamily !== PdfFontFamily.ZapfDingbats) {\n            var encoding = this.encodings[FontEncoding.WinAnsiEncoding];\n            dictionary.items.setValue(this.dictionaryProperties.encoding, new PdfName(encoding));\n        }\n        return dictionary;\n    };\n    /**\n     * Returns `width` of the char. This methods doesn`t takes into consideration font`s size.\n     * @private\n     */\n    PdfStandardFont.prototype.getCharWidthInternal = function (charCode, format) {\n        var width = 0;\n        var code = 0;\n        code = charCode.charCodeAt(0);\n        if (this.name === '0' || this.name === '1' || this.name === '2' ||\n            this.name === '3' || this.name === '4') {\n            code = code - PdfStandardFont.charOffset;\n        }\n        code = (code >= 0 && code !== 128) ? code : 0;\n        var metrics = this.metrics;\n        var widthTable = metrics.widthTable;\n        width = widthTable.items(code);\n        return width;\n    };\n    /**\n     * `Converts` the specified text.\n     * @private\n     */\n    PdfStandardFont.convert = function (text) {\n        return text;\n    };\n    //Constants\n    /**\n     * First character `position`.\n     * @private\n     */\n    PdfStandardFont.charOffset = 32;\n    return PdfStandardFont;\n}(PdfFont));\nexport { PdfStandardFont };\n","import { PdfColor } from './../graphics/pdf-color';\nimport { RectangleF, PointF } from './../drawing/pdf-drawing';\nimport { PdfDictionary, SaveAnnotationEventHandler } from './../primitives/pdf-dictionary';\nimport { PdfArray } from './../primitives/pdf-array';\nimport { PdfNumber } from './../primitives/pdf-number';\nimport { PdfReferenceHolder } from './../primitives/pdf-reference';\nimport { PdfString } from './../primitives/pdf-string';\nimport { DictionaryProperties } from './../input-output/pdf-dictionary-properties';\nimport { PdfName } from './../primitives/pdf-name';\nimport { PdfSolidBrush } from './../graphics/brushes/pdf-solid-brush';\nimport { PdfStandardFont } from './../graphics/fonts/pdf-standard-font';\nimport { PdfFontFamily } from './../graphics/fonts/enum';\nimport { PdfStringFormat } from './../graphics/fonts/pdf-string-format';\nimport { PdfTextAlignment } from './../graphics/enum';\n/**\n * `PdfAnnotation` class represents the base class for annotation objects.\n * @private\n */\nvar PdfAnnotation = /** @class */ (function () {\n    function PdfAnnotation(arg1) {\n        // Fields\n        /**\n         * Specifies the Internal variable to store fields of `PdfDictionaryProperties`.\n         * @private\n         */\n        this.dictionaryProperties = new DictionaryProperties();\n        /**\n         * `Color` of the annotation\n         * @private\n         */\n        this.pdfColor = new PdfColor(255, 255, 255);\n        /**\n         * `Bounds` of the annotation.\n         * @private\n         */\n        this.rectangle = new RectangleF(0, 0, 0, 0);\n        /**\n         * Parent `page` of the annotation.\n         * @private\n         */\n        this.pdfPage = null;\n        /**\n         * `Brush of the text` of the annotation.\n         * @default new PdfSolidBrush(new PdfColor(0, 0, 0))\n         * @private\n         */\n        this.textBrush = new PdfSolidBrush(new PdfColor(0, 0, 0));\n        /**\n         * `Font of the text` of the annotation.\n         * @default new PdfStandardFont(PdfFontFamily.TimesRoman, 10)\n         * @private\n         */\n        this.textFont = new PdfStandardFont(PdfFontFamily.TimesRoman, 10);\n        /**\n         * `StringFormat of the text` of the annotation.\n         * @default new PdfStringFormat(PdfTextAlignment.Left)\n         * @private\n         */\n        this.format = new PdfStringFormat(PdfTextAlignment.Left);\n        /**\n         * `Text` of the annotation.\n         * @private\n         */\n        this.content = '';\n        /**\n         * Internal variable to store `dictionary`.\n         * @private\n         */\n        this.pdfDictionary = new PdfDictionary();\n        /**\n         * To specifying the `Inner color` with which to fill the annotation\n         * @private\n         */\n        this.internalColor = new PdfColor();\n        /**\n         * `opacity or darkness` of the annotation.\n         * @private\n         * @default 1.0\n         */\n        this.darkness = 1.0;\n        if (typeof arg1 === 'undefined') {\n            this.initialize();\n        }\n        else {\n            this.initialize();\n            this.bounds = arg1;\n        }\n    }\n    Object.defineProperty(PdfAnnotation.prototype, \"color\", {\n        // Properties\n        /**\n         * `Color` of the annotation\n         * @private\n         */\n        get: function () {\n            return this.pdfColor;\n        },\n        set: function (value) {\n            this.pdfColor = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAnnotation.prototype, \"innerColor\", {\n        /**\n         * To specifying the `Inner color` with which to fill the annotation\n         * @private\n         */\n        get: function () {\n            return this.internalColor;\n        },\n        set: function (value) {\n            this.internalColor = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAnnotation.prototype, \"bounds\", {\n        /**\n         * `bounds` of the annotation.\n         * @private\n         */\n        get: function () {\n            return this.rectangle;\n        },\n        set: function (value) {\n            this.rectangle = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAnnotation.prototype, \"page\", {\n        /**\n         * Parent `page` of the annotation.\n         * @private\n         */\n        get: function () {\n            return this.pdfPage;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAnnotation.prototype, \"font\", {\n        /**\n         * To specifying the `Font of the text` in the annotation.\n         * @private\n         */\n        get: function () {\n            return this.textFont;\n        },\n        set: function (value) {\n            this.textFont = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAnnotation.prototype, \"stringFormat\", {\n        /**\n         * To specifying the `StringFormat of the text` in the annotation.\n         * @private\n         */\n        get: function () {\n            return this.format;\n        },\n        set: function (value) {\n            this.format = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAnnotation.prototype, \"brush\", {\n        /**\n         * To specifying the `Brush of the text` in the annotation.\n         * @private\n         */\n        get: function () {\n            return this.textBrush;\n        },\n        set: function (value) {\n            this.textBrush = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAnnotation.prototype, \"text\", {\n        /**\n         * `Text` of the annotation.\n         * @private\n         */\n        get: function () {\n            return this.content;\n        },\n        set: function (value) {\n            this.content = value;\n            this.dictionary.items.setValue(this.dictionaryProperties.contents, new PdfString(this.content));\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAnnotation.prototype, \"dictionary\", {\n        /**\n         * Internal variable to store `dictionary`.\n         * @hidden\n         */\n        get: function () {\n            return this.pdfDictionary;\n        },\n        set: function (value) {\n            this.pdfDictionary = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    // Implementation\n    /**\n     * `Initialize` the annotation event handler and specifies the type of the annotation.\n     * @private\n     */\n    PdfAnnotation.prototype.initialize = function () {\n        this.pdfDictionary.annotationBeginSave = new SaveAnnotationEventHandler(this);\n        this.pdfDictionary.items.setValue(this.dictionaryProperties.type, new PdfName(this.dictionaryProperties.annot));\n    };\n    /**\n     * Sets related `page` of the annotation.\n     * @private\n     */\n    PdfAnnotation.prototype.setPage = function (page) {\n        this.pdfPage = page;\n        this.pdfDictionary.items.setValue(this.dictionaryProperties.p, new PdfReferenceHolder(this.pdfPage));\n    };\n    /**\n     * Handles the `BeginSave` event of the Dictionary.\n     * @private\n     */\n    PdfAnnotation.prototype.beginSave = function () {\n        this.save();\n    };\n    /**\n     * `Saves` an annotation.\n     * @private\n     */\n    /* tslint:disable */\n    PdfAnnotation.prototype.save = function () {\n        var nativeRectangle = new RectangleF(this.rectangle.x, this.rectangle.y, this.rectangle.width, this.rectangle.height);\n        var section = this.pdfPage.section;\n        var initialHeight = nativeRectangle.height;\n        var tempLoacation = section.pointToNativePdf(this.page, new PointF(nativeRectangle.x, nativeRectangle.y));\n        nativeRectangle.x = tempLoacation.x;\n        nativeRectangle.width = tempLoacation.x + nativeRectangle.width;\n        nativeRectangle.y = (tempLoacation.y - this.page.document.pageSettings.margins.top);\n        nativeRectangle.height = nativeRectangle.y - initialHeight;\n        this.pdfDictionary.items.setValue(this.dictionaryProperties.rect, PdfArray.fromRectangle(nativeRectangle));\n        this.dictionary.items.setValue(this.dictionaryProperties.ca, new PdfNumber(this.darkness));\n    };\n    Object.defineProperty(PdfAnnotation.prototype, \"element\", {\n        /* tslint:enable */\n        // IPdfWrapper Members\n        /**\n         * Gets the `element`.\n         * @private\n         */\n        get: function () {\n            return this.pdfDictionary;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfAnnotation;\n}());\nexport { PdfAnnotation };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { PdfAnnotation } from './annotation';\nimport { PdfName } from './../primitives/pdf-name';\n/**\n * `PdfLinkAnnotation` class represents the ink annotation class.\n * @private\n */\nvar PdfLinkAnnotation = /** @class */ (function (_super) {\n    __extends(PdfLinkAnnotation, _super);\n    function PdfLinkAnnotation(rectangle) {\n        return _super.call(this, rectangle) || this;\n    }\n    // Implementation\n    /**\n     * `Initializes` annotation object.\n     * @private\n     */\n    PdfLinkAnnotation.prototype.initialize = function () {\n        _super.prototype.initialize.call(this);\n        this.dictionary.items.setValue(this.dictionaryProperties.subtype, new PdfName(this.dictionaryProperties.link));\n    };\n    return PdfLinkAnnotation;\n}(PdfAnnotation));\nexport { PdfLinkAnnotation };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { PdfLinkAnnotation } from './link-annotation';\n/**\n * Represents base class for `link annotations` with associated action.\n * @private\n */\nvar PdfActionLinkAnnotation = /** @class */ (function (_super) {\n    __extends(PdfActionLinkAnnotation, _super);\n    // Constructors\n    /**\n     * Specifies the constructor for `ActionLinkAnnotation`.\n     * @private\n     */\n    function PdfActionLinkAnnotation(rectangle) {\n        var _this = _super.call(this, rectangle) || this;\n        // Fields\n        /**\n         * Internal variable to store annotation's `action`.\n         * @default null\n         * @private\n         */\n        _this.pdfAction = null;\n        return _this;\n    }\n    //Public method\n    /**\n     * get and set the `action`.\n     * @hidden\n     */\n    PdfActionLinkAnnotation.prototype.getSetAction = function (value) {\n        if (typeof value === 'undefined') {\n            return this.pdfAction;\n        }\n        else {\n            this.pdfAction = value;\n        }\n    };\n    return PdfActionLinkAnnotation;\n}(PdfLinkAnnotation));\nexport { PdfActionLinkAnnotation };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { PdfLinkAnnotation } from './link-annotation';\n/**\n * `PdfDocumentLinkAnnotation` class represents an annotation object with holds link on another location within a document.\n * ```typescript\n * // create a new PDF document\n * let document : PdfDocument = new PdfDocument();\n * // create new pages\n * let page1 : PdfPage = document.pages.add();\n * let page2 : PdfPage = document.pages.add();\n * // create a new rectangle\n * let bounds : RectangleF = new RectangleF({x : 10, y : 200}, {width : 300, height : 25});\n * //\n * // create a new document link annotation\n * let documentLinkAnnotation : PdfDocumentLinkAnnotation = new PdfDocumentLinkAnnotation(bounds);\n * // set the annotation text\n * documentLinkAnnotation.text = 'Document link annotation';\n * // set the destination\n * documentLinkAnnotation.destination = new PdfDestination(page2);\n * // set the documentlink annotation location\n * documentLinkAnnotation.destination.location = new PointF(10, 0);\n * // add this annotation to a new page\n * page1.annotations.add(documentLinkAnnotation);\n * //\n * // save the document to disk\n * document.save('output.pdf');\n * // destroy the document\n * document.destroy();\n * ```\n */\nvar PdfDocumentLinkAnnotation = /** @class */ (function (_super) {\n    __extends(PdfDocumentLinkAnnotation, _super);\n    function PdfDocumentLinkAnnotation(rectangle, destination) {\n        var _this = _super.call(this, rectangle) || this;\n        // Fields\n        /**\n         * `Destination` of the annotation.\n         * @default null\n         * @private\n         */\n        _this.pdfDestination = null;\n        if (typeof destination !== 'undefined') {\n            _this.destination = destination;\n        }\n        return _this;\n    }\n    Object.defineProperty(PdfDocumentLinkAnnotation.prototype, \"destination\", {\n        // Properties\n        /**\n         * Gets or sets the `destination` of the annotation.\n         * ```typescript\n         * // create a new PDF document\n         * let document : PdfDocument = new PdfDocument();\n         * // create new pages\n         * let page1 : PdfPage = document.pages.add();\n         * let page2 : PdfPage = document.pages.add();\n         * // create a new rectangle\n         * let bounds : RectangleF = new RectangleF({x : 10, y : 200}, {width : 300, height : 25});\n         * //\n         * // create a new document link annotation\n         * let documentLinkAnnotation : PdfDocumentLinkAnnotation = new PdfDocumentLinkAnnotation(bounds);\n         * // set the annotation text\n         * documentLinkAnnotation.text = 'Document link annotation';\n         * // set the destination\n         * documentLinkAnnotation.destination = new PdfDestination(page2);\n         * // set the documentlink annotation location\n         * documentLinkAnnotation.destination.location = new PointF(10, 0);\n         * // add this annotation to a new page\n         * page1.annotations.add(documentLinkAnnotation);\n         * //\n         * // save the document to disk\n         * document.save('output.pdf');\n         * // destroy the document\n         * document.destroy();\n         * ```\n         * @default null\n         */\n        get: function () {\n            return this.pdfDestination;\n        },\n        set: function (value) {\n            // if (this.pdfDestination !== value) {\n            this.pdfDestination = value;\n            // }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    // Implementation\n    /**\n     * `Saves` annotation object.\n     * @private\n     */\n    PdfDocumentLinkAnnotation.prototype.save = function () {\n        _super.prototype.save.call(this);\n        if (this.pdfDestination != null) {\n            this.dictionary.items.setValue(this.dictionaryProperties.dest, this.pdfDestination.element);\n        }\n    };\n    /**\n     * `Clone` the document link annotation.\n     * @private\n     */\n    PdfDocumentLinkAnnotation.prototype.clone = function () {\n        var annot = new PdfDocumentLinkAnnotation(this.bounds, this.destination);\n        annot.color = this.color;\n        annot.brush = this.brush;\n        annot.destination = this.destination;\n        annot.font = this.font;\n        return annot;\n    };\n    return PdfDocumentLinkAnnotation;\n}(PdfLinkAnnotation));\nexport { PdfDocumentLinkAnnotation };\n","/**\n * ElementLayouter.ts class for EJ2-PDF\n */\nimport { RectangleF } from './../../../drawing/pdf-drawing';\n/**\n * Base class for `elements lay outing`.\n * @private\n */\nvar ElementLayouter = /** @class */ (function () {\n    // Constructor\n    /**\n     * Initializes a new instance of the `ElementLayouter` class.\n     * @private\n     */\n    function ElementLayouter(element) {\n        this.layoutElement = element;\n    }\n    Object.defineProperty(ElementLayouter.prototype, \"elements\", {\n        // Properties\n        /**\n         * Gets the `element`.\n         * @private\n         */\n        get: function () {\n            return this.layoutElement;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Gets the `element`.\n     * @private\n     */\n    ElementLayouter.prototype.getElement = function () {\n        return this.layoutElement;\n    };\n    // Implementation\n    /**\n     * `Layouts` the element.\n     * @private\n     */\n    ElementLayouter.prototype.layout = function (param) {\n        return this.layoutInternal(param);\n    };\n    ElementLayouter.prototype.Layouter = function (param) {\n        return this.layoutInternal(param);\n    };\n    /**\n     * Returns the `next page`.\n     * @private\n     */\n    ElementLayouter.prototype.getNextPage = function (currentPage) {\n        var section = currentPage.section;\n        var nextPage = section.add();\n        return nextPage;\n    };\n    ElementLayouter.prototype.getPaginateBounds = function (param) {\n        if ((param == null)) {\n            throw new Error('ArgumentNullException : param');\n        }\n        var result = param.format.usePaginateBounds ? param.format.paginateBounds\n            : new RectangleF(param.bounds.x, 0, param.bounds.width, param.bounds.height);\n        return result;\n    };\n    return ElementLayouter;\n}());\nexport { ElementLayouter };\nvar PdfLayoutFormat = /** @class */ (function () {\n    function PdfLayoutFormat(baseFormat) {\n        if (typeof baseFormat === 'undefined') {\n            //\n        }\n        else {\n            this.break = baseFormat.break;\n            this.layout = baseFormat.layout;\n            this.paginateBounds = baseFormat.paginateBounds;\n            this.boundsSet = baseFormat.usePaginateBounds;\n        }\n    }\n    Object.defineProperty(PdfLayoutFormat.prototype, \"layout\", {\n        // Properties\n        /**\n         * Gets or sets `layout` type of the element.\n         * @private\n         */\n        get: function () {\n            // if (typeof this.layoutType === 'undefined' || this.layoutType == null) {\n            //      this.layoutType = PdfLayoutType.Paginate;\n            // }\n            return this.layoutType;\n        },\n        set: function (value) {\n            this.layoutType = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfLayoutFormat.prototype, \"break\", {\n        /**\n         * Gets or sets `break` type of the element.\n         * @private\n         */\n        get: function () {\n            // if (typeof this.breakType === 'undefined' || this.boundsSet == null) {\n            //      this.breakType = PdfLayoutBreakType.FitPage;\n            // }\n            return this.breakType;\n        },\n        set: function (value) {\n            this.breakType = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfLayoutFormat.prototype, \"paginateBounds\", {\n        /**\n         * Gets or sets the `bounds` on the next page.\n         * @private\n         */\n        get: function () {\n            if (typeof this.layoutPaginateBounds === 'undefined' && this.layoutPaginateBounds == null) {\n                this.layoutPaginateBounds = new RectangleF(0, 0, 0, 0);\n            }\n            return this.layoutPaginateBounds;\n        },\n        set: function (value) {\n            this.layoutPaginateBounds = value;\n            this.boundsSet = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfLayoutFormat.prototype, \"usePaginateBounds\", {\n        /**\n         * Gets a value indicating whether [`use paginate bounds`].\n         * @private\n         */\n        get: function () {\n            // if (typeof this.boundsSet === 'undefined' || this.boundsSet == null) {\n            //      this.boundsSet = false;\n            // }\n            return this.boundsSet;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfLayoutFormat;\n}());\nexport { PdfLayoutFormat };\nvar PdfLayoutParams = /** @class */ (function () {\n    function PdfLayoutParams() {\n    }\n    Object.defineProperty(PdfLayoutParams.prototype, \"page\", {\n        // Properties\n        /**\n         * Gets or sets the layout `page` for the element.\n         * @private\n         */\n        get: function () {\n            return this.pdfPage;\n        },\n        set: function (value) {\n            this.pdfPage = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfLayoutParams.prototype, \"bounds\", {\n        /**\n         * Gets or sets layout `bounds` for the element.\n         * @private\n         */\n        get: function () {\n            return new RectangleF(this.layoutBounds.x, this.layoutBounds.y, this.layoutBounds.width, this.layoutBounds.height);\n        },\n        set: function (value) {\n            this.layoutBounds = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfLayoutParams.prototype, \"format\", {\n        /**\n         * Gets or sets `layout settings` for the element.\n         * @private\n         */\n        get: function () {\n            return this.layoutFormat;\n        },\n        set: function (value) {\n            this.layoutFormat = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfLayoutParams;\n}());\nexport { PdfLayoutParams };\nvar PdfLayoutResult = /** @class */ (function () {\n    // Constructors\n    /**\n     * Initializes the new instance of `PdfLayoutResult` class.\n     * @private\n     */\n    function PdfLayoutResult(page, bounds) {\n        this.pdfPage = page;\n        this.layoutBounds = bounds;\n    }\n    Object.defineProperty(PdfLayoutResult.prototype, \"page\", {\n        // Properties\n        /**\n         * Gets the last `page` where the element was drawn.\n         * @private\n         */\n        get: function () {\n            return this.pdfPage;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfLayoutResult.prototype, \"bounds\", {\n        /**\n         * Gets the `bounds` of the element on the last page where it was drawn.\n         * @private\n         */\n        get: function () {\n            return this.layoutBounds;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfLayoutResult;\n}());\nexport { PdfLayoutResult };\n","/**\n * PdfBorders.ts class for EJ2-PDF\n */\nimport { PdfPen } from './../../../graphics/pdf-pen';\nimport { PdfDashStyle } from './../../../graphics/enum';\nimport { PdfColor } from './../../../graphics/pdf-color';\n/**\n * `PdfBorders` class used represents the cell border of the PDF grid.\n */\nvar PdfBorders = /** @class */ (function () {\n    // Constructor\n    /**\n     * Create a new instance for `PdfBorders` class.\n     * @private\n     */\n    function PdfBorders() {\n        var defaultBorderPenLeft = new PdfPen(new PdfColor(0, 0, 0));\n        defaultBorderPenLeft.dashStyle = PdfDashStyle.Solid;\n        var defaultBorderPenRight = new PdfPen(new PdfColor(0, 0, 0));\n        defaultBorderPenRight.dashStyle = PdfDashStyle.Solid;\n        var defaultBorderPenTop = new PdfPen(new PdfColor(0, 0, 0));\n        defaultBorderPenTop.dashStyle = PdfDashStyle.Solid;\n        var defaultBorderPenBottom = new PdfPen(new PdfColor(0, 0, 0));\n        defaultBorderPenBottom.dashStyle = PdfDashStyle.Solid;\n        this.leftPen = defaultBorderPenLeft;\n        this.rightPen = defaultBorderPenRight;\n        this.topPen = defaultBorderPenTop;\n        this.bottomPen = defaultBorderPenBottom;\n    }\n    Object.defineProperty(PdfBorders.prototype, \"left\", {\n        // Properties\n        /**\n         * Gets or sets the `Left`.\n         * @private\n         */\n        get: function () {\n            return this.leftPen;\n        },\n        set: function (value) {\n            this.leftPen = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBorders.prototype, \"right\", {\n        /**\n         * Gets or sets the `Right`.\n         * @private\n         */\n        get: function () {\n            return this.rightPen;\n        },\n        set: function (value) {\n            this.rightPen = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBorders.prototype, \"top\", {\n        /**\n         * Gets or sets the `Top`.\n         * @private\n         */\n        get: function () {\n            return this.topPen;\n        },\n        set: function (value) {\n            this.topPen = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBorders.prototype, \"bottom\", {\n        /**\n         * Gets or sets the `Bottom`.\n         * @private\n         */\n        get: function () {\n            return this.bottomPen;\n        },\n        set: function (value) {\n            this.bottomPen = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBorders.prototype, \"all\", {\n        /**\n         * sets the `All`.\n         * @private\n         */\n        set: function (value) {\n            this.leftPen = this.rightPen = this.topPen = this.bottomPen = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBorders.prototype, \"isAll\", {\n        /**\n         * Gets a value indicating whether this instance `is all`.\n         * @private\n         */\n        get: function () {\n            return ((this.leftPen === this.rightPen) && (this.leftPen === this.topPen) && (this.leftPen === this.bottomPen));\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBorders, \"default\", {\n        /**\n         * Gets the `default`.\n         * @private\n         */\n        get: function () {\n            return new PdfBorders();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfBorders;\n}());\nexport { PdfBorders };\nvar PdfPaddings = /** @class */ (function () {\n    function PdfPaddings(left, right, top, bottom) {\n        /**\n         * The 'left' border padding set.\n         * @private\n         */\n        this.hasLeftPad = false;\n        /**\n         * The 'right' border padding set.\n         * @private\n         */\n        this.hasRightPad = false;\n        /**\n         * The 'top' border padding set.\n         * @private\n         */\n        this.hasTopPad = false;\n        /**\n         * The 'bottom' border padding set.\n         * @private\n         */\n        this.hasBottomPad = false;\n        if (typeof left === 'undefined') {\n            //0.5 is set for top and bottom by default.\n            this.bottomPad = this.topPad = this.leftPad = this.rightPad = 0.5;\n        }\n        else {\n            this.leftPad = left;\n            this.rightPad = right;\n            this.topPad = top;\n            this.bottomPad = bottom;\n            this.hasLeftPad = true;\n            this.hasRightPad = true;\n            this.hasTopPad = true;\n            this.hasBottomPad = true;\n        }\n    }\n    Object.defineProperty(PdfPaddings.prototype, \"left\", {\n        // Properties\n        /**\n         * Gets or sets the `left` value of the edge\n         * @private\n         */\n        get: function () {\n            return this.leftPad;\n        },\n        set: function (value) {\n            this.leftPad = value;\n            this.hasLeftPad = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPaddings.prototype, \"right\", {\n        /**\n         * Gets or sets the `right` value of the edge.\n         * @private\n         */\n        get: function () {\n            return this.rightPad;\n        },\n        set: function (value) {\n            this.rightPad = value;\n            this.hasRightPad = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPaddings.prototype, \"top\", {\n        /**\n         * Gets or sets the `top` value of the edge\n         * @private\n         */\n        get: function () {\n            return this.topPad;\n        },\n        set: function (value) {\n            this.topPad = value;\n            this.hasTopPad = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPaddings.prototype, \"bottom\", {\n        /**\n         * Gets or sets the `bottom` value of the edge.\n         * @private\n         */\n        get: function () {\n            return this.bottomPad;\n        },\n        set: function (value) {\n            this.bottomPad = value;\n            this.hasBottomPad = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPaddings.prototype, \"all\", {\n        /**\n         * Sets value to all sides `left,right,top and bottom`.s\n         * @private\n         */\n        set: function (value) {\n            this.leftPad = this.rightPad = this.topPad = this.bottomPad = value;\n            this.hasLeftPad = true;\n            this.hasRightPad = true;\n            this.hasTopPad = true;\n            this.hasBottomPad = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfPaddings;\n}());\nexport { PdfPaddings };\n","import { RectangleF, PointF } from './../../drawing/pdf-drawing';\nimport { PdfLayoutParams, PdfLayoutFormat } from './base/element-layouter';\nimport { PdfBorders } from './../../structured-elements/grid/styles/pdf-borders';\n/**\n * `PdfLayoutElement` class represents the base class for all elements that can be layout on the pages.\n * @private\n */\nvar PdfLayoutElement = /** @class */ (function () {\n    function PdfLayoutElement() {\n    }\n    Object.defineProperty(PdfLayoutElement.prototype, \"raiseBeginPageLayout\", {\n        // Property\n        /**\n         * Gets a value indicating whether the `start page layout event` should be raised.\n         * @private\n         */\n        get: function () {\n            return (typeof this.beginPageLayout !== 'undefined');\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfLayoutElement.prototype, \"raiseEndPageLayout\", {\n        /**\n         * Gets a value indicating whether the `ending page layout event` should be raised.\n         * @private\n         */\n        get: function () {\n            return (typeof this.endPageLayout !== 'undefined');\n        },\n        enumerable: true,\n        configurable: true\n    });\n    //Event Handlers\n    PdfLayoutElement.prototype.onBeginPageLayout = function (args) {\n        if (this.beginPageLayout) {\n            this.beginPageLayout(this, args);\n        }\n    };\n    PdfLayoutElement.prototype.onEndPageLayout = function (args) {\n        if (this.endPageLayout) {\n            this.endPageLayout(this, args);\n        }\n    };\n    PdfLayoutElement.prototype.drawHelper = function (arg2, arg3, arg4, arg5) {\n        if (arg3 instanceof PointF && typeof arg3.width === 'undefined' && typeof arg4 === 'undefined') {\n            return this.drawHelper(arg2, arg3.x, arg3.y);\n        }\n        else if (typeof arg3 === 'number' && typeof arg4 === 'number' && typeof arg5 === 'undefined') {\n            return this.drawHelper(arg2, arg3, arg4, null);\n        }\n        else if (arg3 instanceof RectangleF && typeof arg3.width !== 'undefined' && typeof arg4 === 'undefined') {\n            return this.drawHelper(arg2, arg3, null);\n        }\n        else if (arg3 instanceof PointF && typeof arg3.width === 'undefined' && arg4 instanceof PdfLayoutFormat) {\n            return this.drawHelper(arg2, arg3.x, arg3.y, arg4);\n        }\n        else if (typeof arg3 === 'number' && typeof arg4 === 'number' && (arg5 instanceof PdfLayoutFormat || arg5 == null)) {\n            var width = (arg2.graphics.clientSize.width - arg3);\n            var layoutRectangle = new RectangleF(arg3, arg4, width, 0);\n            return this.drawHelper(arg2, layoutRectangle, arg5);\n        }\n        else if (arg3 instanceof RectangleF && typeof arg3.width !== 'undefined' && typeof arg4 === 'boolean') {\n            this.bEmbedFonts = arg4;\n            return this.drawHelper(arg2, arg3, null);\n        }\n        else {\n            var param = new PdfLayoutParams();\n            var temparg3 = arg3;\n            var temparg4 = arg4;\n            param.page = arg2;\n            param.bounds = temparg3;\n            if (param != null) {\n                var x = param.bounds.x;\n                var y = param.bounds.y;\n                if (param.bounds.x === 0) {\n                    x = PdfBorders.default.right.width / 2;\n                }\n                if (param.bounds.y === 0) {\n                    y = PdfBorders.default.top.width / 2;\n                }\n                var newBound = new RectangleF(x, y, param.bounds.width, param.bounds.height);\n                param.bounds = newBound;\n            }\n            param.format = (temparg4 != null) ? temparg4 : new PdfLayoutFormat();\n            var result = this.layout(param);\n            return result;\n        }\n    };\n    return PdfLayoutElement;\n}());\nexport { PdfLayoutElement };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * TextLayouter.ts class for EJ2-PDF\n */\nimport { ElementLayouter, PdfLayoutResult } from './element-layouter';\nimport { RectangleF, SizeF } from './../../../drawing/pdf-drawing';\nimport { PdfStringLayouter } from './../../fonts/string-layouter';\nimport { PdfLayoutBreakType } from './../../figures/enum';\nimport { PdfColor } from './../../pdf-color';\nimport { PdfTextWebLink } from './../../../annotations/pdf-text-web-link';\n/**\n * Class that `layouts the text`.\n * @private\n */\nvar TextLayouter = /** @class */ (function (_super) {\n    __extends(TextLayouter, _super);\n    // Constructors\n    /**\n     * Initializes a new instance of the `TextLayouter` class.\n     * @private\n     */\n    function TextLayouter(element) {\n        return _super.call(this, element) || this;\n    }\n    Object.defineProperty(TextLayouter.prototype, \"element\", {\n        /**\n         * Gets the layout `element`.\n         * @private\n         */\n        get: function () {\n            return _super.prototype.getElement.call(this);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    // Implementation\n    /**\n     * `Layouts` the element.\n     * @private\n     */\n    TextLayouter.prototype.layoutInternal = function (param) {\n        /* tslint:disable */\n        this.format = (this.element.stringFormat !== null && typeof this.element.stringFormat !== 'undefined') ? this.element.stringFormat : null;\n        var currentPage = param.page;\n        var currentBounds = param.bounds;\n        var text = this.element.value;\n        var result = null;\n        var pageResult = new TextPageLayoutResult();\n        pageResult.page = currentPage;\n        pageResult.remainder = text;\n        for (;;) {\n            pageResult = this.layoutOnPage(text, currentPage, currentBounds, param);\n            result = this.getLayoutResult(pageResult);\n            break;\n        }\n        /* tslint:enable */\n        return result;\n    };\n    /**\n     * Raises `PageLayout` event if needed.\n     * @private\n     */\n    TextLayouter.prototype.getLayoutResult = function (pageResult) {\n        var result = new PdfTextLayoutResult(pageResult.page, pageResult.bounds, pageResult.remainder, pageResult.lastLineBounds);\n        return result;\n    };\n    /* tslint:disable */\n    /**\n     * `Layouts` the text on the page.\n     * @private\n     */\n    TextLayouter.prototype.layoutOnPage = function (text, currentPage, currentBounds, param) {\n        var result = new TextPageLayoutResult();\n        result.remainder = text;\n        result.page = currentPage;\n        currentBounds = this.checkCorrectBounds(currentPage, currentBounds);\n        var layouter = new PdfStringLayouter();\n        var stringResult = layouter.layout(text, this.element.font, this.format, currentBounds, currentPage.getClientSize().height, false, new SizeF(0, 0));\n        var textFinished = (stringResult.remainder == null);\n        var doesntFit = (param.format.break === PdfLayoutBreakType.FitElement);\n        var canDraw = !(doesntFit || stringResult.empty);\n        // Draw the text.\n        var graphics = currentPage.graphics;\n        var brush = this.element.getBrush();\n        if (this.element instanceof PdfTextWebLink) {\n            brush.color = new PdfColor(0, 0, 255);\n        }\n        graphics.drawStringLayoutResult(stringResult, this.element.font, this.element.pen, brush, currentBounds, this.format);\n        var lineInfo = stringResult.lines[stringResult.lineCount - 1];\n        result.lastLineBounds = graphics.getLineBounds(stringResult.lineCount - 1, stringResult, this.element.font, currentBounds, this.format);\n        result.bounds = this.getTextPageBounds(currentPage, currentBounds, stringResult);\n        result.remainder = stringResult.remainder;\n        result.end = (textFinished);\n        return result;\n    };\n    /* tslint:enable */\n    /**\n     * `Corrects current bounds` on the page.\n     * @private\n     */\n    TextLayouter.prototype.checkCorrectBounds = function (currentPage, currentBounds) {\n        var pageSize = currentPage.graphics.clientSize;\n        currentBounds.height = (currentBounds.height > 0) ? currentBounds.height : pageSize.height - currentBounds.y;\n        return currentBounds;\n    };\n    /**\n     * Returns a `rectangle` where the text was printed on the page.\n     * @private\n     */\n    /* tslint:disable */\n    TextLayouter.prototype.getTextPageBounds = function (currentPage, currentBounds, stringResult) {\n        var textSize = stringResult.actualSize;\n        var x = currentBounds.x;\n        var y = currentBounds.y;\n        var width = (currentBounds.width > 0) ? currentBounds.width : textSize.width;\n        var height = textSize.height;\n        var shiftedRect = currentPage.graphics.checkCorrectLayoutRectangle(textSize, currentBounds.x, currentBounds.y, this.format);\n        // if (currentBounds.width <= 0) {\n        x = shiftedRect.x;\n        // }\n        var verticalShift = currentPage.graphics.getTextVerticalAlignShift(textSize.height, currentBounds.height, this.format);\n        y += verticalShift;\n        var bounds = new RectangleF(x, y, width, height);\n        return bounds;\n    };\n    return TextLayouter;\n}(ElementLayouter));\nexport { TextLayouter };\nvar TextPageLayoutResult = /** @class */ (function () {\n    function TextPageLayoutResult() {\n    }\n    return TextPageLayoutResult;\n}());\nexport { TextPageLayoutResult };\nvar PdfTextLayoutResult = /** @class */ (function (_super) {\n    __extends(PdfTextLayoutResult, _super);\n    // Constructors\n    /**\n     * Initializes the new instance of `PdfTextLayoutResult` class.\n     * @private\n     */\n    function PdfTextLayoutResult(page, bounds, remainder, lastLineBounds) {\n        var _this = _super.call(this, page, bounds) || this;\n        _this.remainderText = remainder;\n        _this.lastLineTextBounds = lastLineBounds;\n        return _this;\n    }\n    Object.defineProperty(PdfTextLayoutResult.prototype, \"remainder\", {\n        // Properties\n        /**\n         * Gets a value that contains the `text` that was not printed.\n         * @private\n         */\n        get: function () {\n            return this.remainderText;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfTextLayoutResult.prototype, \"lastLineBounds\", {\n        /**\n         * Gets a value that indicates the `bounds` of the last line that was printed on the page.\n         * @private\n         */\n        get: function () {\n            return this.lastLineTextBounds;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfTextLayoutResult;\n}(PdfLayoutResult));\nexport { PdfTextLayoutResult };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * PdfTextElement.ts class for EJ2-PDF\n */\nimport { PdfLayoutElement } from './../figures/layout-element';\nimport { PdfBrush } from './../brushes/pdf-brush';\nimport { PdfFont } from './../fonts/pdf-font';\nimport { PdfStandardFont } from './../fonts/pdf-standard-font';\nimport { PdfPen } from './../pdf-pen';\nimport { PdfLayoutParams } from './../figures/base/element-layouter';\nimport { TextLayouter } from './base/text-layouter';\nimport { PdfSolidBrush } from './../brushes/pdf-solid-brush';\nimport { PdfColor } from './../pdf-color';\nimport { RectangleF, SizeF, PointF } from './../../drawing/pdf-drawing';\nimport { PdfLayoutFormat } from './base/element-layouter';\nimport { PdfStringLayouter } from './../fonts/string-layouter';\nimport { PdfTextAlignment } from './../enum';\n/**\n * `PdfTextElement` class represents the text area with the ability to span several pages\n * and inherited from the 'PdfLayoutElement' class.\n * @private\n */\nvar PdfTextElement = /** @class */ (function (_super) {\n    __extends(PdfTextElement, _super);\n    function PdfTextElement(arg1, arg2, arg3, arg4, arg5) {\n        var _this = _super.call(this) || this;\n        // Fields\n        /**\n         * `Text` data.\n         * @private\n         */\n        _this.content = '';\n        /**\n         * `Value` of text data.\n         * @private\n         */\n        _this.elementValue = '';\n        /**\n         * indicate whether the drawText with PointF overload is called or not.\n         * @default false\n         * @private\n         */\n        _this.hasPointOverload = false;\n        /**\n         * indicate whether the PdfGridCell value is `PdfTextElement`\n         * @default false\n         * @private\n         */\n        _this.isPdfTextElement = false;\n        if (typeof arg1 === 'undefined') {\n            //\n        }\n        else if (typeof arg1 === 'string' && typeof arg2 === 'undefined') {\n            _this.content = arg1;\n            _this.elementValue = arg1;\n        }\n        else if (typeof arg1 === 'string' && arg2 instanceof PdfFont && typeof arg3 === 'undefined') {\n            _this.content = arg1;\n            _this.elementValue = arg1;\n            _this.pdfFont = arg2;\n        }\n        else if (typeof arg1 === 'string' && arg2 instanceof PdfFont && arg3 instanceof PdfPen && typeof arg4 === 'undefined') {\n            _this.content = arg1;\n            _this.elementValue = arg1;\n            _this.pdfFont = arg2;\n            _this.pdfPen = arg3;\n        }\n        else if (typeof arg1 === 'string' && arg2 instanceof PdfFont && arg3 instanceof PdfBrush && typeof arg4 === 'undefined') {\n            _this.content = arg1;\n            _this.elementValue = arg1;\n            _this.pdfFont = arg2;\n            _this.pdfBrush = arg3;\n        }\n        else {\n            _this.content = arg1;\n            _this.elementValue = arg1;\n            _this.pdfFont = arg2;\n            _this.pdfPen = arg3;\n            _this.pdfBrush = arg4;\n            _this.format = arg5;\n        }\n        return _this;\n    }\n    Object.defineProperty(PdfTextElement.prototype, \"text\", {\n        // Properties\n        /**\n         * Gets or sets a value indicating the `text` that should be printed.\n         * ```typescript\n         * // create a new PDF document.\n         * let document : PdfDocument = new PdfDocument();\n         * // add a page to the document.\n         * let page1 : PdfPage = document.pages.add();\n         * // create the font\n         * let font : PdfFont = new PdfStandardFont(PdfFontFamily.Helvetica, 12);\n         * // create the Text Web Link\n         * let textLink : PdfTextWebLink = new PdfTextWebLink();\n         * // set the hyperlink\n         * textLink.url = 'http://www.google.com';\n         * //\n         * // set the link text\n         * textLink.text = 'Google';\n         * //\n         * // set the font\n         * textLink.font = font;\n         * // draw the hyperlink in PDF page\n         * textLink.draw(page1, new PointF(10, 40));\n         * // save the document.\n         * document.save('output.pdf');\n         * // destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this.content;\n        },\n        set: function (value) {\n            this.elementValue = value;\n            this.content = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfTextElement.prototype, \"value\", {\n        //get value\n        /**\n         * Gets or sets a `value` indicating the text that should be printed.\n         * @private\n         */\n        get: function () {\n            return this.elementValue;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfTextElement.prototype, \"pen\", {\n        //get pen\n        /**\n         * Gets or sets a `PdfPen` that determines the color, width, and style of the text\n         * @private\n         */\n        get: function () {\n            return this.pdfPen;\n        },\n        //Set pen value\n        set: function (value) {\n            this.pdfPen = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfTextElement.prototype, \"brush\", {\n        //get brush\n        /**\n         * Gets or sets the `PdfBrush` that will be used to draw the text with color and texture.\n         * @private\n         */\n        get: function () {\n            return this.pdfBrush;\n        },\n        //Set brush value\n        set: function (value) {\n            this.pdfBrush = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfTextElement.prototype, \"font\", {\n        //get font\n        /**\n         * Gets or sets a `PdfFont` that defines the text format.\n         * ```typescript\n         * // create a new PDF document.\n         * let document : PdfDocument = new PdfDocument();\n         * // add a page to the document.\n         * let page1 : PdfPage = document.pages.add();\n         * // create the font\n         * let font : PdfFont = new PdfStandardFont(PdfFontFamily.Helvetica, 12);\n         * // create the Text Web Link\n         * let textLink : PdfTextWebLink = new PdfTextWebLink();\n         * // set the hyperlink\n         * textLink.url = 'http://www.google.com';\n         * // set the link text\n         * textLink.text = 'Google';\n         * //\n         * // set the font\n         * textLink.font = font;\n         * //\n         * // draw the hyperlink in PDF page\n         * textLink.draw(page1, new PointF(10, 40));\n         * // save the document.\n         * document.save('output.pdf');\n         * // destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this.pdfFont;\n        },\n        set: function (value) {\n            this.pdfFont = value;\n            if (this.pdfFont instanceof PdfStandardFont && this.content != null) {\n                this.elementValue = PdfStandardFont.convert(this.content);\n            }\n            else {\n                this.elementValue = this.content;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfTextElement.prototype, \"stringFormat\", {\n        /**\n         * Gets or sets the `PdfStringFormat` that will be used to set the string format\n         * @private\n         */\n        get: function () {\n            return this.format;\n        },\n        set: function (value) {\n            this.format = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    // Implementation\n    /**\n     * Gets a `brush` for drawing.\n     * @private\n     */\n    PdfTextElement.prototype.getBrush = function () {\n        return (this.pdfBrush == null || typeof this.pdfBrush === 'undefined') ? new PdfSolidBrush(new PdfColor(0, 0, 0)) : this.pdfBrush;\n    };\n    // /**\n    //  * `Draws` an element on the Graphics.\n    //  * @private\n    //  */\n    // public drawInternal(graphics : PdfGraphics) : void {\n    //     graphics.drawString(this.elementValue, this.pdfFont, this.pdfPen, this.getBrush(), 0, 0, this.stringFormat);\n    // }\n    /**\n     * `Layouts` the element.\n     * @private\n     */\n    PdfTextElement.prototype.layout = function (param) {\n        var layouter = new TextLayouter(this);\n        var result = layouter.layout(param);\n        return result;\n    };\n    PdfTextElement.prototype.drawText = function (arg2, arg3, arg4, arg5) {\n        if (arg3 instanceof PointF && typeof arg3.width === 'undefined' && typeof arg4 === 'undefined') {\n            this.hasPointOverload = true;\n            return this.drawText(arg2, arg3.x, arg3.y);\n        }\n        else if (typeof arg3 === 'number' && typeof arg4 === 'number' && typeof arg5 === 'undefined') {\n            this.hasPointOverload = true;\n            return this.drawText(arg2, arg3, arg4, null);\n        }\n        else if (arg3 instanceof RectangleF && typeof arg3.width !== 'undefined' && typeof arg4 === 'undefined') {\n            return this.drawText(arg2, arg3, null);\n        }\n        else if (arg3 instanceof PointF && typeof arg3.width === 'undefined' && arg4 instanceof PdfLayoutFormat) {\n            this.hasPointOverload = true;\n            return this.drawText(arg2, arg3.x, arg3.y, arg4);\n        }\n        else if (typeof arg3 === 'number' && typeof arg4 === 'number' && (arg5 instanceof PdfLayoutFormat || arg5 == null)) {\n            this.hasPointOverload = true;\n            var width = (arg2.graphics.clientSize.width - arg3);\n            var layoutRectangle = new RectangleF(arg3, arg4, width, 0);\n            return this.drawText(arg2, layoutRectangle, arg5);\n        }\n        else if (arg3 instanceof RectangleF && typeof arg3.width !== 'undefined' && typeof arg4 === 'boolean') {\n            return this.drawText(arg2, arg3, null);\n        }\n        else {\n            var layout = new PdfStringLayouter();\n            if (this.hasPointOverload) {\n                var stringLayoutResult = layout.layout(this.value, this.font, this.stringFormat, new SizeF((arg2.graphics.clientSize.width - arg3.x), 0), true, arg2.graphics.clientSize);\n                var layoutResult = void 0;\n                var param = new PdfLayoutParams();\n                var temparg3 = arg3;\n                var temparg4 = arg4;\n                param.page = arg2;\n                var previousPage = arg2;\n                param.bounds = temparg3;\n                param.format = (temparg4 != null) ? temparg4 : new PdfLayoutFormat();\n                if (stringLayoutResult.lines.length > 1) {\n                    this.text = stringLayoutResult.layoutLines[0].text;\n                    if (param.bounds.y <= param.page.graphics.clientSize.height) {\n                        var previousPosition = new PointF(param.bounds.x, param.bounds.y);\n                        layoutResult = this.layout(param);\n                        var bounds = new RectangleF(0, layoutResult.bounds.y + stringLayoutResult.lineHeight, arg2.graphics.clientSize.width, stringLayoutResult.lineHeight);\n                        var isPaginate = false;\n                        for (var i = 1; i < stringLayoutResult.lines.length; i++) {\n                            param.page = layoutResult.page;\n                            param.bounds = new RectangleF(new PointF(bounds.x, bounds.y), new SizeF(bounds.width, bounds.height));\n                            this.text = stringLayoutResult.layoutLines[i].text;\n                            if (bounds.y + stringLayoutResult.lineHeight > layoutResult.page.graphics.clientSize.height) {\n                                isPaginate = true;\n                                param.page = param.page.graphics.getNextPage();\n                                if (previousPosition.y > (layoutResult.page.graphics.clientSize.height - layoutResult.bounds.height)) {\n                                    bounds = new RectangleF(0, layoutResult.bounds.height, layoutResult.page.graphics.clientSize.width, stringLayoutResult.lineHeight);\n                                }\n                                else {\n                                    bounds = new RectangleF(0, 0, layoutResult.page.graphics.clientSize.width, stringLayoutResult.lineHeight);\n                                }\n                                param.bounds = bounds;\n                            }\n                            layoutResult = this.layout(param);\n                            if (i !== (stringLayoutResult.lines.length - 1)) {\n                                bounds = new RectangleF(0, layoutResult.bounds.y + stringLayoutResult.lineHeight, layoutResult.page.graphics.clientSize.width, stringLayoutResult.lineHeight);\n                            }\n                            else {\n                                var lineWidth = this.font.measureString(this.text, this.format).width;\n                                layoutResult = this.calculateResultBounds(layoutResult, lineWidth, layoutResult.page.graphics.clientSize.width, 0);\n                            }\n                        }\n                    }\n                    return layoutResult;\n                }\n                else {\n                    var lineSize = this.font.measureString(this.text, this.format);\n                    if (param.bounds.y <= param.page.graphics.clientSize.height) {\n                        layoutResult = this.layout(param);\n                        layoutResult = this.calculateResultBounds(layoutResult, lineSize.width, layoutResult.page.graphics.clientSize.width, 0);\n                    }\n                    return layoutResult;\n                }\n            }\n            else {\n                var layoutResult = layout.layout(this.value, this.font, this.stringFormat, new SizeF(arg3.width, 0), false, arg2.graphics.clientSize);\n                var result = void 0;\n                var param = new PdfLayoutParams();\n                var temparg3 = arg3;\n                var temparg4 = arg4;\n                param.page = arg2;\n                param.bounds = temparg3;\n                param.format = (temparg4 != null) ? temparg4 : new PdfLayoutFormat();\n                if (layoutResult.lines.length > 1) {\n                    this.text = layoutResult.layoutLines[0].text;\n                    if (param.bounds.y <= param.page.graphics.clientSize.height) {\n                        var previousPosition = new PointF(param.bounds.x, param.bounds.y);\n                        result = this.layout(param);\n                        var bounds = new RectangleF(temparg3.x, result.bounds.y + layoutResult.lineHeight, temparg3.width, layoutResult.lineHeight);\n                        var isPaginate = false;\n                        for (var i = 1; i < layoutResult.lines.length; i++) {\n                            param.page = result.page;\n                            param.bounds = new RectangleF(bounds.x, bounds.y, bounds.width, bounds.height);\n                            this.text = layoutResult.layoutLines[i].text;\n                            if (bounds.y + layoutResult.lineHeight > result.page.graphics.clientSize.height) {\n                                isPaginate = true;\n                                param.page = param.page.graphics.getNextPage();\n                                if (previousPosition.y > (result.page.graphics.clientSize.height - result.bounds.height)) {\n                                    bounds = new RectangleF(temparg3.x, layoutResult.lineHeight, temparg3.width, layoutResult.lineHeight);\n                                }\n                                else {\n                                    bounds = new RectangleF(temparg3.x, 0, temparg3.width, layoutResult.lineHeight);\n                                }\n                                param.bounds = bounds;\n                            }\n                            result = this.layout(param);\n                            if (i !== (layoutResult.lines.length - 1)) {\n                                bounds = new RectangleF(temparg3.x, result.bounds.y + layoutResult.lineHeight, temparg3.width, layoutResult.lineHeight);\n                            }\n                            else {\n                                var lineWidth = this.font.measureString(this.text, this.format).width;\n                                result = this.calculateResultBounds(result, lineWidth, temparg3.width, temparg3.x);\n                            }\n                        }\n                    }\n                    return result;\n                }\n                else {\n                    var lineSize = this.font.measureString(this.text, this.format);\n                    if (param.bounds.y <= param.page.graphics.clientSize.height) {\n                        result = this.layout(param);\n                        result = this.calculateResultBounds(result, lineSize.width, temparg3.width, temparg3.x);\n                    }\n                    return result;\n                }\n            }\n        }\n    };\n    PdfTextElement.prototype.calculateResultBounds = function (result, lineWidth, maximumWidth, startPosition) {\n        var shift = 0;\n        if (this.stringFormat != null && typeof this.stringFormat !== 'undefined' && this.stringFormat.alignment === PdfTextAlignment.Center) {\n            result.bounds.x = startPosition + (maximumWidth - lineWidth) / 2;\n            result.bounds.width = lineWidth;\n        }\n        else if (this.stringFormat != null && typeof this.stringFormat !== 'undefined' && this.stringFormat.alignment === PdfTextAlignment.Right) {\n            result.bounds.x = startPosition + (maximumWidth - lineWidth);\n            result.bounds.width = lineWidth;\n        }\n        else if (this.stringFormat != null && typeof this.stringFormat !== 'undefined' && this.stringFormat.alignment === PdfTextAlignment.Justify) {\n            result.bounds.x = startPosition;\n            result.bounds.width = maximumWidth;\n        }\n        else {\n            result.bounds.width = startPosition;\n            result.bounds.width = lineWidth;\n        }\n        return result;\n    };\n    return PdfTextElement;\n}(PdfLayoutElement));\nexport { PdfTextElement };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { PdfActionLinkAnnotation } from './action-link-annotation';\nimport { PdfName } from './../primitives/pdf-name';\nimport { PdfUriAction } from './../actions/uri-action';\n/**\n * `PdfUriAnnotation` class represents the Uri annotation.\n * @private\n */\nvar PdfUriAnnotation = /** @class */ (function (_super) {\n    __extends(PdfUriAnnotation, _super);\n    function PdfUriAnnotation(rectangle, uri) {\n        var _this = _super.call(this, rectangle) || this;\n        if (typeof uri !== 'undefined') {\n            _this.uri = uri;\n        }\n        return _this;\n    }\n    Object.defineProperty(PdfUriAnnotation.prototype, \"uriAction\", {\n        /**\n         * Get `action` of the annotation.\n         * @private\n         */\n        get: function () {\n            if (typeof this.pdfUriAction === 'undefined') {\n                this.pdfUriAction = new PdfUriAction();\n            }\n            return this.pdfUriAction;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfUriAnnotation.prototype, \"uri\", {\n        // Properties\n        /**\n         * Gets or sets the `Uri` address.\n         * @private\n         */\n        get: function () {\n            return this.uriAction.uri;\n        },\n        set: function (value) {\n            if (this.uriAction.uri !== value) {\n                this.uriAction.uri = value;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfUriAnnotation.prototype, \"action\", {\n        /**\n         * Gets or sets the `action`.\n         * @private\n         */\n        get: function () {\n            return this.getSetAction();\n        },\n        set: function (value) {\n            this.getSetAction(value);\n            this.uriAction.next = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    // Implementation\n    /**\n     * `Initializes` annotation object.\n     * @private\n     */\n    PdfUriAnnotation.prototype.initialize = function () {\n        _super.prototype.initialize.call(this);\n        this.dictionary.items.setValue(this.dictionaryProperties.subtype, new PdfName(this.dictionaryProperties.link));\n        var tempPrimitive = this.uriAction.element;\n        this.dictionary.items.setValue(this.dictionaryProperties.a, this.uriAction.element);\n    };\n    return PdfUriAnnotation;\n}(PdfActionLinkAnnotation));\nexport { PdfUriAnnotation };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { PdfPage } from './../pages/pdf-page';\nimport { PointF, RectangleF, SizeF } from './../drawing/pdf-drawing';\nimport { PdfTextElement } from './../graphics/figures/text-element';\nimport { PdfUriAnnotation } from './uri-annotation';\nimport { PdfStringLayouter } from './../graphics/fonts/string-layouter';\nimport { PdfFontStyle } from './../graphics/fonts/enum';\nimport { PdfTextAlignment } from './../graphics/enum';\nimport { PdfArray } from './../primitives/pdf-array';\nimport { PdfNumber } from './../primitives/pdf-number';\n/**\n * `PdfTextWebLink` class represents the class for text web link annotation.\n * ```typescript\n * // create a new PDF document.\n * let document : PdfDocument = new PdfDocument();\n * // add a page to the document.\n * let page1 : PdfPage = document.pages.add();\n * // create the font\n * let font : PdfFont = new PdfStandardFont(PdfFontFamily.Helvetica, 12);\n * //\n * // create the Text Web Link\n * let textLink : PdfTextWebLink = new PdfTextWebLink();\n * // set the hyperlink\n * textLink.url = 'http://www.google.com';\n * // set the link text\n * textLink.text = 'Google';\n * // set the font\n * textLink.font = font;\n * // draw the hyperlink in PDF page\n * textLink.draw(page1, new PointF(10, 40));\n * //\n * // save the document.\n * document.save('output.pdf');\n * // destroy the document\n * document.destroy();\n * ```\n */\nvar PdfTextWebLink = /** @class */ (function (_super) {\n    __extends(PdfTextWebLink, _super);\n    // Constructors\n    /**\n     * Initializes a new instance of the `PdfTextWebLink` class.\n     * @private\n     */\n    function PdfTextWebLink() {\n        var _this = _super.call(this) || this;\n        // Fields\n        /**\n         * Internal variable to store `Url`.\n         * @default ''\n         * @private\n         */\n        _this.uniformResourceLocator = '';\n        /**\n         * Internal variable to store `Uri Annotation` object.\n         * @default null\n         * @private\n         */\n        _this.uriAnnotation = null;\n        /**\n         * Checks whether the drawTextWebLink method with `PointF` overload is called or not.\n         * If it set as true, then the start position of each lines excluding firest line is changed as (0, Y).\n         * @private\n         * @hidden\n         */\n        _this.recalculateBounds = false;\n        _this.defaultBorder = new PdfArray();\n        for (var i = 0; i < 3; i++) {\n            _this.defaultBorder.add(new PdfNumber(0));\n        }\n        return _this;\n    }\n    Object.defineProperty(PdfTextWebLink.prototype, \"url\", {\n        // Properties\n        /**\n         * Gets or sets the `Uri address`.\n         * ```typescript\n         * // create a new PDF document.\n         * let document : PdfDocument = new PdfDocument();\n         * // add a page to the document.\n         * let page1 : PdfPage = document.pages.add();\n         * // create the font\n         * let font : PdfFont = new PdfStandardFont(PdfFontFamily.Helvetica, 12);\n         * // create the Text Web Link\n         * let textLink : PdfTextWebLink = new PdfTextWebLink();\n         * //\n         * // set the hyperlink\n         * textLink.url = 'http://www.google.com';\n         * //\n         * // set the link text\n         * textLink.text = 'Google';\n         * // set the font\n         * textLink.font = font;\n         * // draw the hyperlink in PDF page\n         * textLink.draw(page1, new PointF(10, 40));\n         * // save the document.\n         * document.save('output.pdf');\n         * // destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this.uniformResourceLocator;\n        },\n        set: function (value) {\n            if (value.length === 0) {\n                throw new Error('ArgumentException : Url - string can not be empty');\n            }\n            this.uniformResourceLocator = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfTextWebLink.prototype.draw = function (arg1, arg2) {\n        if (arg1 instanceof PdfPage) {\n            var layout = new PdfStringLayouter();\n            var previousFontStyle = this.font.style;\n            if (arg2 instanceof PointF) {\n                this.recalculateBounds = true;\n                this.font.style = PdfFontStyle.Underline;\n                var layoutResult = layout.layout(this.value, this.font, this.stringFormat, new SizeF((arg1.graphics.clientSize.width - arg2.x), 0), true, arg1.graphics.clientSize);\n                if (layoutResult.lines.length === 1) {\n                    var textSize = this.font.measureString(this.value);\n                    var rect = new RectangleF(arg2, textSize);\n                    rect = this.calculateBounds(rect, textSize.width, arg1.graphics.clientSize.width, arg2.x);\n                    this.uriAnnotation = new PdfUriAnnotation(rect, this.url);\n                    this.uriAnnotation.dictionary.items.setValue('Border', this.defaultBorder);\n                    arg1.annotations.add(this.uriAnnotation);\n                    var result = this.drawText(arg1, arg2);\n                    this.font.style = previousFontStyle;\n                    return result;\n                }\n                else {\n                    var result = this.drawMultipleLineWithPoint(layoutResult, arg1, arg2);\n                    this.font.style = previousFontStyle;\n                    return result;\n                }\n            }\n            else {\n                var layoutResult = layout.layout(this.value, this.font, this.stringFormat, new SizeF(arg2.width, 0), false, new SizeF(0, 0));\n                this.font.style = PdfFontStyle.Underline;\n                if (layoutResult.lines.length === 1) {\n                    var textSize = this.font.measureString(this.value);\n                    var rect = new RectangleF(new PointF(arg2.x, arg2.y), textSize);\n                    rect = this.calculateBounds(rect, textSize.width, arg2.width, arg2.x);\n                    this.uriAnnotation = new PdfUriAnnotation(rect, this.url);\n                    this.uriAnnotation.dictionary.items.setValue('Border', this.defaultBorder);\n                    arg1.annotations.add(this.uriAnnotation);\n                    var returnValue = this.drawText(arg1, arg2);\n                    this.font.style = previousFontStyle;\n                    return returnValue;\n                }\n                else {\n                    var returnValue = this.drawMultipleLineWithBounds(layoutResult, arg1, arg2);\n                    this.font.style = previousFontStyle;\n                    return returnValue;\n                }\n            }\n        }\n        else {\n            var page = new PdfPage();\n            page = arg1.page;\n            return this.draw(page, arg2);\n        }\n    };\n    /* tslint:enable */\n    //Private methods\n    /**\n     * Helper method `Draw` a Multiple Line Text Web Link on the Graphics with the specified location.\n     * @private\n     */\n    PdfTextWebLink.prototype.drawMultipleLineWithPoint = function (result, page, location) {\n        var layoutResult;\n        for (var i = 0; i < result.layoutLines.length; i++) {\n            var size = this.font.measureString(result.lines[i].text);\n            var bounds = new RectangleF(location, size);\n            if (i !== 0) {\n                bounds.x = 0;\n            }\n            this.text = result.lines[i].text;\n            if (bounds.y + size.height > page.graphics.clientSize.height) {\n                if (i !== 0) {\n                    page = page.graphics.getNextPage();\n                    bounds = new RectangleF(0, 0, page.graphics.clientSize.width, size.height);\n                    location.y = 0;\n                }\n                else {\n                    break;\n                }\n            }\n            bounds = this.calculateBounds(bounds, size.width, page.graphics.clientSize.width, bounds.x);\n            this.uriAnnotation = new PdfUriAnnotation(bounds, this.url);\n            this.uriAnnotation.dictionary.items.setValue('Border', this.defaultBorder);\n            page.annotations.add(this.uriAnnotation);\n            if (i !== 0) {\n                layoutResult = this.drawText(page, new PointF(0, bounds.y));\n            }\n            else {\n                layoutResult = this.drawText(page, bounds.x, bounds.y);\n            }\n            location.y += size.height;\n        }\n        return layoutResult;\n    };\n    /**\n     * Helper method `Draw` a Multiple Line Text Web Link on the Graphics with the specified bounds.\n     * @private\n     */\n    PdfTextWebLink.prototype.drawMultipleLineWithBounds = function (result, page, bounds) {\n        var layoutResult;\n        for (var i = 0; i < result.layoutLines.length; i++) {\n            var size = this.font.measureString(result.lines[i].text);\n            var internalBounds = new RectangleF(new PointF(bounds.x, bounds.y), size);\n            internalBounds = this.calculateBounds(internalBounds, size.width, bounds.width, bounds.x);\n            this.text = result.lines[i].text;\n            if (bounds.y + size.height > page.graphics.clientSize.height) {\n                if (i !== 0) {\n                    page = page.graphics.getNextPage();\n                    bounds = new RectangleF(bounds.x, 0, bounds.width, size.height);\n                    internalBounds.y = 0;\n                }\n                else {\n                    break;\n                }\n            }\n            this.uriAnnotation = new PdfUriAnnotation(internalBounds, this.url);\n            this.uriAnnotation.dictionary.items.setValue('Border', this.defaultBorder);\n            page.annotations.add(this.uriAnnotation);\n            layoutResult = this.drawText(page, bounds);\n            bounds.y += size.height;\n        }\n        return layoutResult;\n    };\n    /* tslint:disable */\n    PdfTextWebLink.prototype.calculateBounds = function (currentBounds, lineWidth, maximumWidth, startPosition) {\n        var shift = 0;\n        if (this.stringFormat != null && typeof this.stringFormat !== 'undefined' && this.stringFormat.alignment === PdfTextAlignment.Center) {\n            currentBounds.x = startPosition + (maximumWidth - lineWidth) / 2;\n            currentBounds.width = lineWidth;\n        }\n        else if (this.stringFormat != null && typeof this.stringFormat !== 'undefined' && this.stringFormat.alignment === PdfTextAlignment.Right) {\n            currentBounds.x = startPosition + (maximumWidth - lineWidth);\n            currentBounds.width = lineWidth;\n        }\n        else if (this.stringFormat != null && typeof this.stringFormat !== 'undefined' && this.stringFormat.alignment === PdfTextAlignment.Justify) {\n            currentBounds.x = startPosition;\n            currentBounds.width = maximumWidth;\n        }\n        else {\n            currentBounds.width = startPosition;\n            currentBounds.width = lineWidth;\n        }\n        return currentBounds;\n    };\n    return PdfTextWebLink;\n}(PdfTextElement));\nexport { PdfTextWebLink };\n","/**\n * PdfNumbersConvertor.ts class for EJ2-PDF\n * @private\n */\nimport { PdfNumberStyle } from './../../pages/enum';\n/**\n * `PdfNumbersConvertor` for convert page number into numbers, roman letters, etc.,\n * @private\n */\nvar PdfNumbersConvertor = /** @class */ (function () {\n    function PdfNumbersConvertor() {\n    }\n    // Static methods\n    /**\n     * Convert string value from page number with correct format.\n     * @private\n     */\n    PdfNumbersConvertor.convert = function (intArabic, numberStyle) {\n        var result = '';\n        switch (numberStyle) {\n            case PdfNumberStyle.None:\n                result = '';\n                break;\n            case PdfNumberStyle.Numeric:\n                result = intArabic.toString();\n                break;\n            case PdfNumberStyle.LowerLatin:\n                result = this.arabicToLetter(intArabic).toLowerCase();\n                break;\n            case PdfNumberStyle.LowerRoman:\n                result = this.arabicToRoman(intArabic).toLowerCase();\n                break;\n            case PdfNumberStyle.UpperLatin:\n                result = this.arabicToLetter(intArabic);\n                break;\n            case PdfNumberStyle.UpperRoman:\n                result = this.arabicToRoman(intArabic);\n                break;\n        }\n        return result;\n    };\n    /**\n     * Converts `arabic to roman` letters.\n     * @private\n     */\n    PdfNumbersConvertor.arabicToRoman = function (intArabic) {\n        var retval = '';\n        var retvalM = this.generateNumber(intArabic, 1000, 'M');\n        retval += retvalM.returnValue;\n        intArabic = retvalM.intArabic;\n        var retvalCM = this.generateNumber(intArabic, 900, 'CM');\n        retval += retvalCM.returnValue;\n        intArabic = retvalCM.intArabic;\n        var retvalD = this.generateNumber(intArabic, 500, 'D');\n        retval += retvalD.returnValue;\n        intArabic = retvalD.intArabic;\n        var retvalCD = this.generateNumber(intArabic, 400, 'CD');\n        retval += retvalCD.returnValue;\n        intArabic = retvalCD.intArabic;\n        var retvalC = this.generateNumber(intArabic, 100, 'C');\n        retval += retvalC.returnValue;\n        intArabic = retvalC.intArabic;\n        var retvalXC = this.generateNumber(intArabic, 90, 'XC');\n        retval += retvalXC.returnValue;\n        intArabic = retvalXC.intArabic;\n        var retvalL = this.generateNumber(intArabic, 50, 'L');\n        retval += retvalL.returnValue;\n        intArabic = retvalL.intArabic;\n        var retvalXL = this.generateNumber(intArabic, 40, 'XL');\n        retval += retvalXL.returnValue;\n        intArabic = retvalXL.intArabic;\n        var retvalX = this.generateNumber(intArabic, 10, 'X');\n        retval += retvalX.returnValue;\n        intArabic = retvalX.intArabic;\n        var retvalIX = this.generateNumber(intArabic, 9, 'IX');\n        retval += retvalIX.returnValue;\n        intArabic = retvalIX.intArabic;\n        var retvalV = this.generateNumber(intArabic, 5, 'V');\n        retval += retvalV.returnValue;\n        intArabic = retvalV.intArabic;\n        var retvalIV = this.generateNumber(intArabic, 4, 'IV');\n        retval += retvalIV.returnValue;\n        intArabic = retvalIV.intArabic;\n        var retvalI = this.generateNumber(intArabic, 1, 'I');\n        retval += retvalI.returnValue;\n        intArabic = retvalI.intArabic;\n        return retval.toString();\n    };\n    /**\n     * Converts `arabic to normal letters`.\n     * @private\n     */\n    PdfNumbersConvertor.arabicToLetter = function (arabic) {\n        var stack = this.convertToLetter(arabic);\n        var result = '';\n        while (stack.length > 0) {\n            var num = stack.pop();\n            result = this.appendChar(result, num);\n        }\n        return result.toString();\n    };\n    /**\n     * Generate a string value of an input number.\n     * @private\n     */\n    PdfNumbersConvertor.generateNumber = function (value, magnitude, letter) {\n        var numberstring = '';\n        while (value >= magnitude) {\n            value -= magnitude;\n            numberstring += letter;\n        }\n        return { returnValue: numberstring.toString(), intArabic: value };\n    };\n    /**\n     * Convert a input number into letters.\n     * @private\n     */\n    PdfNumbersConvertor.convertToLetter = function (arabic) {\n        if (arabic <= 0) {\n            throw Error('ArgumentOutOfRangeException-arabic, Value can not be less 0');\n        }\n        var stack = [];\n        while (arabic > this.letterLimit) {\n            var remainder = arabic % this.letterLimit;\n            if (remainder === 0.0) {\n                arabic = arabic / this.letterLimit - 1;\n                remainder = this.letterLimit;\n            }\n            else {\n                arabic /= this.letterLimit;\n            }\n            stack.push(remainder);\n        }\n        stack.push(arabic);\n        return stack;\n    };\n    /**\n     * Convert number to actual string value.\n     * @private\n     */\n    PdfNumbersConvertor.appendChar = function (builder, value) {\n        var letter = String.fromCharCode(PdfNumbersConvertor.acsiiStartIndex + value);\n        builder += letter;\n        return builder;\n    };\n    // Fields\n    /**\n     * numbers of letters in english [readonly].\n     * @default = 26.0\n     * @private\n     */\n    PdfNumbersConvertor.letterLimit = 26.0;\n    /**\n     * Resturns `acsii start index` value.\n     * @default 64\n     * @private\n     */\n    PdfNumbersConvertor.acsiiStartIndex = (65 - 1);\n    return PdfNumbersConvertor;\n}());\nexport { PdfNumbersConvertor };\n","/**\n * Represent class to store information about `template and value pairs`.\n * @private\n */\nvar PdfTemplateValuePair = /** @class */ (function () {\n    function PdfTemplateValuePair(template, value) {\n        // Fields\n        /**\n         * Internal variable to store template.\n         * @default null\n         * @private\n         */\n        this.pdfTemplate = null;\n        /**\n         * Intenal variable to store value.\n         * @private\n         */\n        this.content = '';\n        if (typeof template === 'undefined') {\n            //\n        }\n        else {\n            this.template = template;\n            this.value = value;\n        }\n    }\n    Object.defineProperty(PdfTemplateValuePair.prototype, \"template\", {\n        // Properties\n        /**\n         * Gets or sets the template.\n         * @private\n         */\n        get: function () {\n            return this.pdfTemplate;\n        },\n        set: function (value) {\n            this.pdfTemplate = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfTemplateValuePair.prototype, \"value\", {\n        /**\n         * Gets or sets the value.\n         * @private\n         */\n        get: function () {\n            return this.content;\n        },\n        set: function (value) {\n            this.content = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfTemplateValuePair;\n}());\nexport { PdfTemplateValuePair };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * PdfAutomaticField.ts class for EJ2-PDF\n */\nimport { PdfAutomaticField } from './automatic-field';\nimport { TemporaryDictionary } from './../../collections/object-object-pair/dictionary';\nimport { PdfTemplateValuePair } from './pdf-template-value-pair';\nimport { SizeF, PointF } from './../../drawing/pdf-drawing';\nimport { PdfTemplate } from './../../graphics/figures/pdf-template';\n/**\n * Represents automatic field which has the same value within the `PdfGraphics`.\n */\nvar PdfMultipleValueField = /** @class */ (function (_super) {\n    __extends(PdfMultipleValueField, _super);\n    function PdfMultipleValueField() {\n        var _this = _super.call(this) || this;\n        //  Fields\n        /**\n         * Stores the instance of dictionary values of `graphics and template value pair`.\n         * @private\n         */\n        _this.list = new TemporaryDictionary();\n        return _this;\n    }\n    // Implementation\n    /* tslint:disable */\n    PdfMultipleValueField.prototype.performDraw = function (graphics, location, scalingX, scalingY) {\n        _super.prototype.performDrawHelper.call(this, graphics, location, scalingX, scalingY);\n        var value = this.getValue(graphics);\n        var template = new PdfTemplate(this.getSize());\n        this.list.setValue(graphics, new PdfTemplateValuePair(template, value));\n        var g = template.graphics;\n        var size = this.getSize();\n        template.graphics.drawString(value, this.getFont(), this.pen, this.getBrush(), 0, 0, size.width, size.height, this.stringFormat);\n        var drawLocation = new PointF(location.x + this.location.x, location.y + this.location.y);\n        graphics.drawPdfTemplate(template, drawLocation, new SizeF(template.width * scalingX, template.height * scalingY));\n    };\n    return PdfMultipleValueField;\n}(PdfAutomaticField));\nexport { PdfMultipleValueField };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { PdfBrush } from './../../graphics/brushes/pdf-brush';\nimport { PdfNumberStyle } from './../../pages/enum';\nimport { PdfNumbersConvertor } from './pdf-numbers-convertor';\nimport { PdfMultipleValueField } from './multiple-value-field';\n/**\n * Represents PDF document `page number field`.\n * @public\n */\nvar PdfPageNumberField = /** @class */ (function (_super) {\n    __extends(PdfPageNumberField, _super);\n    function PdfPageNumberField(font, arg2) {\n        var _this = _super.call(this) || this;\n        // Fields\n        /**\n         * Stores the number style of the page number field.\n         * @private\n         */\n        _this.internalNumberStyle = PdfNumberStyle.Numeric;\n        if (typeof arg2 === 'undefined') {\n            _this.font = font;\n        }\n        else if (arg2 instanceof PdfBrush) {\n            _this.font = font;\n            _this.brush = arg2;\n        }\n        else {\n            _this.font = font;\n            _this.bounds = arg2;\n        }\n        return _this;\n    }\n    Object.defineProperty(PdfPageNumberField.prototype, \"numberStyle\", {\n        // Properties\n        /**\n         * Gets and sets the number style of the page number field.\n         * @private\n         */\n        get: function () {\n            return this.internalNumberStyle;\n        },\n        set: function (value) {\n            this.internalNumberStyle = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Return the `string` value of page number field.\n     * @public\n     */\n    PdfPageNumberField.prototype.getValue = function (graphics) {\n        var result = null;\n        var page = this.getPageFromGraphics(graphics);\n        result = this.internalGetValue(page);\n        return result;\n    };\n    /**\n     * Internal method to `get actual value of page number`.\n     * @private\n     */\n    PdfPageNumberField.prototype.internalGetValue = function (page) {\n        var document = page.document;\n        var pageIndex = document.pages.indexOf(page) + 1;\n        return PdfNumbersConvertor.convert(pageIndex, this.numberStyle);\n    };\n    return PdfPageNumberField;\n}(PdfMultipleValueField));\nexport { PdfPageNumberField };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * PdfCompositeField.ts class for EJ2-PDF\n */\nimport { PdfMultipleValueField } from './multiple-value-field';\n/**\n * Represents class which can concatenate multiple automatic fields into single string.\n */\nvar PdfCompositeField = /** @class */ (function (_super) {\n    __extends(PdfCompositeField, _super);\n    // Constructor\n    /**\n     * Initialize a new instance of `PdfCompositeField` class.\n     * @param font Font of the field.\n     * @param brush Color of the field.\n     * @param text Content of the field.\n     * @param list List of the automatic fields in specific order based on the text content.\n     */\n    function PdfCompositeField(font, brush, text) {\n        var list = [];\n        for (var _i = 3; _i < arguments.length; _i++) {\n            list[_i - 3] = arguments[_i];\n        }\n        var _this = _super.call(this) || this;\n        // Fields\n        /**\n         * Stores the array of automatic fields.\n         * @private\n         */\n        _this.internalAutomaticFields = null;\n        /**\n         * Stores the text value of the field.\n         * @private\n         */\n        _this.internalText = '';\n        _this.font = font;\n        _this.brush = brush;\n        _this.text = text;\n        _this.automaticFields = list;\n        return _this;\n    }\n    Object.defineProperty(PdfCompositeField.prototype, \"text\", {\n        // Properties\n        /**\n         * Gets and sets the content of the field.\n         * @public\n         */\n        get: function () {\n            return this.internalText;\n        },\n        set: function (value) {\n            this.internalText = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfCompositeField.prototype, \"automaticFields\", {\n        /**\n         * Gets and sets the list of the field to drawn.\n         * @public\n         */\n        get: function () {\n            return this.internalAutomaticFields;\n        },\n        set: function (value) {\n            this.internalAutomaticFields = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    // Implementation\n    /**\n     * Return the actual value generated from the list of automatic fields.\n     * @public\n     */\n    PdfCompositeField.prototype.getValue = function (graphics) {\n        var values = [];\n        var text = this.text.toString();\n        if (typeof this.automaticFields !== 'undefined' && this.automaticFields != null && this.automaticFields.length > 0) {\n            for (var i = 0; i < this.automaticFields.length; i++) {\n                var automaticField = this.automaticFields[i];\n                text = text.replace('{' + i + '}', automaticField.getValue(graphics));\n            }\n        }\n        return text;\n    };\n    return PdfCompositeField;\n}(PdfMultipleValueField));\nexport { PdfCompositeField };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * PdfSingleValueField.ts class for EJ2-PDF\n */\nimport { PdfAutomaticField } from './automatic-field';\nimport { TemporaryDictionary } from './../../collections/object-object-pair/dictionary';\nimport { PdfTemplateValuePair } from './pdf-template-value-pair';\nimport { PointF, SizeF } from './../../drawing/pdf-drawing';\nimport { PdfTemplate } from './../../graphics/figures/pdf-template';\n/**\n * Represents automatic field which has the same value in the whole document.\n */\nvar PdfSingleValueField = /** @class */ (function (_super) {\n    __extends(PdfSingleValueField, _super);\n    // Constructors\n    function PdfSingleValueField() {\n        var _this = _super.call(this) || this;\n        // Fields\n        /* tslint:disable */\n        _this.list = new TemporaryDictionary();\n        /* tslint:enable */\n        _this.painterGraphics = [];\n        return _this;\n    }\n    PdfSingleValueField.prototype.performDraw = function (graphics, location, scalingX, scalingY) {\n        _super.prototype.performDrawHelper.call(this, graphics, location, scalingX, scalingY);\n        var page = this.getPageFromGraphics(graphics);\n        var document = page.document;\n        var textValue = this.getValue(graphics);\n        /* tslint:disable */\n        if (this.list.containsKey(document)) {\n            var pair = this.list.getValue(document);\n            var drawLocation = new PointF(location.x + this.location.x, location.y + this.location.y);\n            graphics.drawPdfTemplate(pair.template, drawLocation, new SizeF(pair.template.width * scalingX, pair.template.height * scalingY));\n            this.painterGraphics.push(graphics);\n        }\n        else {\n            var size = this.getSize();\n            var template = new PdfTemplate(size);\n            this.list.setValue(document, new PdfTemplateValuePair(template, textValue));\n            template.graphics.drawString(textValue, this.getFont(), this.pen, this.getBrush(), 0, 0, size.width, size.height, this.stringFormat);\n            var drawLocation = new PointF(location.x + this.location.x, location.y + this.location.y);\n            graphics.drawPdfTemplate(template, drawLocation, new SizeF(template.width * scalingX, template.height * scalingY));\n            this.painterGraphics.push(graphics);\n        }\n        /* tslint:enable */\n    };\n    return PdfSingleValueField;\n}(PdfAutomaticField));\nexport { PdfSingleValueField };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * PdfPageCountField.ts class for EJ2-PDF\n */\nimport { PdfSingleValueField } from './single-value-field';\nimport { PdfNumberStyle } from './../../pages/enum';\nimport { PdfBrush } from './../../graphics/brushes/pdf-brush';\nimport { PdfNumbersConvertor } from './pdf-numbers-convertor';\n/**\n * Represents total PDF document page count automatic field.\n */\nvar PdfPageCountField = /** @class */ (function (_super) {\n    __extends(PdfPageCountField, _super);\n    function PdfPageCountField(font, arg2) {\n        var _this = _super.call(this) || this;\n        // Fields\n        /**\n         * Stores the number style of the field.\n         * @private\n         */\n        _this.internalNumberStyle = PdfNumberStyle.Numeric;\n        if (typeof arg2 === 'undefined') {\n            _this.font = font;\n        }\n        else if (arg2 instanceof PdfBrush) {\n            _this.font = font;\n            _this.brush = arg2;\n        }\n        else {\n            _this.font = font;\n            _this.bounds = arg2;\n        }\n        return _this;\n    }\n    Object.defineProperty(PdfPageCountField.prototype, \"numberStyle\", {\n        // Properties\n        /**\n         * Gets and sets the number style of the field.\n         * @public\n         */\n        get: function () {\n            return this.internalNumberStyle;\n        },\n        set: function (value) {\n            this.internalNumberStyle = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    // Implementation\n    /**\n     * Return the actual value of the content to drawn.\n     * @public\n     */\n    PdfPageCountField.prototype.getValue = function (graphics) {\n        var result = null;\n        var page = this.getPageFromGraphics(graphics);\n        var document = page.section.parent.document;\n        var count = document.pages.count;\n        result = PdfNumbersConvertor.convert(count, this.numberStyle);\n        return result;\n    };\n    return PdfPageCountField;\n}(PdfSingleValueField));\nexport { PdfPageCountField };\n","/**\n * public Enum for `PdfDestinationMode`.\n * @private\n */\nexport var PdfDestinationMode;\n(function (PdfDestinationMode) {\n    /**\n     * Specifies the type of `Location`.\n     * @private\n     */\n    PdfDestinationMode[PdfDestinationMode[\"Location\"] = 0] = \"Location\";\n    /**\n     * Specifies the type of `FitToPage`.\n     * @private\n     */\n    PdfDestinationMode[PdfDestinationMode[\"FitToPage\"] = 1] = \"FitToPage\";\n    /**\n     * Specifies the type of `FitR`.\n     * @private\n     */\n    PdfDestinationMode[PdfDestinationMode[\"FitR\"] = 2] = \"FitR\";\n})(PdfDestinationMode || (PdfDestinationMode = {}));\n","import { PointF, RectangleF } from './../drawing/pdf-drawing';\nimport { PdfArray } from './../primitives/pdf-array';\nimport { PdfPageRotateAngle } from './../pages/enum';\nimport { PdfDestinationMode } from './../general/enum';\nimport { PdfReferenceHolder } from './../primitives/pdf-reference';\nimport { PdfName } from './../primitives/pdf-name';\nimport { PdfNumber } from './../primitives/pdf-number';\nimport { DictionaryProperties } from './../input-output/pdf-dictionary-properties';\n/**\n * `PdfDestination` class represents an anchor in the document\n * where bookmarks or annotations can direct when clicked.\n */\nvar PdfDestination = /** @class */ (function () {\n    function PdfDestination(arg1, arg2) {\n        // Fields\n        /**\n         * Internal variable for accessing fields from `DictionryProperties` class.\n         * @private\n         */\n        this.dictionaryProperties = new DictionaryProperties();\n        /**\n         * Type of the `destination`.\n         * @private\n         */\n        this.destinationMode = PdfDestinationMode.Location;\n        /**\n         * `Zoom` factor.\n         * @private\n         * @default 0\n         */\n        this.zoomFactor = 0;\n        /**\n         * `Location` of the destination.\n         * @default new PointF() with 0 ,0 as co-ordinates\n         * @private\n         */\n        this.destinationLocation = new PointF(0, 0);\n        /**\n         * `Bounds` of the destination as RectangleF.\n         * @default RectangleF.Empty\n         * @private\n         */\n        this.bounds = new RectangleF();\n        /**\n         * Pdf primitive representing `this` object.\n         * @private\n         */\n        this.array = new PdfArray();\n        var angle = PdfPageRotateAngle.RotateAngle0;\n        this.destinationLocation = new PointF(0, this.destinationLocation.y);\n        this.pdfPage = arg1;\n        if (arg2 instanceof PointF) {\n            this.destinationLocation = arg2;\n        }\n        else {\n            this.bounds = arg2;\n        }\n    }\n    Object.defineProperty(PdfDestination.prototype, \"zoom\", {\n        // Properties\n        /**\n         * Gets and Sets the `zoom` factor.\n         * @private\n         */\n        get: function () {\n            return this.zoomFactor;\n        },\n        set: function (value) {\n            this.zoomFactor = value;\n            this.initializePrimitive();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDestination.prototype, \"page\", {\n        /**\n         * Gets and Sets the `page` object.\n         * @private\n         */\n        get: function () {\n            return this.pdfPage;\n        },\n        set: function (value) {\n            this.pdfPage = value;\n            this.initializePrimitive();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDestination.prototype, \"mode\", {\n        /**\n         * Gets and Sets the destination `mode`.\n         * @private\n         */\n        get: function () {\n            return this.destinationMode;\n        },\n        set: function (value) {\n            this.destinationMode = value;\n            this.initializePrimitive();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDestination.prototype, \"location\", {\n        /**\n         * Gets and Sets the `location`.\n         * @private\n         */\n        get: function () {\n            return this.destinationLocation;\n        },\n        set: function (value) {\n            this.destinationLocation = value;\n            this.initializePrimitive();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * `Translates` co-ordinates to PDF co-ordinate system (lower/left).\n     * @private\n     */\n    PdfDestination.prototype.pointToNativePdf = function (page, point) {\n        var section = page.section;\n        return section.pointToNativePdf(page, point);\n    };\n    /**\n     * `In fills` array by correct values.\n     * @private\n     */\n    PdfDestination.prototype.initializePrimitive = function () {\n        this.array.clear();\n        this.array.add(new PdfReferenceHolder(this.pdfPage));\n        switch (this.destinationMode) {\n            case PdfDestinationMode.Location:\n                var simplePage = this.pdfPage;\n                var point = new PointF();\n                point = this.pointToNativePdf(simplePage, this.destinationLocation);\n                this.array.add(new PdfName(this.dictionaryProperties.xyz));\n                this.array.add(new PdfNumber(point.x));\n                this.array.add(new PdfNumber(point.y));\n                this.array.add(new PdfNumber(this.zoomFactor));\n                break;\n            case PdfDestinationMode.FitToPage:\n                this.array.add(new PdfName(this.dictionaryProperties.fit));\n                break;\n        }\n    };\n    Object.defineProperty(PdfDestination.prototype, \"element\", {\n        /**\n         * Gets the `element` representing this object.\n         * @private\n         */\n        get: function () {\n            this.initializePrimitive();\n            return this.array;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfDestination;\n}());\nexport { PdfDestination };\n","import { DictionaryProperties } from './../../input-output/pdf-dictionary-properties';\nvar PdfFunction = /** @class */ (function () {\n    //Constructor\n    /**\n     * Initializes a new instance of the `PdfFunction` class.\n     * @public\n     */\n    function PdfFunction(dictionary) {\n        //Field\n        /**\n         * Internal variable to store dictionary.\n         * @private\n         */\n        this.mDictionary = null;\n        /**\n         * Local variable to store the dictionary properties.\n         * @private\n         */\n        this.mDictionaryProperties = new DictionaryProperties();\n        this.mDictionary = dictionary;\n    }\n    Object.defineProperty(PdfFunction.prototype, \"domain\", {\n        //Properties\n        /**\n         * Gets or sets the domain of the function.\n         * @public\n         */\n        get: function () {\n            var domain = this.mDictionary.items.getValue(this.mDictionaryProperties.domain);\n            return domain;\n        },\n        set: function (value) {\n            this.mDictionary.items.setValue(this.mDictionaryProperties.domain, value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfFunction.prototype, \"range\", {\n        /**\n         * Gets or sets the range.\n         * @public\n         */\n        get: function () {\n            var range = (this.mDictionary.items.getValue(this.mDictionaryProperties.range));\n            return range;\n        },\n        set: function (value) {\n            this.mDictionary.items.setValue(this.mDictionaryProperties.range, value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfFunction.prototype, \"dictionary\", {\n        /**\n         * Gets the dictionary.\n         */\n        get: function () {\n            return this.mDictionary;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfFunction.prototype, \"element\", {\n        //IPdfWrapper Members\n        /**\n         * Gets the element.\n         */\n        get: function () {\n            return this.mDictionary;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfFunction;\n}());\nexport { PdfFunction };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * PdfSampledFunction.ts class for EJ2-PDF\n * Implements PDF Sampled Function.\n */\nimport { PdfArray } from './../../primitives/pdf-array';\nimport { PdfFunction } from './pdf-function';\nimport { PdfStream } from './../../primitives/pdf-stream';\nimport { PdfNumber } from './../../primitives/pdf-number';\nvar PdfSampledFunction = /** @class */ (function (_super) {\n    __extends(PdfSampledFunction, _super);\n    /**\n     * Initializes a new instance of the `PdfSampledFunction` class.\n     * @public\n     */\n    function PdfSampledFunction(domain, range, sizes, samples) {\n        var _this = _super.call(this, new PdfStream()) || this;\n        if (typeof domain === 'undefined') {\n            _this.dictionary.items.setValue(_this.mDictionaryProperties.functionType, new PdfNumber(0));\n        }\n        else {\n            _this.dictionary.items.setValue(_this.mDictionaryProperties.functionType, new PdfNumber(0));\n            _this.checkParams(domain, range, sizes, samples);\n            _this.setDomainAndRange(domain, range);\n            _this.setSizeAndValues(sizes, samples);\n        }\n        return _this;\n    }\n    // Helper methods\n    /**\n     * Checks the input parameters.\n     */\n    PdfSampledFunction.prototype.checkParams = function (domain, range, sizes, samples) {\n        var rLength = range.length;\n        var dLength = domain.length;\n        var sLength = samples.length;\n        var frameLength = (rLength * (dLength / 4));\n    };\n    /**\n     * Sets the domain and range.\n     */\n    PdfSampledFunction.prototype.setDomainAndRange = function (domain, range) {\n        this.domain = new PdfArray(domain);\n        this.range = new PdfArray(range);\n    };\n    /**\n     * Sets the size and values.\n     */\n    PdfSampledFunction.prototype.setSizeAndValues = function (sizes, samples) {\n        var s = (this.dictionary);\n        s.isResource = true;\n        this.dictionary.items.setValue(this.mDictionaryProperties.size, new PdfArray(sizes));\n        this.dictionary.items.setValue(this.mDictionaryProperties.bitsPerSample, new PdfNumber(8));\n        s.writeBytes(samples);\n    };\n    return PdfSampledFunction;\n}(PdfFunction));\nexport { PdfSampledFunction };\n","/**\n * Specifies the constant values specifying whether to extend the shading\n * beyond the starting and ending points of the axis.\n */\nexport var PdfExtend;\n(function (PdfExtend) {\n    /**\n     * Do not extend any point.\n     */\n    PdfExtend[PdfExtend[\"None\"] = 0] = \"None\";\n    /**\n     * Extend start point.\n     */\n    PdfExtend[PdfExtend[\"Start\"] = 1] = \"Start\";\n    /**\n     * Extend end point.\n     */\n    PdfExtend[PdfExtend[\"End\"] = 2] = \"End\";\n    /**\n     * Extend both start and end points.\n     */\n    PdfExtend[PdfExtend[\"Both\"] = 3] = \"Both\";\n})(PdfExtend || (PdfExtend = {}));\n/**\n * Specifies the gradient direction of the linear gradient brush.\n */\nexport var PdfLinearGradientMode;\n(function (PdfLinearGradientMode) {\n    /**\n     * Specifies a gradient from upper right to lower left.\n     */\n    PdfLinearGradientMode[PdfLinearGradientMode[\"BackwardDiagonal\"] = 0] = \"BackwardDiagonal\";\n    /**\n     * Specifies a gradient from upper left to lower right.\n     */\n    PdfLinearGradientMode[PdfLinearGradientMode[\"ForwardDiagonal\"] = 1] = \"ForwardDiagonal\";\n    /**\n     * Specifies a gradient from left to right.\n     */\n    PdfLinearGradientMode[PdfLinearGradientMode[\"Horizontal\"] = 2] = \"Horizontal\";\n    /**\n     * Specifies a gradient from top to bottom.\n     */\n    PdfLinearGradientMode[PdfLinearGradientMode[\"Vertical\"] = 3] = \"Vertical\";\n})(PdfLinearGradientMode || (PdfLinearGradientMode = {}));\n/**\n * Shading type constants.\n */\nexport var ShadingType;\n(function (ShadingType) {\n    /**\n     * Function-based shading.\n     */\n    ShadingType[ShadingType[\"Function\"] = 1] = \"Function\";\n    /**\n     * Axial shading.\n     */\n    ShadingType[ShadingType[\"Axial\"] = 2] = \"Axial\";\n    /**\n     * Radial shading.\n     */\n    ShadingType[ShadingType[\"Radial\"] = 3] = \"Radial\";\n})(ShadingType || (ShadingType = {}));\nexport var KnownColor;\n(function (KnownColor) {\n    KnownColor[KnownColor[\"ActiveBorder\"] = 1] = \"ActiveBorder\";\n    KnownColor[KnownColor[\"ActiveCaption\"] = 2] = \"ActiveCaption\";\n    KnownColor[KnownColor[\"ActiveCaptionText\"] = 3] = \"ActiveCaptionText\";\n    KnownColor[KnownColor[\"AppWorkspace\"] = 4] = \"AppWorkspace\";\n    KnownColor[KnownColor[\"Control\"] = 5] = \"Control\";\n    KnownColor[KnownColor[\"ControlDark\"] = 6] = \"ControlDark\";\n    KnownColor[KnownColor[\"ControlDarkDark\"] = 7] = \"ControlDarkDark\";\n    KnownColor[KnownColor[\"ControlLight\"] = 8] = \"ControlLight\";\n    KnownColor[KnownColor[\"ControlLightLight\"] = 9] = \"ControlLightLight\";\n    KnownColor[KnownColor[\"ControlText\"] = 10] = \"ControlText\";\n    KnownColor[KnownColor[\"Desktop\"] = 11] = \"Desktop\";\n    KnownColor[KnownColor[\"GrayText\"] = 12] = \"GrayText\";\n    KnownColor[KnownColor[\"Highlight\"] = 13] = \"Highlight\";\n    KnownColor[KnownColor[\"HighlightText\"] = 14] = \"HighlightText\";\n    KnownColor[KnownColor[\"HotTrack\"] = 15] = \"HotTrack\";\n    KnownColor[KnownColor[\"InactiveBorder\"] = 16] = \"InactiveBorder\";\n    KnownColor[KnownColor[\"InactiveCaption\"] = 17] = \"InactiveCaption\";\n    KnownColor[KnownColor[\"InactiveCaptionText\"] = 18] = \"InactiveCaptionText\";\n    KnownColor[KnownColor[\"Info\"] = 19] = \"Info\";\n    KnownColor[KnownColor[\"InfoText\"] = 20] = \"InfoText\";\n    KnownColor[KnownColor[\"Menu\"] = 21] = \"Menu\";\n    KnownColor[KnownColor[\"MenuText\"] = 22] = \"MenuText\";\n    KnownColor[KnownColor[\"ScrollBar\"] = 23] = \"ScrollBar\";\n    KnownColor[KnownColor[\"Window\"] = 24] = \"Window\";\n    KnownColor[KnownColor[\"WindowFrame\"] = 25] = \"WindowFrame\";\n    KnownColor[KnownColor[\"WindowText\"] = 26] = \"WindowText\";\n    KnownColor[KnownColor[\"Transparent\"] = 27] = \"Transparent\";\n    KnownColor[KnownColor[\"AliceBlue\"] = 28] = \"AliceBlue\";\n    KnownColor[KnownColor[\"AntiqueWhite\"] = 29] = \"AntiqueWhite\";\n    KnownColor[KnownColor[\"Aqua\"] = 30] = \"Aqua\";\n    KnownColor[KnownColor[\"Aquamarine\"] = 31] = \"Aquamarine\";\n    KnownColor[KnownColor[\"Azure\"] = 32] = \"Azure\";\n    KnownColor[KnownColor[\"Beige\"] = 33] = \"Beige\";\n    KnownColor[KnownColor[\"Bisque\"] = 34] = \"Bisque\";\n    KnownColor[KnownColor[\"Black\"] = 35] = \"Black\";\n    KnownColor[KnownColor[\"BlanchedAlmond\"] = 36] = \"BlanchedAlmond\";\n    KnownColor[KnownColor[\"Blue\"] = 37] = \"Blue\";\n    KnownColor[KnownColor[\"BlueViolet\"] = 38] = \"BlueViolet\";\n    KnownColor[KnownColor[\"Brown\"] = 39] = \"Brown\";\n    KnownColor[KnownColor[\"BurlyWood\"] = 40] = \"BurlyWood\";\n    KnownColor[KnownColor[\"CadetBlue\"] = 41] = \"CadetBlue\";\n    KnownColor[KnownColor[\"Chartreuse\"] = 42] = \"Chartreuse\";\n    KnownColor[KnownColor[\"Chocolate\"] = 43] = \"Chocolate\";\n    KnownColor[KnownColor[\"Coral\"] = 44] = \"Coral\";\n    KnownColor[KnownColor[\"CornflowerBlue\"] = 45] = \"CornflowerBlue\";\n    KnownColor[KnownColor[\"Cornsilk\"] = 46] = \"Cornsilk\";\n    KnownColor[KnownColor[\"Crimson\"] = 47] = \"Crimson\";\n    KnownColor[KnownColor[\"Cyan\"] = 48] = \"Cyan\";\n    KnownColor[KnownColor[\"DarkBlue\"] = 49] = \"DarkBlue\";\n    KnownColor[KnownColor[\"DarkCyan\"] = 50] = \"DarkCyan\";\n    KnownColor[KnownColor[\"DarkGoldenrod\"] = 51] = \"DarkGoldenrod\";\n    KnownColor[KnownColor[\"DarkGray\"] = 52] = \"DarkGray\";\n    KnownColor[KnownColor[\"DarkGreen\"] = 53] = \"DarkGreen\";\n    KnownColor[KnownColor[\"DarkKhaki\"] = 54] = \"DarkKhaki\";\n    KnownColor[KnownColor[\"DarkMagenta\"] = 55] = \"DarkMagenta\";\n    KnownColor[KnownColor[\"DarkOliveGreen\"] = 56] = \"DarkOliveGreen\";\n    KnownColor[KnownColor[\"DarkOrange\"] = 57] = \"DarkOrange\";\n    KnownColor[KnownColor[\"DarkOrchid\"] = 58] = \"DarkOrchid\";\n    KnownColor[KnownColor[\"DarkRed\"] = 59] = \"DarkRed\";\n    KnownColor[KnownColor[\"DarkSalmon\"] = 60] = \"DarkSalmon\";\n    KnownColor[KnownColor[\"DarkSeaGreen\"] = 61] = \"DarkSeaGreen\";\n    KnownColor[KnownColor[\"DarkSlateBlue\"] = 62] = \"DarkSlateBlue\";\n    KnownColor[KnownColor[\"DarkSlateGray\"] = 63] = \"DarkSlateGray\";\n    KnownColor[KnownColor[\"DarkTurquoise\"] = 64] = \"DarkTurquoise\";\n    KnownColor[KnownColor[\"DarkViolet\"] = 65] = \"DarkViolet\";\n    KnownColor[KnownColor[\"DeepPink\"] = 66] = \"DeepPink\";\n    KnownColor[KnownColor[\"DeepSkyBlue\"] = 67] = \"DeepSkyBlue\";\n    KnownColor[KnownColor[\"DimGray\"] = 68] = \"DimGray\";\n    KnownColor[KnownColor[\"DodgerBlue\"] = 69] = \"DodgerBlue\";\n    KnownColor[KnownColor[\"Firebrick\"] = 70] = \"Firebrick\";\n    KnownColor[KnownColor[\"FloralWhite\"] = 71] = \"FloralWhite\";\n    KnownColor[KnownColor[\"ForestGreen\"] = 72] = \"ForestGreen\";\n    KnownColor[KnownColor[\"Fuchsia\"] = 73] = \"Fuchsia\";\n    KnownColor[KnownColor[\"Gainsboro\"] = 74] = \"Gainsboro\";\n    KnownColor[KnownColor[\"GhostWhite\"] = 75] = \"GhostWhite\";\n    KnownColor[KnownColor[\"Gold\"] = 76] = \"Gold\";\n    KnownColor[KnownColor[\"Goldenrod\"] = 77] = \"Goldenrod\";\n    KnownColor[KnownColor[\"Gray\"] = 78] = \"Gray\";\n    KnownColor[KnownColor[\"Green\"] = 79] = \"Green\";\n    KnownColor[KnownColor[\"GreenYellow\"] = 80] = \"GreenYellow\";\n    KnownColor[KnownColor[\"Honeydew\"] = 81] = \"Honeydew\";\n    KnownColor[KnownColor[\"HotPink\"] = 82] = \"HotPink\";\n    KnownColor[KnownColor[\"IndianRed\"] = 83] = \"IndianRed\";\n    KnownColor[KnownColor[\"Indigo\"] = 84] = \"Indigo\";\n    KnownColor[KnownColor[\"Ivory\"] = 85] = \"Ivory\";\n    KnownColor[KnownColor[\"Khaki\"] = 86] = \"Khaki\";\n    KnownColor[KnownColor[\"Lavender\"] = 87] = \"Lavender\";\n    KnownColor[KnownColor[\"LavenderBlush\"] = 88] = \"LavenderBlush\";\n    KnownColor[KnownColor[\"LawnGreen\"] = 89] = \"LawnGreen\";\n    KnownColor[KnownColor[\"LemonChiffon\"] = 90] = \"LemonChiffon\";\n    KnownColor[KnownColor[\"LightBlue\"] = 91] = \"LightBlue\";\n    KnownColor[KnownColor[\"LightCoral\"] = 92] = \"LightCoral\";\n    KnownColor[KnownColor[\"LightCyan\"] = 93] = \"LightCyan\";\n    KnownColor[KnownColor[\"LightGoldenrodYellow\"] = 94] = \"LightGoldenrodYellow\";\n    KnownColor[KnownColor[\"LightGray\"] = 95] = \"LightGray\";\n    KnownColor[KnownColor[\"LightGreen\"] = 96] = \"LightGreen\";\n    KnownColor[KnownColor[\"LightPink\"] = 97] = \"LightPink\";\n    KnownColor[KnownColor[\"LightSalmon\"] = 98] = \"LightSalmon\";\n    KnownColor[KnownColor[\"LightSeaGreen\"] = 99] = \"LightSeaGreen\";\n    KnownColor[KnownColor[\"LightSkyBlue\"] = 100] = \"LightSkyBlue\";\n    KnownColor[KnownColor[\"LightSlateGray\"] = 101] = \"LightSlateGray\";\n    KnownColor[KnownColor[\"LightSteelBlue\"] = 102] = \"LightSteelBlue\";\n    KnownColor[KnownColor[\"LightYellow\"] = 103] = \"LightYellow\";\n    KnownColor[KnownColor[\"Lime\"] = 104] = \"Lime\";\n    KnownColor[KnownColor[\"LimeGreen\"] = 105] = \"LimeGreen\";\n    KnownColor[KnownColor[\"Linen\"] = 106] = \"Linen\";\n    KnownColor[KnownColor[\"Magenta\"] = 107] = \"Magenta\";\n    KnownColor[KnownColor[\"Maroon\"] = 108] = \"Maroon\";\n    KnownColor[KnownColor[\"MediumAquamarine\"] = 109] = \"MediumAquamarine\";\n    KnownColor[KnownColor[\"MediumBlue\"] = 110] = \"MediumBlue\";\n    KnownColor[KnownColor[\"MediumOrchid\"] = 111] = \"MediumOrchid\";\n    KnownColor[KnownColor[\"MediumPurple\"] = 112] = \"MediumPurple\";\n    KnownColor[KnownColor[\"MediumSeaGreen\"] = 113] = \"MediumSeaGreen\";\n    KnownColor[KnownColor[\"MediumSlateBlue\"] = 114] = \"MediumSlateBlue\";\n    KnownColor[KnownColor[\"MediumSpringGreen\"] = 115] = \"MediumSpringGreen\";\n    KnownColor[KnownColor[\"MediumTurquoise\"] = 116] = \"MediumTurquoise\";\n    KnownColor[KnownColor[\"MediumVioletRed\"] = 117] = \"MediumVioletRed\";\n    KnownColor[KnownColor[\"MidnightBlue\"] = 118] = \"MidnightBlue\";\n    KnownColor[KnownColor[\"MintCream\"] = 119] = \"MintCream\";\n    KnownColor[KnownColor[\"MistyRose\"] = 120] = \"MistyRose\";\n    KnownColor[KnownColor[\"Moccasin\"] = 121] = \"Moccasin\";\n    KnownColor[KnownColor[\"NavajoWhite\"] = 122] = \"NavajoWhite\";\n    KnownColor[KnownColor[\"Navy\"] = 123] = \"Navy\";\n    KnownColor[KnownColor[\"OldLace\"] = 124] = \"OldLace\";\n    KnownColor[KnownColor[\"Olive\"] = 125] = \"Olive\";\n    KnownColor[KnownColor[\"OliveDrab\"] = 126] = \"OliveDrab\";\n    KnownColor[KnownColor[\"Orange\"] = 127] = \"Orange\";\n    KnownColor[KnownColor[\"OrangeRed\"] = 128] = \"OrangeRed\";\n    KnownColor[KnownColor[\"Orchid\"] = 129] = \"Orchid\";\n    KnownColor[KnownColor[\"PaleGoldenrod\"] = 130] = \"PaleGoldenrod\";\n    KnownColor[KnownColor[\"PaleGreen\"] = 131] = \"PaleGreen\";\n    KnownColor[KnownColor[\"PaleTurquoise\"] = 132] = \"PaleTurquoise\";\n    KnownColor[KnownColor[\"PaleVioletRed\"] = 133] = \"PaleVioletRed\";\n    KnownColor[KnownColor[\"PapayaWhip\"] = 134] = \"PapayaWhip\";\n    KnownColor[KnownColor[\"PeachPuff\"] = 135] = \"PeachPuff\";\n    KnownColor[KnownColor[\"Peru\"] = 136] = \"Peru\";\n    KnownColor[KnownColor[\"Pink\"] = 137] = \"Pink\";\n    KnownColor[KnownColor[\"Plum\"] = 138] = \"Plum\";\n    KnownColor[KnownColor[\"PowderBlue\"] = 139] = \"PowderBlue\";\n    KnownColor[KnownColor[\"Purple\"] = 140] = \"Purple\";\n    KnownColor[KnownColor[\"Red\"] = 141] = \"Red\";\n    KnownColor[KnownColor[\"RosyBrown\"] = 142] = \"RosyBrown\";\n    KnownColor[KnownColor[\"RoyalBlue\"] = 143] = \"RoyalBlue\";\n    KnownColor[KnownColor[\"SaddleBrown\"] = 144] = \"SaddleBrown\";\n    KnownColor[KnownColor[\"Salmon\"] = 145] = \"Salmon\";\n    KnownColor[KnownColor[\"SandyBrown\"] = 146] = \"SandyBrown\";\n    KnownColor[KnownColor[\"SeaGreen\"] = 147] = \"SeaGreen\";\n    KnownColor[KnownColor[\"SeaShell\"] = 148] = \"SeaShell\";\n    KnownColor[KnownColor[\"Sienna\"] = 149] = \"Sienna\";\n    KnownColor[KnownColor[\"Silver\"] = 150] = \"Silver\";\n    KnownColor[KnownColor[\"SkyBlue\"] = 151] = \"SkyBlue\";\n    KnownColor[KnownColor[\"SlateBlue\"] = 152] = \"SlateBlue\";\n    KnownColor[KnownColor[\"SlateGray\"] = 153] = \"SlateGray\";\n    KnownColor[KnownColor[\"Snow\"] = 154] = \"Snow\";\n    KnownColor[KnownColor[\"SpringGreen\"] = 155] = \"SpringGreen\";\n    KnownColor[KnownColor[\"SteelBlue\"] = 156] = \"SteelBlue\";\n    KnownColor[KnownColor[\"Tan\"] = 157] = \"Tan\";\n    KnownColor[KnownColor[\"Teal\"] = 158] = \"Teal\";\n    KnownColor[KnownColor[\"Thistle\"] = 159] = \"Thistle\";\n    KnownColor[KnownColor[\"Tomato\"] = 160] = \"Tomato\";\n    KnownColor[KnownColor[\"Turquoise\"] = 161] = \"Turquoise\";\n    KnownColor[KnownColor[\"Violet\"] = 162] = \"Violet\";\n    KnownColor[KnownColor[\"Wheat\"] = 163] = \"Wheat\";\n    KnownColor[KnownColor[\"White\"] = 164] = \"White\";\n    KnownColor[KnownColor[\"WhiteSmoke\"] = 165] = \"WhiteSmoke\";\n    KnownColor[KnownColor[\"Yellow\"] = 166] = \"Yellow\";\n    KnownColor[KnownColor[\"YellowGreen\"] = 167] = \"YellowGreen\";\n    KnownColor[KnownColor[\"ButtonFace\"] = 168] = \"ButtonFace\";\n    KnownColor[KnownColor[\"ButtonHighlight\"] = 169] = \"ButtonHighlight\";\n    KnownColor[KnownColor[\"ButtonShadow\"] = 170] = \"ButtonShadow\";\n    KnownColor[KnownColor[\"GradientActiveCaption\"] = 171] = \"GradientActiveCaption\";\n    KnownColor[KnownColor[\"GradientInactiveCaption\"] = 172] = \"GradientInactiveCaption\";\n    KnownColor[KnownColor[\"MenuBar\"] = 173] = \"MenuBar\";\n    KnownColor[KnownColor[\"MenuHighlight\"] = 174] = \"MenuHighlight\";\n})(KnownColor || (KnownColor = {}));\n","/**\n * PdfBrushes.ts class for EJ2-PDF\n */\nimport { PdfColor } from './../pdf-color';\nimport { Dictionary } from './../../collections/dictionary';\nimport { KnownColor } from './enum';\nimport { PdfSolidBrush } from './pdf-solid-brush';\n/**\n * `PdfBrushes` class provides objects used to fill the interiors of graphical shapes such as rectangles,\n * ellipses, pies, polygons, and paths.\n * @private\n */\nvar PdfBrushes = /** @class */ (function () {\n    function PdfBrushes() {\n    }\n    Object.defineProperty(PdfBrushes, \"AliceBlue\", {\n        //Static Properties\n        /**\n         * Gets the AliceBlue brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.AliceBlue)) {\n                brush = (this.sBrushes.getValue(KnownColor.AliceBlue));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.AliceBlue);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"AntiqueWhite\", {\n        /**\n         * Gets the antique white brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.AntiqueWhite)) {\n                brush = (this.sBrushes.getValue(KnownColor.AntiqueWhite));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.AntiqueWhite);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Aqua\", {\n        /**\n         * Gets the Aqua default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Aqua)) {\n                brush = (this.sBrushes.getValue(KnownColor.Aqua));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Aqua);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Aquamarine\", {\n        /**\n         * Gets the Aquamarine default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Aquamarine)) {\n                brush = (this.sBrushes.getValue(KnownColor.Aquamarine));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Aquamarine);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Azure\", {\n        /**\n         * Gets the Azure default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Azure)) {\n                brush = (this.sBrushes.getValue(KnownColor.Azure));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Azure);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Beige\", {\n        /**\n         * Gets the Beige default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Beige)) {\n                brush = (this.sBrushes.getValue(KnownColor.Beige));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Beige);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Bisque\", {\n        /**\n         * Gets the Bisque default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Bisque)) {\n                brush = (this.sBrushes.getValue(KnownColor.Bisque));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Bisque);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Black\", {\n        /**\n         * Gets the Black default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Black)) {\n                brush = (this.sBrushes.getValue(KnownColor.Black));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Black);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"BlanchedAlmond\", {\n        /**\n         * Gets the BlanchedAlmond default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.BlanchedAlmond)) {\n                brush = (this.sBrushes.getValue(KnownColor.BlanchedAlmond));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.BlanchedAlmond);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Blue\", {\n        /**\n         * Gets the Blue default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Blue)) {\n                brush = (this.sBrushes.getValue(KnownColor.Blue));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Blue);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"BlueViolet\", {\n        /**\n         * Gets the BlueViolet default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.BlueViolet)) {\n                brush = (this.sBrushes.getValue(KnownColor.BlueViolet));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.BlueViolet);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Brown\", {\n        /**\n         * Gets the Brown default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Brown)) {\n                brush = (this.sBrushes.getValue(KnownColor.Brown));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Brown);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"BurlyWood\", {\n        /**\n         * Gets the BurlyWood default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.BurlyWood)) {\n                brush = (this.sBrushes.getValue(KnownColor.BurlyWood));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.BurlyWood);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"CadetBlue\", {\n        /**\n         * Gets the CadetBlue default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.CadetBlue)) {\n                brush = (this.sBrushes.getValue(KnownColor.CadetBlue));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.CadetBlue);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Chartreuse\", {\n        /**\n         * Gets the Chartreuse default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Chartreuse)) {\n                brush = (this.sBrushes.getValue(KnownColor.Chartreuse));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Chartreuse);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Chocolate\", {\n        /**\n         * Gets the Chocolate default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Chocolate)) {\n                brush = (this.sBrushes.getValue(KnownColor.Chocolate));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Chocolate);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Coral\", {\n        /**\n         * Gets the Coral default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Coral)) {\n                brush = (this.sBrushes.getValue(KnownColor.Coral));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Coral);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"CornflowerBlue\", {\n        /**\n         * Gets the CornflowerBlue default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.CornflowerBlue)) {\n                brush = (this.sBrushes.getValue(KnownColor.CornflowerBlue));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.CornflowerBlue);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Cornsilk\", {\n        /**\n         * Gets the Corn silk default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Cornsilk)) {\n                brush = (this.sBrushes.getValue(KnownColor.Cornsilk));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Cornsilk);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Crimson\", {\n        /**\n         *  Gets the Crimson default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Crimson)) {\n                brush = (this.sBrushes.getValue(KnownColor.Crimson));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Crimson);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Cyan\", {\n        /**\n         * Gets the Cyan default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Cyan)) {\n                brush = (this.sBrushes.getValue(KnownColor.Cyan));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Cyan);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"DarkBlue\", {\n        /**\n         * Gets the DarkBlue default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.DarkBlue)) {\n                brush = (this.sBrushes.getValue(KnownColor.DarkBlue));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.DarkBlue);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"DarkCyan\", {\n        /**\n         * Gets the DarkCyan default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.DarkCyan)) {\n                brush = (this.sBrushes.getValue(KnownColor.DarkCyan));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.DarkCyan);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"DarkGoldenrod\", {\n        /**\n         * Gets the DarkGoldenrod default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.DarkGoldenrod)) {\n                brush = (this.sBrushes.getValue(KnownColor.DarkGoldenrod));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.DarkGoldenrod);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"DarkGray\", {\n        /**\n         * Gets the DarkGray default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.DarkGray)) {\n                brush = (this.sBrushes.getValue(KnownColor.DarkGray));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.DarkGray);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"DarkGreen\", {\n        /**\n         * Gets the DarkGreen default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.DarkGreen)) {\n                brush = (this.sBrushes.getValue(KnownColor.DarkGreen));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.DarkGreen);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"DarkKhaki\", {\n        /**\n         * Gets the DarkKhaki default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.DarkKhaki)) {\n                brush = (this.sBrushes.getValue(KnownColor.DarkKhaki));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.DarkKhaki);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"DarkMagenta\", {\n        /**\n         * Gets the DarkMagenta default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.DarkMagenta)) {\n                brush = (this.sBrushes.getValue(KnownColor.DarkMagenta));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.DarkMagenta);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"DarkOliveGreen\", {\n        /**\n         * Gets the DarkOliveGreen default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.DarkOliveGreen)) {\n                brush = (this.sBrushes.getValue(KnownColor.DarkOliveGreen));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.DarkOliveGreen);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"DarkOrange\", {\n        /**\n         * Gets the DarkOrange default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.DarkOrange)) {\n                brush = (this.sBrushes.getValue(KnownColor.DarkOrange));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.DarkOrange);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"DarkOrchid\", {\n        /**\n         * Gets the DarkOrchid default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.DarkOrchid)) {\n                brush = (this.sBrushes.getValue(KnownColor.DarkOrchid));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.DarkOrchid);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"DarkRed\", {\n        /**\n         * Gets the DarkRed default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.DarkRed)) {\n                brush = (this.sBrushes.getValue(KnownColor.DarkRed));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.DarkRed);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"DarkSalmon\", {\n        /**\n         * Gets the DarkSalmon default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.DarkSalmon)) {\n                brush = (this.sBrushes.getValue(KnownColor.DarkSalmon));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.DarkSalmon);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"DarkSeaGreen\", {\n        /**\n         * Gets the DarkSeaGreen default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.DarkSeaGreen)) {\n                brush = (this.sBrushes.getValue(KnownColor.DarkSeaGreen));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.DarkSeaGreen);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"DarkSlateBlue\", {\n        /**\n         * Gets the DarkSlateBlue default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.DarkSlateBlue)) {\n                brush = (this.sBrushes.getValue(KnownColor.DarkSlateBlue));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.DarkSlateBlue);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"DarkSlateGray\", {\n        /**\n         * Gets the DarkSlateGray default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.DarkSlateGray)) {\n                brush = (this.sBrushes.getValue(KnownColor.DarkSlateGray));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.DarkSlateGray);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"DarkTurquoise\", {\n        /**\n         * Gets the DarkTurquoise default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.DarkTurquoise)) {\n                brush = (this.sBrushes.getValue(KnownColor.DarkTurquoise));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.DarkTurquoise);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"DarkViolet\", {\n        /**\n         * Gets the DarkViolet default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.DarkViolet)) {\n                brush = (this.sBrushes.getValue(KnownColor.DarkViolet));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.DarkViolet);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"DeepPink\", {\n        /**\n         * Gets the DeepPink default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.DeepPink)) {\n                brush = (this.sBrushes.getValue(KnownColor.DeepPink));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.DeepPink);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"DeepSkyBlue\", {\n        /**\n         * Gets the DeepSkyBlue default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.DeepSkyBlue)) {\n                brush = (this.sBrushes.getValue(KnownColor.DeepSkyBlue));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.DeepSkyBlue);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"DimGray\", {\n        /**\n         * Gets the DimGray default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.DimGray)) {\n                brush = (this.sBrushes.getValue(KnownColor.DimGray));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.DimGray);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"DodgerBlue\", {\n        /**\n         * Gets the DodgerBlue default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.DodgerBlue)) {\n                brush = (this.sBrushes.getValue(KnownColor.DodgerBlue));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.DodgerBlue);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Firebrick\", {\n        /**\n         * Gets the Firebrick default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Firebrick)) {\n                brush = (this.sBrushes.getValue(KnownColor.Firebrick));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Firebrick);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"FloralWhite\", {\n        /**\n         * Gets the FloralWhite default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.FloralWhite)) {\n                brush = (this.sBrushes.getValue(KnownColor.FloralWhite));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.FloralWhite);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"ForestGreen\", {\n        /**\n         * Gets the ForestGreen default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.ForestGreen)) {\n                brush = (this.sBrushes.getValue(KnownColor.ForestGreen));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.ForestGreen);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Fuchsia\", {\n        /**\n         * Gets the Fuchsia default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Fuchsia)) {\n                brush = (this.sBrushes.getValue(KnownColor.Fuchsia));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Fuchsia);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Gainsboro\", {\n        /**\n         * Gets the Gainsborough default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Gainsboro)) {\n                brush = (this.sBrushes.getValue(KnownColor.Gainsboro));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Gainsboro);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"GhostWhite\", {\n        /**\n         * Gets the GhostWhite default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.GhostWhite)) {\n                brush = (this.sBrushes.getValue(KnownColor.GhostWhite));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.GhostWhite);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Gold\", {\n        /**\n         * Gets the Gold default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Gold)) {\n                brush = (this.sBrushes.getValue(KnownColor.Gold));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Gold);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Goldenrod\", {\n        /**\n         * Gets the Goldenrod default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Goldenrod)) {\n                brush = (this.sBrushes.getValue(KnownColor.Goldenrod));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Goldenrod);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Gray\", {\n        /**\n         * Gets the Gray default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Gray)) {\n                brush = (this.sBrushes.getValue(KnownColor.Gray));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Gray);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Green\", {\n        /**\n         * Gets the Green default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Green)) {\n                brush = (this.sBrushes.getValue(KnownColor.Green));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Green);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"GreenYellow\", {\n        /**\n         * Gets the GreenYellow default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.GreenYellow)) {\n                brush = (this.sBrushes.getValue(KnownColor.GreenYellow));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.GreenYellow);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Honeydew\", {\n        /**\n         * Gets the Honeydew default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Honeydew)) {\n                brush = (this.sBrushes.getValue(KnownColor.Honeydew));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Honeydew);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"HotPink\", {\n        /**\n         * Gets the HotPink default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.HotPink)) {\n                brush = (this.sBrushes.getValue(KnownColor.HotPink));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.HotPink);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"IndianRed\", {\n        /**\n         * Gets the IndianRed default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.IndianRed)) {\n                brush = (this.sBrushes.getValue(KnownColor.IndianRed));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.IndianRed);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Indigo\", {\n        /**\n         * Gets the Indigo default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Indigo)) {\n                brush = (this.sBrushes.getValue(KnownColor.Indigo));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Indigo);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Ivory\", {\n        /**\n         * Gets the Ivory default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Ivory)) {\n                brush = (this.sBrushes.getValue(KnownColor.Ivory));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Ivory);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Khaki\", {\n        /**\n         * Gets the Khaki default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Khaki)) {\n                brush = (this.sBrushes.getValue(KnownColor.Khaki));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Khaki);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Lavender\", {\n        /**\n         * Gets the Lavender default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Lavender)) {\n                brush = (this.sBrushes.getValue(KnownColor.Lavender));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Lavender);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"LavenderBlush\", {\n        /**\n         * Gets the LavenderBlush default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.LavenderBlush)) {\n                brush = (this.sBrushes.getValue(KnownColor.LavenderBlush));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.LavenderBlush);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"LawnGreen\", {\n        /**\n         * Gets the LawnGreen default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.LawnGreen)) {\n                brush = (this.sBrushes.getValue(KnownColor.LawnGreen));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.LawnGreen);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"LemonChiffon\", {\n        /**\n         * Gets the LemonChiffon default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.LemonChiffon)) {\n                brush = (this.sBrushes.getValue(KnownColor.LemonChiffon));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.LemonChiffon);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"LightBlue\", {\n        /**\n         * Gets the LightBlue default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.LightBlue)) {\n                brush = (this.sBrushes.getValue(KnownColor.LightBlue));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.LightBlue);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"LightCoral\", {\n        /**\n         * Gets the LightCoral default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.LightCoral)) {\n                brush = (this.sBrushes.getValue(KnownColor.LightCoral));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.LightCoral);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"LightCyan\", {\n        /**\n         * Gets the LightCyan default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.LightCyan)) {\n                brush = (this.sBrushes.getValue(KnownColor.LightCyan));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.LightCyan);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"LightGoldenrodYellow\", {\n        /**\n         * Gets the LightGoldenrodYellow default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.LightGoldenrodYellow)) {\n                brush = (this.sBrushes.getValue(KnownColor.LightGoldenrodYellow));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.LightGoldenrodYellow);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"LightGray\", {\n        /**\n         * Gets the LightGray default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.LightGray)) {\n                brush = (this.sBrushes.getValue(KnownColor.LightGray));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.LightGray);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"LightGreen\", {\n        /**\n         * Gets the LightGreen default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.LightGreen)) {\n                brush = (this.sBrushes.getValue(KnownColor.LightGreen));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.LightGreen);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"LightPink\", {\n        /**\n         * Gets the LightPink default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.LightPink)) {\n                brush = (this.sBrushes.getValue(KnownColor.LightPink));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.LightPink);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"LightSalmon\", {\n        /**\n         * Gets the LightSalmon default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.LightSalmon)) {\n                brush = (this.sBrushes.getValue(KnownColor.LightSalmon));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.LightSalmon);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"LightSeaGreen\", {\n        /**\n         * Gets the LightSeaGreen default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.LightSeaGreen)) {\n                brush = (this.sBrushes.getValue(KnownColor.LightSeaGreen));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.LightSeaGreen);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"LightSkyBlue\", {\n        /**\n         * Gets the LightSkyBlue default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.LightSkyBlue)) {\n                brush = (this.sBrushes.getValue(KnownColor.LightSkyBlue));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.LightSkyBlue);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"LightSlateGray\", {\n        /**\n         * Gets the LightSlateGray default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.LightSlateGray)) {\n                brush = (this.sBrushes.getValue(KnownColor.LightSlateGray));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.LightSlateGray);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"LightSteelBlue\", {\n        /**\n         * Gets the LightSteelBlue default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.LightSteelBlue)) {\n                brush = (this.sBrushes.getValue(KnownColor.LightSteelBlue));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.LightSteelBlue);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"LightYellow\", {\n        /**\n         * Gets the LightYellow default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.LightYellow)) {\n                brush = (this.sBrushes.getValue(KnownColor.LightYellow));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.LightYellow);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Lime\", {\n        /**\n         * Gets the Lime default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Lime)) {\n                brush = (this.sBrushes.getValue(KnownColor.Lime));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Lime);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"LimeGreen\", {\n        /**\n         * Gets the LimeGreen default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.LimeGreen)) {\n                brush = (this.sBrushes.getValue(KnownColor.LimeGreen));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.LimeGreen);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Linen\", {\n        /**\n         * Gets the Linen default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Linen)) {\n                brush = (this.sBrushes.getValue(KnownColor.Linen));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Linen);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Magenta\", {\n        /**\n         * Gets the Magenta default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Magenta)) {\n                brush = (this.sBrushes.getValue(KnownColor.Magenta));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Magenta);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Maroon\", {\n        /**\n         * Gets the Maroon default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Maroon)) {\n                brush = (this.sBrushes.getValue(KnownColor.Maroon));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Maroon);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"MediumAquamarine\", {\n        /**\n         * Gets the MediumAquamarine default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.MediumAquamarine)) {\n                brush = (this.sBrushes.getValue(KnownColor.MediumAquamarine));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.MediumAquamarine);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"MediumBlue\", {\n        /**\n         * Gets the MediumBlue default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.MediumBlue)) {\n                brush = (this.sBrushes.getValue(KnownColor.MediumBlue));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.MediumBlue);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"MediumOrchid\", {\n        /**\n         * Gets the MediumOrchid default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.MediumOrchid)) {\n                brush = (this.sBrushes.getValue(KnownColor.MediumOrchid));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.MediumOrchid);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"MediumPurple\", {\n        /**\n         * Gets the MediumPurple default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.MediumPurple)) {\n                brush = (this.sBrushes.getValue(KnownColor.MediumPurple));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.MediumPurple);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"MediumSeaGreen\", {\n        /**\n         * Gets the MediumSeaGreen default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.MediumSeaGreen)) {\n                brush = (this.sBrushes.getValue(KnownColor.MediumSeaGreen));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.MediumSeaGreen);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"MediumSlateBlue\", {\n        /**\n         * Gets the MediumSlateBlue default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.MediumSlateBlue)) {\n                brush = (this.sBrushes.getValue(KnownColor.MediumSlateBlue));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.MediumSlateBlue);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"MediumSpringGreen\", {\n        /**\n         * Gets the MediumSpringGreen default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.MediumSpringGreen)) {\n                brush = (this.sBrushes.getValue(KnownColor.MediumSpringGreen));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.MediumSpringGreen);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"MediumTurquoise\", {\n        /**\n         * Gets the MediumTurquoise default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.MediumTurquoise)) {\n                brush = (this.sBrushes.getValue(KnownColor.MediumTurquoise));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.MediumTurquoise);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"MediumVioletRed\", {\n        /**\n         * Gets the MediumVioletRed default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.MediumVioletRed)) {\n                brush = (this.sBrushes.getValue(KnownColor.MediumVioletRed));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.MediumVioletRed);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"MidnightBlue\", {\n        /**\n         * Gets the MidnightBlue default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.MidnightBlue)) {\n                brush = (this.sBrushes.getValue(KnownColor.MidnightBlue));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.MidnightBlue);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"MintCream\", {\n        /**\n         * Gets the MintCream default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.MintCream)) {\n                brush = (this.sBrushes.getValue(KnownColor.MintCream));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.MintCream);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"MistyRose\", {\n        /**\n         * Gets the MistyRose default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.MistyRose)) {\n                brush = (this.sBrushes.getValue(KnownColor.MistyRose));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.MistyRose);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Moccasin\", {\n        /**\n         * Gets the Moccasin default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Moccasin)) {\n                brush = (this.sBrushes.getValue(KnownColor.Moccasin));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Moccasin);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"NavajoWhite\", {\n        /**\n         * Gets the NavajoWhite default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.NavajoWhite)) {\n                brush = (this.sBrushes.getValue(KnownColor.NavajoWhite));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.NavajoWhite);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Navy\", {\n        /**\n         * Gets the Navy default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Navy)) {\n                brush = (this.sBrushes.getValue(KnownColor.Navy));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Navy);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"OldLace\", {\n        /**\n         * Gets the OldLace default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.OldLace)) {\n                brush = (this.sBrushes.getValue(KnownColor.OldLace));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.OldLace);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Olive\", {\n        /**\n         * Gets the Olive default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Olive)) {\n                brush = (this.sBrushes.getValue(KnownColor.Olive));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Olive);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"OliveDrab\", {\n        /**\n         * Gets the OliveDrab default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.OliveDrab)) {\n                brush = (this.sBrushes.getValue(KnownColor.OliveDrab));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.OliveDrab);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Orange\", {\n        /**\n         * Gets the Orange default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Orange)) {\n                brush = (this.sBrushes.getValue(KnownColor.Orange));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Orange);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"OrangeRed\", {\n        /**\n         * Gets the OrangeRed default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.OrangeRed)) {\n                brush = (this.sBrushes.getValue(KnownColor.OrangeRed));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.OrangeRed);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Orchid\", {\n        /**\n         * Gets the Orchid default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Orchid)) {\n                brush = (this.sBrushes.getValue(KnownColor.Orchid));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Orchid);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"PaleGoldenrod\", {\n        /**\n         * Gets the PaleGoldenrod default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.PaleGoldenrod)) {\n                brush = (this.sBrushes.getValue(KnownColor.PaleGoldenrod));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.PaleGoldenrod);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"PaleGreen\", {\n        /**\n         * Gets the PaleGreen default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.PaleGreen)) {\n                brush = (this.sBrushes.getValue(KnownColor.PaleGreen));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.PaleGreen);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"PaleTurquoise\", {\n        /**\n         * Gets the PaleTurquoise default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.PaleTurquoise)) {\n                brush = (this.sBrushes.getValue(KnownColor.PaleTurquoise));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.PaleTurquoise);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"PaleVioletRed\", {\n        /**\n         * Gets the PaleVioletRed default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.PaleVioletRed)) {\n                brush = (this.sBrushes.getValue(KnownColor.PaleVioletRed));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.PaleVioletRed);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"PapayaWhip\", {\n        /**\n         * Gets the PapayaWhip default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.PapayaWhip)) {\n                brush = (this.sBrushes.getValue(KnownColor.PapayaWhip));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.PapayaWhip);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"PeachPuff\", {\n        /**\n         * Gets the PeachPuff default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.PeachPuff)) {\n                brush = (this.sBrushes.getValue(KnownColor.PeachPuff));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.PeachPuff);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Peru\", {\n        /**\n         * Gets the Peru default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Peru)) {\n                brush = (this.sBrushes.getValue(KnownColor.Peru));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Peru);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Pink\", {\n        /**\n         * Gets the Pink default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Pink)) {\n                brush = (this.sBrushes.getValue(KnownColor.Pink));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Pink);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Plum\", {\n        /**\n         * Gets the Plum default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Plum)) {\n                brush = (this.sBrushes.getValue(KnownColor.Plum));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Plum);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"PowderBlue\", {\n        /**\n         * Gets the PowderBlue default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.PowderBlue)) {\n                brush = (this.sBrushes.getValue(KnownColor.PowderBlue));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.PowderBlue);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Purple\", {\n        /**\n         * Gets the Purple default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Purple)) {\n                brush = (this.sBrushes.getValue(KnownColor.Purple));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Purple);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Red\", {\n        /**\n         * Gets the Red default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Red)) {\n                brush = (this.sBrushes.getValue(KnownColor.Red));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Red);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"RosyBrown\", {\n        /**\n         * Gets the RosyBrown default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.RosyBrown)) {\n                brush = (this.sBrushes.getValue(KnownColor.RosyBrown));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.RosyBrown);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"RoyalBlue\", {\n        /**\n         * Gets the RoyalBlue default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.RoyalBlue)) {\n                brush = (this.sBrushes.getValue(KnownColor.RoyalBlue));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.RoyalBlue);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"SaddleBrown\", {\n        /**\n         * Gets the SaddleBrown default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.SaddleBrown)) {\n                brush = (this.sBrushes.getValue(KnownColor.SaddleBrown));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.SaddleBrown);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Salmon\", {\n        /**\n         * Gets the Salmon default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Salmon)) {\n                brush = (this.sBrushes.getValue(KnownColor.Salmon));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Salmon);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"SandyBrown\", {\n        /**\n         * Gets the SandyBrown default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.SandyBrown)) {\n                brush = (this.sBrushes.getValue(KnownColor.SandyBrown));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.SandyBrown);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"SeaGreen\", {\n        /**\n         * Gets the SeaGreen default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.SeaGreen)) {\n                brush = (this.sBrushes.getValue(KnownColor.SeaGreen));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.SeaGreen);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"SeaShell\", {\n        /**\n         * Gets the SeaShell default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.SeaShell)) {\n                brush = (this.sBrushes.getValue(KnownColor.SeaShell));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.SeaShell);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Sienna\", {\n        /**\n         * Gets the Sienna default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Sienna)) {\n                brush = (this.sBrushes.getValue(KnownColor.Sienna));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Sienna);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Silver\", {\n        /**\n         * Gets the Silver default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Silver)) {\n                brush = (this.sBrushes.getValue(KnownColor.Silver));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Silver);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"SkyBlue\", {\n        /**\n         * Gets the SkyBlue default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.SkyBlue)) {\n                brush = (this.sBrushes.getValue(KnownColor.SkyBlue));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.SkyBlue);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"SlateBlue\", {\n        /**\n         * Gets the SlateBlue default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.SlateBlue)) {\n                brush = (this.sBrushes.getValue(KnownColor.SlateBlue));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.SlateBlue);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"SlateGray\", {\n        /**\n         * Gets the SlateGray default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.SlateGray)) {\n                brush = (this.sBrushes.getValue(KnownColor.SlateGray));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.SlateGray);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Snow\", {\n        /**\n         * Gets the Snow default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Snow)) {\n                brush = (this.sBrushes.getValue(KnownColor.Snow));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Snow);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"SpringGreen\", {\n        /**\n         * Gets the SpringGreen default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.SpringGreen)) {\n                brush = (this.sBrushes.getValue(KnownColor.SpringGreen));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.SpringGreen);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"SteelBlue\", {\n        /**\n         * Gets the SteelBlue default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.SteelBlue)) {\n                brush = (this.sBrushes.getValue(KnownColor.SteelBlue));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.SteelBlue);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Tan\", {\n        /**\n         * Gets the Tan default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Tan)) {\n                brush = (this.sBrushes.getValue(KnownColor.Tan));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Tan);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Teal\", {\n        /**\n         * Gets the Teal default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Teal)) {\n                brush = (this.sBrushes.getValue(KnownColor.Teal));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Teal);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Thistle\", {\n        /**\n         * Gets the Thistle default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Thistle)) {\n                brush = (this.sBrushes.getValue(KnownColor.Thistle));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Thistle);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Tomato\", {\n        /**\n         * Gets the Tomato default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Tomato)) {\n                brush = (this.sBrushes.getValue(KnownColor.Tomato));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Tomato);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Transparent\", {\n        /**\n         * Gets the Transparent default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Transparent)) {\n                brush = (this.sBrushes.getValue(KnownColor.Transparent));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Transparent);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Turquoise\", {\n        /**\n         * Gets the Turquoise default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Turquoise)) {\n                brush = (this.sBrushes.getValue(KnownColor.Turquoise));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Turquoise);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Violet\", {\n        /**\n         * Gets the Violet default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Violet)) {\n                brush = (this.sBrushes.getValue(KnownColor.Violet));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Violet);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Wheat\", {\n        /**\n         * Gets the Wheat default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Wheat)) {\n                brush = (this.sBrushes.getValue(KnownColor.Wheat));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Wheat);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"White\", {\n        /**\n         * Gets the White default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.White)) {\n                brush = (this.sBrushes.getValue(KnownColor.White));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.White);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"WhiteSmoke\", {\n        /**\n         * Gets the WhiteSmoke default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.WhiteSmoke)) {\n                brush = (this.sBrushes.getValue(KnownColor.WhiteSmoke));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.WhiteSmoke);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Yellow\", {\n        /**\n         * Gets the Yellow default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Yellow)) {\n                brush = (this.sBrushes.getValue(KnownColor.Yellow));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Yellow);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"YellowGreen\", {\n        /**\n         * Gets the YellowGreen default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.YellowGreen)) {\n                brush = (this.sBrushes.getValue(KnownColor.YellowGreen));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.YellowGreen);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Get the brush.\n     */\n    PdfBrushes.getBrush = function (colorName) {\n        var pdfColor = this.getColorValue(colorName);\n        var brush = new PdfSolidBrush(pdfColor);\n        this.sBrushes.setValue(colorName, brush);\n        return brush;\n    };\n    /**\n     * Get the color value.\n     * @param colorName The KnownColor name.\n     */\n    /* tslint:disable */\n    PdfBrushes.getColorValue = function (colorName) {\n        var color = new PdfColor();\n        switch (colorName) {\n            case KnownColor.Transparent:\n                color = new PdfColor(0, 255, 255, 255);\n                break;\n            case KnownColor.AliceBlue:\n                color = new PdfColor(255, 240, 248, 255);\n                break;\n            case KnownColor.AntiqueWhite:\n                color = new PdfColor(255, 250, 235, 215);\n                break;\n            case KnownColor.Aqua:\n                color = new PdfColor(255, 0, 255, 255);\n                break;\n            case KnownColor.Aquamarine:\n                color = new PdfColor(255, 127, 255, 212);\n                break;\n            case KnownColor.Azure:\n                color = new PdfColor(255, 240, 255, 255);\n                break;\n            case KnownColor.Beige:\n                color = new PdfColor(255, 245, 245, 220);\n                break;\n            case KnownColor.Bisque:\n                color = new PdfColor(255, 255, 228, 196);\n                break;\n            case KnownColor.Black:\n                color = new PdfColor(255, 0, 0, 0);\n                break;\n            case KnownColor.BlanchedAlmond:\n                color = new PdfColor(255, 255, 235, 205);\n                break;\n            case KnownColor.Blue:\n                color = new PdfColor(255, 0, 0, 255);\n                break;\n            case KnownColor.BlueViolet:\n                color = new PdfColor(255, 138, 43, 226);\n                break;\n            case KnownColor.Brown:\n                color = new PdfColor(255, 165, 42, 42);\n                break;\n            case KnownColor.BurlyWood:\n                color = new PdfColor(255, 222, 184, 135);\n                break;\n            case KnownColor.CadetBlue:\n                color = new PdfColor(255, 95, 158, 160);\n                break;\n            case KnownColor.Chartreuse:\n                color = new PdfColor(255, 127, 255, 0);\n                break;\n            case KnownColor.Chocolate:\n                color = new PdfColor(255, 210, 105, 30);\n                break;\n            case KnownColor.Coral:\n                color = new PdfColor(255, 255, 127, 80);\n                break;\n            case KnownColor.CornflowerBlue:\n                color = new PdfColor(255, 100, 149, 237);\n                break;\n            case KnownColor.Cornsilk:\n                color = new PdfColor(255, 255, 248, 220);\n                break;\n            case KnownColor.Crimson:\n                color = new PdfColor(255, 220, 20, 60);\n                break;\n            case KnownColor.Cyan:\n                color = new PdfColor(255, 0, 255, 255);\n                break;\n            case KnownColor.DarkBlue:\n                color = new PdfColor(255, 0, 0, 139);\n                break;\n            case KnownColor.DarkCyan:\n                color = new PdfColor(255, 0, 139, 139);\n                break;\n            case KnownColor.DarkGoldenrod:\n                color = new PdfColor(255, 184, 134, 11);\n                break;\n            case KnownColor.DarkGray:\n                color = new PdfColor(255, 169, 169, 169);\n                break;\n            case KnownColor.DarkGreen:\n                color = new PdfColor(255, 0, 100, 0);\n                break;\n            case KnownColor.DarkKhaki:\n                color = new PdfColor(255, 189, 183, 107);\n                break;\n            case KnownColor.DarkMagenta:\n                color = new PdfColor(255, 139, 0, 139);\n                break;\n            case KnownColor.DarkOliveGreen:\n                color = new PdfColor(255, 85, 107, 47);\n                break;\n            case KnownColor.DarkOrange:\n                color = new PdfColor(255, 255, 140, 0);\n                break;\n            case KnownColor.DarkOrchid:\n                color = new PdfColor(255, 153, 50, 204);\n                break;\n            case KnownColor.DarkRed:\n                color = new PdfColor(255, 139, 0, 0);\n                break;\n            case KnownColor.DarkSalmon:\n                color = new PdfColor(255, 233, 150, 122);\n                break;\n            case KnownColor.DarkSeaGreen:\n                color = new PdfColor(255, 143, 188, 139);\n                break;\n            case KnownColor.DarkSlateBlue:\n                color = new PdfColor(255, 72, 61, 139);\n                break;\n            case KnownColor.DarkSlateGray:\n                color = new PdfColor(255, 47, 79, 79);\n                break;\n            case KnownColor.DarkTurquoise:\n                color = new PdfColor(255, 0, 206, 209);\n                break;\n            case KnownColor.DarkViolet:\n                color = new PdfColor(255, 148, 0, 211);\n                break;\n            case KnownColor.DeepPink:\n                color = new PdfColor(255, 255, 20, 147);\n                break;\n            case KnownColor.DeepSkyBlue:\n                color = new PdfColor(255, 0, 191, 255);\n                break;\n            case KnownColor.DimGray:\n                color = new PdfColor(255, 105, 105, 105);\n                break;\n            case KnownColor.DodgerBlue:\n                color = new PdfColor(255, 30, 144, 255);\n                break;\n            case KnownColor.Firebrick:\n                color = new PdfColor(255, 178, 34, 34);\n                break;\n            case KnownColor.FloralWhite:\n                color = new PdfColor(255, 255, 250, 240);\n                break;\n            case KnownColor.ForestGreen:\n                color = new PdfColor(255, 34, 139, 34);\n                break;\n            case KnownColor.Fuchsia:\n                color = new PdfColor(255, 255, 0, 255);\n                break;\n            case KnownColor.Gainsboro:\n                color = new PdfColor(255, 220, 220, 220);\n                break;\n            case KnownColor.GhostWhite:\n                color = new PdfColor(255, 248, 248, 255);\n                break;\n            case KnownColor.Gold:\n                color = new PdfColor(255, 255, 215, 0);\n                break;\n            case KnownColor.Goldenrod:\n                color = new PdfColor(255, 218, 165, 32);\n                break;\n            case KnownColor.Gray:\n                color = new PdfColor(255, 128, 128, 128);\n                break;\n            case KnownColor.Green:\n                color = new PdfColor(255, 0, 128, 0);\n                break;\n            case KnownColor.GreenYellow:\n                color = new PdfColor(255, 173, 255, 47);\n                break;\n            case KnownColor.Honeydew:\n                color = new PdfColor(255, 240, 255, 240);\n                break;\n            case KnownColor.HotPink:\n                color = new PdfColor(255, 255, 105, 180);\n                break;\n            case KnownColor.IndianRed:\n                color = new PdfColor(255, 205, 92, 92);\n                break;\n            case KnownColor.Indigo:\n                color = new PdfColor(255, 75, 0, 130);\n                break;\n            case KnownColor.Ivory:\n                color = new PdfColor(255, 255, 255, 240);\n                break;\n            case KnownColor.Khaki:\n                color = new PdfColor(255, 240, 230, 140);\n                break;\n            case KnownColor.Lavender:\n                color = new PdfColor(255, 230, 230, 250);\n                break;\n            case KnownColor.LavenderBlush:\n                color = new PdfColor(255, 255, 240, 245);\n                break;\n            case KnownColor.LawnGreen:\n                color = new PdfColor(255, 124, 252, 0);\n                break;\n            case KnownColor.LemonChiffon:\n                color = new PdfColor(255, 255, 250, 205);\n                break;\n            case KnownColor.LightBlue:\n                color = new PdfColor(255, 173, 216, 230);\n                break;\n            case KnownColor.LightCoral:\n                color = new PdfColor(255, 240, 128, 128);\n                break;\n            case KnownColor.LightCyan:\n                color = new PdfColor(255, 224, 255, 255);\n                break;\n            case KnownColor.LightGoldenrodYellow:\n                color = new PdfColor(255, 250, 250, 210);\n                break;\n            case KnownColor.LightGreen:\n                color = new PdfColor(255, 144, 238, 144);\n                break;\n            case KnownColor.LightGray:\n                color = new PdfColor(255, 211, 211, 211);\n                break;\n            case KnownColor.LightPink:\n                color = new PdfColor(255, 255, 182, 193);\n                break;\n            case KnownColor.LightSalmon:\n                color = new PdfColor(255, 255, 160, 122);\n                break;\n            case KnownColor.LightSeaGreen:\n                color = new PdfColor(255, 32, 178, 170);\n                break;\n            case KnownColor.LightSkyBlue:\n                color = new PdfColor(255, 135, 206, 250);\n                break;\n            case KnownColor.LightSlateGray:\n                color = new PdfColor(255, 119, 136, 153);\n                break;\n            case KnownColor.LightSteelBlue:\n                color = new PdfColor(255, 176, 196, 222);\n                break;\n            case KnownColor.LightYellow:\n                color = new PdfColor(255, 255, 255, 224);\n                break;\n            case KnownColor.Lime:\n                color = new PdfColor(255, 0, 255, 0);\n                break;\n            case KnownColor.LimeGreen:\n                color = new PdfColor(255, 50, 205, 50);\n                break;\n            case KnownColor.Linen:\n                color = new PdfColor(255, 250, 240, 230);\n                break;\n            case KnownColor.Magenta:\n                color = new PdfColor(255, 255, 0, 255);\n                break;\n            case KnownColor.Maroon:\n                color = new PdfColor(255, 128, 0, 0);\n                break;\n            case KnownColor.MediumAquamarine:\n                color = new PdfColor(255, 102, 205, 170);\n                break;\n            case KnownColor.MediumBlue:\n                color = new PdfColor(255, 0, 0, 205);\n                break;\n            case KnownColor.MediumOrchid:\n                color = new PdfColor(255, 186, 85, 211);\n                break;\n            case KnownColor.MediumPurple:\n                color = new PdfColor(255, 147, 112, 219);\n                break;\n            case KnownColor.MediumSeaGreen:\n                color = new PdfColor(255, 60, 179, 113);\n                break;\n            case KnownColor.MediumSlateBlue:\n                color = new PdfColor(255, 123, 104, 238);\n                break;\n            case KnownColor.MediumSpringGreen:\n                color = new PdfColor(255, 0, 250, 154);\n                break;\n            case KnownColor.MediumTurquoise:\n                color = new PdfColor(255, 72, 209, 204);\n                break;\n            case KnownColor.MediumVioletRed:\n                color = new PdfColor(255, 199, 21, 133);\n                break;\n            case KnownColor.MidnightBlue:\n                color = new PdfColor(255, 25, 25, 112);\n                break;\n            case KnownColor.MintCream:\n                color = new PdfColor(255, 245, 255, 250);\n                break;\n            case KnownColor.MistyRose:\n                color = new PdfColor(255, 255, 228, 225);\n                break;\n            case KnownColor.Moccasin:\n                color = new PdfColor(255, 255, 228, 181);\n                break;\n            case KnownColor.NavajoWhite:\n                color = new PdfColor(255, 255, 222, 173);\n                break;\n            case KnownColor.Navy:\n                color = new PdfColor(255, 0, 0, 128);\n                break;\n            case KnownColor.OldLace:\n                color = new PdfColor(255, 253, 245, 230);\n                break;\n            case KnownColor.Olive:\n                color = new PdfColor(255, 128, 128, 0);\n                break;\n            case KnownColor.OliveDrab:\n                color = new PdfColor(255, 107, 142, 35);\n                break;\n            case KnownColor.Orange:\n                color = new PdfColor(255, 255, 165, 0);\n                break;\n            case KnownColor.OrangeRed:\n                color = new PdfColor(255, 255, 69, 0);\n                break;\n            case KnownColor.Orchid:\n                color = new PdfColor(255, 218, 112, 214);\n                break;\n            case KnownColor.PaleGoldenrod:\n                color = new PdfColor(255, 238, 232, 170);\n                break;\n            case KnownColor.PaleGreen:\n                color = new PdfColor(255, 152, 251, 152);\n                break;\n            case KnownColor.PaleTurquoise:\n                color = new PdfColor(255, 175, 238, 238);\n                break;\n            case KnownColor.PaleVioletRed:\n                color = new PdfColor(255, 219, 112, 147);\n                break;\n            case KnownColor.PapayaWhip:\n                color = new PdfColor(255, 255, 239, 213);\n                break;\n            case KnownColor.PeachPuff:\n                color = new PdfColor(255, 255, 218, 185);\n                break;\n            case KnownColor.Peru:\n                color = new PdfColor(255, 205, 133, 63);\n                break;\n            case KnownColor.Pink:\n                color = new PdfColor(255, 255, 192, 203);\n                break;\n            case KnownColor.Plum:\n                color = new PdfColor(255, 221, 160, 221);\n                break;\n            case KnownColor.PowderBlue:\n                color = new PdfColor(255, 176, 224, 230);\n                break;\n            case KnownColor.Purple:\n                color = new PdfColor(255, 128, 0, 128);\n                break;\n            case KnownColor.Red:\n                color = new PdfColor(255, 255, 0, 0);\n                break;\n            case KnownColor.RosyBrown:\n                color = new PdfColor(255, 188, 143, 143);\n                break;\n            case KnownColor.RoyalBlue:\n                color = new PdfColor(255, 65, 105, 225);\n                break;\n            case KnownColor.SaddleBrown:\n                color = new PdfColor(255, 139, 69, 19);\n                break;\n            case KnownColor.Salmon:\n                color = new PdfColor(255, 250, 128, 114);\n                break;\n            case KnownColor.SandyBrown:\n                color = new PdfColor(255, 244, 164, 96);\n                break;\n            case KnownColor.SeaGreen:\n                color = new PdfColor(255, 46, 139, 87);\n                break;\n            case KnownColor.SeaShell:\n                color = new PdfColor(255, 255, 245, 238);\n                break;\n            case KnownColor.Sienna:\n                color = new PdfColor(255, 160, 82, 45);\n                break;\n            case KnownColor.Silver:\n                color = new PdfColor(255, 192, 192, 192);\n                break;\n            case KnownColor.SkyBlue:\n                color = new PdfColor(255, 135, 206, 235);\n                break;\n            case KnownColor.SlateBlue:\n                color = new PdfColor(255, 106, 90, 205);\n                break;\n            case KnownColor.SlateGray:\n                color = new PdfColor(255, 112, 128, 144);\n                break;\n            case KnownColor.Snow:\n                color = new PdfColor(255, 255, 250, 250);\n                break;\n            case KnownColor.SpringGreen:\n                color = new PdfColor(255, 0, 255, 127);\n                break;\n            case KnownColor.SteelBlue:\n                color = new PdfColor(255, 70, 130, 180);\n                break;\n            case KnownColor.Tan:\n                color = new PdfColor(255, 210, 180, 140);\n                break;\n            case KnownColor.Teal:\n                color = new PdfColor(255, 0, 128, 128);\n                break;\n            case KnownColor.Thistle:\n                color = new PdfColor(255, 216, 191, 216);\n                break;\n            case KnownColor.Tomato:\n                color = new PdfColor(255, 255, 99, 71);\n                break;\n            case KnownColor.Turquoise:\n                color = new PdfColor(255, 64, 224, 208);\n                break;\n            case KnownColor.Violet:\n                color = new PdfColor(255, 238, 130, 238);\n                break;\n            case KnownColor.Wheat:\n                color = new PdfColor(255, 245, 222, 179);\n                break;\n            case KnownColor.White:\n                color = new PdfColor(255, 255, 255, 255);\n                break;\n            case KnownColor.WhiteSmoke:\n                color = new PdfColor(255, 245, 245, 245);\n                break;\n            case KnownColor.Yellow:\n                color = new PdfColor(255, 255, 255, 0);\n                break;\n            case KnownColor.YellowGreen:\n                color = new PdfColor(255, 154, 205, 50);\n                break;\n        }\n        return color;\n    };\n    //Static Fields\n    /**\n     * Local variable to store the brushes.\n     */\n    PdfBrushes.sBrushes = new Dictionary();\n    return PdfBrushes;\n}());\nexport { PdfBrushes };\n","/**\n * PdfBlend.ts class for EJ2-PDF\n */\nimport { PdfColorSpace } from './../enum';\nimport { PdfColor } from './../pdf-color';\nimport { PdfColorBlend } from './pdf-color-blend';\n/**\n * `PdfBlend` Represents the blend color space\n * @private\n */\nvar PdfBlend = /** @class */ (function () {\n    function PdfBlend(count) {\n        //Constants\n        /**\n         * precision of the GCD calculations.\n         * @private\n         */\n        this.precision = 1000;\n        //\n    }\n    Object.defineProperty(PdfBlend.prototype, \"factors\", {\n        //Properties\n        /**\n         * Gets or sets the array of factor to the blend.\n         * @public\n         */\n        get: function () {\n            return this.mFactors;\n        },\n        set: function (value) {\n            if ((value == null)) {\n                throw new Error('ArgumentNullException : Factors');\n            }\n            this.mFactors = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBlend.prototype, \"positions\", {\n        /**\n         * 'positions' Gets or sets the array of positions\n         * @public\n         */\n        get: function () {\n            return this.mPositions;\n        },\n        set: function (value) {\n            var positionarray = value;\n            for (var i = 0; i < positionarray.length; i++) {\n                if (((positionarray[i] < 0) || (positionarray[i] > 1))) {\n                    positionarray[i] = 0;\n                }\n            }\n            this.mPositions = positionarray;\n            this.mPositions = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBlend.prototype, \"count\", {\n        /**\n         * Gets the number of elements that specify the blend.\n         * @protected\n         */\n        get: function () {\n            return this.mCount;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    //Implementation\n    /**\n     * Generates a correct color blend.\n     * @param colours The colours.\n     * @param colorSpace The color space.\n     */\n    PdfBlend.prototype.generateColorBlend = function (colours, colorSpace) {\n        if ((colours == null)) {\n            throw new Error('ArgumentNullException : colours');\n        }\n        if ((this.positions == null)) {\n            this.positions = [0];\n        }\n        var cBlend = new PdfColorBlend(this.count);\n        var positions = this.positions;\n        var clrs = null;\n        if ((positions.length === 1)) {\n            positions = [3];\n            positions[0] = 0;\n            positions[1] = this.positions[0];\n            positions[2] = 1;\n            /* tslint:disable */\n            clrs = new Array(3);\n            clrs[0] = colours[0];\n            clrs[1] = colours[0];\n            clrs[2] = colours[1];\n        }\n        else {\n            var c1 = colours[0];\n            var c2 = colours[1];\n            /* tslint:disable */\n            clrs = new Array(this.count);\n            var i = 0;\n            var count = this.count;\n            for (i = 0; i < count; ++i) {\n                clrs[i] = this.interpolate(this.mFactors[i], c1, c2, colorSpace);\n            }\n        }\n        cBlend.positions = positions;\n        cBlend.colors = clrs;\n        return cBlend;\n    };\n    /**\n     * 'clonePdfBlend' Clones this instance.\n     * @public\n     */\n    PdfBlend.prototype.clonePdfBlend = function () {\n        var blend = this;\n        if ((this.mFactors != null)) {\n            blend.factors = (this.mFactors);\n        }\n        if ((this.positions != null)) {\n            blend.positions = (this.positions);\n        }\n        return blend;\n    };\n    PdfBlend.prototype.gcd = function (u, v) {\n        if (typeof u === 'number' && typeof v === 'number' && typeof v !== 'undefined') {\n            if (((u < 0) || (u > 1))) {\n                throw new Error('ArgumentOutOfRangeException : u');\n            }\n            if (((v < 0) || (v > 1))) {\n                throw new Error('ArgumentOutOfRangeException : v');\n            }\n            var iU = (Math.max(1, (u * this.precision)));\n            var iV = (Math.max(1, (v * this.precision)));\n            var iResult = this.gcdInt(iU, iV);\n            var result = ((iResult) / this.precision);\n            return result;\n        }\n        else {\n            var values = u;\n            if ((values == null)) {\n                throw new Error('ArgumentNullException : values');\n            }\n            if ((values.length < 1)) {\n                throw new Error('ArgumentException : Not enough values in the array. - values');\n            }\n            var gcd = values[0];\n            if ((values.length > 1)) {\n                var count = values.length;\n                for (var i = 1; i < count; ++i) {\n                    gcd = this.gcd(values[i], gcd);\n                    if ((gcd === (1 / this.precision))) {\n                        break;\n                    }\n                }\n            }\n            return gcd;\n        }\n    };\n    /**\n     * Calculate the GCD int of the specified values.\n     * @param u The u.\n     * @param v The v.\n     */\n    PdfBlend.prototype.gcdInt = function (u, v) {\n        if ((u <= 0)) {\n            throw new Error('ArgumentOutOfRangeException' + u + 'The arguments cannot be less or equal to zero.');\n        }\n        if ((v <= 0)) {\n            throw new Error('ArgumentOutOfRangeException' + v + 'The arguments cannot be less or equal to zero.');\n        }\n        if (((u === 1) || (v === 1))) {\n            return 1;\n        }\n        var shift = 0;\n        while (this.isEven(u, v)) {\n            ++shift;\n            u >>= 1;\n            v >>= 1;\n        }\n        while (((u & 1) <= 0)) {\n            u >>= 1;\n        }\n        do {\n            while ((v & 1) <= 0) {\n                v >>= 1;\n            }\n            if (u > v) {\n                var t = v;\n                v = u;\n                u = t;\n            }\n            v = v - u;\n        } while (v !== 0);\n        return (u << shift);\n    };\n    PdfBlend.prototype.isEven = function (arg1, arg2) {\n        if (typeof arg2 === 'number' && typeof arg2 !== 'undefined') {\n            var result = true;\n            result = (result && ((arg1 & 1) <= 0)); //  Is u even?\n            result = (result && ((arg2 & 1) <= 0)); //  Is v even?\n            return result;\n        }\n        else {\n            return ((arg1 & 1) <= 0);\n        }\n    };\n    PdfBlend.prototype.interpolate = function (t, color1, color2, colorSpace) {\n        if (color1 instanceof PdfColor) {\n            var color = new PdfColor();\n            switch (colorSpace) {\n                case PdfColorSpace.Rgb:\n                    var red = (this.interpolate(t, color1.red, color2.red));\n                    var green = (this.interpolate(t, color1.green, color2.green));\n                    var blue = (this.interpolate(t, color1.blue, color2.blue));\n                    color = new PdfColor(red, green, blue);\n                    break;\n                case PdfColorSpace.GrayScale:\n                    var gray = (this.interpolate(t, color1.gray, color2.gray));\n                    color = new PdfColor(gray);\n                    break;\n                case PdfColorSpace.Cmyk:\n                    var cyan = (this.interpolate(t, color1.c, color2.c));\n                    var magenta = (this.interpolate(t, color1.m, color2.m));\n                    var yellow = (this.interpolate(t, color1.y, color2.y));\n                    var black = (this.interpolate(t, color1.k, color2.k));\n                    color = new PdfColor(cyan, magenta, yellow, black);\n                    break;\n            }\n            return color;\n        }\n        else {\n            var t0 = 0;\n            var t1 = 1;\n            var result = 0;\n            if ((t === t0)) {\n                result = color1;\n            }\n            else if ((t === t1)) {\n                result = color2;\n            }\n            else {\n                result = (color1 + ((t - t0) * ((color2 - color1) / (t1 - t0))));\n            }\n            return result;\n        }\n    };\n    return PdfBlend;\n}());\nexport { PdfBlend };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * PdfColorBlend.ts class for EJ2-PDF\n */\nimport { PdfColorSpace } from './../enum';\nimport { PdfSampledFunction } from './../../general/functions/pdf-sampled-function';\nimport { PdfBlend } from './pdf-blend';\n/**\n * `PdfColorBlend` Represents the arrays of colors and positions used for\n *  interpolating color blending in a multicolor gradient.\n * @private\n */\nvar PdfColorBlend = /** @class */ (function (_super) {\n    __extends(PdfColorBlend, _super);\n    function PdfColorBlend(count) {\n        var _this = _super.call(this) || this;\n        if (typeof count === 'number') {\n            _this = _super.call(this, count) || this;\n        }\n        return _this;\n    }\n    Object.defineProperty(PdfColorBlend.prototype, \"colors\", {\n        //Properties\n        /**\n         * Gets or sets the array of colors.\n         * @public\n         */\n        get: function () {\n            return this.mcolors;\n        },\n        set: function (value) {\n            if ((value == null)) {\n                throw new Error('ArgumentNullException : Colors');\n            }\n            this.mcolors = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    //Implementation\n    /**\n     * Gets the function.\n     * @param colorSpace The color space.\n     * @public\n     */\n    PdfColorBlend.prototype.getFunction = function (colorSpace) {\n        var domain = [0, 1];\n        var colourComponents = this.getColorComponentsCount(colorSpace);\n        var maxComponentValue = this.getMaxComponentValue(colorSpace);\n        var range = this.setRange(colourComponents, maxComponentValue);\n        var func = null;\n        if ((this.mbrush == null && typeof this.mbrush === 'undefined')) {\n            var sizes = [1];\n            var samplesCount = void 0;\n            var step = 1;\n            if (this.positions.length === 2) {\n                samplesCount = 2;\n            }\n            else {\n                var positions = this.positions;\n                var intervals = this.getIntervals(positions);\n                var gcd = this.gcd(intervals);\n                step = gcd;\n                samplesCount = (((1 / gcd)) + 1);\n            }\n            sizes[0] = samplesCount;\n            var samples = this.getSamplesValues(colorSpace, samplesCount, maxComponentValue, step);\n            func = new PdfSampledFunction(domain, range, sizes, samples);\n            return func;\n        }\n        return func;\n    };\n    /**\n     * 'cloneColorBlend' Clones this instance.\n     * @public\n     */\n    PdfColorBlend.prototype.cloneColorBlend = function () {\n        var cBlend = this;\n        if ((this.mcolors != null && typeof this.mcolors !== 'undefined')) {\n            cBlend.colors = (this.mcolors);\n        }\n        if ((this.positions != null && typeof this.positions !== 'undefined')) {\n            cBlend.positions = (this.positions);\n        }\n        return cBlend;\n    };\n    /**\n     * Sets the range.\n     * @param colourComponents The colour components.\n     * @param maxValue The max value.\n     */\n    PdfColorBlend.prototype.setRange = function (colourComponents, maxValue) {\n        var range = [(colourComponents * 2)];\n        for (var i = 0; (i < colourComponents); ++i) {\n            range[(i * 2)] = 0;\n            range[((i * 2) + 1)] = 1;\n        }\n        return range;\n    };\n    /**\n     * Calculates the color components count according to colour space.\n     * @param colorSpace The color space.\n     */\n    PdfColorBlend.prototype.getColorComponentsCount = function (colorSpace) {\n        var count = 0;\n        switch (colorSpace) {\n            case PdfColorSpace.Rgb:\n                count = 3;\n                break;\n            case PdfColorSpace.Cmyk:\n                count = 4;\n                break;\n            case PdfColorSpace.GrayScale:\n                count = 1;\n                break;\n            default:\n                throw new Error('ArgumentException - Unsupported color space: ' + colorSpace + ' colorSpace');\n        }\n        return count;\n    };\n    /**\n     * Gets samples values for specified colour space.\n     * @param colorSpace The color space.\n     * @param sampleCount The sample count.\n     * @param maxComponentValue The max component value.\n     * @param step The step.\n     */\n    PdfColorBlend.prototype.getSamplesValues = function (colorSpace, sampleCount, maxComponentValue, step) {\n        var values;\n        switch (colorSpace) {\n            case PdfColorSpace.GrayScale:\n                values = this.getGrayscaleSamples(sampleCount, maxComponentValue, step);\n                break;\n            case PdfColorSpace.Cmyk:\n                values = this.getCmykSamples(sampleCount, maxComponentValue, step);\n                break;\n            case PdfColorSpace.Rgb:\n                values = this.getRgbSamples(sampleCount, maxComponentValue, step);\n                break;\n            default:\n                throw new Error('ArgumentException - Unsupported color space: ' + colorSpace + ' colorSpace');\n        }\n        return values;\n    };\n    /**\n     * Gets the grayscale samples.\n     * @param sampleCount The sample count.\n     * @param maxComponentValue The max component value.\n     * @param step The step.\n     */\n    PdfColorBlend.prototype.getGrayscaleSamples = function (sampleCount, maxComponentValue, step) {\n        var values = [(sampleCount * 2)];\n        for (var i = 0; (i < sampleCount); ++i) {\n            var color = this.getNextColor(i, step, PdfColorSpace.GrayScale);\n            var index = (i * 2);\n        }\n        return values;\n    };\n    /**\n     * Gets the RGB samples.\n     * @param sampleCount The sample count.\n     * @param maxComponentValue The max component value.\n     * @param step The step.\n     */\n    PdfColorBlend.prototype.getRgbSamples = function (sampleCount, maxComponentValue, step) {\n        var values = [(sampleCount * 3)];\n        for (var i = 0; (i < sampleCount); ++i) {\n            var color = this.getNextColor(i, step, PdfColorSpace.Rgb);\n            var index = (i * 3);\n            values[index] = color.r;\n            values[(index + 1)] = color.g;\n            values[(index + 2)] = color.b;\n        }\n        return values;\n    };\n    /**\n     * Gets the CMYK samples.\n     * @param sampleCount The sample count.\n     * @param maxComponentValue The max component value.\n     * @param step The step.\n     */\n    PdfColorBlend.prototype.getCmykSamples = function (sampleCount, maxComponentValue, step) {\n        var values = [(sampleCount * 4)];\n        for (var i = 0; (i < sampleCount); i++) {\n            var color = this.getNextColor(i, step, PdfColorSpace.Cmyk);\n            var index = (i * 4);\n            values[index] = ((color.c * maxComponentValue));\n            values[(index + 1)] = ((color.m * maxComponentValue));\n            values[(index + 2)] = ((color.y * maxComponentValue));\n            values[(index + 3)] = ((color.k * maxComponentValue));\n        }\n        return values;\n    };\n    /**\n     * Calculates the color that should be at the specified index.\n     * @param index The index.\n     * @param step The step.\n     * @param colorSpace The color space.\n     */\n    PdfColorBlend.prototype.getNextColor = function (index, step, colorSpace) {\n        var position = (step * index);\n        var indexHi;\n        var indexLow;\n        var result = this.getIndices(position, indexLow, indexHi);\n        indexLow = result.indexLow;\n        indexHi = result.indexHi;\n        var color;\n        if (indexLow === indexHi) {\n            color = this.mcolors[indexLow];\n        }\n        else {\n            var positionLow = this.positions[indexLow];\n            var positionHi = this.positions[indexHi];\n            var colorLow = this.mcolors[indexLow];\n            var colorHi = this.mcolors[indexHi];\n            var t = ((position - positionLow) / (positionHi - positionLow));\n            color = this.interpolate(t, colorLow, colorHi, colorSpace);\n        }\n        return color;\n    };\n    /**\n     * Gets the indices.\n     * @param position The position.\n     * @param indexLow The index low.\n     * @param indexHi The index hi.\n     */\n    PdfColorBlend.prototype.getIndices = function (position, indexLow, indexHi) {\n        var positions = this.positions;\n        indexLow = 0;\n        indexHi = 0;\n        for (var i = 0; (i < this.mcolors.length); ++i) {\n            var currPos = positions[i];\n            if ((currPos === position)) {\n                indexHi = i;\n                indexLow = i;\n                break;\n            }\n            else if ((currPos > position)) {\n                indexHi = i;\n                break;\n            }\n            indexLow = i;\n            indexHi = i;\n        }\n        return { indexLow: indexLow, indexHi: indexHi };\n    };\n    /**\n     * Calculates the max component value.\n     * @param colorSpace The color space.\n     */\n    PdfColorBlend.prototype.getMaxComponentValue = function (colorSpace) {\n        var result = 0;\n        switch (colorSpace) {\n            case PdfColorSpace.Cmyk:\n            case PdfColorSpace.Rgb:\n                result = 255;\n                break;\n            case PdfColorSpace.GrayScale:\n                result = 65535;\n                break;\n            default:\n                throw new Error('ArgumentException - Unsupported color space: ' + colorSpace + 'colorSpace');\n        }\n        return result;\n    };\n    /**\n     * Gets an intervals array from the positions array.\n     * @param positions The positions array.\n     */\n    PdfColorBlend.prototype.getIntervals = function (positions) {\n        var count = positions.length;\n        var intervals = [(count - 1)];\n        var prev = positions[0];\n        for (var i = 1; (i < count); ++i) {\n            var v = positions[i];\n            intervals[(i - 1)] = (v - prev);\n            prev = v;\n        }\n        return intervals;\n    };\n    return PdfColorBlend;\n}(PdfBlend));\nexport { PdfColorBlend };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * PdfLinearGradientBrush.ts class for EJ2-PDF\n */\nimport { PdfColorSpace } from './../enum';\nimport { PdfColor } from './../pdf-color';\nimport { PointF, Rectangle } from './../../drawing/pdf-drawing';\nimport { PdfDictionary } from '../../primitives/pdf-dictionary';\nimport { DictionaryProperties } from './../../input-output/pdf-dictionary-properties';\nimport { PdfBoolean } from '../../primitives/pdf-boolean';\nimport { PdfArray } from './../../primitives/pdf-array';\nimport { PdfNumber } from './../../primitives/pdf-number';\nimport { PdfColorBlend } from './pdf-color-blend';\nimport { PdfGradientBrush } from './pdf-gradient-brush';\nimport { PdfExtend, PdfLinearGradientMode, ShadingType } from './enum';\n/**\n * `PdfLinearGradientBrush` Implements linear gradient brush by using PDF axial shading pattern.\n * @private\n */\nvar PdfLinearGradientBrush = /** @class */ (function (_super) {\n    __extends(PdfLinearGradientBrush, _super);\n    /**\n     * Initializes a new instance of the `PdfLinearGradientBrush` class.\n     * @public\n     */\n    /* tslint:disable-next-line:max-line-length */\n    function PdfLinearGradientBrush(arg1, arg2, arg3, arg4) {\n        var _this = _super.call(this, new PdfDictionary()) || this;\n        /**\n         * Local variable to store the dictionary properties.\n         * @private\n         */\n        _this.mDictionaryProperties = new DictionaryProperties();\n        if (arg1 instanceof PointF && arg2 instanceof PointF && arg3 instanceof PdfColor && arg4 instanceof PdfColor) {\n            _this.initialize(arg3, arg4);\n            _this.mPointStart = arg1;\n            _this.mPointEnd = arg2;\n            _this.setPoints(_this.mPointStart, _this.mPointEnd);\n        }\n        else if (arg1 instanceof Rectangle) {\n            _this.initialize(arg2, arg3);\n            /* tslint:disable-next-line:max-line-length */\n            if ((arg4 === PdfLinearGradientMode.BackwardDiagonal || arg4 === PdfLinearGradientMode.ForwardDiagonal || arg4 === PdfLinearGradientMode.Horizontal || arg4 === PdfLinearGradientMode.Vertical)) {\n                _this.mBoundaries = arg1;\n                switch (arg4) {\n                    case PdfLinearGradientMode.BackwardDiagonal:\n                        _this.mPointStart = new PointF(arg1.right, arg1.top);\n                        _this.mPointEnd = new PointF(arg1.left, arg1.bottom);\n                        break;\n                    case PdfLinearGradientMode.ForwardDiagonal:\n                        _this.mPointStart = new PointF(arg1.left, arg1.top);\n                        _this.mPointEnd = new PointF(arg1.right, arg1.bottom);\n                        break;\n                    case PdfLinearGradientMode.Horizontal:\n                        _this.mPointStart = new PointF(arg1.left, arg1.top);\n                        _this.mPointEnd = new PointF(arg1.right, arg1.top);\n                        break;\n                    case PdfLinearGradientMode.Vertical:\n                        _this.mPointStart = new PointF(arg1.left, arg1.top);\n                        _this.mPointEnd = new PointF(arg1.left, arg1.bottom);\n                        break;\n                    default:\n                        throw new Error('ArgumentException -- Unsupported linear gradient mode: ' + arg4 + ' mode');\n                }\n                _this.setPoints(_this.mPointStart, _this.mPointEnd);\n            }\n            else if (typeof arg4 === 'number' && typeof arg4 !== 'undefined') {\n                _this.mBoundaries = arg1;\n                arg4 = arg4 % 360;\n                if ((arg4 === 0)) {\n                    _this.mPointStart = new PointF(arg1.left, arg1.top);\n                    _this.mPointEnd = new PointF(arg1.right, arg1.top);\n                }\n                else if ((arg4 === 90)) {\n                    _this.mPointStart = new PointF(arg1.left, arg1.top);\n                    _this.mPointEnd = new PointF(arg1.left, arg1.bottom);\n                }\n                else if ((arg4 === 180)) {\n                    _this.mPointEnd = new PointF(arg1.left, arg1.top);\n                    _this.mPointStart = new PointF(arg1.right, arg1.top);\n                }\n                else if ((arg4 === 270)) {\n                    _this.mPointEnd = new PointF(arg1.left, arg1.top);\n                    _this.mPointStart = new PointF(arg1.left, arg1.bottom);\n                }\n                else {\n                    var d2r = (Math.PI / 180);\n                    var radAngle = (arg4 * d2r);\n                    var k = Math.tan(radAngle);\n                    var x = (_this.mBoundaries.left\n                        + ((_this.mBoundaries.right - _this.mBoundaries.left) / 2));\n                    var y = (_this.mBoundaries.top\n                        + ((_this.mBoundaries.bottom - _this.mBoundaries.top) / 2));\n                    var centre = new PointF(x, y);\n                    x = (_this.mBoundaries.width / (2 * (Math.cos(radAngle))));\n                    y = ((k * x));\n                    x = (x + centre.x);\n                    y = (y + centre.y);\n                    var p1 = new PointF(x, y);\n                    var cp1 = _this.subPoints(p1, centre);\n                    //  P1 - P0\n                    var p = _this.choosePoint(arg4);\n                    var coef = (_this.mulPoints(_this.subPoints(p, centre), cp1)\n                        / _this.mulPoints(cp1, cp1));\n                    _this.mPointEnd = _this.addPoints(centre, _this.mulPoint(cp1, coef));\n                    //  Parametric line equation.\n                    _this.mPointStart = _this.addPoints(centre, _this.mulPoint(cp1, (coef * -1)));\n                }\n                _this.setPoints(_this.mPointEnd, _this.mPointStart);\n            }\n        }\n        return _this;\n    }\n    /**\n     * Initializes a new instance of the `PdfLinearGradientBrush` class.\n     * @param color1 The starting color of the gradient.\n     * @param color2 The end color of the gradient.\n     */\n    PdfLinearGradientBrush.prototype.initialize = function (color1, color2) {\n        this.mColours = [color1, color2];\n        this.mColourBlend = new PdfColorBlend(2);\n        this.mColourBlend.positions = [0, 1];\n        this.mColourBlend.colors = this.mColours;\n        this.initShading();\n    };\n    Object.defineProperty(PdfLinearGradientBrush.prototype, \"blend\", {\n        //Properties\n        /**\n         * Gets or sets a PdfBlend that specifies positions\n         * and factors that define a custom falloff for the gradient.\n         * @public\n         */\n        get: function () {\n            return this.mBlend;\n        },\n        set: function (value) {\n            if ((value == null)) {\n                throw new Error('ArgumentNullException : Blend');\n            }\n            if ((this.mColours == null)) {\n                throw new Error('NotSupportedException : There is no starting and ending colours specified.');\n            }\n            this.mBlend = value;\n            //  TODO: generate correct colour blend.\n            this.mColourBlend = this.mBlend.generateColorBlend(this.mColours, this.colorSpace);\n            this.resetFunction();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfLinearGradientBrush.prototype, \"interpolationColors\", {\n        /**\n         * Gets or sets a ColorBlend that defines a multicolor linear gradient.\n         * @public\n         */\n        get: function () {\n            return this.mColourBlend;\n        },\n        set: function (value) {\n            if ((value == null)) {\n                throw new Error('ArgumentNullException : InterpolationColors');\n            }\n            this.mBlend = null;\n            this.mColours = null;\n            this.mColourBlend = value;\n            this.resetFunction();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfLinearGradientBrush.prototype, \"linearColors\", {\n        /**\n         * Gets or sets the starting and ending colors of the gradient.\n         * @public\n         */\n        get: function () {\n            return this.mColours;\n        },\n        set: function (value) {\n            if ((value == null)) {\n                throw new Error('ArgumentNullException : LinearColors');\n            }\n            if ((value.length < 2)) {\n                throw new Error('ArgumentException : The array is too small - LinearColors');\n            }\n            if ((this.mColours == null && typeof this.mColours === 'undefined')) {\n                this.mColours = [value[0], value[1]];\n            }\n            else {\n                this.mColours[0] = value[0];\n                this.mColours[1] = value[1];\n            }\n            if ((this.mBlend == null && typeof this.mBlend === 'undefined')) {\n                //  Set correct colour blend.\n                this.mColourBlend = new PdfColorBlend(2);\n                this.mColourBlend.colors = this.mColours;\n                this.mColourBlend.positions = [0, 1];\n            }\n            else {\n                this.mColourBlend = this.mBlend.generateColorBlend(this.mColours, this.colorSpace);\n            }\n            this.resetFunction();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfLinearGradientBrush.prototype, \"rectangle\", {\n        /**\n         * Gets a rectangular region that defines the boundaries of the gradient.\n         * @public\n         */\n        get: function () {\n            return this.mBoundaries;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfLinearGradientBrush.prototype, \"extend\", {\n        /**\n         * Gets or sets the value indicating whether the gradient should extend starting and ending points.\n         * @public\n         */\n        get: function () {\n            var result = PdfExtend.None;\n            var extend = (this.shading.items.getValue(this.mDictionaryProperties.extend));\n            if ((extend != null)) {\n                var extStart = (extend.items(0));\n                var extEnd = (extend.items(1));\n                if (extStart.value) {\n                    result = (result | PdfExtend.Start);\n                }\n                if (extEnd.value) {\n                    result = (result | PdfExtend.End);\n                }\n            }\n            return result;\n        },\n        set: function (value) {\n            var extend = (this.shading.items.getValue(this.mDictionaryProperties.extend));\n            var extStart;\n            var extEnd;\n            if ((extend == null)) {\n                extStart = new PdfBoolean(false);\n                extEnd = new PdfBoolean(false);\n                extend = new PdfArray();\n                extend.add(extStart);\n                extend.add(extEnd);\n                this.shading.items.setValue(this.mDictionaryProperties.extend, extend);\n            }\n            else {\n                extStart = (extend.items(0));\n                extEnd = (extend.items(1));\n            }\n            // extStart.value = ((value && PdfExtend.Start) > 0);\n            // extEnd.value = ((value && PdfExtend.End) > 0);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    //Implementation\n    /**\n     * Adds two points to each other.\n     * @param point1 The point1.\n     * @param point2 The point2.\n     */\n    PdfLinearGradientBrush.prototype.addPoints = function (point1, point2) {\n        var x = (point1.x + point2.x);\n        var y = (point1.y + point2.y);\n        var result = new PointF(x, y);\n        return result;\n    };\n    /**\n     * Subs the second point from the first one.\n     * @param point1 The point1.\n     * @param point2 The point2.\n     */\n    PdfLinearGradientBrush.prototype.subPoints = function (point1, point2) {\n        var x = (point1.x - point2.x);\n        var y = (point1.y - point2.y);\n        var result = new PointF(x, y);\n        return result;\n    };\n    /**\n     * Makes scalar multiplication of two points.\n     * @param point1 The point1.\n     * @param point2 The point2.\n     */\n    PdfLinearGradientBrush.prototype.mulPoints = function (point1, point2) {\n        var result = ((point1.x * point2.x) + (point1.y * point2.y));\n        return result;\n    };\n    /**\n     * Multiplies the point by the value specified.\n     * @param point The point1.\n     * @param value The value.\n     */\n    PdfLinearGradientBrush.prototype.mulPoint = function (point, value) {\n        point.x = (point.x * value);\n        point.y = (point.y * value);\n        return point;\n    };\n    /**\n     * Choose the point according to the angle.\n     * @param angle The angle.\n     */\n    PdfLinearGradientBrush.prototype.choosePoint = function (angle) {\n        var point = new PointF(0, 0);\n        //  Choose the correct point.\n        if ((angle < 90) && (angle > 0)) {\n            point = new PointF(this.mBoundaries.right, this.mBoundaries.bottom);\n        }\n        else if ((angle < 180) && (angle > 90)) {\n            point = new PointF(this.mBoundaries.left, this.mBoundaries.bottom);\n        }\n        else if ((angle < 270) && (angle > 180)) {\n            point = new PointF(this.mBoundaries.left, this.mBoundaries.top);\n        }\n        else if (angle > 270) {\n            point = new PointF(this.mBoundaries.right, this.mBoundaries.top);\n        }\n        else {\n            throw new Error('PdfException - Internal error.');\n        }\n        return point;\n    };\n    /**\n     * Sets the start and end points.\n     * @param point1 The point1.\n     * @param point2 The point2.\n     */\n    PdfLinearGradientBrush.prototype.setPoints = function (point1, point2) {\n        var points = new PdfArray();\n        points.add(new PdfNumber(point1.x));\n        points.add(new PdfNumber(this.updateY(point1.y)));\n        points.add(new PdfNumber(point2.x));\n        points.add(new PdfNumber(this.updateY(point2.y)));\n        this.shading.items.setValue(this.mDictionaryProperties.coords, points);\n    };\n    /**\n     * Updates y co-ordinate.\n     * @param y Y co-ordinate..\n     */\n    PdfLinearGradientBrush.prototype.updateY = function (y) {\n        if (y !== 0) {\n            return -y;\n        }\n        else {\n            return y;\n        }\n    };\n    //Overrides\n    /**\n     * Initializes the shading dictionary.\n     * @private\n     */\n    PdfLinearGradientBrush.prototype.initShading = function () {\n        this.colorSpace = PdfColorSpace.Rgb;\n        this.function = this.mColourBlend.getFunction(this.colorSpace);\n        this.shading.items.setValue(this.mDictionaryProperties.shadingType, new PdfNumber((ShadingType.Axial)));\n    };\n    //Overrides\n    /**\n     * Creates a new copy of a brush.\n     * @public\n     */\n    PdfLinearGradientBrush.prototype.clone = function () {\n        var brush = this;\n        brush.resetPatternDictionary(new PdfDictionary(this.patternDictionary));\n        brush.shading = new PdfDictionary();\n        brush.initShading();\n        brush.setPoints(brush.mPointStart, brush.mPointEnd);\n        if (brush !== null && brush instanceof PdfLinearGradientBrush) {\n            if ((this.matrix != null && typeof this.matrix !== 'undefined')) {\n                brush.matrix = this.matrix.clone();\n            }\n        }\n        if ((this.mColours != null && typeof this.mColours !== 'undefined')) {\n            brush.mColours = (this.mColours);\n        }\n        if ((this.blend != null && typeof this.blend !== 'undefined')) {\n            brush.blend = this.blend.clonePdfBlend();\n        }\n        else if ((this.interpolationColors != null && typeof this.interpolationColors !== 'undefined')) {\n            brush.interpolationColors = this.interpolationColors.cloneColorBlend();\n        }\n        brush.extend = this.extend;\n        this.cloneBackgroundValue(brush);\n        this.cloneAntiAliasingValue(brush);\n        return brush;\n    };\n    /**\n     * Resets the function.\n     * @public\n     */\n    PdfLinearGradientBrush.prototype.resetFunction = function () {\n        this.function = this.mColourBlend.getFunction(this.colorSpace);\n    };\n    return PdfLinearGradientBrush;\n}(PdfGradientBrush));\nexport { PdfLinearGradientBrush };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * PdfRadialGradientBrush.ts class for EJ2-PDF\n */\nimport { PdfColorSpace } from './../enum';\nimport { PdfDictionary } from '../../primitives/pdf-dictionary';\nimport { DictionaryProperties } from './../../input-output/pdf-dictionary-properties';\nimport { PdfBoolean } from '../../primitives/pdf-boolean';\nimport { PdfArray } from './../../primitives/pdf-array';\nimport { PdfNumber } from './../../primitives/pdf-number';\nimport { PdfColorBlend } from './pdf-color-blend';\nimport { PdfGradientBrush } from './pdf-gradient-brush';\nimport { PdfExtend, ShadingType } from './enum';\n/**\n * `PdfRadialGradientBrush` Represent radial gradient brush.\n * @private\n */\nvar PdfRadialGradientBrush = /** @class */ (function (_super) {\n    __extends(PdfRadialGradientBrush, _super);\n    //Constructor\n    /**\n     * Initializes a new instance of the `PdfRadialGradientBrush` class.\n     * @public\n     */\n    /* tslint:disable-next-line:max-line-length */\n    function PdfRadialGradientBrush(centerStart, radiusStart, centerEnd, radiusEnd, colorStart, colorEnd) {\n        var _this = _super.call(this, new PdfDictionary()) || this;\n        /**\n         * Local varaible to store the dictionary properties.\n         */\n        _this.mDictionaryProperties = new DictionaryProperties();\n        _this.initialize(colorStart, colorEnd);\n        if (radiusStart < 0) {\n            throw new Error('ArgumentOutOfRangeException : radiusStart - The radius cannot be less then zero.');\n        }\n        if (radiusEnd < 0) {\n            throw new Error('ArgumentOutOfRangeException : radiusEnd - The radius cannpt be less then zero.');\n        }\n        _this.mPointEnd = centerEnd;\n        _this.mPointStart = centerStart;\n        _this.mRadiusStart = radiusStart;\n        _this.mRadiusEnd = radiusEnd;\n        _this.setPoints(_this.mPointStart, _this.mPointEnd, _this.mRadiusStart, _this.mRadiusEnd);\n        return _this;\n    }\n    /**\n     * Initializes a new instance of the `PdfRadialGradientBrush` class.\n     * @param color1 The color1.\n     * @param color2 The color2.\n     */\n    PdfRadialGradientBrush.prototype.initialize = function (color1, color2) {\n        this.mColour = [color1, color2];\n        this.mColourBlends = new PdfColorBlend(2);\n        this.mColourBlends.positions = [0, 1];\n        this.mColourBlends.colors = this.mColour;\n        this.initShading();\n    };\n    Object.defineProperty(PdfRadialGradientBrush.prototype, \"blend\", {\n        //Properties\n        /**\n         * Gets or sets a PdfBlend that specifies positions and factors that define a custom falloff for the gradient.\n         * @public\n         */\n        get: function () {\n            return this.mBlend;\n        },\n        set: function (value) {\n            if ((value == null)) {\n                throw new Error('ArgumentNullException : Blend');\n            }\n            if ((this.mColour == null && typeof this.mColour === 'undefined')) {\n                throw new Error('NotSupportedException : There is no starting and ending colours specified.');\n            }\n            this.mBlend = value;\n            this.mColourBlends = this.mBlend.generateColorBlend(this.mColour, this.colorSpace);\n            this.resetFunction();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfRadialGradientBrush.prototype, \"interpolationColors\", {\n        /**\n         * Gets or sets a ColorBlend that defines a multicolor radial gradient.\n         * @public\n         */\n        get: function () {\n            return this.mColourBlends;\n        },\n        set: function (value) {\n            if (value == null) {\n                throw new Error('ArgumentNullException : InterpolationColors');\n            }\n            this.mBlend = null;\n            this.mColour = null;\n            this.mColourBlends = value;\n            this.resetFunction();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfRadialGradientBrush.prototype, \"linearColors\", {\n        /**\n         * Gets or sets the starting and ending colors of the radial gradient.\n         * @public\n         */\n        get: function () {\n            return this.mColour;\n        },\n        set: function (value) {\n            if ((value == null)) {\n                throw new Error('ArgumentNullException : radial LinearColors');\n            }\n            if ((value.length < 2)) {\n                throw new Error('ArgumentException : The array is too small LinearColors');\n            }\n            if ((this.mColour == null && typeof this.mColour === 'undefined')) {\n                this.mColour = [value[0], value[1]];\n            }\n            else {\n                this.mColour[0] = value[0];\n                this.mColour[1] = value[1];\n            }\n            if ((this.mBlend == null && typeof this.mBlend === 'undefined')) {\n                //  Set correct colour blend.\n                this.mColourBlends = new PdfColorBlend(2);\n                this.mColourBlends.colors = this.mColour;\n                this.mColourBlends.positions = [0, 1];\n            }\n            else {\n                this.mColourBlends = this.mBlend.generateColorBlend(this.mColour, this.colorSpace);\n            }\n            this.resetFunction();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfRadialGradientBrush.prototype, \"rectangle\", {\n        /**\n         * Gets or sets the rectangle.\n         * @public\n         */\n        get: function () {\n            return this.mBoundaries;\n        },\n        set: function (value) {\n            this.mBoundaries = value;\n            this.bBox = PdfArray.fromRectangle(value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfRadialGradientBrush.prototype, \"extend\", {\n        /**\n         * Gets or sets the value indicating whether the gradient\n         *  should extend starting and ending points.\n         * @public\n         */\n        get: function () {\n            var result1 = PdfExtend.None;\n            var extend1 = (this.shading.items.getValue(this.mDictionaryProperties.extend));\n            if (extend1 !== null && typeof extend1 !== 'undefined') {\n                var extStart = (extend1.items(0));\n                var extEnd = (extend1.items(1));\n                if (extStart.value) {\n                    result1 = (result1 | PdfExtend.Start);\n                }\n                if (extEnd.value) {\n                    result1 = (result1 | PdfExtend.End);\n                }\n            }\n            return result1;\n        },\n        set: function (value) {\n            var extend = (this.shading.items.getValue(this.mDictionaryProperties.extend));\n            var extStart;\n            var extEnd1;\n            if (extend == null && typeof extend === 'undefined') {\n                extStart = new PdfBoolean(false);\n                extEnd1 = new PdfBoolean(false);\n                extend = new PdfArray();\n                extend.add(extStart);\n                extend.add(extEnd1);\n                this.shading.items.setValue(this.mDictionaryProperties.extend, extend);\n            }\n            else {\n                extStart = (extend.items(0));\n                extEnd1 = (extend.items(1));\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    //Implementation\n    /**\n     * Sets the points.\n     * @param pointStart The point start.\n     * @param pointEnd The point end.\n     * @param radiusStart The radius start.\n     * @param radiusEnd The radius end.\n     */\n    PdfRadialGradientBrush.prototype.setPoints = function (pointStart, pointEnd, radiusStart, radiusEnd) {\n        var points = new PdfArray();\n        points.add(new PdfNumber(pointStart.x));\n        points.add(new PdfNumber(this.updateY(pointStart.y)));\n        points.add(new PdfNumber(radiusStart));\n        points.add(new PdfNumber(pointEnd.x));\n        points.add(new PdfNumber(this.updateY(pointEnd.y)));\n        if ((radiusStart !== radiusEnd)) {\n            points.add(new PdfNumber(radiusEnd));\n        }\n        else {\n            points.add(new PdfNumber(0));\n        }\n        this.shading.items.setValue(this.mDictionaryProperties.coords, points);\n    };\n    /**\n     * Update y co-ordinate.\n     * @param y Y co-ordinate.\n     */\n    PdfRadialGradientBrush.prototype.updateY = function (y) {\n        if (y !== 0) {\n            return -y;\n        }\n        else {\n            return y;\n        }\n    };\n    /**\n     * Initializess the shading dictionary.\n     * @private\n     */\n    PdfRadialGradientBrush.prototype.initShading = function () {\n        this.colorSpace = PdfColorSpace.Rgb;\n        this.function = this.mColourBlends.getFunction(this.colorSpace);\n        this.shading.items.setValue(this.mDictionaryProperties.shadingType, new PdfNumber((ShadingType.Radial)));\n    };\n    //Overrides\n    /**\n     * Creates a new copy of a brush.\n     * @public\n     */\n    PdfRadialGradientBrush.prototype.clone = function () {\n        var rBrush = this;\n        rBrush.resetPatternDictionary(new PdfDictionary(this.patternDictionary));\n        rBrush.shading = new PdfDictionary();\n        rBrush.initShading();\n        rBrush.setPoints(this.mPointStart, this.mPointEnd, this.mRadiusStart, this.mRadiusEnd);\n        if (rBrush instanceof PdfRadialGradientBrush) {\n            if ((this.matrix !== null && typeof this.matrix !== 'undefined')) {\n                rBrush.matrix = this.matrix.clone();\n            }\n        }\n        if ((this.mColour !== null && typeof this.mColour !== 'undefined')) {\n            rBrush.mColour = (this.mColour);\n        }\n        if ((this.blend !== null && typeof this.blend !== 'undefined')) {\n            rBrush.blend = this.blend.clonePdfBlend();\n        }\n        else if ((this.interpolationColors !== null && typeof this.interpolationColors !== 'undefined')) {\n            rBrush.interpolationColors = this.interpolationColors.cloneColorBlend();\n        }\n        rBrush.extend = this.extend;\n        this.cloneBackgroundValue(rBrush);\n        this.cloneAntiAliasingValue(rBrush);\n        return rBrush;\n    };\n    /**\n     * Resets the function.\n     * @public\n     */\n    PdfRadialGradientBrush.prototype.resetFunction = function () {\n        this.function = this.mColourBlends.getFunction(this.colorSpace);\n    };\n    return PdfRadialGradientBrush;\n}(PdfGradientBrush));\nexport { PdfRadialGradientBrush };\n","/**\n * public Enum for `PdfBorderOverlapStyle`.\n * @private\n */\nexport var PdfBorderOverlapStyle;\n(function (PdfBorderOverlapStyle) {\n    /**\n     * Specifies the type of `Overlap`.\n     * @private\n     */\n    PdfBorderOverlapStyle[PdfBorderOverlapStyle[\"Overlap\"] = 0] = \"Overlap\";\n    /**\n     * Specifies the type of `Inside`.\n     * @private\n     */\n    PdfBorderOverlapStyle[PdfBorderOverlapStyle[\"Inside\"] = 1] = \"Inside\";\n})(PdfBorderOverlapStyle || (PdfBorderOverlapStyle = {}));\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { PdfBorders, PdfPaddings } from './pdf-borders';\nimport { PdfBorderOverlapStyle } from './../../tables/light-tables/enum';\n/**\n * Base class for the `grid style`,\n */\nvar PdfGridStyleBase = /** @class */ (function () {\n    function PdfGridStyleBase() {\n    }\n    Object.defineProperty(PdfGridStyleBase.prototype, \"backgroundBrush\", {\n        // Properties\n        /**\n         * Gets or sets the `background brush`.\n         * @private\n         */\n        get: function () {\n            return this.gridBackgroundBrush;\n        },\n        set: function (value) {\n            this.gridBackgroundBrush = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridStyleBase.prototype, \"textBrush\", {\n        /**\n         * Gets or sets the `text brush`.\n         * @private\n         */\n        get: function () {\n            return this.gridTextBrush;\n        },\n        set: function (value) {\n            this.gridTextBrush = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridStyleBase.prototype, \"textPen\", {\n        /**\n         * Gets or sets the `text pen`.\n         * @private\n         */\n        get: function () {\n            return this.gridTextPen;\n        },\n        set: function (value) {\n            this.gridTextPen = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridStyleBase.prototype, \"font\", {\n        /**\n         * Gets or sets the `font`.\n         * @private\n         */\n        get: function () {\n            return this.gridFont;\n        },\n        set: function (value) {\n            this.gridFont = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridStyleBase.prototype, \"backgroundImage\", {\n        /**\n         * Gets or sets the `background Image`.\n         * @private\n         */\n        get: function () {\n            return this.gridBackgroundImage;\n        },\n        set: function (value) {\n            this.gridBackgroundImage = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfGridStyleBase;\n}());\nexport { PdfGridStyleBase };\n/**\n * `PdfGridStyle` class provides customization of the appearance for the 'PdfGrid'.\n */\nvar PdfGridStyle = /** @class */ (function (_super) {\n    __extends(PdfGridStyle, _super);\n    //constructor\n    /**\n     * Initialize a new instance for `PdfGridStyle` class.\n     * @private\n     */\n    function PdfGridStyle() {\n        var _this = _super.call(this) || this;\n        _this.gridBorderOverlapStyle = PdfBorderOverlapStyle.Overlap;\n        _this.bAllowHorizontalOverflow = false;\n        _this.gridHorizontalOverflowType = PdfHorizontalOverflowType.LastPage;\n        return _this;\n    }\n    Object.defineProperty(PdfGridStyle.prototype, \"cellSpacing\", {\n        //Properties\n        /**\n         * Gets or sets the `cell spacing` of the 'PdfGrid'.\n         * @private\n         */\n        get: function () {\n            if (typeof this.gridCellSpacing === 'undefined') {\n                this.gridCellSpacing = 0;\n            }\n            return this.gridCellSpacing;\n        },\n        set: function (value) {\n            this.gridCellSpacing = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridStyle.prototype, \"horizontalOverflowType\", {\n        /**\n         * Gets or sets the type of the `horizontal overflow` of the 'PdfGrid'.\n         * @private\n         */\n        get: function () {\n            return this.gridHorizontalOverflowType;\n        },\n        set: function (value) {\n            this.gridHorizontalOverflowType = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridStyle.prototype, \"allowHorizontalOverflow\", {\n        /**\n         * Gets or sets a value indicating whether to `allow horizontal overflow`.\n         * @private\n         */\n        get: function () {\n            return this.bAllowHorizontalOverflow;\n        },\n        set: function (value) {\n            this.bAllowHorizontalOverflow = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridStyle.prototype, \"cellPadding\", {\n        /**\n         * Gets or sets the `cell padding`.\n         * @private\n         */\n        get: function () {\n            if (typeof this.gridCellPadding === 'undefined') {\n                this.gridCellPadding = new PdfPaddings();\n            }\n            return this.gridCellPadding;\n        },\n        set: function (value) {\n            if (typeof this.gridCellPadding === 'undefined') {\n                this.gridCellPadding = new PdfPaddings();\n                this.gridCellPadding = value;\n            }\n            else {\n                this.gridCellPadding = value;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridStyle.prototype, \"borderOverlapStyle\", {\n        /**\n         * Gets or sets the `border overlap style` of the 'PdfGrid'.\n         * @private\n         */\n        get: function () {\n            return this.gridBorderOverlapStyle;\n        },\n        set: function (value) {\n            this.gridBorderOverlapStyle = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfGridStyle;\n}(PdfGridStyleBase));\nexport { PdfGridStyle };\n/**\n * `PdfGridCellStyle` class provides customization of the appearance for the 'PdfGridCell'.\n */\nvar PdfGridCellStyle = /** @class */ (function (_super) {\n    __extends(PdfGridCellStyle, _super);\n    /**\n     * Initializes a new instance of the `PdfGridCellStyle` class.\n     * @private\n     */\n    function PdfGridCellStyle() {\n        var _this = _super.call(this) || this;\n        /**\n         * @hidden\n         * @private\n         */\n        _this.gridCellBorders = PdfBorders.default;\n        return _this;\n    }\n    Object.defineProperty(PdfGridCellStyle.prototype, \"stringFormat\", {\n        //Properties\n        /**\n         * Gets the `string format` of the 'PdfGridCell'.\n         * @private\n         */\n        get: function () {\n            return this.format;\n        },\n        set: function (value) {\n            this.format = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridCellStyle.prototype, \"borders\", {\n        /**\n         * Gets or sets the `border` of the 'PdfGridCell'.\n         * @private\n         */\n        get: function () {\n            return this.gridCellBorders;\n        },\n        set: function (value) {\n            this.gridCellBorders = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridCellStyle.prototype, \"cellPadding\", {\n        /**\n         * Gets or sets the `cell padding`.\n         * @private\n         */\n        get: function () {\n            return this.gridCellPadding;\n        },\n        set: function (value) {\n            if (this.gridCellPadding == null || typeof this.gridCellPadding === 'undefined') {\n                this.gridCellPadding = new PdfPaddings();\n            }\n            this.gridCellPadding = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfGridCellStyle;\n}(PdfGridStyleBase));\nexport { PdfGridCellStyle };\n/**\n * `PdfGridRowStyle` class provides customization of the appearance for the `PdfGridRow`.\n */\nvar PdfGridRowStyle = /** @class */ (function () {\n    // Constructor\n    /**\n     * Initializes a new instance of the `PdfGridRowStyle` class.\n     * @private\n     */\n    function PdfGridRowStyle() {\n        //\n    }\n    Object.defineProperty(PdfGridRowStyle.prototype, \"backgroundBrush\", {\n        // Properties\n        /**\n         * Gets or sets the `background brush`.\n         * @private\n         */\n        get: function () {\n            return this.gridRowBackgroundBrush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfGridRowStyle.prototype.setBackgroundBrush = function (value) {\n        this.gridRowBackgroundBrush = value;\n        if (typeof this.parent !== 'undefined') {\n            for (var i = 0; i < this.parent.cells.count; i++) {\n                this.parent.cells.getCell(i).style.backgroundBrush = value;\n            }\n        }\n    };\n    Object.defineProperty(PdfGridRowStyle.prototype, \"textBrush\", {\n        /**\n         * Gets or sets the `text brush`.\n         * @private\n         */\n        get: function () {\n            return this.gridRowTextBrush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfGridRowStyle.prototype.setTextBrush = function (value) {\n        this.gridRowTextBrush = value;\n        if (typeof this.parent !== 'undefined') {\n            for (var i = 0; i < this.parent.cells.count; i++) {\n                this.parent.cells.getCell(i).style.textBrush = value;\n            }\n        }\n    };\n    Object.defineProperty(PdfGridRowStyle.prototype, \"textPen\", {\n        /**\n         * Gets or sets the `text pen`.\n         * @private\n         */\n        get: function () {\n            return this.gridRowTextPen;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfGridRowStyle.prototype.setTextPen = function (value) {\n        this.gridRowTextPen = value;\n        if (typeof this.parent !== 'undefined') {\n            for (var i = 0; i < this.parent.cells.count; i++) {\n                this.parent.cells.getCell(i).style.textPen = value;\n            }\n        }\n    };\n    Object.defineProperty(PdfGridRowStyle.prototype, \"font\", {\n        /**\n         * Gets or sets the `font`.\n         * @private\n         */\n        get: function () {\n            return this.gridRowFont;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfGridRowStyle.prototype.setFont = function (value) {\n        this.gridRowFont = value;\n        if (typeof this.parent !== 'undefined') {\n            for (var i = 0; i < this.parent.cells.count; i++) {\n                this.parent.cells.getCell(i).style.font = value;\n            }\n        }\n    };\n    Object.defineProperty(PdfGridRowStyle.prototype, \"border\", {\n        /**\n         * Gets or sets the `border` of the current row.\n         * @private\n         */\n        get: function () {\n            if (typeof this.gridRowBorder === 'undefined') {\n                this.setBorder(new PdfBorders());\n            }\n            return this.gridRowBorder;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfGridRowStyle.prototype.setBorder = function (value) {\n        this.gridRowBorder = value;\n        if (typeof this.parent !== 'undefined') {\n            for (var i = 0; i < this.parent.cells.count; i++) {\n                this.parent.cells.getCell(i).style.borders = value;\n            }\n        }\n    };\n    /**\n     * sets the `parent row` of the current object.\n     * @private\n     */\n    PdfGridRowStyle.prototype.setParent = function (parent) {\n        this.parent = parent;\n    };\n    Object.defineProperty(PdfGridRowStyle.prototype, \"backgroundImage\", {\n        /**\n         * Gets or sets the `backgroundImage` of the 'PdfGridCell'.\n         * @private\n         */\n        get: function () {\n            return this.gridRowBackgroundImage;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * sets the `backgroundImage` of the 'PdfGridCell'.\n     * @private\n     */\n    PdfGridRowStyle.prototype.setBackgroundImage = function (value) {\n        this.gridRowBackgroundImage = value;\n    };\n    return PdfGridRowStyle;\n}());\nexport { PdfGridRowStyle };\n/**\n * public Enum for `PdfHorizontalOverflowType`.\n * @private\n */\nexport var PdfHorizontalOverflowType;\n(function (PdfHorizontalOverflowType) {\n    /**\n     * Specifies the type of `NextPage`.\n     * @private\n     */\n    PdfHorizontalOverflowType[PdfHorizontalOverflowType[\"NextPage\"] = 0] = \"NextPage\";\n    /**\n     * Specifies the type of `LastPage`.\n     * @private\n     */\n    PdfHorizontalOverflowType[PdfHorizontalOverflowType[\"LastPage\"] = 1] = \"LastPage\";\n})(PdfHorizontalOverflowType || (PdfHorizontalOverflowType = {}));\n","import { PdfGrid } from './pdf-grid';\nimport { PdfGridCellStyle } from './styles/style';\nimport { PdfStringLayouter } from './../../graphics/fonts/string-layouter';\nimport { PdfDocument } from './../../document/pdf-document';\nimport { PdfStringFormat } from './../../graphics/fonts/pdf-string-format';\nimport { RectangleF, PointF, SizeF } from './../../drawing/pdf-drawing';\nimport { PdfDashStyle, PdfLineCap } from './../../graphics/enum';\nimport { PdfBorderOverlapStyle } from './../tables/light-tables/enum';\nimport { PdfSolidBrush } from './../../graphics/brushes/pdf-solid-brush';\nimport { PdfColor } from './../../graphics/pdf-color';\nimport { PdfImage } from './../../graphics/images/pdf-image';\nimport { PdfBitmap } from './../../graphics/images/pdf-bitmap';\nimport { PdfTextWebLink } from './../../annotations/pdf-text-web-link';\nimport { PdfLayoutType } from './../../graphics/figures/enum';\nimport { PdfGridLayouter, PdfGridLayoutFormat } from './../../structured-elements/grid/layout/grid-layouter';\nimport { PdfLayoutParams } from '../../../implementation/graphics/figures/base/element-layouter';\n/**\n * `PdfGridCell` class represents the schema of a cell in a 'PdfGrid'.\n */\nvar PdfGridCell = /** @class */ (function () {\n    function PdfGridCell(row) {\n        /**\n         * `Width` of the cell.\n         * @default 0\n         * @private\n         */\n        this.cellWidth = 0;\n        /**\n         * `Height` of the cell.\n         * @default 0\n         * @private\n         */\n        this.cellHeight = 0;\n        /**\n         * `tempval`to stores current width .\n         * @default 0\n         * @private\n         */\n        this.tempval = 0;\n        this.fontSpilt = false;\n        /**\n         * Specifies weather the `cell is drawn`.\n         * @default true\n         * @private\n         */\n        this.finsh = true;\n        /**\n         * The `remaining height` of row span.\n         * @default 0\n         * @private\n         */\n        this.rowSpanRemainingHeight = 0;\n        this.hasRowSpan = false;\n        this.hasColSpan = false;\n        /**\n         * the 'isFinish' is set to page finish\n         */\n        this.isFinish = true;\n        /**\n         * The `present' to store the current cell.\n         * @default false\n         * @private\n         */\n        this.present = false;\n        this.gridRowSpan = 1;\n        this.colSpan = 1;\n        if (typeof row !== 'undefined') {\n            this.gridRow = row;\n        }\n    }\n    Object.defineProperty(PdfGridCell.prototype, \"isCellMergeContinue\", {\n        //Properties\n        get: function () {\n            return this.internalIsCellMergeContinue;\n        },\n        set: function (value) {\n            this.internalIsCellMergeContinue = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridCell.prototype, \"isRowMergeContinue\", {\n        get: function () {\n            return this.internalIsRowMergeContinue;\n        },\n        set: function (value) {\n            this.internalIsRowMergeContinue = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridCell.prototype, \"isCellMergeStart\", {\n        get: function () {\n            return this.internalIsCellMergeStart;\n        },\n        set: function (value) {\n            this.internalIsCellMergeStart = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridCell.prototype, \"isRowMergeStart\", {\n        get: function () {\n            return this.internalIsRowMergeStart;\n        },\n        set: function (value) {\n            this.internalIsRowMergeStart = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridCell.prototype, \"remainingString\", {\n        /**\n         * Gets or sets the `remaining string` after the row split between pages.\n         * @private\n         */\n        get: function () {\n            return this.remaining;\n        },\n        set: function (value) {\n            this.remaining = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridCell.prototype, \"FinishedDrawingCell\", {\n        /**\n         * Gets or sets the `FinishedDrawingCell` .\n         * @private\n         */\n        get: function () {\n            return this.isFinish;\n        },\n        set: function (value) {\n            this.isFinish = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridCell.prototype, \"stringFormat\", {\n        /**\n         * Gets or sets the `string format`.\n         * @private\n         */\n        get: function () {\n            if (this.format == null) {\n                this.format = new PdfStringFormat();\n            }\n            return this.format;\n        },\n        set: function (value) {\n            this.format = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridCell.prototype, \"row\", {\n        /**\n         * Gets or sets the parent `row`.\n         * @private\n         */\n        get: function () {\n            return this.gridRow;\n        },\n        set: function (value) {\n            this.gridRow = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridCell.prototype, \"value\", {\n        /**\n         * Gets or sets the `value` of the cell.\n         * @private\n         */\n        get: function () {\n            return this.objectValue;\n        },\n        set: function (value) {\n            this.objectValue = value;\n            if (this.objectValue instanceof PdfGrid) {\n                this.row.grid.isSingleGrid = false;\n                var grid = this.objectValue;\n                grid.ParentCell = this;\n                this.objectValue.isChildGrid = true;\n                var rowCount = this.row.grid.rows.count;\n                for (var i = 0; i < rowCount; i++) {\n                    var row = this.row.grid.rows.getRow(i);\n                    var colCount = row.cells.count;\n                    for (var j = 0; j < colCount; j++) {\n                        var cell = row.cells.getCell(j);\n                        cell.parent = this;\n                    }\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridCell.prototype, \"rowSpan\", {\n        /**\n         * Gets or sets a value that indicates the total number of rows that cell `spans` within a PdfGrid.\n         * @private\n         */\n        get: function () {\n            return this.gridRowSpan;\n        },\n        set: function (value) {\n            if (value < 1) {\n                throw new Error('ArgumentException : Invalid span specified, must be greater than or equal to 1');\n            }\n            else {\n                this.gridRowSpan = value;\n                this.row.rowSpanExists = true;\n                this.row.grid.hasRowSpanSpan = true;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridCell.prototype, \"style\", {\n        /**\n         * Gets or sets the cell `style`.\n         * @private\n         */\n        get: function () {\n            if (this.cellStyle == null) {\n                this.cellStyle = new PdfGridCellStyle();\n            }\n            return this.cellStyle;\n        },\n        set: function (value) {\n            this.cellStyle = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridCell.prototype, \"height\", {\n        /**\n         * Gets the `height` of the PdfGrid cell.[Read-Only].\n         * @private\n         */\n        get: function () {\n            if (this.cellHeight === 0) {\n                this.cellHeight = this.measureHeight();\n            }\n            return this.cellHeight;\n        },\n        set: function (value) {\n            this.cellHeight = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridCell.prototype, \"columnSpan\", {\n        /**\n         * Gets or sets a value that indicates the total number of columns that cell `spans` within a PdfGrid.\n         * @private\n         */\n        get: function () {\n            return this.colSpan;\n        },\n        set: function (value) {\n            if (value < 1) {\n                throw Error('Invalid span specified, must be greater than or equal to 1');\n            }\n            else {\n                this.colSpan = value;\n                this.row.columnSpanExists = true;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridCell.prototype, \"width\", {\n        /**\n         * Gets the `width` of the PdfGrid cell.[Read-Only].\n         * @private\n         */\n        get: function () {\n            if (this.cellWidth === 0 || this.row.grid.isComplete) {\n                this.cellWidth = this.measureWidth();\n            }\n            return Math.round(this.cellWidth);\n        },\n        set: function (value) {\n            this.cellWidth = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    //Implementation\n    /**\n     * `Calculates the width`.\n     * @private\n     */\n    PdfGridCell.prototype.measureWidth = function () {\n        // .. Calculate the cell text width.\n        // .....Add border widths, cell spacings and paddings to the width.\n        var width = 0;\n        var layouter = new PdfStringLayouter();\n        if (typeof this.objectValue === 'string') {\n            /* tslint:disable */\n            var slr = layouter.layout(this.objectValue, this.getTextFont(), this.stringFormat, new SizeF(Number.MAX_VALUE, Number.MAX_VALUE), false, new SizeF(0, 0));\n            width += slr.actualSize.width;\n            width += (this.style.borders.left.width + this.style.borders.right.width) * 2;\n        }\n        else if (this.objectValue instanceof PdfGrid) {\n            width = this.objectValue.size.width;\n            //width += this.objectValue.style.cellSpacing;\n        }\n        else if (this.objectValue instanceof PdfImage || this.objectValue instanceof PdfBitmap) {\n            width += this.objectValue.width;\n        }\n        else if (this.objectValue instanceof PdfTextWebLink) {\n            var webLink = this.objectValue;\n            var result = layouter.layout(webLink.text, webLink.font, webLink.stringFormat, new SizeF(0, 0), false, new SizeF(0, 0));\n            /* tslint:enable */\n            width += result.actualSize.width;\n            width += (this.style.borders.left.width + this.style.borders.right.width) * 2;\n        }\n        if (!(this.objectValue instanceof PdfGrid)) {\n            if (this.style.cellPadding != null) {\n                width += (this.style.cellPadding.left + this.style.cellPadding.right);\n            }\n            else {\n                width += (this.row.grid.style.cellPadding.left + this.row.grid.style.cellPadding.right);\n            }\n        }\n        else {\n            if (this.style.cellPadding != null || typeof this.style.cellPadding !== 'undefined') {\n                if (typeof this.style.cellPadding.left !== 'undefined' && this.style.cellPadding.hasLeftPad) {\n                    width += this.style.cellPadding.left;\n                }\n                if (typeof this.style.cellPadding.right !== 'undefined' && this.style.cellPadding.hasRightPad) {\n                    width += this.style.cellPadding.right;\n                }\n            }\n            else {\n                if (typeof this.row.grid.style.cellPadding.left !== 'undefined' && this.row.grid.style.cellPadding.hasLeftPad) {\n                    width += this.row.grid.style.cellPadding.left;\n                }\n                if (typeof this.row.grid.style.cellPadding.right !== 'undefined' && this.row.grid.style.cellPadding.hasRightPad) {\n                    width += this.row.grid.style.cellPadding.right;\n                }\n            }\n        }\n        width += this.row.grid.style.cellSpacing;\n        return width;\n    };\n    /**\n     * Draw the `cell background`.\n     * @private\n     */\n    PdfGridCell.prototype.drawCellBackground = function (graphics, bounds) {\n        var backgroundBrush = this.getBackgroundBrush();\n        //graphics.isTemplateGraphics = true;\n        if (backgroundBrush != null) {\n            graphics.save();\n            graphics.drawRectangle(backgroundBrush, bounds.x, bounds.y, bounds.width, bounds.height);\n            graphics.restore();\n        }\n        if (this.style.backgroundImage != null) {\n            var image = this.getBackgroundImage();\n            graphics.drawImage(this.style.backgroundImage, bounds.x, bounds.y, bounds.width, bounds.height);\n        }\n    };\n    /**\n     * `Adjusts the text layout area`.\n     * @private\n     */\n    /* tslint:disable */\n    PdfGridCell.prototype.adjustContentLayoutArea = function (bounds) {\n        //Add Padding value to its Cell Bounds\n        var returnBounds = new RectangleF(bounds.x, bounds.y, bounds.width, bounds.height);\n        if (!(this.objectValue instanceof PdfGrid)) {\n            if (typeof this.style.cellPadding === 'undefined' || this.style.cellPadding == null) {\n                returnBounds.x += this.gridRow.grid.style.cellPadding.left + this.cellStyle.borders.left.width;\n                returnBounds.y += this.gridRow.grid.style.cellPadding.top + this.cellStyle.borders.top.width;\n                returnBounds.width -= (this.gridRow.grid.style.cellPadding.right + this.gridRow.grid.style.cellPadding.left);\n                returnBounds.height -= (this.gridRow.grid.style.cellPadding.bottom + this.gridRow.grid.style.cellPadding.top);\n                returnBounds.height -= (this.cellStyle.borders.top.width + this.cellStyle.borders.bottom.width);\n            }\n            else {\n                returnBounds.x += this.style.cellPadding.left + this.cellStyle.borders.left.width;\n                returnBounds.y += this.style.cellPadding.top + this.cellStyle.borders.top.width;\n                returnBounds.width -= (this.style.cellPadding.right + this.style.cellPadding.left);\n                returnBounds.width -= (this.cellStyle.borders.left.width + this.cellStyle.borders.right.width);\n                returnBounds.height -= (this.style.cellPadding.bottom + this.style.cellPadding.top);\n                returnBounds.height -= (this.cellStyle.borders.top.width + this.cellStyle.borders.bottom.width);\n                if (this.rowSpan === 1) {\n                    returnBounds.width -= (this.style.borders.left.width);\n                }\n            }\n        }\n        else {\n            if (this.style.cellPadding == null || typeof this.style.cellPadding === 'undefined') {\n                if (typeof this.gridRow.grid.style.cellPadding.left !== 'undefined' && this.gridRow.grid.style.cellPadding.hasLeftPad) {\n                    returnBounds.x += this.gridRow.grid.style.cellPadding.left + this.cellStyle.borders.left.width;\n                    returnBounds.width -= this.gridRow.grid.style.cellPadding.left;\n                }\n                if (typeof this.gridRow.grid.style.cellPadding.top !== 'undefined' && this.gridRow.grid.style.cellPadding.hasTopPad) {\n                    returnBounds.y += this.gridRow.grid.style.cellPadding.top + this.cellStyle.borders.top.width;\n                    returnBounds.height -= this.gridRow.grid.style.cellPadding.top;\n                }\n                if (typeof this.gridRow.grid.style.cellPadding.right !== 'undefined' && this.gridRow.grid.style.cellPadding.hasRightPad) {\n                    returnBounds.width -= this.gridRow.grid.style.cellPadding.right;\n                }\n                if (typeof this.gridRow.grid.style.cellPadding.bottom !== 'undefined' && this.gridRow.grid.style.cellPadding.hasBottomPad) {\n                    returnBounds.height -= this.gridRow.grid.style.cellPadding.bottom;\n                }\n            }\n            else {\n                if (typeof this.style.cellPadding.left !== 'undefined' && this.style.cellPadding.hasLeftPad) {\n                    returnBounds.x += this.style.cellPadding.left + this.cellStyle.borders.left.width;\n                    returnBounds.width -= this.style.cellPadding.left;\n                }\n                if (typeof this.style.cellPadding.top !== 'undefined' && this.style.cellPadding.hasTopPad) {\n                    returnBounds.y += this.style.cellPadding.top + this.cellStyle.borders.top.width;\n                    returnBounds.height -= this.style.cellPadding.top;\n                }\n                if (typeof this.style.cellPadding.right !== 'undefined' && this.style.cellPadding.hasRightPad) {\n                    returnBounds.width -= this.style.cellPadding.right;\n                }\n                if (typeof this.style.cellPadding.bottom !== 'undefined' && this.style.cellPadding.hasBottomPad) {\n                    returnBounds.height -= this.style.cellPadding.bottom;\n                }\n            }\n            returnBounds.width -= (this.cellStyle.borders.left.width + this.cellStyle.borders.right.width);\n            returnBounds.height -= (this.cellStyle.borders.top.width + this.cellStyle.borders.bottom.width);\n        }\n        return returnBounds;\n    };\n    /**\n     * `Draws` the specified graphics.\n     * @private\n     */\n    PdfGridCell.prototype.draw = function (graphics, bounds, cancelSubsequentSpans) {\n        var isrowbreak = false;\n        /*if (!this.row.grid.isSingleGrid)\n        {\n            //Check whether the Grid Span to Nextpage\n            if ((this.remainingString != null) || (PdfGridLayouter.repeatRowIndex != -1))\n            {\n                this.DrawParentCells(graphics, bounds, true);\n            }\n            else if (this.row.grid.rows.count > 1)\n            {\n                for (let i : number  = 0; i < this.row.grid.rows.count; i++)\n                {\n                    if (this.row == this.row.grid.rows.getRow(i))\n                    {\n                        if (this.row.grid.rows.getRow(i).rowBreakHeight > 0)\n                            isrowbreak = true;\n                        if ((i > 0) && (isrowbreak))\n                            this.DrawParentCells(graphics, bounds, false);\n                    }\n                }\n            }\n        } */\n        var result = null;\n        /*if (cancelSubsequentSpans)\n        {\n            //..Cancel all subsequent cell spans, if no space exists.\n            let currentCellIndex : number = this.row.cells.indexOf(this);\n            for (let i : number = currentCellIndex + 1; i <= currentCellIndex + this.colSpan; i++)\n            {\n                this.row.cells.getCell(i).isCellMergeContinue = false;\n                this.row.cells.getCell(i).isRowMergeContinue = false;\n            }\n            this.colSpan = 1;\n        }*/\n        //..Skip cells which were already covered by spanmap.\n        if (this.internalIsCellMergeContinue || this.internalIsRowMergeContinue) {\n            if (this.internalIsCellMergeContinue && this.row.grid.style.allowHorizontalOverflow) {\n                if ((this.row.rowOverflowIndex > 0 && (this.row.cells.indexOf(this) != this.row.rowOverflowIndex + 1)) || (this.row.rowOverflowIndex == 0 && this.internalIsCellMergeContinue)) {\n                    return result;\n                }\n            }\n            else {\n                return result;\n            }\n        }\n        //Adjust bounds with Row and Column Spacing\n        bounds = this.adjustOuterLayoutArea(bounds, graphics);\n        this.drawCellBackground(graphics, bounds);\n        var textPen = this.getTextPen();\n        var textBrush = this.getTextBrush();\n        if (typeof textPen === 'undefined' && typeof textBrush === 'undefined') {\n            textBrush = new PdfSolidBrush(new PdfColor(0, 0, 0));\n        }\n        var font = this.getTextFont();\n        var strFormat = this.getStringFormat();\n        var innerLayoutArea = bounds;\n        if (innerLayoutArea.height >= graphics.clientSize.height) {\n            // If to break row to next page.\n            if (this.row.grid.allowRowBreakAcrossPages) {\n                innerLayoutArea.height -= innerLayoutArea.y;\n                if (typeof this._rowHeight !== 'undefined' && this._rowHeight !== null && innerLayoutArea.height > this._rowHeight) {\n                    innerLayoutArea.height = this._rowHeight;\n                }\n                //bounds.height -= bounds.y;\n                // if(this.row.grid.isChildGrid)\n                // {\n                //     innerLayoutArea.height -= this.row.grid.ParentCell.row.grid.style.cellPadding.bottom;\n                // }\n            }\n            // if user choose to cut the row whose height is more than page height.\n            // else\n            // {\n            //     innerLayoutArea.height = graphics.clientSize.height;\n            //     bounds.height = graphics.clientSize.height;\n            // }\n        }\n        innerLayoutArea = this.adjustContentLayoutArea(innerLayoutArea);\n        if (typeof this.objectValue === 'string' || typeof this.remaining === 'string') {\n            var temp = void 0;\n            var layoutRectangle = void 0;\n            if (innerLayoutArea.height < font.height)\n                layoutRectangle = new RectangleF(innerLayoutArea.x, innerLayoutArea.y, innerLayoutArea.width, font.height);\n            else\n                layoutRectangle = innerLayoutArea;\n            if (innerLayoutArea.height < font.height && this.row.grid.isChildGrid && this.row.grid.ParentCell != null) {\n                var height = layoutRectangle.height - this.row.grid.ParentCell.row.grid.style.cellPadding.bottom - this.row.grid.style.cellPadding.bottom;\n                if (this.row.grid.splitChildRowIndex != -1) {\n                    this.fontSpilt = true;\n                    this.row.rowFontSplit = true;\n                }\n                if (height > 0 && height < font.height)\n                    layoutRectangle.height = height;\n                // else if (height + this.row.grid.style.cellPadding.bottom > 0 && height + this.row.grid.style.cellPadding.bottom < font.height)\n                //     layoutRectangle.height = height + this.row.grid.style.cellPadding.bottom;\n                // else if (bounds.height < font.height)\n                //     layoutRectangle.height = bounds.height;\n                // else if (bounds.height - this.row.grid.ParentCell.row.grid.style.cellPadding.bottom < font.height)\n                //     layoutRectangle.height = bounds.height - this.row.grid.ParentCell.row.grid.style.cellPadding.bottom;                        \n            }\n            if (this.gridRow.grid.style.cellSpacing != 0) {\n                layoutRectangle.width -= this.gridRow.grid.style.cellSpacing;\n                bounds.width -= this.gridRow.grid.style.cellSpacing;\n            }\n            if (this.isFinish) {\n                // if (this.row.grid.splitChildRowIndex != -1 && !this.row.grid.isChildGrid && typeof this.remaining === 'undefined'){\n                //     this.remaining = '';\n                //     graphics.drawString(this.remaining, font, textPen, textBrush, layoutRectangle.x, layoutRectangle.y, layoutRectangle.width, layoutRectangle.height, strFormat);\n                // } else {\n                temp = this.remaining === '' ? this.remaining : this.objectValue;\n                graphics.drawString(temp, font, textPen, textBrush, layoutRectangle.x, layoutRectangle.y, layoutRectangle.width, layoutRectangle.height, strFormat);\n                if (this.row.grid.splitChildRowIndex != -1 && !this.row.grid.isChildGrid && typeof this.remaining === 'undefined') {\n                    this.remaining = '';\n                    //graphics.drawString(this.remaining, font, textPen, textBrush, layoutRectangle.x, layoutRectangle.y, layoutRectangle.width, layoutRectangle.height, strFormat);\n                }\n            }\n            else {\n                if (typeof this.remaining == 'undefined' || this.remaining === null) {\n                    this.remaining = '';\n                }\n                if (this.row.repeatFlag) {\n                    graphics.drawString(this.remaining, font, textPen, textBrush, layoutRectangle.x, layoutRectangle.y, layoutRectangle.width, layoutRectangle.height, strFormat);\n                }\n                //  else {\n                //     if(this.row.grid.ParentCell.row.repeatFlag) {\n                //         graphics.drawString((this.remaining as string), font, textPen, textBrush, layoutRectangle.x, layoutRectangle.y, layoutRectangle.width, layoutRectangle.height, strFormat);                    \n                //     } else {\n                //         layoutRectangle.height = this.row.height;\n                //         graphics.drawString((this.objectValue as string), font, textPen, textBrush, layoutRectangle.x, layoutRectangle.y, layoutRectangle.width, layoutRectangle.height, strFormat);\n                //         bounds.height = this.row.height;\n                //     }\n                //  }\n                this.isFinish = true;\n                //graphics.drawString((this.remaining as string), font, textPen, textBrush, layoutRectangle.x, layoutRectangle.y, layoutRectangle.width, layoutRectangle.height, strFormat);\n            }\n            result = graphics.stringLayoutResult;\n            // if(this.row.grid.isChildGrid && this.row.rowBreakHeight > 0 && result !=null) {\n            //     bounds.height -= this.row.grid.ParentCell.row.grid.style.cellPadding.bottom;\n            // }\n        }\n        else if (this.objectValue instanceof PdfGrid) {\n            var childGrid = this.objectValue;\n            childGrid.isChildGrid = true;\n            childGrid.ParentCell = this;\n            var layoutRect = void 0;\n            layoutRect = innerLayoutArea;\n            if (this.gridRow.grid.style.cellSpacing != 0) {\n                bounds.width -= this.gridRow.grid.style.cellSpacing;\n            }\n            // layoutRect = bounds;\n            // if (this.style.cellPadding != null){\n            //     layoutRect = bounds;            \n            // } else if((this.row.grid.style.cellPadding != null) && (childGrid.style.cellPadding.bottom === 0.5) && (childGrid.style.cellPadding.top === 0.5)\n            //                               && (childGrid.style.cellPadding.left === 5.76) && (childGrid.style.cellPadding.right === 5.76)\n            //                               && (this.gridRow.grid.style.cellSpacing === 0) && (childGrid.style.cellSpacing === 0)) {\n            //     layoutRect = innerLayoutArea;\n            // }\n            // if(this.objectValue.style.cellPadding != null && typeof this.objectValue.style.cellPadding !== 'undefined'){\n            //     layoutRect = bounds;\n            // }           \n            var layouter = new PdfGridLayouter(childGrid);\n            var format = new PdfGridLayoutFormat();\n            if (this.row.grid.LayoutFormat != null)\n                format = this.row.grid.LayoutFormat;\n            else\n                format.layout = PdfLayoutType.Paginate;\n            var param = new PdfLayoutParams();\n            if (graphics.layer != null) {\n                // Define layout parameters.\n                param.page = graphics.page;\n                param.bounds = layoutRect;\n                param.format = format;\n                //Set the span \n                childGrid.setSpan();\n                childGrid.checkSpan();\n                // Draw the child grid.\n                var childGridResult = layouter.Layouter(param);\n                //let childGridResult : PdfLayoutResult = layouter.innerLayout(param);\n                this.value = childGrid;\n                if (this.row.grid.splitChildRowIndex !== -1) {\n                    this.height = this.row.rowBreakHeightValue;\n                }\n                if (param.page != childGridResult.page) //&& (isWidthGreaterthanParent != true))\n                 {\n                    if (this.row.rowBreakHeightValue !== null && typeof this.row.rowBreakHeightValue !== 'undefined')\n                        childGridResult.bounds.height = this.row.rowBreakHeightValue;\n                    if (this.row.rowBreakHeight == 0)\n                        this.row.NestedGridLayoutResult = childGridResult;\n                    else\n                        this.row.rowBreakHeight = this.row.rowBreakHeightValue;\n                    //bounds.height = this.row.rowBreakHeight;\n                    //After drawing paginated nested grid, the bounds of the parent grid in start page should be corrected for borders.\n                    //bounds.height = graphics.clientSize.height - bounds.y;\n                }\n            }\n        }\n        else if (this.objectValue instanceof PdfImage || this.objectValue instanceof PdfBitmap) {\n            var imageBounds = void 0;\n            if (this.objectValue.width <= innerLayoutArea.width) {\n                imageBounds = new RectangleF(innerLayoutArea.x, innerLayoutArea.y, this.objectValue.width, innerLayoutArea.height);\n            }\n            else {\n                imageBounds = innerLayoutArea;\n            }\n            graphics.drawImage(this.objectValue, imageBounds.x, imageBounds.y, imageBounds.width, imageBounds.height);\n        }\n        else if (this.objectValue instanceof PdfTextWebLink) {\n            this.objectValue.draw(graphics.currentPage, innerLayoutArea);\n        }\n        else if (typeof this.objectValue === 'undefined') {\n            this.objectValue = \"\";\n            graphics.drawString(this.objectValue, font, textPen, textBrush, innerLayoutArea.x, innerLayoutArea.y, innerLayoutArea.width, innerLayoutArea.height, strFormat);\n            if (this.style.cellPadding != null && this.style.cellPadding.bottom == 0 && this.style.cellPadding.left == 0 && this.style.cellPadding.right == 0 && this.style.cellPadding.top == 0) {\n                bounds.width -= (this.style.borders.left.width + this.style.borders.right.width);\n            }\n            if (this.gridRow.grid.style.cellSpacing != 0) {\n                bounds.width -= this.gridRow.grid.style.cellSpacing;\n            }\n        }\n        if (this.style.borders != null) {\n            if (!this.fontSpilt)\n                this.drawCellBorders(graphics, bounds);\n            else {\n                if (this.row.grid.ParentCell.row.grid.splitChildRowIndex != -1) {\n                    this.row.rowFontSplit = false;\n                    this.drawCellBorders(graphics, bounds);\n                }\n            }\n        }\n        return result;\n    };\n    /* tslint:enable */\n    /**\n     * Draws the `cell border` constructed by drawing lines.\n     * @private\n     */\n    PdfGridCell.prototype.drawCellBorders = function (graphics, bounds) {\n        if (this.row.grid.style.borderOverlapStyle === PdfBorderOverlapStyle.Inside) {\n            bounds.x += this.style.borders.left.width;\n            bounds.y += this.style.borders.top.width;\n            bounds.width -= this.style.borders.right.width;\n            bounds.height -= this.style.borders.bottom.width;\n        }\n        var p1 = new PointF(bounds.x, bounds.y + bounds.height);\n        var p2 = new PointF(bounds.x, bounds.y);\n        var pen = this.cellStyle.borders.left;\n        if (this.cellStyle.borders.left.dashStyle === PdfDashStyle.Solid) {\n            pen.lineCap = PdfLineCap.Square;\n        }\n        // SetTransparency(ref graphics, pen);\n        if (pen.width !== 0) {\n            graphics.drawLine(pen, p1, p2);\n        }\n        p1 = new PointF(bounds.x + bounds.width, bounds.y);\n        p2 = new PointF(bounds.x + bounds.width, bounds.y + bounds.height);\n        pen = this.cellStyle.borders.right;\n        if ((bounds.x + bounds.width) > (graphics.clientSize.width - (pen.width / 2))) {\n            p1 = new PointF(graphics.clientSize.width - (pen.width / 2), bounds.y);\n            p2 = new PointF(graphics.clientSize.width - (pen.width / 2), bounds.y + bounds.height);\n        }\n        if (this.cellStyle.borders.right.dashStyle === PdfDashStyle.Solid) {\n            pen.lineCap = PdfLineCap.Square;\n        }\n        if (pen.width !== 0) {\n            graphics.drawLine(pen, p1, p2);\n        }\n        p1 = new PointF(bounds.x, bounds.y);\n        p2 = new PointF(bounds.x + bounds.width, bounds.y);\n        pen = this.cellStyle.borders.top;\n        if (this.cellStyle.borders.top.dashStyle === PdfDashStyle.Solid) {\n            pen.lineCap = PdfLineCap.Square;\n        }\n        if (pen.width !== 0) {\n            graphics.drawLine(pen, p1, p2);\n        }\n        p1 = new PointF(bounds.x + bounds.width, bounds.y + bounds.height);\n        p2 = new PointF(bounds.x, bounds.y + bounds.height);\n        pen = this.cellStyle.borders.bottom;\n        if ((bounds.y + bounds.height) > (graphics.clientSize.height - (pen.width / 2))) {\n            p1 = new PointF((bounds.x + bounds.width), (graphics.clientSize.height - (pen.width / 2)));\n            p2 = new PointF(bounds.x, (graphics.clientSize.height - (pen.width / 2)));\n        }\n        if (this.cellStyle.borders.bottom.dashStyle === PdfDashStyle.Solid) {\n            pen.lineCap = PdfLineCap.Square;\n        }\n        if (pen.width !== 0) {\n            graphics.drawLine(pen, p1, p2);\n        }\n    };\n    // private setTransparency(graphics : PdfGraphics, pen : PdfPen) : void {\n    //     let alpha : number = (pen.color.a / 255) as number;\n    //     graphics.save();\n    //     graphics.setTransparency(alpha);\n    // }\n    /**\n     * `Adjusts the outer layout area`.\n     * @private\n     */\n    /* tslint:disable */\n    PdfGridCell.prototype.adjustOuterLayoutArea = function (bounds, g) {\n        var isHeader = false;\n        var cellSpacing = this.row.grid.style.cellSpacing;\n        if (cellSpacing > 0) {\n            bounds = new RectangleF(bounds.x + cellSpacing, bounds.y + cellSpacing, bounds.width - cellSpacing, bounds.height - cellSpacing);\n        }\n        var currentColIndex = this.row.cells.indexOf(this);\n        if (this.columnSpan > 1 || (this.row.rowOverflowIndex > 0 && (currentColIndex == this.row.rowOverflowIndex + 1) && this.isCellMergeContinue)) {\n            var span = this.columnSpan;\n            if (span == 1 && this.isCellMergeContinue) {\n                for (var j = currentColIndex + 1; j < this.row.grid.columns.count; j++) {\n                    if (this.row.cells.getCell(j).isCellMergeContinue)\n                        span++;\n                    else\n                        break;\n                }\n            }\n            var totalWidth = 0;\n            for (var i = currentColIndex; i < currentColIndex + span; i++) {\n                if (this.row.grid.style.allowHorizontalOverflow) {\n                    var width = void 0;\n                    var compWidth = this.row.grid.size.width < g.clientSize.width ? this.row.grid.size.width : g.clientSize.width;\n                    if (this.row.grid.size.width > g.clientSize.width) {\n                        width = bounds.x + totalWidth + this.row.grid.columns.getColumn(i).width;\n                    }\n                    else {\n                        width = totalWidth + this.row.grid.columns.getColumn(i).width;\n                    }\n                    if (width > compWidth) {\n                        break;\n                    }\n                }\n                totalWidth += this.row.grid.columns.getColumn(i).width;\n            }\n            totalWidth -= this.row.grid.style.cellSpacing;\n            bounds.width = totalWidth;\n        }\n        if (this.rowSpan > 1 || this.row.rowSpanExists) {\n            var span = this.rowSpan;\n            var currentRowIndex = this.row.grid.rows.rowCollection.indexOf(this.row);\n            if (currentRowIndex == -1) {\n                currentRowIndex = this.row.grid.headers.indexOf(this.row);\n                if (currentRowIndex != -1) {\n                    isHeader = true;\n                }\n            }\n            // if (span == 1 && this.isCellMergeContinue) {\n            //         for (let j : number = currentRowIndex + 1; j < this.row.grid.rows.count; j++)\n            //         {\n            //             let flag : boolean = (isHeader ? this.row.grid.headers.getHeader(j).cells.getCell(currentColIndex).isCellMergeContinue : this.row.grid.rows.getRow(j).cells.getCell(currentColIndex).isCellMergeContinue);\n            //             if (flag)\n            //                 span++;\n            //             else\n            //                 break;\n            //         }\n            // }\n            var totalHeight = 0;\n            var max = 0;\n            for (var i = currentRowIndex; i < currentRowIndex + span; i++) {\n                totalHeight += (isHeader ? this.row.grid.headers.getHeader(i).height : this.row.grid.rows.getRow(i).height);\n                var row = this.row.grid.rows.getRow(i);\n                var rowIndex = this.row.grid.rows.rowCollection.indexOf(row);\n                /*if (this.rowSpan > 1)\n                    {\n                        for (let k : number = 0; k < this.row.cells.count; k++) {\n                            let cell : PdfGridCell = this.row.cells.getCell(k);\n                            if(cell.rowSpan>1)\n                            {\n                                let tempHeight : number =0;\n                                \n                                for (let j :number = i; j < i +cell.rowSpan; j++)\n                                {\n                                    if (!this.row.grid.rows.getRow(j).isRowSpanRowHeightSet)\n                                        this.row.grid.rows.getRow(j).isRowHeightSet = false;\n                                    tempHeight += this.row.grid.rows.getRow(j).height;\n                                    if (!this.row.grid.rows.getRow(j).isRowSpanRowHeightSet)\n                                        this.row.grid.rows.getRow(j).isRowHeightSet = true;\n                                }\n                                //To check the Row spanned cell height is greater than the total spanned row height.\n                                if(cell.height>tempHeight)\n                                {\n                                    if (max < (cell.height - tempHeight))\n                                    {\n                                        max = cell.height - tempHeight;\n                                        if (this.rowSpanRemainingHeight != 0 && max > this.rowSpanRemainingHeight)\n                                        {\n                                            max += this.rowSpanRemainingHeight;\n                                        }\n                                        let index :number = row.cells.indexOf(cell);\n                                        //set the m_rowspanRemainingHeight to last rowspanned row.\n                                        this.row.grid.rows.getRow((rowIndex +cell.rowSpan) - 1).cells.getCell(index).rowSpanRemainingHeight = max;\n                                        this.rowSpanRemainingHeight = this.row.grid.rows.getRow((rowIndex + cell.rowSpan) - 1).cells.getCell(index).rowSpanRemainingHeight;\n                                    }\n                                }\n                            }\n                        }\n                    }\n                    if (!this.row.grid.rows.getRow(i).isRowSpanRowHeightSet)\n                    this.row.grid.rows.getRow(i).isRowHeightSet = true;*/\n            }\n            var cellIndex = this.row.cells.indexOf(this);\n            totalHeight -= this.row.grid.style.cellSpacing;\n            // if (this.row.cells.getCell(cellIndex).height > totalHeight && (!this.row.grid.rows.getRow((currentRowIndex + span) - 1).isRowHeightSet)) {\n            //      this.row.grid.rows.getRow((currentRowIndex + span) - 1).cells.getCell(cellIndex).rowSpanRemainingHeight = this.row.cells.getCell(cellIndex).height - totalHeight;\n            //      totalHeight = this.row.cells.getCell(cellIndex).height;\n            //      bounds.height = totalHeight;\n            // } else {\n            bounds.height = totalHeight;\n            //  }\n            if (!this.row.rowMergeComplete) {\n                bounds.height = totalHeight;\n            }\n        }\n        return bounds;\n    };\n    /* tslint:enable */\n    /**\n     * Gets the `text font`.\n     * @private\n     */\n    PdfGridCell.prototype.getTextFont = function () {\n        if (typeof this.style.font !== 'undefined' && this.style.font != null) {\n            return this.style.font;\n        }\n        else if (typeof this.row.style.font !== 'undefined' && this.row.style.font != null) {\n            return this.row.style.font;\n        }\n        else if (typeof this.row.grid.style.font !== 'undefined' && this.row.grid.style.font != null) {\n            return this.row.grid.style.font;\n        }\n        else {\n            return PdfDocument.defaultFont;\n        }\n    };\n    /**\n     * Gets the `text brush`.\n     * @private\n     */\n    PdfGridCell.prototype.getTextBrush = function () {\n        if (typeof this.style.textBrush !== 'undefined' && this.style.textBrush != null) {\n            return this.style.textBrush;\n        }\n        else if (typeof this.row.style.textBrush !== 'undefined' && this.row.style.textBrush != null) {\n            return this.row.style.textBrush;\n        }\n        else {\n            return this.row.grid.style.textBrush;\n        }\n    };\n    /**\n     * Gets the `text pen`.\n     * @private\n     */\n    PdfGridCell.prototype.getTextPen = function () {\n        if (typeof this.style.textPen !== 'undefined' && this.style.textPen != null) {\n            return this.style.textPen;\n        }\n        else if (typeof this.row.style.textPen !== 'undefined' && this.row.style.textPen != null) {\n            return this.row.style.textPen;\n        }\n        else {\n            return this.row.grid.style.textPen;\n        }\n    };\n    /**\n     * Gets the `background brush`.\n     * @private\n     */\n    PdfGridCell.prototype.getBackgroundBrush = function () {\n        if (typeof this.style.backgroundBrush !== 'undefined' && this.style.backgroundBrush != null) {\n            return this.style.backgroundBrush;\n        }\n        else if (typeof this.row.style.backgroundBrush !== 'undefined' && this.row.style.backgroundBrush != null) {\n            return this.row.style.backgroundBrush;\n        }\n        else {\n            return this.row.grid.style.backgroundBrush;\n        }\n    };\n    /**\n     * Gets the `background image`.\n     * @private\n     */\n    PdfGridCell.prototype.getBackgroundImage = function () {\n        if (typeof this.style.backgroundImage !== 'undefined' && this.style.backgroundImage != null) {\n            return this.style.backgroundImage;\n        }\n        else if (typeof this.row.style.backgroundImage !== 'undefined' && this.row.style.backgroundImage != null) {\n            return this.row.style.backgroundImage;\n        }\n        else {\n            return this.row.grid.style.backgroundImage;\n        }\n    };\n    /**\n     * Gets the current `StringFormat`.\n     * @private\n     */\n    PdfGridCell.prototype.getStringFormat = function () {\n        if (typeof this.style.stringFormat !== 'undefined' && this.style.stringFormat != null) {\n            return this.style.stringFormat;\n        }\n        else {\n            return this.stringFormat;\n        }\n    };\n    /**\n     * Calculates the `height`.\n     * @private\n     */\n    PdfGridCell.prototype.measureHeight = function () {\n        // .. Calculate the cell text height.\n        // .....Add border widths, cell spacings and paddings to the height.\n        var width = this.calculateWidth();\n        // //check whether the Current PdfGridCell has padding\n        if (this.style.cellPadding == null || typeof this.style.cellPadding === 'undefined') {\n            width -= (this.gridRow.grid.style.cellPadding.right + this.gridRow.grid.style.cellPadding.left);\n            //width -= (this.style.borders.left.width + this.style.borders.right.width);\n        }\n        else {\n            width -= (this.style.cellPadding.right + this.style.cellPadding.left);\n            width -= (this.style.borders.left.width + this.style.borders.right.width);\n        }\n        var height = 0;\n        var layouter = new PdfStringLayouter();\n        if (typeof this.objectValue === 'string' || typeof this.remaining === 'string') {\n            var currentValue = this.objectValue;\n            /* tslint:disable */\n            if (!this.isFinish)\n                currentValue = !(this.remaining === null || this.remaining === '' ||\n                    typeof this.remaining === 'undefined') ? this.remaining : this.objectValue;\n            var slr = null;\n            var cellIndex = this.row.cells.indexOf(this);\n            if (this.gridRow.grid.style.cellSpacing != 0) {\n                width -= this.gridRow.grid.style.cellSpacing * 2;\n            }\n            if (!this.row.cells.getCell(cellIndex).hasColSpan && !this.row.cells.getCell(cellIndex).hasRowSpan) {\n                if (this.gridRow.grid.isChildGrid) {\n                    if (width < 0) {\n                        this.tempval = width;\n                        if (this.style.cellPadding == null || typeof this.style.cellPadding === 'undefined') {\n                            this.tempval += (this.gridRow.grid.style.cellPadding.right + this.gridRow.grid.style.cellPadding.left);\n                        }\n                        else {\n                            this.tempval += (this.style.cellPadding.right + this.style.cellPadding.left);\n                            this.tempval += (this.style.borders.left.width + this.style.borders.right.width);\n                        }\n                    }\n                    else {\n                        this.tempval = width;\n                    }\n                    slr = layouter.layout(currentValue, this.getTextFont(), this.stringFormat, new SizeF(this.tempval, 0), false, new SizeF(0, 0));\n                    height += slr.actualSize.height;\n                }\n                else {\n                    slr = layouter.layout(currentValue, this.getTextFont(), this.stringFormat, new SizeF(width, 0), false, new SizeF(0, 0));\n                    height += slr.actualSize.height;\n                }\n            }\n            /* tslint:enable */\n            height += (this.style.borders.top.width + this.style.borders.bottom.width) * 2;\n        }\n        else if (this.objectValue instanceof PdfGrid) {\n            var cellIndex = this.row.cells.indexOf(this);\n            var internalWidth = 0;\n            if ((this.style.cellPadding != null || typeof this.style.cellPadding !== 'undefined')) {\n                internalWidth = this.calculateWidth();\n                if (typeof this.style.cellPadding.left !== 'undefined' && this.style.cellPadding.hasLeftPad) {\n                    internalWidth -= this.style.cellPadding.left;\n                }\n                if (typeof this.style.cellPadding.right !== 'undefined' && this.style.cellPadding.hasRightPad) {\n                    internalWidth -= this.style.cellPadding.right;\n                }\n            }\n            else if ((this.row.grid.style.cellPadding != null || typeof this.row.grid.style.cellPadding !== 'undefined')) {\n                internalWidth = this.calculateWidth();\n                if (typeof this.row.grid.style.cellPadding.left !== 'undefined' && this.row.grid.style.cellPadding.hasLeftPad) {\n                    internalWidth -= this.row.grid.style.cellPadding.left;\n                }\n                if (typeof this.row.grid.style.cellPadding.right !== 'undefined' && this.row.grid.style.cellPadding.hasRightPad) {\n                    internalWidth -= this.row.grid.style.cellPadding.right;\n                }\n            }\n            else {\n                internalWidth = this.calculateWidth();\n            }\n            this.objectValue.tempWidth = internalWidth;\n            if (!this.row.cells.getCell(cellIndex).hasColSpan && !this.row.cells.getCell(cellIndex).hasRowSpan) {\n                height = this.objectValue.size.height;\n            }\n            else {\n                height += (this.style.borders.top.width + this.style.borders.bottom.width) * 2;\n            }\n            if (this.gridRow.grid.style.cellSpacing !== 0) {\n                width -= this.gridRow.grid.style.cellSpacing * 2;\n                //height += (this.row.grid.style.cellPadding.top + this.row.grid.style.cellPadding.bottom);\n            }\n            if (this.style.cellPadding != null || typeof this.style.cellPadding !== 'undefined') {\n                if (typeof this.row.grid.style.cellPadding.top !== 'undefined' && this.row.grid.style.cellPadding.hasTopPad) {\n                    height += this.row.grid.style.cellPadding.top;\n                }\n                if (this.row.grid.style.cellPadding.hasBottomPad && typeof this.row.grid.style.cellPadding.bottom !== 'undefined') {\n                    height += this.row.grid.style.cellPadding.bottom;\n                }\n            }\n            height += this.objectValue.style.cellSpacing;\n        }\n        else if (this.objectValue instanceof PdfImage || this.objectValue instanceof PdfBitmap) {\n            height += this.objectValue.height;\n        }\n        else if (this.objectValue instanceof PdfTextWebLink) {\n            var webLink = this.objectValue;\n            /* tslint:disable */\n            var slr = layouter.layout(webLink.text, webLink.font, webLink.stringFormat, new SizeF(width, 0), false, new SizeF(0, 0));\n            /* tslint:enable */\n            height += slr.actualSize.height;\n            height += (this.style.borders.top.width + this.style.borders.bottom.width) * 2;\n        }\n        else if (typeof this.objectValue === 'undefined') {\n            if (this.style.cellPadding == null || typeof this.style.cellPadding === 'undefined') {\n                width -= (this.gridRow.grid.style.cellPadding.right + this.gridRow.grid.style.cellPadding.left);\n            }\n            else {\n                width -= (this.style.cellPadding.right + this.style.cellPadding.left);\n                width -= (this.style.borders.left.width + this.style.borders.right.width);\n            }\n            height += (this.style.borders.top.width + this.style.borders.bottom.width) * 2;\n        }\n        //Add padding top and bottom value to height\n        if (!(this.objectValue instanceof PdfGrid)) {\n            if (this.style.cellPadding == null || typeof this.style.cellPadding === 'undefined') {\n                height += (this.row.grid.style.cellPadding.top + this.row.grid.style.cellPadding.bottom);\n            }\n            else {\n                height += (this.style.cellPadding.top + this.style.cellPadding.bottom);\n            }\n        }\n        else {\n            if (this.style.cellPadding == null || typeof this.style.cellPadding === 'undefined') {\n                if (typeof this.row.grid.style.cellPadding.top !== 'undefined' && this.row.grid.style.cellPadding.hasTopPad) {\n                    height += this.row.grid.style.cellPadding.top;\n                }\n                if (typeof this.row.grid.style.cellPadding.bottom !== 'undefined' && this.row.grid.style.cellPadding.hasBottomPad) {\n                    height += this.row.grid.style.cellPadding.bottom;\n                }\n            }\n            else {\n                if (typeof this.style.cellPadding.top !== 'undefined' && this.style.cellPadding.hasTopPad) {\n                    height += this.style.cellPadding.top;\n                }\n                if (typeof this.style.cellPadding.bottom !== 'undefined' && this.style.cellPadding.hasBottomPad) {\n                    height += this.style.cellPadding.bottom;\n                }\n            }\n        }\n        height += this.row.grid.style.cellSpacing;\n        return height;\n    };\n    /**\n     * return the calculated `width` of the cell.\n     * @private\n     */\n    PdfGridCell.prototype.calculateWidth = function () {\n        var cellIndex = this.row.cells.indexOf(this);\n        var rowindex = this.row.grid.rows.rowCollection.indexOf(this.row);\n        var columnSpan = this.columnSpan;\n        var width = 0;\n        if (columnSpan === 1) {\n            for (var i = 0; i < columnSpan; i++) {\n                width += this.row.grid.columns.getColumn(cellIndex + i).width;\n            }\n        }\n        else if (columnSpan > 1) {\n            for (var i = 0; i < columnSpan; i++) {\n                width += this.row.grid.columns.getColumn(cellIndex + i).width;\n                if ((i + 1) < columnSpan) {\n                    this.row.cells.getCell(cellIndex + i + 1).hasColSpan = true;\n                }\n            }\n        }\n        if (this.parent != null && this.parent.row.width > 0) {\n            if ((this.row.grid.isChildGrid) && this.parent != null && (this.row.width > this.parent.row.width)) {\n                width = 0;\n                for (var j = 0; j < this.parent.columnSpan; j++) {\n                    width += this.parent.row.grid.columns.getColumn(j).width;\n                }\n                width = width / this.row.cells.count;\n            }\n        }\n        return width;\n    };\n    return PdfGridCell;\n}());\nexport { PdfGridCell };\n/**\n * `PdfGridCellCollection` class provides access to an ordered,\n * strongly typed collection of 'PdfGridCell' objects.\n * @private\n */\nvar PdfGridCellCollection = /** @class */ (function () {\n    //Constructor\n    /**\n     * Initializes a new instance of the `PdfGridCellCollection` class with the row.\n     * @private\n     */\n    function PdfGridCellCollection(row) {\n        /**\n         * @hidden\n         * @private\n         */\n        this.cells = [];\n        this.gridRow = row;\n    }\n    //Properties\n    /**\n     * Gets the current `cell`.\n     * @private\n     */\n    PdfGridCellCollection.prototype.getCell = function (index) {\n        if (index < 0 || index >= this.count) {\n            throw new Error('IndexOutOfRangeException');\n        }\n        return this.cells[index];\n    };\n    Object.defineProperty(PdfGridCellCollection.prototype, \"count\", {\n        /**\n         * Gets the cells `count`.[Read-Only].\n         * @private\n         */\n        get: function () {\n            return this.cells.length;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfGridCellCollection.prototype.add = function (cell) {\n        if (typeof cell === 'undefined') {\n            var tempcell = new PdfGridCell();\n            this.add(tempcell);\n            return cell;\n        }\n        else {\n            cell.row = this.gridRow;\n            this.cells.push(cell);\n        }\n    };\n    /**\n     * Returns the `index of` a particular cell in the collection.\n     * @private\n     */\n    PdfGridCellCollection.prototype.indexOf = function (cell) {\n        return this.cells.indexOf(cell);\n    };\n    return PdfGridCellCollection;\n}());\nexport { PdfGridCellCollection };\n","import { PdfGridCell } from './pdf-grid-cell';\nimport { PdfStringFormat } from './../../graphics/fonts/pdf-string-format';\n/**\n * `PdfGridColumn` class represents the schema of a column in a 'PdfGrid'.\n */\nvar PdfGridColumn = /** @class */ (function () {\n    //Constructors\n    /**\n     * Initializes a new instance of the `PdfGridColumn` class with the parent grid.\n     * @private\n     */\n    function PdfGridColumn(grid) {\n        /**\n         * The `width` of the column.\n         * @default 0\n         * @private\n         */\n        this.columnWidth = 0;\n        this.grid = grid;\n    }\n    Object.defineProperty(PdfGridColumn.prototype, \"width\", {\n        /**\n         * Gets or sets the `width` of the 'PdfGridColumn'.\n         * @private\n         */\n        get: function () {\n            return this.columnWidth;\n        },\n        set: function (value) {\n            this.isCustomWidth = true;\n            this.columnWidth = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridColumn.prototype, \"format\", {\n        /**\n         * Gets or sets the information about the text `formatting`.\n         * @private\n         */\n        get: function () {\n            if (this.stringFormat == null) {\n                this.stringFormat = new PdfStringFormat(); //GetDefaultFormat();\n            }\n            return this.stringFormat;\n        },\n        set: function (value) {\n            this.stringFormat = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfGridColumn;\n}());\nexport { PdfGridColumn };\n/**\n * `PdfGridColumnCollection` class provides access to an ordered,\n * strongly typed collection of 'PdfGridColumn' objects.\n * @private\n */\nvar PdfGridColumnCollection = /** @class */ (function () {\n    //properties\n    //Constructors\n    /**\n     * Initializes a new instance of the `PdfGridColumnCollection` class with the parent grid.\n     * @private\n     */\n    function PdfGridColumnCollection(grid) {\n        /**\n         * @hidden\n         * @private\n         */\n        this.internalColumns = [];\n        /**\n         * @hidden\n         * @private\n         */\n        this.columnWidth = 0;\n        this.grid = grid;\n        this.internalColumns = [];\n    }\n    //Iplementation\n    /**\n     * `Add` a new column to the 'PdfGrid'.\n     * @private\n     */\n    PdfGridColumnCollection.prototype.add = function (count) {\n        // public add(column : PdfGridColumn) : void\n        // public add(arg : number|PdfGridColumn) : void {\n        // if (typeof arg === 'number') {\n        for (var i = 0; i < count; i++) {\n            this.internalColumns.push(new PdfGridColumn(this.grid));\n            for (var index = 0; index < this.grid.rows.count; index++) {\n                var row = this.grid.rows.getRow(index);\n                var cell = new PdfGridCell();\n                cell.value = '';\n                row.cells.add(cell);\n            }\n        }\n        // } else {\n        //     let column : PdfGridColumn = new PdfGridColumn(this.grid);\n        //     this.columns.push(column);\n        //     return column;\n        // }\n    };\n    Object.defineProperty(PdfGridColumnCollection.prototype, \"count\", {\n        /**\n         * Gets the `number of columns` in the 'PdfGrid'.[Read-Only].\n         * @private\n         */\n        get: function () {\n            return this.internalColumns.length;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridColumnCollection.prototype, \"width\", {\n        /**\n         * Gets the `widths`.\n         * @private\n         */\n        get: function () {\n            if (this.columnWidth === 0) {\n                this.columnWidth = this.measureColumnsWidth();\n            }\n            if (this.grid.initialWidth !== 0 && this.columnWidth !== this.grid.initialWidth && !this.grid.style.allowHorizontalOverflow) {\n                this.columnWidth = this.grid.initialWidth;\n                this.grid.isPageWidth = true;\n            }\n            return this.columnWidth;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridColumnCollection.prototype, \"columns\", {\n        /**\n         * Gets the `array of PdfGridColumn`.[Read-Only]\n         * @private\n         */\n        get: function () {\n            return this.internalColumns;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Gets the `PdfGridColumn` from the specified index.[Read-Only]\n     * @private\n     */\n    PdfGridColumnCollection.prototype.getColumn = function (index) {\n        if (index >= 0 && index <= this.columns.length) {\n            return this.columns[index];\n        }\n        else {\n            throw Error('can not get the column from the index: ' + index);\n        }\n    };\n    //Implementation\n    /**\n     * `Calculates the column widths`.\n     * @private\n     */\n    PdfGridColumnCollection.prototype.measureColumnsWidth = function () {\n        var totalWidth = 0;\n        this.grid.measureColumnsWidth();\n        for (var i = 0, count = this.internalColumns.length; i < count; i++) {\n            totalWidth += this.internalColumns[i].width;\n        }\n        return totalWidth;\n    };\n    /**\n     * Gets the `widths of the columns`.\n     * @private\n     */\n    PdfGridColumnCollection.prototype.getDefaultWidths = function (totalWidth) {\n        var widths = [];\n        var summ = 0.0;\n        var subFactor = this.count;\n        for (var i = 0; i < this.count; i++) {\n            if (this.grid.isPageWidth && totalWidth >= 0 && !this.internalColumns[i].isCustomWidth) {\n                this.internalColumns[i].width = 0;\n            }\n            else {\n                widths[i] = this.internalColumns[i].width;\n                if (this.internalColumns[i].width > 0 && this.internalColumns[i].isCustomWidth) {\n                    totalWidth -= this.internalColumns[i].width;\n                    subFactor--;\n                }\n                else {\n                    widths[i] = 0;\n                }\n            }\n        }\n        for (var i = 0; i < this.count; i++) {\n            var width = totalWidth / subFactor;\n            if (widths[i] <= 0) {\n                widths[i] = width;\n            }\n        }\n        return widths;\n    };\n    return PdfGridColumnCollection;\n}());\nexport { PdfGridColumnCollection };\n","import { PdfGridCell, PdfGridCellCollection } from './pdf-grid-cell';\nimport { PdfGridRowStyle } from './styles/style';\n/**\n * `PdfGridRow` class provides customization of the settings for the particular row.\n */\nvar PdfGridRow = /** @class */ (function () {\n    //Constructor\n    /**\n     * Initializes a new instance of the `PdfGridRow` class with the parent grid.\n     * @private\n     */\n    function PdfGridRow(grid) {\n        /**\n         * Stores the index of the overflowing row.\n         * @private\n         */\n        this.gridRowOverflowIndex = 0;\n        /**\n         * The `height` of the row.\n         * @private\n         */\n        this.rowHeight = 0;\n        /**\n         * The `width` of the row.\n         * @private\n         */\n        this.rowWidth = 0;\n        /**\n         * The `isFinish` of the row.\n         * @private\n         */\n        this.isrowFinish = false;\n        /**\n         * Check whether the Row span row height `is set explicitly`.\n         * @default false\n         * @public\n         */\n        this.isRowSpanRowHeightSet = false;\n        /**\n         * The `page count` of the row.\n         * @public\n         */\n        this.noOfPageCount = 0;\n        /**\n         * Check whether the row height `is set explicitly`.\n         * @default false\n         * @private\n         */\n        this.isRowHeightSet = false;\n        this.isPageBreakRowSpanApplied = false;\n        /**\n         * Check weather the row merge `is completed` or not.\n         * @default true\n         * @private\n         */\n        this.isRowMergeComplete = true;\n        this.repeatFlag = false;\n        this.rowFontSplit = false;\n        this.isHeaderRow = false;\n        this.pdfGrid = grid;\n    }\n    Object.defineProperty(PdfGridRow.prototype, \"rowSpanExists\", {\n        //Properties\n        /**\n         * Gets or sets a value indicating [`row span exists`].\n         * @private\n         */\n        get: function () {\n            return this.bRowSpanExists;\n        },\n        set: function (value) {\n            this.bRowSpanExists = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridRow.prototype, \"cells\", {\n        /**\n         * Gets the `cells` from the selected row.[Read-Only].\n         * @private\n         */\n        get: function () {\n            if (this.gridCells == null) {\n                this.gridCells = new PdfGridCellCollection(this);\n            }\n            return this.gridCells;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridRow.prototype, \"grid\", {\n        /**\n         * Gets or sets the parent `grid`.\n         * @private\n         */\n        get: function () {\n            return this.pdfGrid;\n        },\n        set: function (value) {\n            this.pdfGrid = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridRow.prototype, \"style\", {\n        /**\n         * Gets or sets the row `style`.\n         * @private\n         */\n        get: function () {\n            if (typeof this.rowStyle === 'undefined') {\n                this.rowStyle = new PdfGridRowStyle();\n                this.rowStyle.setParent(this);\n            }\n            return this.rowStyle;\n        },\n        set: function (value) {\n            this.rowStyle = value;\n            for (var i = 0; i < this.cells.count; i++) {\n                this.cells.getCell(i).style.borders = value.border;\n                if (typeof value.font !== 'undefined') {\n                    this.cells.getCell(i).style.font = value.font;\n                }\n                if (typeof value.backgroundBrush !== 'undefined') {\n                    this.cells.getCell(i).style.backgroundBrush = value.backgroundBrush;\n                }\n                if (typeof value.backgroundImage !== 'undefined') {\n                    this.cells.getCell(i).style.backgroundImage = value.backgroundImage;\n                }\n                if (typeof value.textBrush !== 'undefined') {\n                    this.cells.getCell(i).style.textBrush = value.textBrush;\n                }\n                if (typeof value.textPen !== 'undefined') {\n                    this.cells.getCell(i).style.textPen = value.textPen;\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridRow.prototype, \"rowBreakHeight\", {\n        /**\n         * `Height` of the row yet to be drawn after split.\n         * @private\n         */\n        get: function () {\n            if (typeof this.gridRowBreakHeight === 'undefined') {\n                this.gridRowBreakHeight = 0;\n            }\n            return this.gridRowBreakHeight;\n        },\n        set: function (value) {\n            this.gridRowBreakHeight = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridRow.prototype, \"rowOverflowIndex\", {\n        /**\n         * `over flow index` of the row.\n         * @private\n         */\n        get: function () {\n            return this.gridRowOverflowIndex;\n        },\n        set: function (value) {\n            this.gridRowOverflowIndex = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridRow.prototype, \"height\", {\n        /**\n         * Gets or sets the `height` of the row.\n         * @private\n         */\n        get: function () {\n            if (!this.isRowHeightSet) {\n                this.rowHeight = this.measureHeight();\n            }\n            return this.rowHeight;\n        },\n        set: function (value) {\n            this.rowHeight = value;\n            this.isRowHeightSet = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridRow.prototype, \"width\", {\n        /**\n         * Gets or sets the `width` of the row.\n         * @private\n         */\n        get: function () {\n            if (this.rowWidth === 0 || typeof this.rowWidth === 'undefined') {\n                this.rowWidth = this.measureWidth();\n            }\n            return this.rowWidth;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridRow.prototype, \"NestedGridLayoutResult\", {\n        /**\n         * Gets or sets the row `Nested grid Layout Result`.\n         * @private\n         */\n        get: function () {\n            return this.gridResult;\n        },\n        set: function (value) {\n            this.gridResult = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridRow.prototype, \"columnSpanExists\", {\n        /**\n         * Gets or sets a value indicating [`column span exists`].\n         * @private\n         */\n        get: function () {\n            return this.bColumnSpanExists;\n        },\n        set: function (value) {\n            this.bColumnSpanExists = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridRow.prototype, \"rowMergeComplete\", {\n        /**\n         * Check whether the Row `has row span or row merge continue`.\n         * @private\n         */\n        get: function () {\n            return this.isRowMergeComplete;\n        },\n        set: function (value) {\n            this.isRowMergeComplete = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridRow.prototype, \"rowIndex\", {\n        /**\n         * Returns `index` of the row.\n         * @private\n         */\n        get: function () {\n            return this.grid.rows.rowCollection.indexOf(this);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    //Implementation\n    /**\n     * `Calculates the height`.\n     * @private\n     */\n    PdfGridRow.prototype.measureHeight = function () {\n        var rowSpanRemainingHeight = 0;\n        var rowHeight;\n        var maxHeight = 0;\n        if (this.cells.getCell(0).rowSpan > 1) {\n            rowHeight = 0;\n        }\n        else {\n            rowHeight = this.cells.getCell(0).height;\n        }\n        for (var i = 0; i < this.cells.count; i++) {\n            var cell = this.cells.getCell(i);\n            //get the maximum rowspan remaining height.\n            if (cell.rowSpanRemainingHeight > rowSpanRemainingHeight) {\n                rowSpanRemainingHeight = cell.rowSpanRemainingHeight;\n            }\n            //skip the cell if row spanned.\n            // if (cell.isRowMergeContinue) {\n            //     continue;\n            // }\n            // if (!cell.isRowMergeContinue) {\n            //     this.rowMergeComplete = false;\n            // }\n            this.rowMergeComplete = false;\n            if (cell.rowSpan > 1) {\n                var cellIn = i;\n                var rowin = this.isHeaderRow ? this.grid.headers.indexOf(this) : this.grid.rows.rowCollection.indexOf(this);\n                for (var j = 0; j < cell.rowSpan; j++) {\n                    if ((j + 1) < cell.rowSpan) {\n                        (this.isHeaderRow ? this.grid.headers.getHeader(rowin + j + 1) : this.grid.rows.getRow(rowin + j + 1)).cells.getCell(cellIn).hasRowSpan = true;\n                    }\n                }\n                if (maxHeight < cell.height) {\n                    maxHeight = cell.height;\n                }\n                continue;\n            }\n            rowHeight = Math.max(rowHeight, cell.height);\n        }\n        if (maxHeight > rowHeight) {\n            rowHeight = maxHeight;\n        }\n        if (rowHeight === 0) {\n            rowHeight = maxHeight;\n        }\n        else if (rowSpanRemainingHeight > 0) {\n            rowHeight += rowSpanRemainingHeight;\n        }\n        return rowHeight;\n    };\n    PdfGridRow.prototype.measureWidth = function () {\n        var rowWid = 0;\n        for (var i = 0; i < this.grid.columns.count; i++) {\n            var column = this.grid.columns.getColumn(i);\n            rowWid += column.width;\n        }\n        return rowWid;\n    };\n    return PdfGridRow;\n}());\nexport { PdfGridRow };\n/**\n * `PdfGridRowCollection` class provides access to an ordered, strongly typed collection of 'PdfGridRow' objects.\n * @private\n */\nvar PdfGridRowCollection = /** @class */ (function () {\n    // Constructor\n    /**\n     * Initializes a new instance of the `PdfGridRowCollection` class with the parent grid.\n     * @private\n     */\n    function PdfGridRowCollection(grid) {\n        this.rows = [];\n        this.grid = grid;\n    }\n    Object.defineProperty(PdfGridRowCollection.prototype, \"count\", {\n        //Properties\n        /**\n         * Gets the number of header in the `PdfGrid`.[Read-Only].\n         * @private\n         */\n        get: function () {\n            return this.rows.length;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridRowCollection.prototype, \"rowCollection\", {\n        //Implementation\n        /**\n         * Return the row collection of the `grid`.\n         * @private\n         */\n        get: function () {\n            return this.rows;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfGridRowCollection.prototype.addRow = function (arg) {\n        if (typeof arg === 'undefined') {\n            var temprow = new PdfGridRow(this.grid);\n            this.addRow(temprow);\n            return temprow;\n        }\n        else {\n            arg.style.setBackgroundBrush(this.grid.style.backgroundBrush);\n            arg.style.setFont(this.grid.style.font);\n            arg.style.setTextBrush(this.grid.style.textBrush);\n            arg.style.setTextPen(this.grid.style.textPen);\n            if (arg.cells.count === 0) {\n                for (var i = 0; i < this.grid.columns.count; i++) {\n                    arg.cells.add(new PdfGridCell());\n                }\n            }\n            this.rows.push(arg);\n        }\n    };\n    /**\n     * Return the row by index.\n     * @private\n     */\n    PdfGridRowCollection.prototype.getRow = function (index) {\n        return this.rows[index];\n    };\n    return PdfGridRowCollection;\n}());\nexport { PdfGridRowCollection };\n/**\n * `PdfGridHeaderCollection` class provides customization of the settings for the header.\n * @private\n */\nvar PdfGridHeaderCollection = /** @class */ (function () {\n    //constructor\n    /**\n     * Initializes a new instance of the `PdfGridHeaderCollection` class with the parent grid.\n     * @private\n     */\n    function PdfGridHeaderCollection(grid) {\n        /**\n         * The array to store the `rows` of the grid header.\n         * @private\n         */\n        this.rows = [];\n        this.grid = grid;\n        this.rows = [];\n    }\n    //Properties\n    /**\n     * Gets a 'PdfGridRow' object that represents the `header` row in a 'PdfGridHeaderCollection' control.[Read-Only].\n     * @private\n     */\n    PdfGridHeaderCollection.prototype.getHeader = function (index) {\n        // if (index < 0 || index >= Count) {\n        //     throw new IndexOutOfRangeException();\n        // }\n        return (this.rows[index]);\n    };\n    Object.defineProperty(PdfGridHeaderCollection.prototype, \"count\", {\n        /**\n         * Gets the `number of header` in the 'PdfGrid'.[Read-Only]\n         * @private\n         */\n        get: function () {\n            return this.rows.length;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfGridHeaderCollection.prototype.add = function (arg) {\n        if (typeof arg === 'number') {\n            var row = void 0;\n            for (var i = 0; i < arg; i++) {\n                row = new PdfGridRow(this.grid);\n                row.isHeaderRow = true;\n                for (var j = 0; j < this.grid.columns.count; j++) {\n                    row.cells.add(new PdfGridCell());\n                }\n                this.rows.push(row);\n            }\n            return this.rows;\n        }\n        else {\n            this.rows.push(arg);\n        }\n    };\n    PdfGridHeaderCollection.prototype.indexOf = function (row) {\n        return this.rows.indexOf(row);\n    };\n    return PdfGridHeaderCollection;\n}());\nexport { PdfGridHeaderCollection };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * PdfGrid.ts class for EJ2-PDF\n */\nimport { PdfGridColumnCollection } from './pdf-grid-column';\nimport { PdfGridRowCollection, PdfGridHeaderCollection } from './pdf-grid-row';\nimport { RectangleF, SizeF, PointF } from './../../drawing/pdf-drawing';\nimport { PdfLayoutElement } from './../../graphics/figures/layout-element';\nimport { PdfLayoutFormat } from './../../graphics/figures/base/element-layouter';\nimport { PdfGridStyle } from './styles/style';\nimport { PdfBorders } from './styles/pdf-borders';\nimport { PdfGridLayouter } from './../../structured-elements/grid/layout/grid-layouter';\nvar PdfGrid = /** @class */ (function (_super) {\n    __extends(PdfGrid, _super);\n    //constructor\n    /**\n     * Initialize a new instance for `PdfGrid` class.\n     * @private\n     */\n    function PdfGrid() {\n        var _this = _super.call(this) || this;\n        /**\n         * @hidden\n         * @private\n         */\n        _this.gridSize = new SizeF(0, 0);\n        /**\n         * Check the child grid is ' split or not'\n         */\n        _this.isGridSplit = false;\n        /**\n         * @hidden\n         * @private\n         */\n        _this.isRearranged = false;\n        /**\n         * @hidden\n         * @private\n         */\n        _this.pageBounds = new RectangleF();\n        /**\n         * @hidden\n         * @private\n         */\n        _this.listOfNavigatePages = [];\n        /**\n         * @hidden\n         * @private\n         */\n        _this.parentCellIndex = 0;\n        _this.tempWidth = 0;\n        /**\n         * @hidden\n         * @private\n         */\n        _this.breakRow = true;\n        _this.splitChildRowIndex = -1;\n        /**\n         * The event raised on `begin cell lay outing`.\n         * @event\n         * @private\n         */\n        //public beginPageLayout : Function;\n        /**\n         * The event raised on `end cell lay outing`.\n         * @event\n         * @private\n         */\n        //public endPageLayout : Function;\n        _this.hasRowSpanSpan = false;\n        _this.hasColumnSpan = false;\n        _this.isSingleGrid = true;\n        return _this;\n    }\n    Object.defineProperty(PdfGrid.prototype, \"raiseBeginCellDraw\", {\n        //Properties\n        /**\n         * Gets a value indicating whether the `start cell layout event` should be raised.\n         * @private\n         */\n        get: function () {\n            return (typeof this.beginCellDraw !== 'undefined' && typeof this.beginCellDraw !== null);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGrid.prototype, \"raiseEndCellDraw\", {\n        /**\n         * Gets a value indicating whether the `end cell layout event` should be raised.\n         * @private\n         */\n        get: function () {\n            return (typeof this.endCellDraw !== 'undefined' && typeof this.endCellDraw !== null);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGrid.prototype, \"repeatHeader\", {\n        /**\n         * Gets or sets a value indicating whether to `repeat header`.\n         * @private\n         */\n        get: function () {\n            if (this.bRepeatHeader == null || typeof this.bRepeatHeader === 'undefined') {\n                this.bRepeatHeader = false;\n            }\n            return this.bRepeatHeader;\n        },\n        set: function (value) {\n            this.bRepeatHeader = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGrid.prototype, \"allowRowBreakAcrossPages\", {\n        /**\n         * Gets or sets a value indicating whether to split or cut rows that `overflow a page`.\n         * @private\n         */\n        get: function () {\n            return this.breakRow;\n        },\n        set: function (value) {\n            this.breakRow = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGrid.prototype, \"columns\", {\n        /**\n         * Gets the `column` collection of the PdfGrid.[Read-Only]\n         * @private\n         */\n        get: function () {\n            if (this.gridColumns == null || typeof this.gridColumns === 'undefined') {\n                this.gridColumns = new PdfGridColumnCollection(this);\n            }\n            return this.gridColumns;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGrid.prototype, \"rows\", {\n        /**\n         * Gets the `row` collection from the PdfGrid.[Read-Only]\n         * @private\n         */\n        get: function () {\n            if (this.gridRows == null) {\n                this.gridRows = new PdfGridRowCollection(this);\n            }\n            return this.gridRows;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGrid.prototype, \"headers\", {\n        /**\n         * Gets the `headers` collection from the PdfGrid.[Read-Only]\n         * @private\n         */\n        get: function () {\n            if (this.gridHeaders == null || typeof this.gridHeaders === 'undefined') {\n                this.gridHeaders = new PdfGridHeaderCollection(this);\n            }\n            return this.gridHeaders;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGrid.prototype, \"initialWidth\", {\n        /**\n         * Indicating `initial width` of the page.\n         * @private\n         */\n        get: function () {\n            return this.gridInitialWidth;\n        },\n        set: function (value) {\n            this.gridInitialWidth = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGrid.prototype, \"style\", {\n        /**\n         * Gets or sets the `grid style`.\n         * @private\n         */\n        get: function () {\n            if (this.gridStyle == null) {\n                this.gridStyle = new PdfGridStyle();\n            }\n            return this.gridStyle;\n        },\n        set: function (value) {\n            if (this.gridStyle == null) {\n                this.gridStyle = value;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGrid.prototype, \"isPageWidth\", {\n        /**\n         * Gets a value indicating whether the grid column width is considered to be `page width`.\n         * @private\n         */\n        get: function () {\n            return this.ispageWidth;\n        },\n        set: function (value) {\n            this.ispageWidth = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGrid.prototype, \"isChildGrid\", {\n        /**\n         * Gets or set if grid `is nested grid`.\n         * @private\n         */\n        get: function () {\n            return this.ischildGrid;\n        },\n        set: function (value) {\n            this.ischildGrid = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGrid.prototype, \"size\", {\n        /**\n         * Gets or set if grid ' is split or not'\n         * @public\n         */\n        // public get isGridSplit() : boolean {\n        //     return this.isgridSplit;\n        // }\n        // public set isGridSplit(value : boolean) {\n        //     this.isgridSplit = value;\n        // }public get isGridSplit() : boolean {\n        //     return this.isgridSplit;\n        // }\n        // public set isGridSplit(value : boolean) {\n        //     this.isgridSplit = value;\n        // }\n        /**\n         * Gets the `size`.\n         * @private\n         */\n        get: function () {\n            if ((this.gridSize.width === 0 || typeof this.gridSize.width === 'undefined') && this.gridSize.height === 0) {\n                this.gridSize = this.measure();\n            }\n            return this.gridSize;\n            // } else {\n            //     return this.gridSize;\n            // }\n        },\n        set: function (value) {\n            this.gridSize = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGrid.prototype, \"ParentCell\", {\n        get: function () {\n            return this.parentCell;\n        },\n        set: function (value) {\n            this.parentCell = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGrid.prototype, \"LayoutFormat\", {\n        get: function () {\n            return this.layoutFormat;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfGrid.prototype.draw = function (arg1, arg2, arg3, arg4) {\n        if (arg2 instanceof PointF && typeof arg2.width === 'undefined' && typeof arg3 === 'undefined') {\n            return this.drawHelper(arg1, arg2.x, arg2.y);\n        }\n        else if (typeof arg2 === 'number' && typeof arg3 === 'number' && typeof arg4 === 'undefined') {\n            return this.drawHelper(arg1, arg2, arg3, null);\n        }\n        else if (arg2 instanceof RectangleF && typeof arg2.width !== 'undefined' && typeof arg3 === 'undefined') {\n            return this.drawHelper(arg1, arg2, null);\n        }\n        else if (arg2 instanceof PointF && typeof arg2.width === 'undefined' && arg3 instanceof PdfLayoutFormat) {\n            return this.drawHelper(arg1, arg2.x, arg2.y, arg3);\n        }\n        else if (typeof arg2 === 'number' && typeof arg3 === 'number' && (arg4 instanceof PdfLayoutFormat || arg4 == null)) {\n            var width = (arg1.graphics.clientSize.width - arg2);\n            var layoutRectangle = new RectangleF(arg2, arg3, width, 0);\n            return this.drawHelper(arg1, layoutRectangle, arg4);\n        }\n        else if (arg2 instanceof RectangleF && typeof arg2.width !== 'undefined' && typeof arg3 === 'boolean') {\n            return this.drawHelper(arg1, arg2, null);\n        }\n        else {\n            return this.drawHelper(arg1, arg2, arg3);\n        }\n    };\n    /**\n     * `measures` this instance.\n     * @private\n     */\n    PdfGrid.prototype.measure = function () {\n        var height = 0;\n        var width = this.columns.width;\n        for (var i = 0; i < this.headers.count; i++) {\n            var row = this.headers.getHeader(i);\n            height += row.height;\n        }\n        for (var i = 0; i < this.rows.count; i++) {\n            var row = this.rows.getRow(i);\n            height += row.height;\n        }\n        return new SizeF(width, height);\n    };\n    PdfGrid.prototype.onBeginCellDraw = function (args) {\n        if (this.raiseBeginCellDraw) {\n            this.beginCellDraw(this, args);\n        }\n    };\n    PdfGrid.prototype.onEndCellDraw = function (args) {\n        if (this.raiseEndCellDraw) {\n            this.endCellDraw(this, args);\n        }\n    };\n    /**\n     * `Layouts` the specified graphics.\n     * @private\n     */\n    PdfGrid.prototype.layout = function (param) {\n        var width = param.bounds.width;\n        var height = param.bounds.height;\n        var hasChanged = false;\n        if (typeof param.bounds.width === 'undefined' || param.bounds.width === 0) {\n            width = param.page.getClientSize().width - param.bounds.x;\n            hasChanged = true;\n        }\n        if (typeof param.bounds.height === 'undefined' || param.bounds.height === 0) {\n            height = param.page.getClientSize().height - param.bounds.y;\n            hasChanged = true;\n        }\n        if (hasChanged) {\n            param.bounds = new RectangleF(param.bounds.x, param.bounds.y, width, height);\n        }\n        if (this.rows.count !== 0) {\n            var currentRow = this.rows.getRow(0).cells.getCell(0).style;\n            if (currentRow.borders != null && ((currentRow.borders.left != null && currentRow.borders.left.width !== 1) ||\n                (currentRow.borders.top != null && currentRow.borders.top.width !== 1))) {\n                var x = currentRow.borders.left.width / 2;\n                var y = currentRow.borders.top.width / 2;\n                if (param.bounds.x === PdfBorders.default.right.width / 2 && param.bounds.y === PdfBorders.default.right.width / 2) {\n                    var newBound = new RectangleF(x, y, this.gridSize.width, this.gridSize.height);\n                    param.bounds = newBound;\n                }\n            }\n        }\n        this.setSpan();\n        this.checkSpan();\n        this.layoutFormat = param.format;\n        this.gridLocation = param.bounds;\n        var layouter = new PdfGridLayouter(this);\n        var result = (layouter.Layouter(param));\n        return result;\n    };\n    PdfGrid.prototype.setSpan = function () {\n        var colSpan = 1;\n        var rowSpan = 1;\n        var currentCellIndex = 0;\n        var currentRowIndex = 0;\n        var maxSpan = 0;\n        var rowCount = this.headers.count;\n        for (var i = 0; i < rowCount; i++) {\n            var row = this.headers.getHeader(i);\n            maxSpan = 0;\n            var colCount = row.cells.count;\n            for (var j = 0; j < colCount; j++) {\n                var cell = row.cells.getCell(j);\n                maxSpan = Math.max(maxSpan, cell.rowSpan);\n                //Skip setting span map for already coverted rows/columns.\n                if (!cell.isCellMergeContinue && !cell.isRowMergeContinue && (cell.columnSpan > 1 || cell.rowSpan > 1)) {\n                    if (cell.columnSpan + j > row.cells.count) {\n                        throw new Error('Invalid span specified at row ' + j.toString() + ' column ' + i.toString());\n                    }\n                    if (cell.rowSpan + i > this.headers.count) {\n                        throw new Error('Invalid span specified at Header ' + j.toString() + ' column ' + i.toString());\n                    }\n                    // if (this.rows.count !== 0 && cell.rowSpan + i > this.rows.count) {\n                    //     throw new Error('Invalid span specified at row ' + j.toString() + ' column ' + i.toString());\n                    // }\n                    if (cell.columnSpan > 1 && cell.rowSpan > 1) {\n                        colSpan = cell.columnSpan;\n                        rowSpan = cell.rowSpan;\n                        currentCellIndex = j;\n                        currentRowIndex = i;\n                        cell.isCellMergeStart = true;\n                        cell.isRowMergeStart = true;\n                        //Set Column merges for first row\n                        while (colSpan > 1) {\n                            currentCellIndex++;\n                            row.cells.getCell(currentCellIndex).isCellMergeContinue = true;\n                            row.cells.getCell(currentCellIndex).isRowMergeContinue = true;\n                            row.cells.getCell(currentCellIndex).rowSpan = rowSpan;\n                            colSpan--;\n                        }\n                        currentCellIndex = j;\n                        colSpan = cell.columnSpan;\n                        //Set Row Merges and column merges foreach subsequent rows.\n                        while (rowSpan > 1) {\n                            currentRowIndex++;\n                            this.headers.getHeader(currentRowIndex).cells.getCell(j).isRowMergeContinue = true;\n                            this.headers.getHeader(currentRowIndex).cells.getCell(currentCellIndex).isRowMergeContinue = true;\n                            rowSpan--;\n                            while (colSpan > 1) {\n                                currentCellIndex++;\n                                this.headers.getHeader(currentRowIndex).cells.getCell(currentCellIndex).isCellMergeContinue = true;\n                                this.headers.getHeader(currentRowIndex).cells.getCell(currentCellIndex).isRowMergeContinue = true;\n                                colSpan--;\n                            }\n                            colSpan = cell.columnSpan;\n                            currentCellIndex = j;\n                        }\n                    }\n                    else if (cell.columnSpan > 1 && cell.rowSpan === 1) {\n                        colSpan = cell.columnSpan;\n                        currentCellIndex = j;\n                        cell.isCellMergeStart = true;\n                        //Set Column merges.\n                        while (colSpan > 1) {\n                            currentCellIndex++;\n                            row.cells.getCell(currentCellIndex).isCellMergeContinue = true;\n                            colSpan--;\n                        }\n                    }\n                    else if (cell.columnSpan === 1 && cell.rowSpan > 1) {\n                        rowSpan = cell.rowSpan;\n                        currentRowIndex = i;\n                        //Set row Merges.\n                        while (rowSpan > 1) {\n                            currentRowIndex++;\n                            this.headers.getHeader(currentRowIndex).cells.getCell(j).isRowMergeContinue = true;\n                            rowSpan--;\n                        }\n                    }\n                }\n            }\n            row.maximumRowSpan = maxSpan;\n        }\n    };\n    PdfGrid.prototype.checkSpan = function () {\n        var cellcolSpan;\n        var cellrowSpan = 1;\n        var cellmaxSpan = 0;\n        var currentCellIndex;\n        var currentRowIndex = 0;\n        cellcolSpan = cellrowSpan = 1;\n        currentCellIndex = currentRowIndex = 0;\n        if (this.hasRowSpanSpan || this.hasColumnSpan) {\n            var rowCount = this.rows.count;\n            for (var i = 0; i < rowCount; i++) {\n                var row = this.rows.getRow(i);\n                cellmaxSpan = 0;\n                var colCount = row.cells.count;\n                for (var j = 0; j < colCount; j++) {\n                    var cell = row.cells.getCell(j);\n                    cellmaxSpan = Math.max(cellmaxSpan, cell.rowSpan);\n                    //Skip setting span map for already coverted rows/columns.\n                    if (!cell.isCellMergeContinue && !cell.isRowMergeContinue\n                        && (cell.columnSpan > 1 || cell.rowSpan > 1)) {\n                        if (cell.columnSpan + j > row.cells.count) {\n                            throw new Error('Invalid span specified at row  ' + j.toString() + ' column ' + i.toString());\n                        }\n                        if (cell.rowSpan + i > this.rows.count) {\n                            throw new Error('Invalid span specified at row  ' + j.toString() + ' column ' + i.toString());\n                        }\n                        if (cell.columnSpan > 1 && cell.rowSpan > 1) {\n                            cellcolSpan = cell.columnSpan;\n                            cellrowSpan = cell.rowSpan;\n                            currentCellIndex = j;\n                            currentRowIndex = i;\n                            cell.isCellMergeStart = true;\n                            cell.isRowMergeStart = true;\n                            //Set Column merges for first row\n                            while (cellcolSpan > 1) {\n                                currentCellIndex++;\n                                row.cells.getCell(currentCellIndex).isCellMergeContinue = true;\n                                row.cells.getCell(currentCellIndex).isRowMergeContinue = true;\n                                cellcolSpan--;\n                            }\n                            currentCellIndex = j;\n                            cellcolSpan = cell.columnSpan;\n                            //Set Row Merges and column merges foreach subsequent rows.\n                            while (cellrowSpan > 1) {\n                                currentRowIndex++;\n                                this.rows.getRow(currentRowIndex).cells.getCell(j).isRowMergeContinue = true;\n                                this.rows.getRow(currentRowIndex).cells.getCell(currentCellIndex).isRowMergeContinue = true;\n                                cellrowSpan--;\n                                while (cellcolSpan > 1) {\n                                    currentCellIndex++;\n                                    this.rows.getRow(currentRowIndex).cells.getCell(currentCellIndex).isCellMergeContinue = true;\n                                    this.rows.getRow(currentRowIndex).cells.getCell(currentCellIndex).isRowMergeContinue = true;\n                                    cellcolSpan--;\n                                }\n                                cellcolSpan = cell.columnSpan;\n                                currentCellIndex = j;\n                            }\n                        }\n                        else if (cell.columnSpan > 1 && cell.rowSpan === 1) {\n                            cellcolSpan = cell.columnSpan;\n                            currentCellIndex = j;\n                            cell.isCellMergeStart = true;\n                            //Set Column merges.\n                            while (cellcolSpan > 1) {\n                                currentCellIndex++;\n                                row.cells.getCell(currentCellIndex).isCellMergeContinue = true;\n                                cellcolSpan--;\n                            }\n                        }\n                        else if (cell.columnSpan === 1 && cell.rowSpan > 1) {\n                            cellrowSpan = cell.rowSpan;\n                            currentRowIndex = i;\n                            //Set row Merges.\n                            while (cellrowSpan > 1) {\n                                currentRowIndex++;\n                                this.rows.getRow(currentRowIndex).cells.getCell(j).isRowMergeContinue = true;\n                                cellrowSpan--;\n                            }\n                        }\n                    }\n                }\n                row.maximumRowSpan = cellmaxSpan;\n            }\n        }\n    };\n    PdfGrid.prototype.measureColumnsWidth = function (bounds) {\n        if (typeof bounds !== 'undefined') {\n            this.isPageWidth = false;\n            var widths = this.columns.getDefaultWidths(bounds.width - bounds.x);\n            //let tempWidth : number = this.columns.getColumn(0).width;\n            for (var i = 0, count = this.columns.count; i < count; i++) {\n                // if (this.columns.getColumn(i).width < 0)\n                //     this.columns.getColumn(i).columnWidth = widths[i];\n                // else if (this.columns.getColumn(i).width > 0 && !this.columns.getColumn(i).isCustomWidth && widths[i]>0 && this.isComplete)\n                this.columns.getColumn(i).columnWidth = widths[i];\n                this.tempWidth = widths[i];\n            }\n            if (this.ParentCell != null && this.style.allowHorizontalOverflow == false && this.ParentCell.row.grid.style.allowHorizontalOverflow == false) {\n                var padding = 0;\n                var columnWidth = 0;\n                var columnCount = this.columns.count;\n                var childGridColumnWidth = 0;\n                if (this.ParentCell.style.cellPadding != null || typeof this.ParentCell.style.cellPadding !== 'undefined') {\n                    if (typeof this.ParentCell.style.cellPadding.left != 'undefined' && this.ParentCell.style.cellPadding.hasLeftPad) {\n                        padding += this.ParentCell.style.cellPadding.left;\n                    }\n                    if (typeof this.ParentCell.style.cellPadding.right != 'undefined' && this.ParentCell.style.cellPadding.hasRightPad) {\n                        padding += this.ParentCell.style.cellPadding.right;\n                    }\n                }\n                for (var i = 0; i < this.ParentCell.columnSpan; i++) {\n                    columnWidth += this.ParentCell.row.grid.columns.getColumn(this.parentCellIndex + i).width;\n                }\n                for (var j = 0; j < this.columns.count; j++) {\n                    if (this.gridColumns.getColumn(j).width > 0 && this.gridColumns.getColumn(j).isCustomWidth) {\n                        columnWidth -= this.gridColumns.getColumn(j).width;\n                        columnCount--;\n                    }\n                }\n                if ((this.ParentCell.row.grid.style.cellPadding != null || typeof this.ParentCell.row.grid.style.cellPadding != 'undefined')) {\n                    if (typeof this.ParentCell.row.grid.style.cellPadding.top != 'undefined' && this.ParentCell.row.grid.style.cellPadding.hasTopPad) {\n                        padding += this.ParentCell.row.grid.style.cellPadding.top;\n                    }\n                    if (typeof this.ParentCell.row.grid.style.cellPadding.bottom != 'undefined' && this.ParentCell.row.grid.style.cellPadding.hasBottomPad) {\n                        padding += this.ParentCell.row.grid.style.cellPadding.bottom;\n                    }\n                }\n                if (this.ParentCell.row.grid.style.cellSpacing != 0) {\n                    columnWidth -= this.ParentCell.row.grid.style.cellSpacing * 2;\n                }\n                if (columnWidth > padding) {\n                    childGridColumnWidth = (columnWidth - padding) / columnCount;\n                    this.tempWidth = childGridColumnWidth;\n                    if (this.ParentCell != null) {\n                        for (var j = 0; j < this.columns.count; j++) {\n                            if (!this.columns.getColumn(j).isCustomWidth)\n                                this.columns.getColumn(j).columnWidth = childGridColumnWidth;\n                        }\n                    }\n                }\n            }\n            // if (this.ParentCell != null && this.ParentCell.row.width > 0)\n            // {\n            //     if (this.isChildGrid && this.gridSize.width > this.ParentCell.row.width)\n            //     {\n            //         widths = this.columns.getDefaultWidths(bounds.width);\n            //         for (let i : number = 0; i < this.columns.count; i++)\n            //         {\n            //             this.columns.getColumn(i).width = widths[i];\n            //         }\n            //     }\n            // }\n        }\n        else {\n            var widths = [this.columns.count];\n            for (var n = 0; n < this.columns.count; n++) {\n                widths[n] = 0;\n            }\n            var cellWidth = 0;\n            var cellWidths = 0;\n            if ((typeof this.isChildGrid === 'undefined' && typeof this.gridLocation !== 'undefined') || (this.isChildGrid === null && typeof this.gridLocation !== 'undefined')) {\n                this.initialWidth = this.gridLocation.width;\n            }\n            if (this.headers.count > 0) {\n                var colCount_1 = this.headers.getHeader(0).cells.count;\n                var rowCount = this.headers.count;\n                for (var i = 0; i < colCount_1; i++) {\n                    cellWidth = 0;\n                    for (var j = 0; j < rowCount; j++) {\n                        var rowWidth = Math.min(this.initialWidth, this.headers.getHeader(j).cells.getCell(i).width);\n                        cellWidth = Math.max(cellWidth, rowWidth);\n                    }\n                    widths[i] = cellWidth;\n                }\n            }\n            // else {\n            //     let colCount : number = this.rows.getRow(0).cells.count;\n            //     let rowCount : number = this.rows.count;\n            //     for (let i : number = 0; i < colCount; i++) {\n            //         cellWidth = 0;\n            //         for (let j : number = 0; j < rowCount; j++) {\n            //             let rowWidth : number = Math.min(this.initialWidth, this.rows.getRow(j).cells.getCell(i).width);\n            //             cellWidth = Math.max(cellWidth, rowWidth);\n            //         }\n            //         widths[i] = cellWidth;\n            //     }\n            // }\n            cellWidth = 0;\n            for (var i = 0, colCount_2 = this.columns.count; i < colCount_2; i++) {\n                for (var j = 0, rowCount = this.rows.count; j < rowCount; j++) {\n                    if ((this.rows.getRow(j).cells.getCell(i).columnSpan == 1 && !this.rows.getRow(j).cells.getCell(i).isCellMergeContinue) || this.rows.getRow(j).cells.getCell(i).value != null) {\n                        if (this.rows.getRow(j).cells.getCell(i).value != null && !this.rows.getRow(j).grid.style.allowHorizontalOverflow) {\n                            var value = this.rows.getRow(j).grid.style.cellPadding.right +\n                                this.rows.getRow(j).grid.style.cellPadding.left\n                                + this.rows.getRow(j).cells.getCell(i).style.borders.left.width / 2;\n                            //  if (this.initialWidth != 0 )\n                            //         (this.rows.getRow(j).cells.getCell(i).value as PdfGrid).initialWidth = this.initialWidth - value;\n                        }\n                        var rowWidth = 0;\n                        rowWidth = this.initialWidth > 0.0 ? Math.min(this.initialWidth, this.rows.getRow(j).cells.getCell(i).width) : this.rows.getRow(j).cells.getCell(i).width;\n                        // let internalWidth : number = this.rows.getRow(j).cells.getCell(i).width;\n                        // internalWidth += this.rows.getRow(j).cells.getCell(i).style.borders.left.width;\n                        // internalWidth += this.rows.getRow(j).cells.getCell(i).style.borders.right.width;\n                        // let internalHeight : number = this.rows.getRow(j).cells.getCell(i).height;\n                        // internalHeight += (this.rows.getRow(j).cells.getCell(i).style.borders.top.width);\n                        // internalHeight += (this.rows.getRow(j).cells.getCell(i).style.borders.bottom.width);\n                        // let isCorrectWidth : boolean = (internalWidth + this.gridLocation.x) > this.currentGraphics.clientSize.width;\n                        // let isCorrectHeight : boolean = (internalHeight + this.gridLocation.y) > this.currentGraphics.clientSize.height;\n                        // if (isCorrectWidth || isCorrectHeight) {\n                        //     throw Error('Image size exceeds client size of the page. Can not insert this image');\n                        // }\n                        // rowWidth = Math.min(this.initialWidth, this.rows.getRow(j).cells.getCell(i).width);\n                        cellWidth = Math.max(widths[i], Math.max(cellWidth, rowWidth));\n                        cellWidth = Math.max(this.columns.getColumn(i).width, cellWidth);\n                    }\n                }\n                if (this.rows.count != 0)\n                    widths[i] = cellWidth;\n                cellWidth = 0;\n            }\n            for (var i = 0, RowCount = this.rows.count; i < RowCount; i++) {\n                for (var j = 0, ColCount = this.columns.count; j < ColCount; j++) {\n                    if (this.rows.getRow(i).cells.getCell(j).columnSpan > 1) {\n                        var total = widths[j];\n                        for (var k = 1; k < this.rows.getRow(i).cells.getCell(j).columnSpan; k++) {\n                            total += widths[j + k];\n                        }\n                        // if (this.rows.getRow(i).cells.getCell(j).width > total)\n                        // {\n                        //     let extendedWidth : number = this.rows.getRow(i).cells.getCell(j).width - total;\n                        //     extendedWidth = extendedWidth / this.rows.getRow(i).cells.getCell(j).columnSpan;\n                        //     for (let k : number = j; k < j + this.rows.getRow(i).cells.getCell(j).columnSpan; k++)\n                        //         widths[k] += extendedWidth;\n                        // }\n                    }\n                }\n            }\n            // if (this.isChildGrid && this.initialWidth != 0)\n            // {\n            //     widths = this.columns.getDefaultWidths(this.initialWidth);\n            // }\n            for (var i = 0, count = this.columns.count; i < count; i++) {\n                if (this.columns.getColumn(i).width <= 0)\n                    this.columns.getColumn(i).columnWidth = widths[i];\n                else if (this.columns.getColumn(i).width > 0 && !this.columns.getColumn(i).isCustomWidth)\n                    this.columns.getColumn(i).columnWidth = widths[i];\n            }\n            var padding = 0;\n            var colWidth = 0;\n            var colCount = this.columns.count;\n            var childGridColWidth = 0;\n            colWidth = this.tempWidth;\n            for (var j = 0; j < this.columns.count; j++) {\n                if (this.gridColumns.getColumn(j).width > 0 && this.gridColumns.getColumn(j).isCustomWidth) {\n                    colWidth -= this.gridColumns.getColumn(j).width;\n                    colCount--;\n                }\n            }\n            // if (this.style.cellSpacing != 0){\n            //     colWidth -= this.style.cellSpacing * 2;\n            // }\n            if (colWidth > 0) {\n                if (this.ParentCell.row.grid.style.cellSpacing != 0) {\n                    colWidth -= this.ParentCell.row.grid.style.cellSpacing * 2;\n                }\n            }\n            if (colWidth > padding) {\n                childGridColWidth = (colWidth) / colCount;\n                if (this.ParentCell != null) {\n                    for (var j = 0; j < this.columns.count; j++) {\n                        if (!this.columns.getColumn(j).isCustomWidth)\n                            this.columns.getColumn(j).columnWidth = childGridColWidth;\n                    }\n                }\n            }\n        }\n    };\n    return PdfGrid;\n}(PdfLayoutElement));\nexport { PdfGrid };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { PdfGrid } from '../pdf-grid';\nimport { PdfStringFormat } from './../../../graphics/fonts/pdf-string-format';\nimport { SizeF, RectangleF, PointF } from './../../../drawing/pdf-drawing';\nimport { PdfBorders } from '../styles/pdf-borders';\nimport { PdfLayoutType, PdfLayoutBreakType } from './../../../graphics/figures/enum';\nimport { PdfLayoutResult, PdfLayoutFormat, ElementLayouter } from './../../../graphics/figures/base/element-layouter';\nimport { PdfHorizontalOverflowType } from '../styles/style';\nimport { TemporaryDictionary } from './../../../collections/object-object-pair/dictionary';\nimport { PdfStringLayouter } from './../../../graphics/fonts/string-layouter';\nimport { PdfDocument } from './../../../document/pdf-document';\n/**\n * Class `lay outing the text`.\n *\n */\nvar PdfGridLayouter = /** @class */ (function (_super) {\n    __extends(PdfGridLayouter, _super);\n    //constructor\n    /**\n     * Initialize a new instance for `PdfGrid` class.\n     * @private\n     */\n    function PdfGridLayouter(baseFormat) {\n        var _this = _super.call(this, baseFormat) || this;\n        /**\n         * @hidden\n         * @private\n         */\n        _this.gridInitialWidth = 0;\n        /**\n         * @hidden\n         * @private\n         */\n        _this.gridSize = new SizeF(0, 0);\n        _this.parentCellIndex = 0;\n        _this.tempWidth = 0;\n        _this.childheight = 0;\n        /**\n         * Check weather it is `child grid or not`.\n         * @private\n         */\n        _this.isChildGrid = false;\n        /**\n         * @hidden\n         * @private\n         */\n        _this.hasRowSpanSpan = false;\n        /**\n         * @hidden\n         * @private\n         */\n        _this.isRearranged = false;\n        /**\n         * @hidden\n         * @private\n         */\n        _this.pageBounds = new RectangleF();\n        /**\n         * @hidden\n         * @private\n         */\n        _this.listOfNavigatePages = [];\n        /**\n         * @hidden\n         * @private\n         */\n        _this.flag = true;\n        /**\n         * @hidden\n         * @private\n         */\n        _this.columnRanges = [];\n        /**\n         * @hidden\n         * @private\n         */\n        _this.currentLocation = new PointF(0, 0);\n        /**\n         * @hidden\n         * @private\n         */\n        _this.breakRow = true;\n        _this.slr = null;\n        _this.remainderText = null;\n        _this.isPaginate = false;\n        /**\n         * Checks whether the x co-ordinate is need to set as client size or not.\n         * @hidden\n         * @private\n         */\n        _this.isOverloadWithPosition = false;\n        return _this;\n    }\n    Object.defineProperty(PdfGridLayouter.prototype, \"Grid\", {\n        //Properties\n        get: function () {\n            return this.elements;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    // Constructors\n    /**\n     * Initializes a new instance of the `StringLayouter` class.\n     * @private\n     */\n    //Public methods\n    /**\n     * `Layouts` the text.\n     * @private\n     */\n    /**\n     * `Layouts` the specified graphics.\n     * @private\n     */\n    /**\n     * `Layouts` the specified graphics.\n     * @private\n     */\n    /*public layout(graphics : PdfLayoutParams) : PdfLayoutResult\n    public layout(graphics : PdfGraphics, bounds : RectangleF) : void\n    public layout(graphics : PdfGraphics, bounds : PointF) : void\n    public layout(graphics ?: PdfGraphics | PdfLayoutParams, bounds ?: PointF | RectangleF) : void | PdfLayoutResult  {\n        if (graphics instanceof PdfGraphics) {\n        if (bounds instanceof PointF) {\n            if (bounds.x === 0) {\n                bounds.x = PdfBorders.default.right.width / 2;\n            }\n            if (bounds.y === 0) {\n                bounds.y = PdfBorders.default.top.width / 2;\n            }\n            let boundaries : RectangleF = new RectangleF(bounds, new SizeF(0, 0));\n            this.layout(graphics, boundaries);\n        } else {\n            let width : number = graphics.clientSize.width;\n            let parameter : PdfLayoutParams = new PdfLayoutParams();\n            parameter.bounds = bounds;\n            this.currentGraphics = graphics;\n            if (graphics.layer != null) {\n                let index : number = 0;\n                if (this.currentGraphics.page instanceof PdfPage) {\n                    index = (this.currentGraphics.page as PdfPage).section.indexOf(this.currentGraphics.page as PdfPage);\n                } else {\n                    index = (this.currentGraphics.page as PdfPageBase).defaultLayerIndex;\n                }\n            } else {\n                this.layoutInternal(parameter);\n            }\n        }\n    }\n    }*/\n    /**\n     * Gets the `format`.\n     * @private\n     */\n    PdfGridLayouter.prototype.getFormat = function (format) {\n        var f = format;\n        return f;\n    };\n    /**\n     * `Layouts` the element.\n     * @private\n     */\n    PdfGridLayouter.prototype.layoutInternal = function (param) {\n        var format = this.getFormat(param.format);\n        this.gridLayoutFormat = this.getFormat(param.format);\n        this.currentPage = param.page;\n        if (this.currentPage !== null) {\n            var pageHeight = this.currentPage.getClientSize().height;\n            var pageWidth = this.currentPage.getClientSize().width;\n            this.currentPageBounds = this.currentPage.getClientSize();\n        }\n        else {\n            throw Error('Can not set page as null');\n            //this.currentPageBounds = this.currentGraphics.clientSize;\n        }\n        this.currentGraphics = this.currentPage.graphics;\n        //this.currentGraphics = (this.currentPage != null ) ? this.currentPage.graphics : this.currentGraphics;\n        // if (this.currentGraphics.layer !== null) {\n        //     let index : number = 0;\n        //     if (this.currentGraphics.page instanceof PdfPage) {\n        //         index = (this.currentGraphics.page as PdfPage).section.indexOf(this.currentGraphics.page as PdfPage);\n        //     } else {\n        //         index = (this.currentGraphics.page as PdfPageBase).defaultLayerIndex;\n        //     }\n        //     this.listOfNavigatePages.push(index);\n        // }\n        var index = 0;\n        index = this.currentGraphics.page.section.indexOf(this.currentGraphics.page);\n        this.listOfNavigatePages.push(index);\n        if (format != null && format.break === PdfLayoutBreakType.FitColumnsToPage) {\n            this.currentBounds = new RectangleF(new PointF(param.bounds.x, param.bounds.y), new SizeF(this.Grid.columns.width, this.currentGraphics.clientSize.height));\n        }\n        else {\n            this.currentBounds = new RectangleF(new PointF(param.bounds.x, param.bounds.y), this.currentGraphics.clientSize);\n        }\n        //this.currentBounds = new RectangleF(new PointF(param.bounds.x, param.bounds.y), this.currentGraphics.clientSize);\n        if (this.Grid.rows.count !== 0) {\n            this.currentBounds.width = (param.bounds.width > 0) ? param.bounds.width :\n                (this.currentBounds.width - this.Grid.rows.getRow(0).cells.getCell(0).style.borders.left.width / 2);\n        }\n        else if (this.Grid.headers.count !== 0) {\n            // this.currentBounds.width = (param.bounds.width > 0) ? param.bounds.width : (this.currentBounds.width -\n            //                                 this.Grid.headers.getHeader(0).cells.getCell(0).style.borders.left.width / 2);\n            this.currentBounds.width = param.bounds.width;\n        }\n        else {\n            throw Error('Please add row or header into grid');\n        }\n        this.startLocation = new PointF(param.bounds.x, param.bounds.y);\n        // if (this.Grid.style.allowHorizontalOverflow && this.currentBounds.width > this.currentGraphics.clientSize.width) {\n        //     this.currentBounds.width = this.currentGraphics.clientSize.width;\n        //     this.currentBounds.width -= this.currentBounds.x;\n        // }\n        // if (this.Grid.isChildGrid) {\n        //     this.childheight = param.bounds.height;\n        // }\n        // if (param.format !== null && param.format.usePaginateBounds) {\n        //     if (param.format.paginateBounds.height > 0) {\n        //         this.currentBounds.height = param.format.paginateBounds.height;\n        //     }\n        //} else \n        if (param.bounds.height > 0 && !this.Grid.isChildGrid) {\n            this.currentBounds.height = param.bounds.height;\n        }\n        if (!this.Grid.isChildGrid) {\n            this.hType = this.Grid.style.horizontalOverflowType;\n        }\n        if (!this.Grid.style.allowHorizontalOverflow) {\n            this.columnRanges = [];\n            if (typeof this.Grid.isChildGrid !== 'undefined' && typeof this.Grid.isChildGrid) {\n                this.Grid.measureColumnsWidth(this.currentBounds);\n            }\n            else {\n                this.Grid.measureColumnsWidth(new RectangleF(this.currentBounds.x, this.currentBounds.y, this.currentBounds.x + this.currentBounds.width, this.currentBounds.height));\n            }\n            this.columnRanges.push([0, this.Grid.columns.count - 1]);\n        }\n        else {\n            this.Grid.measureColumnsWidth();\n            this.determineColumnDrawRanges();\n        }\n        if (this.Grid.hasRowSpanSpan) {\n            for (var i = 0; i < this.Grid.rows.count; i++) {\n                if (this.Grid.rows.getRow(i).height !== -1 && !this.Grid.rows.getRow(i).isRowHeightSet) {\n                    this.Grid.rows.getRow(i).isRowHeightSet = true;\n                }\n            }\n        }\n        var result = this.layoutOnPage(param);\n        return result;\n    };\n    // /* tslint:enable */\n    /**\n     * `Determines the column draw ranges`.\n     * @private\n     */\n    PdfGridLayouter.prototype.determineColumnDrawRanges = function () {\n        var startColumn = 0;\n        var endColumn = 0;\n        var cellWidths = 0;\n        var availableWidth = this.currentGraphics.clientSize.width - this.currentBounds.x;\n        for (var i = 0; i < this.Grid.columns.count; i++) {\n            cellWidths += this.Grid.columns.getColumn(i).width;\n            if (cellWidths >= availableWidth) {\n                var subWidths = 0;\n                for (var j = startColumn; j <= i; j++) {\n                    subWidths += this.Grid.columns.getColumn(j).width;\n                    if (subWidths > availableWidth) {\n                        break;\n                    }\n                    endColumn = j;\n                }\n                this.columnRanges.push([startColumn, endColumn]);\n                startColumn = endColumn + 1;\n                endColumn = startColumn;\n                cellWidths = (endColumn <= i) ? this.Grid.columns.getColumn(i).width : 0;\n            }\n        }\n        // if (startColumn !== this.columns.Count) {\n        this.columnRanges.push([startColumn, this.Grid.columns.count - 1]);\n        // }\n    };\n    /**\n     * `Layouts the on page`.\n     * @private\n     */\n    PdfGridLayouter.prototype.layoutOnPage = function (param) {\n        /* tslint:disable */\n        this.pageBounds.x = param.bounds.x;\n        this.pageBounds.y = param.bounds.y;\n        this.pageBounds.height = param.bounds.height;\n        var format = this.getFormat(param.format);\n        var endArgs = null;\n        var result = null;\n        var layoutedPages = new TemporaryDictionary();\n        var startPage = param.page;\n        var isParentCell = false;\n        var cellBounds = [];\n        for (var index = 0; index < this.columnRanges.length; index++) {\n            var range = this.columnRanges[index];\n            this.cellStartIndex = range[0];\n            this.cellEndIndex = range[1];\n            var returnObject = this.raiseBeforePageLayout(this.currentPage, this.currentBounds, this.currentRowIndex);\n            this.currentBounds = returnObject.currentBounds;\n            this.currentRowIndex = returnObject.currentRowIndex;\n            // if (returnObject.returnValue) {\n            //     result = new PdfGridLayoutResult(this.currentPage, this.currentBounds);\n            //     break;\n            // }\n            //Draw Headers.\n            var drawHeader = void 0;\n            for (var i_1 = 0; i_1 < this.Grid.headers.count; i_1++) {\n                var row = this.Grid.headers.getHeader(i_1);\n                var headerHeight = this.currentBounds.y;\n                this.isHeader = true;\n                if (startPage != this.currentPage) {\n                    for (var k = this.cellStartIndex; k <= this.cellEndIndex; k++) {\n                        if (row.cells.getCell(k).isCellMergeContinue) {\n                            row.cells.getCell(k).isCellMergeContinue = false;\n                            row.cells.getCell(k).value = \"\";\n                        }\n                    }\n                }\n                // RowLayoutResult\n                var headerResult = this.drawRow(row);\n                if (headerHeight === this.currentBounds.y) {\n                    drawHeader = true;\n                    if (PdfGridLayouter.repeatRowIndex === -1) {\n                        PdfGridLayouter.repeatRowIndex = i_1;\n                    }\n                }\n                else {\n                    drawHeader = false;\n                }\n                if (!headerResult.isFinish && startPage !== null\n                    && format.layout !== PdfLayoutType.OnePage && drawHeader) {\n                    this.startLocation.x = this.currentBounds.x;\n                    this.currentPage = this.getNextPageformat(format);\n                    this.startLocation.y = this.currentBounds.y;\n                    if (typeof format.paginateBounds !== 'undefined' && format.paginateBounds.x === 0 && format.paginateBounds.y === 0 && format.paginateBounds.width === 0 && format.paginateBounds.height === 0)\n                        this.currentBounds.x += this.startLocation.x;\n                    this.drawRow(row);\n                }\n                this.isHeader = false;\n            }\n            var i = 0;\n            var length_1 = this.Grid.rows.count;\n            var repeatRow = void 0;\n            var startingHeight = 0;\n            var flag = true;\n            //Here is to draw parent Grid and Cells\n            cellBounds = [];\n            //Draw row by row with the specified cell range.\n            for (var j = 0; j < this.Grid.rows.count; j++) {\n                var row = this.Grid.rows.getRow(j);\n                i++;\n                this.currentRowIndex = i - 1;\n                var originalHeight = this.currentBounds.y;\n                startPage = this.currentPage;\n                PdfGridLayouter.repeatRowIndex = -1;\n                if (flag && row.grid.isChildGrid) {\n                    startingHeight = originalHeight;\n                    flag = false;\n                }\n                var rowResult = null;\n                ///rowResult = this.drawRow(row);\n                /*if(!row.isrowFinish) {\n                    if(!row.grid.isgridSplit){\n                        rowResult = this.drawRow(row);\n                        row.isrowFinish = true;\n                        row.isrowDraw = true;\n                    } else {\n                        if(!row.isrowDraw){\n                            rowResult = this.drawRow(row);\n                            row.isrowFinish = true;\n                            row.isrowDraw = true;\n                            row.grid.isgridSplit = false;\n                        } else {\n                            rowResult =  null;\n                            break;\n                        }\n                    }\n                }\n                else {\n                    //row.isrowFinish = false;\n                    //rowResult = this.drawRow(row);\n                    rowResult = null;\n                    break;\n                    \n                }             */\n                if (this.Grid.splitChildRowIndex == -1) {\n                    rowResult = this.drawRow(row);\n                    row.isrowFinish = true;\n                }\n                else {\n                    if (row.grid.ParentCell.row.grid.isGridSplit && this.Grid.splitChildRowIndex <= row.rowIndex) {\n                        rowResult = this.drawRow(row);\n                        row.isrowFinish = true;\n                    }\n                    else if (row.isrowFinish) {\n                        continue;\n                    }\n                    else {\n                        break;\n                    }\n                }\n                //rowResult = this.drawRow(row);\n                cellBounds.push(rowResult.bounds.width);\n                /*if (row.isRowBreaksNextPage)\n                    {\n                        let x : number  = 0;\n                        for (let l : number = 0; l < row.cells.count; l++)\n                        {\n                            let isNestedRowBreak : boolean = false;\n                            if (row.height == row.cells.getCell(l).height)\n                            {\n                                let n : number;\n                                let grid : PdfGrid = row.cells.getCell(l).value as PdfGrid;\n                                for (let m : number = grid.rows.count; 0 < m; m--)\n                                {\n                                    if ((grid.rows.getRow(m - 1).rowBreakHeight > 0))\n                                    {\n                                        isNestedRowBreak = true;\n                                        break;\n                                    }\n                                    if (grid.rows.getRow(m - 1).isRowBreaksNextPage)\n                                    {\n                                        row.rowBreakHeightValue = grid.rows.getRow(m - 1).rowBreakHeightValue;\n                                        break;\n                                    }\n                                    row.rowBreakHeightValue += grid.rows.getRow(m - 1).height;\n                                }\n                            }\n                            if (isNestedRowBreak)\n                                break;\n                        }\n                        for (let j : number = 0; j < row.cells.count; j++)\n                        {\n\n                            if (row.height > row.cells.getCell(j).height)\n                            {\n                                row.cells.getCell(j).value = \" \";\n                                let rect : RectangleF ;\n                                let page : PdfPage = this.getNextPage(this.currentPage);\n                                let section : PdfSection = this.currentPage.section;\n                                let index : number = section.indexOf(page);\n                                for (let k : number = 0; k < (section.count - 1) - index; k++)\n                                {\n                                    rect = new RectangleF(x, 0, row.grid.columns.getColumn(j).width, page.getClientSize().height);\n                                    PdfGridLayouter.repeatRowIndex = -1;\n                                    row.cells.getCell(j).draw(page.graphics, rect, false);\n                                    page = this.getNextPage(page);\n                                }\n                                rect = new RectangleF(x, 0, row.grid.columns.getColumn(j).width, row.rowBreakHeightValue);\n\n                                row.cells.getCell(j).draw(page.graphics, rect, false);\n                            }\n                            x += row.grid.columns.getColumn(j).width;\n                        }\n                    }*/\n                //if height remains same, it is understood that row is not drawn in the page\n                if (originalHeight === this.currentBounds.y) {\n                    repeatRow = true;\n                    PdfGridLayouter.repeatRowIndex = this.Grid.rows.rowCollection.indexOf(row);\n                }\n                else {\n                    repeatRow = false;\n                    PdfGridLayouter.repeatRowIndex = -1;\n                }\n                while (!rowResult.isFinish && startPage != null) {\n                    var tempResult = this.getLayoutResult();\n                    /*if (startPage != this.currentPage)\n                        {\n                            if (row.grid.isChildGrid && row.grid.ParentCell != null)\n                            {\n                                let bounds : RectangleF= new RectangleF(new PointF(format.paginateBounds.x,format.paginateBounds.y), new SizeF(param.bounds.width, tempResult.bounds.height));\n                                bounds.x += param.bounds.x;\n                                if (row.grid.ParentCell.row.grid.style.cellPadding != null)\n                                {\n                                    bounds.y += row.grid.ParentCell.row.grid.style.cellPadding.top;\n                                    if (bounds.height > this.currentPageBounds.height)\n                                    {\n                                        bounds.height = this.currentPageBounds.height - bounds.y;\n                                        bounds.height -= (row.grid.ParentCell.row.grid.style.cellPadding.bottom);\n                                    }\n                                }\n                                // Draw border for cells in the nested grid cell's row.\n                                for (let c : number = 0; c < row.cells.count; c++)\n                                {\n                                    let cell : PdfGridCell = row.cells.getCell(c);\n                                    let cellWidth :  number= 0;\n                                    if (cell.columnSpan > 1)\n                                    {\n                                        for (; c < cell.columnSpan; c++)\n                                            cellWidth += row.grid.columns.getColumn(c).width;\n                                    }\n                                    else\n                                        cellWidth = Math.max(cell.width, row.grid.columns.getColumn(c).width);\n                                    cell.drawCellBorders(this.currentGraphics, new RectangleF(new PointF(bounds.x,bounds.y), new SizeF(cellWidth, bounds.height)));\n                                    bounds.x += cellWidth;\n                                    c += (cell.columnSpan - 1);\n                                }\n                            }\n                        }\n                        */\n                    endArgs = this.raisePageLayouted(tempResult);\n                    if (endArgs.cancel || repeatRow)\n                        break;\n                    else if (this.Grid.allowRowBreakAcrossPages) {\n                        //If there is no space in the current page, add new page and then draw the remaining row.\n                        this.currentPage = this.getNextPageformat(format);\n                        originalHeight = this.currentBounds.y;\n                        var location_1 = new PointF(PdfBorders.default.right.width / 2, PdfBorders.default.top.width / 2);\n                        if ((format.paginateBounds.x === 0 && format.paginateBounds.y === 0 && format.paginateBounds.width === 0 &&\n                            format.paginateBounds.height === 0) && (this.startLocation.x === location_1.x && this.startLocation.y === location_1.y)) {\n                            this.currentBounds.x += this.startLocation.x;\n                            this.currentBounds.y += this.startLocation.y;\n                        }\n                        if (this.isPaginate) {\n                            this.startLocation.y = this.currentBounds.y;\n                            this.isPaginate = false;\n                        }\n                        if (this.Grid.isChildGrid && row.grid.ParentCell != null) {\n                            if (this.Grid.ParentCell.row.grid.style.cellPadding != null) {\n                                if (row.rowBreakHeight + this.Grid.ParentCell.row.grid.style.cellPadding.top < this.currentBounds.height) {\n                                    this.currentBounds.y = this.Grid.ParentCell.row.grid.style.cellPadding.top;\n                                }\n                            }\n                        }\n                        if (row.grid.ParentCell != null) {\n                            row.grid.ParentCell.row.isRowBreaksNextPage = true;\n                            row.grid.ParentCell.row.rowBreakHeightValue = row.rowBreakHeight + this.Grid.ParentCell.row.grid.style.cellPadding.top + this.Grid.ParentCell.row.grid.style.cellPadding.bottom;\n                            for (var i_2 = row.rowIndex + 1; i_2 < row.grid.rows.count; i_2++) {\n                                row.grid.ParentCell.row.rowBreakHeightValue += row.grid.rows.getRow(i_2).height;\n                            }\n                            //row.rowBreakHeight = row.grid.ParentCell.row.rowBreakHeightValue;\n                        }\n                        /*if (row.noOfPageCount > 1)\n                        {\n                            let temp : number = row.rowBreakHeightValue;\n                            for (let j : number = 1; j < row.noOfPageCount; j++)\n                            {\n                                row.rowBreakHeightValue = 0;\n                                row.height = ((row.noOfPageCount - 1) * this.currentPage.getClientSize().height);\n                                this.drawRow(row);\n                                this.currentPage = this.getNextPageformat(format);\n                                startPage = this.currentPage;\n                            }\n                            row.rowBreakHeightValue = temp;\n                            row.noOfPageCount = 1;\n                            rowResult = this.drawRow(row);\n                        } else {\n                            rowResult = this.drawRow(row);\n                        }\n                        /*if(row.grid.isChildGrid){\n                            row.isrowFinish = false;\n                            row.isrowDraw = false;\n                            row.grid.isgridSplit = true;\n                            row.grid.ParentCell.row.grid.isgridSplit = true;\n                            //rowResult.isFinish = false;\n                            break;\n                        }*/\n                        if (row.grid.isChildGrid) {\n                            //row.grid.isgridSplit = true;\n                            row.isrowFinish = false;\n                            //row.grid.ParentCell.row.grid.isgridSplit = true;\n                            row.grid.splitChildRowIndex = row.rowIndex;\n                            row.grid.ParentCell.row.grid.splitChildRowIndex = row.grid.ParentCell.row.rowIndex;\n                            if (row.grid.ParentCell.row.grid.isGridSplit) {\n                                row.grid.ParentCell.row.noOfPageCount += 1;\n                                row.grid.ParentCell.row.grid.isGridSplit = false;\n                            }\n                            break;\n                        }\n                        if (row.noOfPageCount < 1) {\n                            if (row.grid.splitChildRowIndex != -1) {\n                                row.grid.isGridSplit = true;\n                            }\n                            if (row.style.border != null && ((row.style.border.left != null && row.style.border.left.width !== 1)\n                                || (row.style.border.top != null && row.style.border.top.width !== 1))) {\n                                var x = row.style.border.left.width / 2;\n                                var y = row.style.border.top.width / 2;\n                                if (this.currentBounds.x === PdfBorders.default.right.width / 2 && this.currentBounds.y === PdfBorders.default.right.width / 2) {\n                                    var newBound = new RectangleF(x, y, this.currentBounds.width, this.currentBounds.height);\n                                    this.currentBounds = newBound;\n                                }\n                            }\n                            if (this.Grid.repeatHeader) {\n                                for (var j_1 = 0; j_1 < this.Grid.headers.count; j_1++) {\n                                    var headerRepeat = this.Grid.headers.getHeader(j_1);\n                                    this.drawRow(headerRepeat);\n                                }\n                            }\n                            rowResult = this.drawRow(row);\n                            if (row.noOfPageCount >= 1) {\n                                var temp = row.rowBreakHeightValue;\n                                for (var j_2 = 0; j_2 < row.noOfPageCount; j_2++) {\n                                    //this.currentPage.section.add();\n                                    var tempResult1 = this.getLayoutResult();\n                                    endArgs = this.raisePageLayouted(tempResult1);\n                                    this.currentPage = this.getNextPageformat(format);\n                                    originalHeight = this.currentBounds.y;\n                                    //row.rowBreakHeightValue = 0;\n                                    if (row.grid.splitChildRowIndex != -1) {\n                                        row.grid.isGridSplit = true;\n                                    }\n                                    this.currentBounds.y = 0.5;\n                                    if (this.Grid.repeatHeader) {\n                                        for (var i_3 = 0; i_3 < this.Grid.headers.count; i_3++) {\n                                            var header = this.Grid.headers.getHeader(i_3);\n                                            this.drawRow(header);\n                                        }\n                                    }\n                                    //row.height = ((row.noOfPageCount - 1) * this.currentPage.getClientSize().height);\n                                    this.drawRow(row);\n                                }\n                                // row.rowBreakHeight = temp;\n                                // row.noOfPageCount = 1;\n                                // rowResult = this.drawRow(row);\n                            }\n                            row.grid.splitChildRowIndex = -1;\n                            row.grid.isGridSplit = false;\n                            rowResult.isFinish = this.checkIsFisished(row);\n                            //row.NestedGridLayoutResult.bounds.height = row.rowBreakHeightValue;\n                            //this.currentBounds.y = rowResult.bounds.y;\n                            for (var i_4 = 0; i_4 < row.cells.count; i_4++) {\n                                if (row.cells.getCell(i_4).value instanceof PdfGrid) {\n                                    row.cells.getCell(i_4).value.splitChildRowIndex = -1;\n                                }\n                            }\n                        }\n                    }\n                    // else if (!this.Grid.allowRowBreakAcrossPages && i < length)\n                    // {\n                    //     this.currentPage = this.getNextPageformat(format);\n                    //     break;\n                    // }\n                    // else if (i >= length)\n                    //     break;\n                }\n                if (!rowResult.isFinish && startPage !== null && format.layout !== PdfLayoutType.OnePage && repeatRow) {\n                    // During pagination, cell position is maintained here.\n                    this.startLocation.x = this.currentBounds.x;\n                    var isAddNextPage = false;\n                    this.currentPage = this.getNextPageformat(format);\n                    /*if (!this.Grid.isSingleGrid)\n                    {\n                        for ( let j : number= 0; j < this.Grid.rows.count; j++)\n                        {\n                            let isWidthGreaterthanParent : boolean = false;\n                            for (let k : number = 0; k < this.Grid.rows.getRow(j).cells.count; k++)\n                            {\n                                if (this.Grid.rows.getRow(j).cells.getCell(k).width > this.currentPageBounds.width)\n                                    isWidthGreaterthanParent = true;\n                            }\n                            if (isWidthGreaterthanParent && this.Grid.rows.getRow(j).cells.getCell(this.rowBreakPageHeightCellIndex).pageCount > 0)\n                            {\n                                isAddNextPage = true;\n                            }\n                        }\n                    }\n                    if (!this.Grid.isRearranged && isAddNextPage)\n                         {\n                             let section : PdfSection = this.currentPage.section;\n                             \n                             //this.currentPage = section.add();\n                         \n                             this.currentGraphics = this.currentPage.graphics;\n                             this.currentBounds = new RectangleF(new PointF(0,0), this.currentPage.getClientSize());\n                          \n                             let pageindex  : number = (this.currentGraphics.page as PdfPage).section.indexOf(this.currentGraphics.page as PdfPage);\n                         }\n                         else\n                         {\n                             this.currentPage = this.getNextPageformat(format);\n                         }\n                         if (format.paginateBounds.y == 0)\n                             this.currentBounds.y = PdfBorders.default.top.width/2;\n                         else\n                         {\n                             this.currentBounds.y = format == null ? 0 : format.paginateBounds.y;\n                             \n                         }*/\n                    if (this.raiseBeforePageLayout(this.currentPage, this.currentBounds, this.currentRowIndex).returnValue) {\n                        break;\n                    }\n                    if ((param.format !== null) && !param.format.usePaginateBounds && param.bounds !== null &&\n                        param.bounds.height > 0 && !this.Grid.isChildGrid) {\n                        this.currentBounds.height = param.bounds.height;\n                    }\n                    if (typeof param.format !== 'undefined' && param.format != null && typeof param.format.usePaginateBounds !== 'undefined' && !param.format.usePaginateBounds && !(param.format.paginateBounds.x === 0 && param.format.paginateBounds.y === 0 && param.format.paginateBounds.width === 0 && param.format.paginateBounds.height === 0) && param.format.paginateBounds.y === 0) {\n                        this.currentBounds.y = PdfBorders.default.top.width / 2;\n                    }\n                    else {\n                        this.currentBounds.y = format == null ? 0 : format.paginateBounds.y;\n                        if (format != null && (format.paginateBounds.x !== 0 || format.paginateBounds.y !== 0 || format.paginateBounds.height !== 0 || format.paginateBounds.width !== 0)) {\n                            this.currentBounds.x = format.paginateBounds.x;\n                            this.currentBounds.width = format.paginateBounds.width;\n                            this.currentBounds.height = format.paginateBounds.height;\n                        }\n                    }\n                    if (typeof param.format !== 'undefined' && (param.format !== null) && typeof param.format.usePaginateBounds !== 'undefined' && !param.format.usePaginateBounds && param.bounds !== null &&\n                        param.bounds.y > 0 && !this.Grid.isChildGrid) {\n                        this.currentBounds.y = param.bounds.y;\n                    }\n                    this.startLocation.y = this.currentBounds.y;\n                    if ((format.paginateBounds.x === format.paginateBounds.y) &&\n                        (format.paginateBounds.y === format.paginateBounds.height) &&\n                        (format.paginateBounds.height === format.paginateBounds.width) && (format.paginateBounds.width === 0)) {\n                        this.currentBounds.x += this.startLocation.x;\n                    }\n                    if (this.currentBounds.x === PdfBorders.default.left.width / 2) {\n                        this.currentBounds.y += this.startLocation.x;\n                    }\n                    if (this.Grid.repeatHeader) {\n                        for (var i_5 = 0; i_5 < this.Grid.headers.count; i_5++) {\n                            var header = this.Grid.headers.getHeader(i_5);\n                            this.drawRow(header);\n                        }\n                    }\n                    this.drawRow(row);\n                    if (this.currentPage !== null && !layoutedPages.containsKey(this.currentPage)) {\n                        layoutedPages.add(this.currentPage, range);\n                    }\n                }\n                if (row.NestedGridLayoutResult != null) {\n                    // Position for next row in the grid.\n                    this.currentPage = row.NestedGridLayoutResult.page;\n                    this.currentGraphics = this.currentPage.graphics; //If not, next row will not be drawn in the layouted page.\n                    this.startLocation = new PointF(row.NestedGridLayoutResult.bounds.x, row.NestedGridLayoutResult.bounds.y);\n                    var recalHeight = this.ReCalculateHeight(row, row.NestedGridLayoutResult.bounds.height);\n                    this.currentBounds.y = recalHeight;\n                    //this.currentBounds.y = row.NestedGridLayoutResult.bounds.height;\n                    if (startPage != this.currentPage) {\n                        var section = this.currentPage.section;\n                        var startIndex = section.indexOf(startPage) + 1;\n                        var endIndex = section.indexOf(this.currentPage);\n                        for (var page = startIndex; page < endIndex + 1; page++) {\n                            var pageGraphics = section.getPages()[page].graphics;\n                            var location_2 = new PointF(format.paginateBounds.x, format.paginateBounds.y);\n                            var height = page == endIndex ? (row.NestedGridLayoutResult.bounds.height - param.bounds.y) :\n                                (this.currentBounds.height - location_2.y);\n                            if (height <= pageGraphics.clientSize.height)\n                                height += param.bounds.y;\n                            // if (row.grid.isChildGrid && row.grid.ParentCell != null)\n                            //     location.x += param.bounds.x;\n                            location_2.y = format == null ? 0.5 : format.paginateBounds.y;\n                            // Draw border for last paginated row containing nested grid.\n                            for (var c = 0; c < row.cells.count; c++) {\n                                var cell = row.cells.getCell(c);\n                                var cellWidth = 0;\n                                var totalwidth = 0;\n                                var childGridCell = void 0;\n                                if (cell.value instanceof PdfGrid) {\n                                    if (!childGridCell) {\n                                        childGridCell = cell;\n                                    }\n                                    for (var i_6 = 0; i_6 < cell.value.columns.count; i_6++) {\n                                        totalwidth += cell.value.columns.getColumn(i_6).columnWidth;\n                                    }\n                                }\n                                else {\n                                    totalwidth = cell.width;\n                                }\n                                if (cell.columnSpan > 1) {\n                                    for (; c < cell.columnSpan; c++)\n                                        cellWidth += row.grid.columns.getColumn(c).width;\n                                }\n                                else\n                                    cellWidth = Math.max(totalwidth, row.grid.columns.getColumn(c).width);\n                                var bottomPadding = void 0;\n                                if (childGridCell && childGridCell.style && childGridCell.style.cellPadding) {\n                                    bottomPadding = childGridCell.style.cellPadding.bottom;\n                                }\n                                else {\n                                    bottomPadding = this.Grid.style.cellPadding.bottom;\n                                }\n                                if (typeof bottomPadding === 'number' && (height + bottomPadding) < pageGraphics.clientSize.height) {\n                                    height += bottomPadding;\n                                    this.currentBounds.y += bottomPadding;\n                                }\n                                cell.drawCellBorders(pageGraphics, new RectangleF(location_2, new SizeF(cellWidth, height)));\n                                var rowWidth = this.Grid.rows.getRow(this.Grid.rows.count - 1).width;\n                                if (cellWidth !== rowWidth) {\n                                    cell.drawCellBorders(pageGraphics, new RectangleF(location_2, new SizeF(rowWidth, height)));\n                                }\n                                location_2.x += cellWidth;\n                                c += (cell.columnSpan - 1);\n                            }\n                        }\n                        // So, nested grid drawing is completed for the current row. Update page.\n                        // Otherwise, the next nested grid of the parent will draw borders from start.\n                        startPage = this.currentPage;\n                    }\n                }\n            }\n            var isPdfGrid = false;\n            var maximumCellBoundsWidth = 0;\n            if (cellBounds.length > 0) {\n                maximumCellBoundsWidth = cellBounds[0];\n            }\n            var largeNavigatePage = [[1, 2]];\n            for (var c = 0; c < this.Grid.rows.count; c++) {\n                if (this.cellEndIndex != -1 && this.Grid.rows.getRow(c).cells.getCell(this.cellEndIndex).value instanceof PdfGrid) {\n                    var grid = this.Grid.rows.getRow(c).cells.getCell(this.cellEndIndex).value;\n                    this.rowLayoutBoundsWidth = grid.rowLayoutBoundsWidth;\n                    isPdfGrid = true;\n                    // if (largeNavigatePage[0][0] < grid.listOfNavigatePages.length)\n                    // {\n                    //     largeNavigatePage[0][0] = grid.listOfNavigatePages.length;\n                    //     largeNavigatePage[0][1] = cellBounds[c];\n                    // }\n                    // else if ((largeNavigatePage[0][0] == grid.listOfNavigatePages.length) && (largeNavigatePage[0][1] < cellBounds[c]))\n                    // {\n                    //     largeNavigatePage[0][1] = cellBounds[c];\n                    // }\n                }\n            }\n            if (!isPdfGrid && cellBounds.length > 0) {\n                for (var c = 0; c < i - 1; c++) {\n                    if (maximumCellBoundsWidth < cellBounds[c]) {\n                        maximumCellBoundsWidth = cellBounds[c];\n                    }\n                }\n                this.rowLayoutBoundsWidth = maximumCellBoundsWidth;\n            }\n            else {\n                this.rowLayoutBoundsWidth = largeNavigatePage[0][1];\n            }\n            if (this.columnRanges.indexOf(range) < this.columnRanges.length - 1\n                && startPage != null && format.layout != PdfLayoutType.OnePage) {\n                isParentCell = this.Grid.isChildGrid;\n                if (largeNavigatePage[0][0] != 0) {\n                    var section = this.currentPage.section;\n                    var pageIndex = section.indexOf(this.currentPage);\n                    this.currentGraphics = this.currentPage.graphics;\n                    this.currentBounds = new RectangleF(new PointF(0, 0), this.currentPage.getClientSize());\n                    var pageindex = this.currentGraphics.page.section.indexOf(this.currentGraphics.page);\n                }\n                else {\n                    this.currentPage = this.getNextPageformat(format);\n                }\n                // let locationGrid : PointF= new PointF(PdfBorders.default.right.width / 2, PdfBorders.default.top.width / 2);\n                // if (format.paginateBounds == new RectangleF(0,0,0,0) && this.startLocation == locationGrid)\n                // {\n                //     this.currentBounds.x += this.startLocation.x;\n                //     this.currentBounds.y += this.startLocation.y;\n                // }\n            }\n            if (this.columnRanges.length - 1 !== index && this.columnRanges.length > 1 && format.layout !== PdfLayoutType.OnePage) {\n                this.currentPage = this.getNextPageformat(format);\n                if ((format.paginateBounds.x === format.paginateBounds.y) && (format.paginateBounds.y === format.paginateBounds.height)\n                    && (format.paginateBounds.height === format.paginateBounds.width) && (format.paginateBounds.width === 0)) {\n                    this.currentBounds.x += this.startLocation.x;\n                    this.currentBounds.y += this.startLocation.y;\n                    //this.currentBounds.height = this.pageBounds.height;\n                }\n            }\n        }\n        result = this.getLayoutResult();\n        if (this.Grid.style.allowHorizontalOverflow && this.Grid.style.horizontalOverflowType == PdfHorizontalOverflowType.NextPage) {\n            this.reArrangePages(layoutedPages);\n        }\n        this.raisePageLayouted(result);\n        return result;\n    };\n    PdfGridLayouter.prototype.checkIsFisished = function (row) {\n        var result = true;\n        for (var i = 0; i < row.cells.count; i++) {\n            if (!row.cells.getCell(i).FinishedDrawingCell) {\n                result = false;\n            }\n        }\n        return result;\n    };\n    /* tslint:enable */\n    /**\n     * Gets the `next page`.\n     * @private\n     */\n    PdfGridLayouter.prototype.getNextPageformat = function (format) {\n        var section = this.currentPage.section;\n        var nextPage = null;\n        var index = section.indexOf(this.currentPage);\n        this.flag = false;\n        if (index === section.count - 1) {\n            nextPage = section.add();\n        }\n        else {\n            nextPage = section.getPages()[index + 1];\n        }\n        this.currentGraphics = nextPage.graphics;\n        var pageindex = this.currentGraphics.page.section.indexOf(this.currentGraphics.page);\n        if (!(this.listOfNavigatePages.indexOf(pageindex) !== -1)) {\n            this.listOfNavigatePages.push(pageindex);\n        }\n        this.currentBounds = new RectangleF(new PointF(0, 0), nextPage.getClientSize());\n        if ((typeof format !== 'undefined') && format != null && format.usePaginateBounds && (typeof format.paginateBounds !== 'undefined') && format.paginateBounds != null && (format.paginateBounds.x !== format.paginateBounds.y) && (format.paginateBounds.y !== format.paginateBounds.height)\n            && (format.paginateBounds.height !== format.paginateBounds.width) && (format.paginateBounds.width !== 0)) {\n            this.currentBounds.x = format.paginateBounds.x;\n            this.currentBounds.y = format.paginateBounds.y;\n            this.currentBounds.height = format.paginateBounds.height;\n        }\n        return nextPage;\n    };\n    PdfGridLayouter.prototype.CheckIfDefaultFormat = function (format) {\n        var defaultFormat = new PdfStringFormat();\n        return (format.alignment === defaultFormat.alignment && format.characterSpacing === defaultFormat.characterSpacing &&\n            format.clipPath === defaultFormat.clipPath && format.firstLineIndent === defaultFormat.firstLineIndent &&\n            format.horizontalScalingFactor === defaultFormat.horizontalScalingFactor &&\n            format.lineAlignment === defaultFormat.lineAlignment\n            && format.lineLimit === defaultFormat.lineLimit && format.lineSpacing === defaultFormat.lineSpacing &&\n            format.measureTrailingSpaces === defaultFormat.measureTrailingSpaces && format.noClip === defaultFormat.noClip &&\n            format.paragraphIndent === defaultFormat.paragraphIndent && format.rightToLeft === defaultFormat.rightToLeft &&\n            format.subSuperScript === defaultFormat.subSuperScript && format.wordSpacing === defaultFormat.wordSpacing &&\n            format.wordWrap === defaultFormat.wordWrap);\n    };\n    /**\n     * `Raises BeforeCellDraw event`.\n     * @private\n     */\n    PdfGridLayouter.prototype.RaiseBeforeCellDraw = function (graphics, rowIndex, cellIndex, bounds, value, style) {\n        var args = null;\n        if (this.Grid.raiseBeginCellDraw) {\n            args = new PdfGridBeginCellDrawEventArgs(graphics, rowIndex, cellIndex, bounds, value, style);\n            this.Grid.onBeginCellDraw(args);\n            style = args.style;\n        }\n        return style;\n    };\n    /**\n     * `Raises AfterCellDraw event`.\n     * @private\n     */\n    PdfGridLayouter.prototype.raiseAfterCellDraw = function (graphics, rowIndex, cellIndex, bounds, value, cellstyle) {\n        var args = null;\n        if (this.Grid.raiseEndCellDraw) {\n            args = new PdfGridEndCellDrawEventArgs(graphics, rowIndex, cellIndex, bounds, value, cellstyle);\n            this.Grid.onEndCellDraw(args);\n        }\n    };\n    PdfGridLayouter.prototype.reArrangePages = function (layoutedPages) {\n        var document = this.currentPage.document;\n        var pages = [];\n        var keys = layoutedPages.keys();\n        var values = layoutedPages.values();\n        for (var i = 0; i < keys.length; i++) {\n            var page = keys[i];\n            page.section = null;\n            pages.push(page);\n            document.pages.remove(page);\n        }\n        /* tslint:disable */\n        for (var i = 0; i < layoutedPages.size(); i++) {\n            var count = 0;\n            for (var j = i, count_1 = (layoutedPages.size() / this.columnRanges.length); j < layoutedPages.size(); j += count_1) {\n                var page = pages[j];\n                if (typeof page !== 'undefined' && document.pages.indexOf(page) === -1) {\n                    document.pages.add(page);\n                }\n            }\n        }\n        /* tslint:enable */\n    };\n    /**\n     * Gets the `layout result`.\n     * @private\n     */\n    PdfGridLayouter.prototype.getLayoutResult = function () {\n        if (this.Grid.isChildGrid && this.Grid.allowRowBreakAcrossPages) {\n            for (var i = 0; i < this.Grid.rows.count; i++) {\n                var row = this.Grid.rows.getRow(i);\n                if (row.rowBreakHeight > 0 && row.repeatFlag) {\n                    this.startLocation.y = this.currentPage.origin.y;\n                }\n            }\n        }\n        var bounds;\n        if (!this.isChanged) {\n            bounds = new RectangleF(this.startLocation, new SizeF(this.currentBounds.width, this.currentBounds.y -\n                this.startLocation.y));\n        }\n        // else {\n        //     bounds = new RectangleF(this.currentLocation, new SizeF(this.currentBounds.width, this.currentBounds.y -\n        //                              this.currentLocation.y));\n        // }\n        /* tslint:enable */\n        return new PdfGridLayoutResult(this.currentPage, bounds);\n    };\n    /**\n     * `Recalculate row height` for the split cell to be drawn.\n     * @private\n     */\n    PdfGridLayouter.prototype.ReCalculateHeight = function (row, height) {\n        var newHeight = 0.0;\n        for (var i = this.cellStartIndex; i <= this.cellEndIndex; i++) {\n            if (!(row.cells.getCell(i).remainingString === null || row.cells.getCell(i).remainingString === '' ||\n                typeof row.cells.getCell(i).remainingString === 'undefined')) {\n                newHeight = Math.max(newHeight, row.cells.getCell(i).measureHeight());\n            }\n        }\n        return Math.max(height, newHeight);\n    };\n    /**\n     * `Raises BeforePageLayout event`.\n     * @private\n     */\n    PdfGridLayouter.prototype.raiseBeforePageLayout = function (currentPage, currentBounds, currentRow) {\n        var cancel = false;\n        if (this.Grid.raiseBeginPageLayout) {\n            var args = new PdfGridBeginPageLayoutEventArgs(currentBounds, currentPage, currentRow);\n            this.Grid.onBeginPageLayout(args);\n            // if (currentBounds !== args.Bounds) {\n            //     this.isChanged = true;\n            //     this.currentLocation = new PointF(args.Bounds.x, args.Bounds.y);\n            //     this.measureColumnsWidth(new RectangleF(new PointF(args.Bounds.x, args.Bounds.y) ,\n            //                                                  new SizeF(args.Bounds.width + args.Bounds.x ,\n            //                                                                 args.Bounds.height)));\n            // }\n            cancel = (typeof args.cancel === 'undefined' ? false : args.cancel);\n            currentBounds = args.bounds;\n            currentRow = args.startRowIndex;\n        }\n        return { returnValue: cancel, currentBounds: currentBounds, currentRowIndex: currentRow };\n    };\n    /**\n     * `Raises PageLayout event` if needed.\n     * @private\n     */\n    PdfGridLayouter.prototype.raisePageLayouted = function (result) {\n        var args = new PdfGridEndPageLayoutEventArgs(result);\n        if (this.Grid.raiseEndPageLayout) {\n            this.Grid.onEndPageLayout(args);\n        }\n        return args;\n    };\n    PdfGridLayouter.prototype.drawRow = function (row, result, height) {\n        if (typeof result === 'undefined') {\n            //.. Check if required space available.\n            //.....If the row conains spans which  falls through more than one page, then draw the row to next page.                        \n            var result_1 = new RowLayoutResult();\n            var rowHeightWithSpan = 0;\n            var location_3 = new PointF(0, 0);\n            var size = new SizeF(0, 0);\n            var isHeader = false;\n            if (row.rowSpanExists) {\n                var maxSpan = 0;\n                var currRowIndex = this.Grid.rows.rowCollection.indexOf(row);\n                if (currRowIndex === -1) {\n                    currRowIndex = this.Grid.headers.indexOf(row);\n                    if (currRowIndex !== -1) {\n                        isHeader = true;\n                    }\n                }\n                for (var i = 0; i < row.cells.count; i++) {\n                    var cell = row.cells.getCell(i);\n                    maxSpan = Math.max(maxSpan, cell.rowSpan);\n                }\n                for (var i = currRowIndex; i < currRowIndex + maxSpan; i++) {\n                    rowHeightWithSpan += (isHeader ? this.Grid.headers.getHeader(i).height : this.Grid.rows.getRow(i).height);\n                }\n                // let rowMaxHeight : number = rowHeightWithSpan;\n                // for (let i : number = 0; i < row.cells.count; i++ ) {\n                //     rowMaxHeight = rowMaxHeight > row.cells.getCell(i).height ? rowMaxHeight : row.cells.getCell(i).height;\n                // }\n                // let flag : boolean = true;\n                // let nextRow : PdfGridRow = this.Grid.headers.getHeader(this.Grid.headers.indexOf(row) + 1);\n                // for (let i : number = 0; i < nextRow.cells.count; i++ ) {\n                //     if (nextRow.cells.getCell(i).value !== '' && nextRow.cells.getCell(i).value !== undefined) {\n                //         flag = false;\n                //         break;\n                //     }\n                // }\n                // if ((rowMaxHeight > rowHeightWithSpan) && flag) {\n                //     row.height += (rowMaxHeight - rowHeightWithSpan);\n                // }                \n            }\n            var calculatedHeight = row.rowBreakHeight > 0.0 ? row.rowBreakHeight : row.height;\n            if (typeof this.Grid.isChildGrid !== 'undefined' && this.Grid.isChildGrid && typeof this.Grid.ParentCell !== 'undefined' && this.Grid.ParentCell != null) {\n                //Split row only if row height exceeds page height and AllowRowBreakAcrossPages is true.\n                // if (calculatedHeight + this.Grid.ParentCell.row.grid.style.cellPadding.bottom +\n                //             this.Grid.ParentCell.row.grid.style.cellPadding.top > this.currentPageBounds.height) {\n                //     if (this.Grid.allowRowBreakAcrossPages) {\n                //         result.isFinish = true;\n                //         if ( this.Grid.isChildGrid && row.rowBreakHeight > 0 ) {\n                //             if (this.Grid.ParentCell.row.grid.style.cellPadding !== null) {\n                //                 this.currentBounds.y += this.Grid.ParentCell.row.grid.style.cellPadding.top;\n                //             }\n                //             this.currentBounds.x = this.startLocation.x;\n                //         }\n                //         result.bounds = this.currentBounds ;\n                //         this.drawRowWithBreak(result, row, calculatedHeight);\n                //     } else {\n                //         //If AllowRowBreakAcrossPages is not true, draw the row till it fits the page.                       \n                //         if (this.Grid.ParentCell.row.grid.style.cellPadding != null) {\n                //             this.currentBounds.y += this.Grid.ParentCell.row.grid.style.cellPadding.top;\n                //             calculatedHeight = this.currentBounds.height - this.currentBounds.y -\n                //                     this.Grid.ParentCell.row.grid.style.cellPadding.bottom;\n                //         }\n                //         result.isFinish = false;\n                //         this.drawRow( row, result, calculatedHeight);\n                //     }\n                // } else\n                if (this.currentBounds.y + this.Grid.ParentCell.row.grid.style.cellPadding.bottom + calculatedHeight >\n                    this.currentPageBounds.height || this.currentBounds.y + this.Grid.ParentCell.row.grid.style.cellPadding.bottom\n                    + calculatedHeight > this.currentBounds.height || this.currentBounds.y +\n                    this.Grid.ParentCell.row.grid.style.cellPadding.bottom + rowHeightWithSpan > this.currentPageBounds.height) {\n                    //If a row is repeated and still cannot fit in page, proceed draw.\n                    if (typeof this.Grid.ParentCell.row.grid.LayoutFormat !== 'undefined' && this.Grid.ParentCell.row.grid.LayoutFormat.break === PdfLayoutBreakType.FitPage) {\n                        PdfGridLayouter.repeatRowIndex = this.Grid.rows.rowCollection.indexOf(row);\n                        this.Grid.splitChildRowIndex = this.Grid.rows.rowCollection.indexOf(row);\n                    }\n                    if (PdfGridLayouter.repeatRowIndex > -1 && PdfGridLayouter.repeatRowIndex === row.rowIndex) {\n                        if (this.Grid.allowRowBreakAcrossPages) {\n                            result_1.isFinish = true;\n                            // if (this.Grid.isChildGrid && row.rowBreakHeightValue > 0) {\n                            //     // if (this.Grid.ParentCell.row.grid.style.cellPadding != null) {\n                            //     //     this.currentBounds.y += this.Grid.ParentCell.row.grid.style.cellPadding.top;\n                            //     // }\n                            //     this.currentBounds.x = this.startLocation.x;\n                            // }\n                            result_1.bounds = this.currentBounds;\n                            this.drawRowWithBreak(result_1, row, calculatedHeight);\n                            row.repeatFlag = true;\n                            row.repeatRowNumber = PdfGridLayouter.repeatRowIndex;\n                        }\n                        // else {\n                        //     result.isFinish = false;\n                        //     row.repeatFlag = false;\n                        //     this.drawRow( row, result, calculatedHeight);\n                        // }\n                    }\n                    // else {\n                    //     result.isFinish = false;\n                    // }\n                }\n                else {\n                    result_1.isFinish = true;\n                    if (row.grid.ParentCell.row.rowBreakHeightValue > 0) {\n                        row.repeatFlag = true;\n                    }\n                    else {\n                        row.repeatFlag = false;\n                        calculatedHeight = row.height;\n                    }\n                    if (this.Grid.isChildGrid && row.rowBreakHeight > 0) {\n                        if (this.Grid.ParentCell.row.grid.style.cellPadding != null) {\n                            calculatedHeight += this.Grid.ParentCell.row.grid.style.cellPadding.bottom;\n                        }\n                    }\n                    this.drawRow(row, result_1, calculatedHeight);\n                }\n            }\n            else {\n                //Split row only if row height exceeds page height and AllowRowBreakAcrossPages is true.\n                if (calculatedHeight > this.currentPageBounds.height) {\n                    if (this.Grid.allowRowBreakAcrossPages) {\n                        result_1.isFinish = true;\n                        //result.bounds = this.currentBounds;\n                        this.drawRowWithBreak(result_1, row, calculatedHeight);\n                        row.isrowFinish = true;\n                        row.repeatFlag = true;\n                        if (row.grid.splitChildRowIndex !== -1) {\n                            result_1.isFinish = false;\n                        }\n                    }\n                    // else {\n                    //     //If AllowRowBreakAcrossPages is not true, draw the row till it fits the page.\n                    //     result.isFinish = false;\n                    //     this.drawRow( row, result, calculatedHeight);\n                    // }\n                }\n                else if (this.currentBounds.y + calculatedHeight > this.currentPageBounds.height ||\n                    this.currentBounds.y + calculatedHeight > (this.currentBounds.height + this.startLocation.y) ||\n                    this.currentBounds.y + rowHeightWithSpan > this.currentPageBounds.height) {\n                    // If a row is repeated and still cannot fit in page, proceed draw.\n                    var isFit = false;\n                    if ((this.Grid.allowRowBreakAcrossPages && !this.Grid.repeatHeader && !row.isRowHeightSet && !row.rowMergeComplete)) {\n                        if (this.Grid.LayoutFormat !== null && this.Grid.LayoutFormat.paginateBounds.height > 0) {\n                            isFit = this.isFitToCell((this.currentBounds.height + this.startLocation.y) - this.currentBounds.y, this.Grid, row);\n                        }\n                        else\n                            isFit = this.isFitToCell(this.currentPageBounds.height - this.currentBounds.y, this.Grid, row);\n                        if (isFit) {\n                            this.isPaginate = true;\n                        }\n                    }\n                    else if (this.Grid.allowRowBreakAcrossPages && this.Grid.LayoutFormat != null && this.Grid.LayoutFormat.layout == PdfLayoutType.Paginate && this.Grid.LayoutFormat.break != PdfLayoutBreakType.FitElement && row.isRowHeightSet && this.currentBounds.y + height > this.currentPageBounds.height) {\n                        isFit = this.isFitToCell(this.currentPageBounds.height - this.currentBounds.y, this.Grid, row);\n                        if (!isFit)\n                            isFit = !(this.slr !== null && this.slr.actualSize.height == 0 && this.slr.remainder != null && this.slr.remainder.length > 0 && this.remainderText == this.slr.remainder);\n                        if (isFit && this.slr != null && this.slr.lineCount > 1) {\n                            //It may text cutoff issue\n                            isFit = false;\n                        }\n                        this.remainderText = null;\n                    }\n                    if (PdfGridLayouter.repeatRowIndex > -1 && PdfGridLayouter.repeatRowIndex === row.rowIndex || isFit) {\n                        if (this.Grid.allowRowBreakAcrossPages) {\n                            result_1.isFinish = true;\n                            this.drawRowWithBreak(result_1, row, calculatedHeight);\n                            row.repeatFlag = true;\n                            row.repeatRowNumber = PdfGridLayouter.repeatRowIndex;\n                            if (row.grid.splitChildRowIndex !== -1) {\n                                result_1.isFinish = false;\n                            }\n                        }\n                        else {\n                            result_1.isFinish = false;\n                            this.drawRow(row, result_1, calculatedHeight);\n                        }\n                    }\n                    else {\n                        result_1.isFinish = false;\n                    }\n                }\n                else {\n                    result_1.isFinish = true;\n                    this.drawRow(row, result_1, calculatedHeight);\n                    row.repeatFlag = false;\n                }\n            }\n            return result_1;\n        }\n        else {\n            var skipcell = false;\n            var location_4 = new PointF(this.currentBounds.x, this.currentBounds.y);\n            // if (row.grid.isChildGrid && row.grid.allowRowBreakAcrossPages && this.startLocation.x !== this.currentBounds.x && row.width <\n            //                 this.currentPage.getClientSize().width) {\n            //     location.x = this.startLocation.x;\n            // }\n            result.bounds = new RectangleF(location_4, new SizeF(0, 0));\n            height = this.ReCalculateHeight(row, height);\n            for (var i = this.cellStartIndex; i <= this.cellEndIndex; i++) {\n                var cancelSpans = ((i > this.cellEndIndex + 1) && (row.cells.getCell(i).columnSpan > 1));\n                // let cancelSpans : boolean = false;\n                if (!cancelSpans) {\n                    for (var j = 1; j < row.cells.getCell(i).columnSpan; j++) {\n                        row.cells.getCell(i + j).isCellMergeContinue = true;\n                    }\n                }\n                var size = new SizeF(this.Grid.columns.getColumn(i).width, height);\n                // if (size.width > this.currentGraphics.clientSize.width) {\n                //     size.width = this.currentGraphics.clientSize.width;\n                // }\n                // if (this.Grid.isChildGrid && this.Grid.style.allowHorizontalOverflow) {\n                //     if (size.width >= this.currentGraphics.clientSize.width) {\n                //         size.width -= 2 * this.currentBounds.x;\n                //     }\n                // }\n                /* tslint:disable */\n                if (!this.CheckIfDefaultFormat(this.Grid.columns.getColumn(i).format) &&\n                    this.CheckIfDefaultFormat(row.cells.getCell(i).stringFormat)) {\n                    row.cells.getCell(i).stringFormat = this.Grid.columns.getColumn(i).format;\n                }\n                var cellstyle = row.cells.getCell(i).style;\n                var tempValue = ((typeof row.cells.getCell(i).value === 'string' &&\n                    row.cells.getCell(i).value !== null) ? row.cells.getCell(i).value : '');\n                row.cells.getCell(i).style = this.RaiseBeforeCellDraw(this.currentGraphics, this.currentRowIndex, i, new RectangleF(location_4, size), tempValue, cellstyle);\n                //row.cells.getCell(i).style = cellstyle;\n                if (!skipcell) {\n                    if (row.cells.getCell(i).value instanceof PdfGrid) {\n                        var grid = row.cells.getCell(i).value;\n                        grid.parentCellIndex = i;\n                    }\n                    var stringResult = row.cells.getCell(i).draw(this.currentGraphics, new RectangleF(location_4, size), cancelSpans);\n                    if (row.grid.style.allowHorizontalOverflow && (row.cells.getCell(i).columnSpan > this.cellEndIndex ||\n                        i + row.cells.getCell(i).columnSpan > this.cellEndIndex + 1) && this.cellEndIndex < row.cells.count - 1) {\n                        row.rowOverflowIndex = this.cellEndIndex;\n                    }\n                    if (row.grid.style.allowHorizontalOverflow && (row.rowOverflowIndex > 0 && (row.cells.getCell(i).columnSpan >\n                        this.cellEndIndex || i + row.cells.getCell(i).columnSpan > this.cellEndIndex + 1)) &&\n                        row.cells.getCell(i).columnSpan - this.cellEndIndex + i - 1 > 0) {\n                        row.cells.getCell(row.rowOverflowIndex + 1).value = stringResult !== null ? (stringResult.remainder !== undefined) ?\n                            stringResult.remainder : '' : '';\n                        row.cells.getCell(row.rowOverflowIndex + 1).stringFormat = row.cells.getCell(i).stringFormat;\n                        row.cells.getCell(row.rowOverflowIndex + 1).style = row.cells.getCell(i).style;\n                        row.cells.getCell(row.rowOverflowIndex + 1).columnSpan = row.cells.getCell(i).columnSpan - this.cellEndIndex + i - 1;\n                    }\n                }\n                /* tslint:enable */\n                tempValue = ((typeof row.cells.getCell(i).value === 'string' &&\n                    row.cells.getCell(i).value !== null) ? row.cells.getCell(i).value : '');\n                if (!cancelSpans) {\n                    this.raiseAfterCellDraw(this.currentGraphics, this.currentRowIndex, i, new RectangleF(location_4, size), tempValue, row.cells.getCell(i).style);\n                }\n                if (row.cells.getCell(i).value instanceof PdfGrid) {\n                    var grid = row.cells.getCell(i).value;\n                    if (this.Grid.columns.getColumn(i).width >= this.currentGraphics.clientSize.width) {\n                        location_4.x = grid.rowLayoutBoundsWidth;\n                        location_4.x += grid.style.cellSpacing;\n                    }\n                    else {\n                        location_4.x += this.Grid.columns.getColumn(i).width;\n                    }\n                }\n                else {\n                    location_4.x += this.Grid.columns.getColumn(i).width;\n                }\n            }\n            if (!row.rowMergeComplete || row.isRowHeightSet) {\n                this.currentBounds.y += height;\n            }\n            result.bounds = new RectangleF(new PointF(result.bounds.x, result.bounds.y), new SizeF(location_4.x, location_4.y));\n        }\n    };\n    PdfGridLayouter.prototype.isFitToCell = function (currentHeight, grid, gridRow) {\n        var isFit = false;\n        var layouter = new PdfStringLayouter();\n        for (var i = 0; i < gridRow.cells.count; i++) {\n            var cell = gridRow.cells.getCell(i);\n            if (typeof cell.value !== 'undefined' && cell.value !== null && typeof cell.value === 'string') {\n                var font = null;\n                if (typeof cell.style.font !== 'undefined' && cell.style.font != null) {\n                    font = cell.style.font;\n                }\n                else if (typeof cell.row.style.font !== 'undefined' && cell.row.style.font != null) {\n                    font = cell.row.style.font;\n                }\n                else if (typeof cell.row.grid.style.font !== 'undefined' && cell.row.grid.style.font != null) {\n                    font = cell.row.grid.style.font;\n                }\n                else {\n                    font = PdfDocument.defaultFont;\n                }\n                this.remainderText = cell.value;\n                var width = cell.width;\n                var column = grid.columns.getColumn(i);\n                if (column.isCustomWidth && cell.width > column.width) {\n                    width = column.width;\n                }\n                this.slr = layouter.layout(cell.value, font, cell.stringFormat, new SizeF(width, currentHeight), false, this.currentPageBounds);\n                var height = this.slr.actualSize.height;\n                if (cell.value !== '' && height === 0) {\n                    isFit = false;\n                    break;\n                }\n                if (cell.style !== null && cell.style.borders !== null && cell.style.borders.top !== null && cell.style.borders.bottom !== null) {\n                    height += (cell.style.borders.top.width + cell.style.borders.bottom.width) * 2;\n                }\n                if (this.slr.lineCount > 1 && cell.stringFormat != null && cell.stringFormat.lineSpacing != 0) {\n                    height += (this.slr.lineCount - 1) * (cell.style.stringFormat.lineSpacing);\n                }\n                if (cell.style.cellPadding === null) {\n                    height += (grid.style.cellPadding.top + grid.style.cellPadding.bottom);\n                }\n                else {\n                    height += (grid.style.cellPadding.top + grid.style.cellPadding.bottom);\n                }\n                height += grid.style.cellSpacing;\n                if (currentHeight > height || (typeof this.slr.remainder !== 'undefined' && this.slr.remainder !== null)) {\n                    isFit = true;\n                    break;\n                }\n            }\n        }\n        return isFit;\n    };\n    PdfGridLayouter.prototype.drawRowWithBreak = function (result, row, calculateHeight) {\n        var location = new PointF(this.currentBounds.x, this.currentBounds.y);\n        if (row.grid.isChildGrid && row.grid.allowRowBreakAcrossPages && this.startLocation.x !== this.currentBounds.x) {\n            location.x = this.startLocation.x;\n        }\n        result.bounds = new RectangleF(location, new SizeF(0, 0));\n        this.gridHeight = row.rowBreakHeight > 0 ? this.currentPageBounds.height : 0;\n        // Calculate the remaining height.\n        if (row.grid.style.cellPadding.top + this.currentBounds.y + row.grid.style.cellPadding.bottom < this.currentPageBounds.height) {\n            row.rowBreakHeight = this.currentBounds.y + calculateHeight - this.currentPageBounds.height;\n        }\n        // else {\n        //     row.rowBreakHeight = calculateHeight;\n        //     result.isFinish = false;\n        //     return;\n        // }\n        // No need to explicit break if the row height is equal to grid height.\n        for (var i = 0; i < row.cells.count; i++) {\n            var cell = row.cells.getCell(i);\n            var cellHeight = cell.measureHeight();\n            if (cellHeight === calculateHeight && cell.value instanceof PdfGrid) {\n                row.rowBreakHeight = 0;\n            }\n            // else if (cellHeight === calculateHeight && (cell.value as PdfGrid) === null) {\n            //     row.rowBreakHeight = this.currentBounds.y + calculateHeight - this.currentPageBounds.height;\n            // }\n        }\n        for (var i = this.cellStartIndex; i <= this.cellEndIndex; i++) {\n            var gridColumnWidth = this.Grid.columns.getColumn(i).width;\n            var cancelSpans = ((row.cells.getCell(i).columnSpan + i > this.cellEndIndex + 1) &&\n                (row.cells.getCell(i).columnSpan > 1));\n            if (!cancelSpans) {\n                for (var k = 1; k < row.cells.getCell(i).columnSpan; k++) {\n                    row.cells.getCell(i + k).isCellMergeContinue = true;\n                    gridColumnWidth += this.Grid.columns.getColumn(i + k).width;\n                }\n            }\n            var size = new SizeF(gridColumnWidth, this.gridHeight > 0.0 ? this.gridHeight :\n                this.currentPageBounds.height);\n            // if (size.width === 0) {\n            //     size = new SizeF(row.cells.getCell(i).width, size.height);\n            // }\n            // if (!this.CheckIfDefaultFormat(this.Grid.columns.getColumn(i).format) &&\n            //         this.CheckIfDefaultFormat((row.cells.getCell(i).stringFormat))) {\n            //     row.cells.getCell(i).stringFormat = this.Grid.columns.getColumn(i).format;\n            // }\n            var cellstyle1 = row.cells.getCell(i).style;\n            row.cells.getCell(i).style = cellstyle1;\n            var skipcell = false;\n            var stringResult = null;\n            if (!skipcell) {\n                row.cells.getCell(i)._rowHeight = row.height;\n                stringResult = row.cells.getCell(i).draw(this.currentGraphics, new RectangleF(location, size), cancelSpans);\n            }\n            //If still row is to be drawn, set cell finished drawing cell as false and update the text to be drawn.\n            if (row.rowBreakHeight > 0.0) {\n                if (stringResult != null && typeof stringResult.remainder !== 'undefined') {\n                    row.cells.getCell(i).FinishedDrawingCell = false;\n                    row.cells.getCell(i).remainingString = stringResult.remainder == null ? ' ' : stringResult.remainder;\n                    row.rowBreakHeight = calculateHeight - stringResult.actualSize.height;\n                }\n            }\n            result.isFinish = (!result.isFinish) ? result.isFinish : row.cells.getCell(i).FinishedDrawingCell;\n            // let tempValue : string = ((typeof row.cells.getCell(i).value === 'string' &&\n            //row.cells.getCell(i).value !== null) ? row.cells.getCell(i).value : '') as string;\n            // if (!cancelSpans) {\n            //     // this.raiseAfterCellDraw(this.currentGraphics, this.currentRowIndex, i,\n            //     //           new RectangleF(location, size), tempValue, row.cells.getCell(i).style);            \n            //     this.raiseAfterCellDraw(this.currentGraphics, this.currentRowIndex, i, new RectangleF(location, size),\n            //                             (row.cells.getCell(i).value as string) ? row.cells.getCell(i).value.toString() : ' ',\n            //                             row.cells.getCell(i).style);\n            //     }                \n            if (row.cells.getCell(i).value instanceof PdfGrid) {\n                var grid = row.cells.getCell(i).value;\n                this.rowBreakPageHeightCellIndex = i;\n                // row.cells.getCell(i).pageCount = grid.listOfNavigatePages.length;\n                // for (let j : number = 0;j<grid.listOfNavigatePages.length;j++){\n                //     let pageIndex : number =grid.listOfNavigatePages.indexOf(j);\n                //             this.Grid.listOfNavigatePages.push(pageIndex);\n                //     }\n                if (this.Grid.columns.getColumn(i).width >= this.currentGraphics.clientSize.width) {\n                    location.x = this.rowLayoutBoundsWidth;\n                    location.x += grid.style.cellSpacing;\n                }\n                else {\n                    location.x += this.Grid.columns.getColumn(i).width;\n                }\n            }\n            else {\n                location.x += this.Grid.columns.getColumn(i).width;\n            }\n        }\n        this.currentBounds.y += this.gridHeight > 0.0 ? this.gridHeight : calculateHeight;\n        result.bounds = new RectangleF(new PointF(result.bounds.x, result.bounds.y), new SizeF(location.x, location.y));\n    };\n    /**\n     * @hidden\n     * @private\n     */\n    PdfGridLayouter.repeatRowIndex = -1;\n    return PdfGridLayouter;\n}(ElementLayouter));\nexport { PdfGridLayouter };\n// recalculateBounds : boolean, clientSize : SizeF\n//Implementation\n/**\n * `Initializes` internal data.\n * @private\n */\n//Internal declaration\nvar PdfGridLayoutResult = /** @class */ (function (_super) {\n    __extends(PdfGridLayoutResult, _super);\n    /**\n     * Constructor\n     * @private\n     */\n    function PdfGridLayoutResult(page, bounds) {\n        return _super.call(this, page, bounds) || this;\n    }\n    return PdfGridLayoutResult;\n}(PdfLayoutResult));\nexport { PdfGridLayoutResult };\n/**\n * `PdfGridLayoutFormat` class represents a flexible grid that consists of columns and rows.\n */\nvar PdfGridLayoutFormat = /** @class */ (function (_super) {\n    __extends(PdfGridLayoutFormat, _super);\n    /**\n     * Initializes a new instance of the `PdfGridLayoutFormat` class.\n     * @private\n     */\n    function PdfGridLayoutFormat(baseFormat) {\n        return _super.call(this, baseFormat) || this;\n    }\n    return PdfGridLayoutFormat;\n}(PdfLayoutFormat));\nexport { PdfGridLayoutFormat };\nvar GridCellEventArgs = /** @class */ (function () {\n    // Constructors\n    /**\n     * Initialize a new instance for `GridCellEventArgs` class.\n     * @private\n     */\n    function GridCellEventArgs(graphics, rowIndex, cellIndex, bounds, value) {\n        this.gridRowIndex = rowIndex;\n        this.gridCellIndex = cellIndex;\n        this.internalValue = value;\n        this.gridBounds = bounds;\n        this.pdfGraphics = graphics;\n    }\n    Object.defineProperty(GridCellEventArgs.prototype, \"rowIndex\", {\n        // Properties\n        /**\n         * Gets the value of current `row index`.\n         * @private\n         */\n        get: function () {\n            return this.gridRowIndex;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(GridCellEventArgs.prototype, \"cellIndex\", {\n        /**\n         * Gets the value of current `cell index`.\n         * @private\n         */\n        get: function () {\n            return this.gridCellIndex;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(GridCellEventArgs.prototype, \"value\", {\n        /**\n         * Gets the actual `value` of current cell.\n         * @private\n         */\n        get: function () {\n            return this.internalValue;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(GridCellEventArgs.prototype, \"bounds\", {\n        /**\n         * Gets the `bounds` of current cell.\n         * @private\n         */\n        get: function () {\n            return this.gridBounds;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(GridCellEventArgs.prototype, \"graphics\", {\n        /**\n         * Gets the instance of `current graphics`.\n         * @private\n         */\n        get: function () {\n            return this.pdfGraphics;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return GridCellEventArgs;\n}());\nexport { GridCellEventArgs };\nvar PdfGridBeginCellDrawEventArgs = /** @class */ (function (_super) {\n    __extends(PdfGridBeginCellDrawEventArgs, _super);\n    // Constructors\n    /**\n     * Initializes a new instance of the `StartCellLayoutEventArgs` class.\n     * @private\n     */\n    function PdfGridBeginCellDrawEventArgs(graphics, rowIndex, cellIndex, bounds, value, style) {\n        var _this = _super.call(this, graphics, rowIndex, cellIndex, bounds, value) || this;\n        _this.style = style;\n        return _this;\n    }\n    Object.defineProperty(PdfGridBeginCellDrawEventArgs.prototype, \"skip\", {\n        // Properties\n        /**\n         * Gets or sets a value indicating whether the value of this cell should be `skipped`.\n         * @private\n         */\n        get: function () {\n            return this.bSkip;\n        },\n        set: function (value) {\n            this.bSkip = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridBeginCellDrawEventArgs.prototype, \"style\", {\n        /**\n         * Gets or sets a `style` value of the cell.\n         * @private\n         */\n        get: function () {\n            return this.cellStyle;\n        },\n        set: function (value) {\n            this.cellStyle = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfGridBeginCellDrawEventArgs;\n}(GridCellEventArgs));\nexport { PdfGridBeginCellDrawEventArgs };\nvar PdfGridEndCellDrawEventArgs = /** @class */ (function (_super) {\n    __extends(PdfGridEndCellDrawEventArgs, _super);\n    // Constructors\n    /**\n     * Initializes a new instance of the `PdfGridEndCellLayoutEventArgs` class.\n     * @private\n     */\n    function PdfGridEndCellDrawEventArgs(graphics, rowIndex, cellIndex, bounds, value, style) {\n        var _this = _super.call(this, graphics, rowIndex, cellIndex, bounds, value) || this;\n        _this.cellStyle = style;\n        return _this;\n    }\n    Object.defineProperty(PdfGridEndCellDrawEventArgs.prototype, \"style\", {\n        // Propertise\n        /**\n         * Get the `PdfGridCellStyle`.\n         * @private\n         */\n        get: function () {\n            return this.cellStyle;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfGridEndCellDrawEventArgs;\n}(GridCellEventArgs));\nexport { PdfGridEndCellDrawEventArgs };\nvar PdfCancelEventArgs = /** @class */ (function () {\n    function PdfCancelEventArgs() {\n    }\n    Object.defineProperty(PdfCancelEventArgs.prototype, \"cancel\", {\n        // Properties\n        /**\n         * Gets and Sets the value of `cancel`.\n         * @private\n         */\n        get: function () {\n            return this.isCancel;\n        },\n        set: function (value) {\n            this.isCancel = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfCancelEventArgs;\n}());\nexport { PdfCancelEventArgs };\nvar BeginPageLayoutEventArgs = /** @class */ (function (_super) {\n    __extends(BeginPageLayoutEventArgs, _super);\n    // Constructors\n    /**\n     * Initializes a new instance of the `BeginPageLayoutEventArgs` class with the specified rectangle and page.\n     * @private\n     */\n    function BeginPageLayoutEventArgs(bounds, page) {\n        var _this = _super.call(this) || this;\n        _this.bounds = bounds;\n        _this.pdfPage = page;\n        return _this;\n    }\n    Object.defineProperty(BeginPageLayoutEventArgs.prototype, \"bounds\", {\n        // Properties\n        /**\n         * Gets or sets value that indicates the lay outing `bounds` on the page.\n         * @private\n         */\n        get: function () {\n            return this.cellBounds;\n        },\n        set: function (value) {\n            this.cellBounds = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(BeginPageLayoutEventArgs.prototype, \"page\", {\n        /**\n         * Gets the `page` where the lay outing should start.\n         * @private\n         */\n        get: function () {\n            return this.pdfPage;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return BeginPageLayoutEventArgs;\n}(PdfCancelEventArgs));\nexport { BeginPageLayoutEventArgs };\n/**\n * `EndPageLayoutEventArgs` class is alternate for end page layout events.\n */\nvar EndPageLayoutEventArgs = /** @class */ (function (_super) {\n    __extends(EndPageLayoutEventArgs, _super);\n    // Constructors\n    /**\n     * Initializes a new instance of the `EndPageLayoutEventArgs` class. with the specified 'PdfLayoutResult'.\n     * @private\n     */\n    function EndPageLayoutEventArgs(result) {\n        var _this = _super.call(this) || this;\n        _this.layoutResult = result;\n        return _this;\n    }\n    Object.defineProperty(EndPageLayoutEventArgs.prototype, \"result\", {\n        // Properties\n        /**\n         * Gets the lay outing `result` of the page.\n         * @private\n         */\n        get: function () {\n            return this.layoutResult;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(EndPageLayoutEventArgs.prototype, \"nextPage\", {\n        /**\n         * Gets or sets a value indicating the `next page` where the element should be layout.\n         * @private\n         */\n        get: function () {\n            return this.nextPdfPage;\n        },\n        set: function (value) {\n            this.nextPdfPage = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return EndPageLayoutEventArgs;\n}(PdfCancelEventArgs));\nexport { EndPageLayoutEventArgs };\n/**\n * `PdfGridBeginPageLayoutEventArgs` class is alternate for begin page layout events.\n */\nvar PdfGridBeginPageLayoutEventArgs = /** @class */ (function (_super) {\n    __extends(PdfGridBeginPageLayoutEventArgs, _super);\n    // Constructors\n    /**\n     * Initialize a new instance of `PdfGridBeginPageLayoutEventArgs` class.\n     * @private\n     */\n    function PdfGridBeginPageLayoutEventArgs(bounds, page, startRow) {\n        var _this = _super.call(this, bounds, page) || this;\n        _this.startRow = startRow;\n        return _this;\n    }\n    Object.defineProperty(PdfGridBeginPageLayoutEventArgs.prototype, \"startRowIndex\", {\n        // Properties\n        /**\n         * Gets the `start row index`.\n         * @private\n         */\n        get: function () {\n            return this.startRow;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfGridBeginPageLayoutEventArgs;\n}(BeginPageLayoutEventArgs));\nexport { PdfGridBeginPageLayoutEventArgs };\n/**\n * `PdfGridEndPageLayoutEventArgs` class is alternate for begin page layout events.\n */\nvar PdfGridEndPageLayoutEventArgs = /** @class */ (function (_super) {\n    __extends(PdfGridEndPageLayoutEventArgs, _super);\n    // Constructors\n    /**\n     * Initialize a new instance of `PdfGridEndPageLayoutEventArgs` class.\n     * @private\n     */\n    function PdfGridEndPageLayoutEventArgs(result) {\n        return _super.call(this, result) || this;\n    }\n    return PdfGridEndPageLayoutEventArgs;\n}(EndPageLayoutEventArgs));\nexport { PdfGridEndPageLayoutEventArgs };\nvar RowLayoutResult = /** @class */ (function () {\n    //Constructors\n    /**\n     * Initializes a new instance of the `RowLayoutResult` class.\n     * @private\n     */\n    function RowLayoutResult() {\n        this.layoutedBounds = new RectangleF(0, 0, 0, 0);\n    }\n    Object.defineProperty(RowLayoutResult.prototype, \"isFinish\", {\n        /**\n         * Gets or sets a value indicating whether this instance `is finish`.\n         * @private\n         */\n        get: function () {\n            return this.bIsFinished;\n        },\n        set: function (value) {\n            this.bIsFinished = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(RowLayoutResult.prototype, \"bounds\", {\n        /**\n         * Gets or sets the `bounds`.\n         * @private\n         */\n        get: function () {\n            return this.layoutedBounds;\n        },\n        set: function (value) {\n            this.layoutedBounds = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return RowLayoutResult;\n}());\nexport { RowLayoutResult };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * ShapeLayouter.ts class for EJ2-PDF\n * @private\n */\nimport { ElementLayouter, PdfLayoutResult } from './element-layouter';\nimport { RectangleF, PointF } from './../../../drawing/pdf-drawing';\nimport { PdfLayoutBreakType, PdfLayoutType } from './../../figures/enum';\nimport { BeginPageLayoutEventArgs, EndPageLayoutEventArgs } from './../../../structured-elements/grid/layout/grid-layouter';\n/**\n * ShapeLayouter class.\n * @private\n */\nvar ShapeLayouter = /** @class */ (function (_super) {\n    __extends(ShapeLayouter, _super);\n    // Constructors\n    /**\n     * Initializes a new instance of the `ShapeLayouter` class.\n     * @private\n     */\n    function ShapeLayouter(element) {\n        var _this = _super.call(this, element) || this;\n        // Fields\n        /**\n         * Initializes the object to store `older form elements` of previous page.\n         * @default 0\n         * @private\n         */\n        _this.olderPdfForm = 0;\n        /**\n         * The `bounds` of the shape element.\n         * * @default new RectangleF()\n         * @private\n         */\n        _this.shapeBounds = new RectangleF();\n        /**\n         * Total Page size of the web page.\n         * * @default 0\n         * @private\n         */\n        _this.totalPageSize = 0;\n        return _this;\n    }\n    Object.defineProperty(ShapeLayouter.prototype, \"element\", {\n        // Properties\n        /**\n         * Gets shape element.\n         * @private\n         */\n        get: function () {\n            return this.elements;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    // Implementation\n    /**\n     * Layouts the element.\n     * @private\n     */\n    ShapeLayouter.prototype.layoutInternal = function (param) {\n        var currentPage = param.page;\n        var currentBounds = param.bounds;\n        var shapeLayoutBounds = this.element.getBounds();\n        shapeLayoutBounds.x = 0;\n        shapeLayoutBounds.y = 0;\n        /* tslint:disable */\n        var isEmpty = (this.shapeBounds.x === this.shapeBounds.y && this.shapeBounds.y === this.shapeBounds.width && this.shapeBounds.width === this.shapeBounds.height && this.shapeBounds.height === 0) ? true : false;\n        /* tslint:enable */\n        if ((this.isPdfGrid) && (!(isEmpty))) {\n            shapeLayoutBounds = this.shapeBounds;\n        }\n        var result = null;\n        var pageResult = new ShapeLayoutResult();\n        pageResult.page = currentPage;\n        /*tslint:disable:no-constant-condition */\n        while (true) {\n            // Raise event.\n            var result1 = this.raiseBeforePageLayout(currentPage, currentBounds);\n            currentBounds = result1.currentBounds;\n            var endArgs = null;\n            if (!result1.cancel) {\n                pageResult = this.layoutOnPage(currentPage, currentBounds, shapeLayoutBounds, param);\n                // Raise event.\n                endArgs = this.raiseEndPageLayout(pageResult);\n                result1.cancel = (endArgs === null) ? false : endArgs.cancel;\n            }\n            if (!pageResult.end && !result1.cancel) {\n                currentBounds = this.getPaginateBounds(param);\n                shapeLayoutBounds = this.getNextShapeBounds(shapeLayoutBounds, pageResult);\n                currentPage = (endArgs === null || endArgs.nextPage === null) ?\n                    this.getNextPage(currentPage) : endArgs.nextPage;\n                if (this.isPdfGrid) {\n                    result = this.getLayoutResult(pageResult);\n                    break;\n                }\n            }\n            else {\n                result = this.getLayoutResult(pageResult);\n                break;\n            }\n        }\n        return result;\n    };\n    /**\n     * Raises BeforePageLayout event.\n     * @private\n     */\n    ShapeLayouter.prototype.raiseBeforePageLayout = function (currentPage, currentBounds) {\n        var cancel = false;\n        if (this.element.raiseBeginPageLayout) {\n            var args = new BeginPageLayoutEventArgs(currentBounds, currentPage);\n            this.element.onBeginPageLayout(args);\n            cancel = args.cancel;\n            currentBounds = args.bounds;\n        }\n        return { currentBounds: currentBounds, cancel: cancel };\n    };\n    /**\n     * Raises PageLayout event if needed.\n     * @private\n     */\n    ShapeLayouter.prototype.raiseEndPageLayout = function (pageResult) {\n        var args = null;\n        if (this.element.raiseEndPageLayout) {\n            var res = this.getLayoutResult(pageResult);\n            args = new EndPageLayoutEventArgs(res);\n            this.element.onEndPageLayout(args);\n        }\n        return args;\n    };\n    /**\n     * Creates layout result.\n     * @private\n     */\n    ShapeLayouter.prototype.getLayoutResult = function (pageResult) {\n        var result = new PdfLayoutResult(pageResult.page, pageResult.bounds);\n        return result;\n    };\n    /**\n     * Calculates the next active shape bounds.\n     * @private\n     */\n    ShapeLayouter.prototype.getNextShapeBounds = function (shapeLayoutBounds, pageResult) {\n        var layoutedBounds = pageResult.bounds;\n        shapeLayoutBounds.y = (shapeLayoutBounds.y + layoutedBounds.height);\n        shapeLayoutBounds.height = (shapeLayoutBounds.height - layoutedBounds.height);\n        return shapeLayoutBounds;\n    };\n    /**\n     * Layouts the element on the current page.\n     * @private\n     */\n    ShapeLayouter.prototype.layoutOnPage = function (currentPage, curBounds, sBounds, param) {\n        var result = new ShapeLayoutResult();\n        curBounds = this.checkCorrectCurrentBounds(currentPage, curBounds, param);\n        var fitToPage = this.fitsToBounds(curBounds, sBounds);\n        var canDraw = !((param.format.break === PdfLayoutBreakType.FitElement)\n            && (!fitToPage && (currentPage === param.page)));\n        var shapeFinished = false;\n        if (canDraw) {\n            var drawRectangle = this.getDrawBounds(curBounds, sBounds);\n            this.drawShape(currentPage.graphics, curBounds, drawRectangle);\n            result.bounds = this.getPageResultBounds(curBounds, sBounds);\n            shapeFinished = ((curBounds.height) >= (sBounds.height));\n        }\n        result.end = (shapeFinished || (param.format.layout === PdfLayoutType.OnePage));\n        result.page = currentPage;\n        return result;\n    };\n    /**\n     * Returns Rectangle for element drawing on the page.\n     * @private\n     */\n    ShapeLayouter.prototype.getDrawBounds = function (currentBounds, shapeLayoutBounds) {\n        var result = currentBounds;\n        result.y = (result.y - shapeLayoutBounds.y);\n        result.height = (result.height + shapeLayoutBounds.y);\n        return result;\n    };\n    /**\n     * Draws the shape.\n     * @private\n     */\n    ShapeLayouter.prototype.drawShape = function (g, currentBounds, drawRectangle) {\n        var gState = g.save();\n        try {\n            g.setClip(currentBounds);\n            this.element.drawGraphicsHelper(g, new PointF(drawRectangle.x, drawRectangle.y));\n        }\n        finally {\n            g.restore(gState);\n        }\n    };\n    /**\n     * Corrects current bounds on the page.\n     * @protected\n     */\n    ShapeLayouter.prototype.checkCorrectCurrentBounds = function (currentPage, curBounds, param) {\n        var pageSize = currentPage.graphics.clientSize;\n        curBounds.width = (curBounds.width > 0) ? curBounds.width : (pageSize.width - curBounds.x);\n        curBounds.height = (curBounds.height > 0) ? curBounds.height : (pageSize.height - curBounds.y);\n        if (this.isPdfGrid) {\n            curBounds.height = (curBounds.height - this.bottomCellPadding);\n        }\n        return curBounds;\n    };\n    /**\n     * Calculates bounds where the shape was layout on the page.\n     * @private\n     */\n    ShapeLayouter.prototype.getPageResultBounds = function (currentBounds, shapeLayoutBounds) {\n        var result = currentBounds;\n        result.height = Math.min(result.height, shapeLayoutBounds.height);\n        return result;\n    };\n    /**\n     * Checks whether shape rectangle fits to the lay outing bounds.\n     * @private\n     */\n    ShapeLayouter.prototype.fitsToBounds = function (currentBounds, shapeLayoutBounds) {\n        var fits = (shapeLayoutBounds.height <= currentBounds.height);\n        return fits;\n    };\n    /**\n     * Initializes the offset `index`.\n     * * @default 0\n     * @private\n     */\n    ShapeLayouter.index = 0;\n    /**\n     * Initializes the `difference in page height`.\n     * * @default 0\n     * @private\n     */\n    ShapeLayouter.splitDiff = 0;\n    /**\n     * Determines the `end of Vertical offset` values.\n     * * @default false\n     * @private\n     */\n    ShapeLayouter.last = false;\n    /**\n     * Determines the document link annotation `border width`.\n     * * @default 0\n     * @private\n     */\n    ShapeLayouter.borderWidth = 0;\n    return ShapeLayouter;\n}(ElementLayouter));\nexport { ShapeLayouter };\n/**\n * Contains lay outing result settings.\n * @private\n */\nvar ShapeLayoutResult = /** @class */ (function () {\n    function ShapeLayoutResult() {\n    }\n    return ShapeLayoutResult;\n}());\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { PdfLayoutElement } from './../layout-element';\nimport { ShapeLayouter } from './shape-layouter';\n/**\n * Base class for the main shapes.\n * @private\n */\nvar PdfShapeElement = /** @class */ (function (_super) {\n    __extends(PdfShapeElement, _super);\n    function PdfShapeElement() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    // methods\n    /**\n     * Gets the bounds.\n     * @private\n     */\n    PdfShapeElement.prototype.getBounds = function () {\n        var rect = this.getBoundsInternal();\n        return rect;\n    };\n    /**\n     * `drawGraphicsHelper` the graphics.\n     * @public\n     */\n    PdfShapeElement.prototype.drawGraphicsHelper = function (graphics, location) {\n        if ((graphics == null)) {\n            throw new Error('ArgumentNullException :graphics');\n        }\n        this.drawShapeHelper(graphics, location.x, location.y);\n    };\n    /**\n     * `drawShapeHelper` the graphics.\n     * @private\n     */\n    PdfShapeElement.prototype.drawShapeHelper = function (graphics, x, y) {\n        var bNeedSave = (x !== 0.5 || y !== 0.5);\n        var gState = null;\n        // Translate co-ordinates.\n        if (bNeedSave) {\n            // Save state.\n            gState = graphics.save();\n            graphics.translateTransform(x, y);\n        }\n        this.drawInternal(graphics);\n        if (bNeedSave) {\n            // Restore state.\n            graphics.restore(gState);\n        }\n    };\n    /**\n     * Layouts the element.\n     * @private\n     */\n    PdfShapeElement.prototype.layout = function (param) {\n        var layouter = new ShapeLayouter(this);\n        var result = layouter.layout(param);\n        return result;\n    };\n    return PdfShapeElement;\n}(PdfLayoutElement));\nexport { PdfShapeElement };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * PdfDrawElement.ts class for EJ2-PDF\n */\nimport { PdfShapeElement } from './pdf-shape-element';\n/**\n * Represents a base class for all page graphics elements.\n */\nvar PdfDrawElement = /** @class */ (function (_super) {\n    __extends(PdfDrawElement, _super);\n    /**\n     * Initializes a new instance of the `PdfDrawElement` class.\n     * @protected\n     */\n    function PdfDrawElement(pen) {\n        var _this = _super.call(this) || this;\n        if (typeof pen !== 'undefined') {\n            _this.mpen = pen;\n        }\n        return _this;\n    }\n    Object.defineProperty(PdfDrawElement.prototype, \"pen\", {\n        // Properties\n        /**\n         * Gets or sets a pen that will be used to draw the element.\n         * @public\n         */\n        get: function () {\n            return this.mpen;\n        },\n        set: function (value) {\n            this.mpen = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfDrawElement;\n}(PdfShapeElement));\nexport { PdfDrawElement };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * PdfFillElement.ts class for EJ2-PDF\n */\nimport { PdfDrawElement } from './draw-element';\nimport { PdfPen } from './../../pdf-pen';\nimport { PdfColor } from './../../pdf-color';\n/**\n * Represents a base class for all page graphics elements.\n */\nvar PdfFillElement = /** @class */ (function (_super) {\n    __extends(PdfFillElement, _super);\n    /**\n     * Initializes a new instance of the `PdfFillElement` class.\n     * @protected\n     */\n    function PdfFillElement(arg1, arg2) {\n        var _this = _super.call(this) || this;\n        // Fields\n        /**\n         * Internal variable to store pen.\n         * @private\n         */\n        _this.mbrush = null;\n        if (typeof arg1 === 'undefined') {\n            //\n        }\n        else if (arg1 instanceof PdfPen) {\n            _this = _super.call(this, arg1) || this;\n        }\n        else {\n            _this.mbrush = arg2;\n        }\n        return _this;\n    }\n    Object.defineProperty(PdfFillElement.prototype, \"brush\", {\n        // Properties\n        /**\n         * Gets or sets a brush of the element.\n         * @public\n         */\n        get: function () {\n            return this.mbrush;\n        },\n        set: function (value) {\n            this.mbrush = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    // Implementation\n    /**\n     * Gets the pen. If both pen and brush are not explicitly defined, default pen will be used.\n     * @protected\n     */\n    PdfFillElement.prototype.obtainPen = function () {\n        return ((this.mbrush == null) && (this.pen == null)) ? new PdfPen(new PdfColor(0, 0, 0)) : this.pen;\n    };\n    return PdfFillElement;\n}(PdfDrawElement));\nexport { PdfFillElement };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * Path.ts class for EJ2-PDF\n */\nimport { PdfBrush } from './../brushes/pdf-brush';\nimport { PdfPen } from './../pdf-pen';\nimport { PdfLayoutFormat } from './../figures/base/element-layouter';\nimport { RectangleF, PointF } from './../../drawing/pdf-drawing';\nimport { PathPointType } from './enum';\nimport { PdfFillElement } from './../figures/base/fill-element';\nimport { PdfFillMode } from './../enum';\n/**\n * `PdfPath` class Implements graphics path, which is a sequence of primitive graphics elements.\n * @private\n */\nvar PdfPath = /** @class */ (function (_super) {\n    __extends(PdfPath, _super);\n    /**\n     * Initializes a new instance of the `PdfPath` class.\n     * @public\n     */\n    /* tslint:disable-next-line:max-line-length */\n    function PdfPath(arg1, arg2, arg3, arg4) {\n        var _this = _super.call(this) || this;\n        // Fields\n        /**\n         * Local variable to store the points.\n         * @private\n         */\n        _this.mpoints = null;\n        /**\n         * Local variable to store the path Types.\n         * @private\n         */\n        _this.mpathTypes = null;\n        /**\n         * Local variable to store the Start Figure.\n         * @private\n         */\n        _this.mStartFigure = true;\n        /**\n         * Local variable to store the fill Mode.\n         * @private\n         */\n        _this.mfillMode = PdfFillMode.Alternate;\n        /**\n         * Local variable to store the Beziers.\n         * @private\n         */\n        _this.isBeziers3 = false;\n        /**\n         * Local variable to store the xps.\n         * @private\n         */\n        _this.isXps = false;\n        if (typeof arg1 === 'undefined') {\n            //\n        }\n        else if (arg1 instanceof PdfPen) {\n            _this = _super.call(this, arg1) || this;\n            if (arg2 instanceof PdfBrush) {\n                _this = _super.call(this, arg1, arg2) || this;\n                _this.fillMode = arg3;\n            }\n            else if (arg2 !== null && typeof arg2 !== 'undefined' && arg3 !== null && typeof arg3 !== 'undefined') {\n                _this.addPath(arg2, arg3);\n            }\n        }\n        else if (arg1 instanceof PdfBrush) {\n            _this = _super.call(this, arg1) || this;\n            if (arg2 !== null && typeof arg2 !== 'undefined') {\n                _this.fillMode = arg2;\n            }\n            if (arg3 !== null && typeof arg3 !== 'undefined' && arg4 !== null && typeof arg4 !== 'undefined') {\n                _this.addPath(arg3, arg4);\n            }\n        }\n        else {\n            _this.addPath(arg1, arg2);\n        }\n        return _this;\n    }\n    Object.defineProperty(PdfPath.prototype, \"fillMode\", {\n        // Properties\n        /**\n         * Gets or sets the fill mode.\n         * @public\n         */\n        get: function () {\n            return this.mfillMode;\n        },\n        set: function (value) {\n            this.mfillMode = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPath.prototype, \"pathPoints\", {\n        /**\n         * Gets the path points.\n         * @public\n         */\n        get: function () {\n            return this.points;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPath.prototype, \"pathTypes\", {\n        /**\n         * Gets the path point types.\n         * @public\n         */\n        get: function () {\n            return this.types;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPath.prototype, \"pointCount\", {\n        /**\n         * Gets the point count.\n         * @public\n         */\n        get: function () {\n            var count = 0;\n            if ((this.mpoints != null)) {\n                count = this.mpoints.length;\n            }\n            return count;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPath.prototype, \"lastPoint\", {\n        /**\n         * Gets the last points.\n         * @public\n         */\n        get: function () {\n            return this.getLastPoint();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPath.prototype, \"points\", {\n        /**\n         * Gets the points list.\n         * @private\n         */\n        get: function () {\n            if ((this.mpoints == null)) {\n                this.mpoints = [];\n            }\n            return this.mpoints;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPath.prototype, \"types\", {\n        /**\n         * Gets the types.\n         * @private\n         */\n        get: function () {\n            if ((this.mpathTypes == null)) {\n                this.mpathTypes = [];\n            }\n            return this.mpathTypes;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfPath.prototype.draw = function (arg1, arg2, arg3, arg4) {\n        if (arg2 instanceof PointF && typeof arg2.width === 'undefined' && typeof arg3 === 'undefined') {\n            return this.drawHelper(arg1, arg2.x, arg2.y);\n        }\n        else if (arg2 instanceof RectangleF && typeof arg2.width !== 'undefined' && typeof arg3 === 'undefined') {\n            return this.drawHelper(arg1, arg2, null);\n        }\n        else if (typeof arg2 === 'number' && typeof arg3 === 'number' && typeof arg4 === 'undefined') {\n            return this.drawHelper(arg1, arg2, arg3, null);\n        }\n        else if (arg2 instanceof PointF && arg3 instanceof PdfLayoutFormat) {\n            return this.drawHelper(arg1, arg2.x, arg2.y, arg3);\n        }\n        else if (typeof arg2 === 'number' && (arg4 instanceof PdfLayoutFormat || arg4 == null) && typeof arg3 === 'number') {\n            var widthValue = (arg1.graphics.clientSize.width - arg2);\n            var layoutRect = new RectangleF(arg2, arg3, widthValue, 0);\n            return this.drawHelper(arg1, layoutRect, arg4);\n        }\n        else if (arg2 instanceof RectangleF && arg3 instanceof PdfLayoutFormat) {\n            return this.drawHelper(arg1, arg2, arg3);\n        }\n        else {\n            return this.drawHelper(arg1, arg2, arg3);\n        }\n    };\n    PdfPath.prototype.addArc = function (arg1, arg2, arg3, arg4, arg5, arg6) {\n        if (arg1 instanceof RectangleF) {\n            this.addArc(arg1.x, arg1.y, arg1.width, arg1.height, arg2, arg3);\n        }\n        else {\n            var points = this.getBezierArcPoints(arg1, arg2, (arg2 + arg3), (arg2 + arg4), arg5, arg6);\n            for (var i = 0; i < points.length; i = i + 8) {\n                /* tslint:disable-next-line:max-line-length */\n                var point = [points[i], points[i + 1], points[i + 2], points[i + 3], points[i + 4], points[i + 5], points[i + 6], points[i + 7]];\n                this.addPoints(point, PathPointType.Bezier3);\n            }\n        }\n    };\n    /* tslint:disable-next-line:max-line-length */\n    PdfPath.prototype.addBezier = function (arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8) {\n        if (arg1 instanceof PointF && arg2 instanceof PointF && arg3 instanceof PointF && arg4 instanceof PointF) {\n            this.addBezier(arg1.x, arg1.y, arg2.x, arg2.y, arg3.x, arg3.y, arg4.x, arg4.y);\n        }\n        else {\n            var points = [];\n            points.push(arg1);\n            points.push(arg2);\n            points.push(arg3);\n            points.push(arg4);\n            points.push(arg5);\n            points.push(arg6);\n            points.push(arg7);\n            points.push(arg8);\n            this.addPoints(points, PathPointType.Bezier3);\n        }\n    };\n    PdfPath.prototype.addEllipse = function (arg1, arg2, arg3, arg4) {\n        if (arg1 instanceof RectangleF) {\n            this.addEllipse(arg1.x, arg1.y, arg1.width, arg1.height);\n        }\n        else {\n            this.startFigure();\n            this.addArc(arg1, arg2, arg3, arg4, 0, 360);\n            this.closeFigure();\n        }\n    };\n    PdfPath.prototype.addLine = function (arg1, arg2, arg3, arg4) {\n        if (arg1 instanceof PointF && arg2 instanceof PointF) {\n            this.addLine(arg1.x, arg1.y, arg2.x, arg2.y);\n        }\n        else {\n            var points = [];\n            points.push(arg1);\n            points.push(arg2);\n            points.push(arg3);\n            points.push(arg4);\n            this.addPoints(points, PathPointType.Line);\n        }\n    };\n    PdfPath.prototype.addPath = function (arg1, arg2) {\n        if (arg1 instanceof PdfPath) {\n            this.addPath(arg1.pathPoints, arg1.pathTypes);\n        }\n        else {\n            if ((arg1 == null)) {\n                throw new Error('ArgumentNullException:pathPoints');\n            }\n            if ((arg2 == null)) {\n                throw new Error('ArgumentNullException:pathTypes');\n            }\n            var count = arg1.length;\n            if ((count !== arg2.length)) {\n                throw new Error('The argument arrays should be of equal length.');\n            }\n        }\n    };\n    PdfPath.prototype.addPie = function (arg1, arg2, arg3, arg4, arg5, arg6) {\n        if (arg1 instanceof RectangleF) {\n            this.addPie(arg1.x, arg1.y, arg1.width, arg1.height, arg2, arg3);\n        }\n        else {\n            this.startFigure();\n            this.addArc(arg1, arg2, arg3, arg4, arg5, arg6);\n            this.addPoint(new PointF((arg1 + (arg3 / 2)), (arg2 + (arg4 / 2))), PathPointType.Line);\n            this.closeFigure();\n        }\n    };\n    /**\n     * `add a polygon` specified by points.\n     * @param points The points of the polygon\n     */\n    PdfPath.prototype.addPolygon = function (points) {\n        var count = (points.length * 2);\n        var p = [];\n        this.startFigure();\n        for (var i = 0; i < points.length; i++) {\n            p.push(points[i].x);\n            p.push(points[i].y);\n        }\n        this.addPoints(p, PathPointType.Line);\n        this.closeFigure();\n    };\n    PdfPath.prototype.addRectangle = function (arg1, y, width, height) {\n        if (arg1 instanceof RectangleF) {\n            this.addRectangle(arg1.x, arg1.y, arg1.width, arg1.height);\n        }\n        else {\n            var points = [];\n            this.startFigure();\n            points.push(arg1);\n            points.push(y);\n            points.push((arg1 + width));\n            points.push(y);\n            points.push((arg1 + width));\n            points.push((y + height));\n            points.push(arg1);\n            points.push((y + height));\n            this.addPoints(points, PathPointType.Line);\n            this.closeFigure();\n        }\n    };\n    /**\n     * Starts a new figure.\n     * @public\n     */\n    PdfPath.prototype.startFigure = function () {\n        this.mStartFigure = true;\n    };\n    /**\n     * Closed all non-closed figures.\n     * @public\n     */\n    PdfPath.prototype.closeAllFigures = function () {\n        var startPath = this.pathPoints[0];\n        for (var i = 0; i < this.mpathTypes.length; i++) {\n            var pt = ((this.types[i]));\n            var flag = false;\n            if (((i !== 0) && (pt === PathPointType.Start))) {\n                this.closeFigure((i - 1));\n                flag = true;\n            }\n            else if (((i === (this.mpathTypes.length - 1)) && (!flag && this.isXps))) {\n                if ((startPath.x === this.pathPoints[i].y)) {\n                    this.closeFigure(i);\n                }\n            }\n        }\n    };\n    /**\n     * Gets the last point.\n     * @public\n     */\n    PdfPath.prototype.getLastPoint = function () {\n        var lastPoint = new PointF(0, 0);\n        var count = this.pointCount;\n        if (((count > 0) && (this.mpoints != null))) {\n            lastPoint.x = this.mpoints[(count - 1)].x;\n            lastPoint.y = this.mpoints[(count - 1)].y;\n        }\n        return lastPoint;\n    };\n    /**\n     * Gets the bezier points for arc constructing.\n     * @public\n     */\n    PdfPath.prototype.getBezierArcPoints = function (x1, y1, x2, y2, s1, e1) {\n        if ((x1 > x2)) {\n            var tmp = void 0;\n            tmp = x1;\n            x1 = x2;\n            x2 = tmp;\n        }\n        if ((y2 > y1)) {\n            var tmp = void 0;\n            tmp = y1;\n            y1 = y2;\n            y2 = tmp;\n        }\n        var fragAngle;\n        var numFragments;\n        if ((Math.abs(e1) <= 90)) {\n            fragAngle = e1;\n            numFragments = 1;\n        }\n        else {\n            numFragments = (Math.ceil((Math.abs(e1) / 90)));\n            fragAngle = (e1 / numFragments);\n        }\n        var xcen = ((x1 + x2) / 2);\n        var ycen = ((y1 + y2) / 2);\n        var rx = ((x2 - x1) / 2);\n        var ry = ((y2 - y1) / 2);\n        var halfAng = ((fragAngle * (Math.PI / 360)));\n        var kappa = (Math.abs(4.0 / 3.0 * (1.0 - Math.cos(halfAng)) / Math.sin(halfAng)));\n        var pointList = [];\n        for (var i = 0; (i < numFragments); i++) {\n            var theta0 = (((s1 + (i * fragAngle)) * (Math.PI / 180)));\n            var theta1 = (((s1 + ((i + 1) * fragAngle)) * (Math.PI / 180)));\n            var cos0 = (Math.cos(theta0));\n            var cos1 = (Math.cos(theta1));\n            var sin0 = (Math.sin(theta0));\n            var sin1 = (Math.sin(theta1));\n            if ((fragAngle > 0)) {\n                /* tslint:disable-next-line:max-line-length */\n                pointList.push((xcen + (rx * cos0)), (ycen - (ry * sin0)), (xcen + (rx * (cos0 - (kappa * sin0)))), (ycen - (ry * (sin0 + (kappa * cos0)))), (xcen + (rx * (cos1 + (kappa * sin1)))), (ycen - (ry * (sin1 - (kappa * cos1)))), (xcen + (rx * cos1)), (ycen - (ry * sin1)));\n            }\n            else {\n                /* tslint:disable-next-line:max-line-length */\n                pointList.push((xcen + (rx * cos0)), (ycen - (ry * sin0)), (xcen + (rx * (cos0 + (kappa * sin0)))), (ycen - (ry * (sin0 - (kappa * cos0)))), (xcen + (rx * (cos1 - (kappa * sin1)))), (ycen - (ry * (sin1 + (kappa * cos1)))), (xcen + (rx * cos1)), (ycen - (ry * sin1)));\n            }\n        }\n        return pointList;\n    };\n    /**\n     * `getBoundsInternal` Returns a rectangle that bounds this element.\n     * @public\n     */\n    PdfPath.prototype.getBoundsInternal = function () {\n        var points = this.pathPoints;\n        var bounds = new RectangleF(0, 0, 0, 0);\n        if ((points.length > 0)) {\n            var xmin = points[0].x;\n            var xmax = points[0].x;\n            var ymin = points[0].y;\n            var ymax = points[0].y;\n            for (var i = 1; i < points.length; i++) {\n                var point = points[i];\n                xmin = Math.min(point.x, xmin);\n                xmax = Math.max(point.x, xmax);\n                ymin = Math.min(point.y, ymin);\n                ymax = Math.max(point.y, ymax);\n            }\n            bounds = new RectangleF(xmin, ymin, (xmax - xmin), (ymax - ymin));\n        }\n        return bounds;\n    };\n    /**\n     * `drawInternal` Draws an element on the Graphics.\n     * @param graphics Graphics context where the element should be printed.\n     * @public\n     */\n    PdfPath.prototype.drawInternal = function (graphics) {\n        if ((graphics == null)) {\n            throw new Error('ArgumentNullException :graphics');\n        }\n        graphics.drawPath(this.obtainPen(), this.brush, this);\n    };\n    PdfPath.prototype.addPoints = function (points, pointType, startIndex, endIndex) {\n        if (typeof startIndex === 'undefined' && typeof endIndex === 'undefined') {\n            this.addPoints(points, pointType, 0, points.length);\n        }\n        else {\n            for (var i = startIndex; i < endIndex; i++) {\n                var point = new PointF(points[i], points[(i + 1)]);\n                if ((i === startIndex)) {\n                    if (((this.pointCount <= 0) || this.mStartFigure)) {\n                        this.addPoint(point, PathPointType.Start);\n                        this.mStartFigure = false;\n                    }\n                    else if (((point.x !== this.lastPoint.x) && (point.y !== this.lastPoint.y) && !this.isBeziers3)) {\n                        this.addPoint(point, PathPointType.Line);\n                    }\n                    else if ((point.x !== this.lastPoint.x) && (point.y !== this.lastPoint.y)) {\n                        this.addPoint(point, PathPointType.Bezier3);\n                    }\n                }\n                else {\n                    this.addPoint(point, pointType);\n                }\n                i++;\n            }\n        }\n    };\n    /**\n     * `add a point` Adds the point and its type\n     * @param points The points.\n     * @param pointType Type of the points.\n     * @private\n     */\n    PdfPath.prototype.addPoint = function (point, pointType) {\n        this.points.push(point);\n        this.types.push((pointType));\n    };\n    PdfPath.prototype.closeFigure = function (index) {\n        if (typeof index === 'undefined') {\n            if ((this.pointCount > 0)) {\n                this.closeFigure(this.pointCount - 1);\n            }\n            this.startFigure();\n        }\n        else {\n            if ((index < 0)) {\n                throw new Error('IndexOutOfRangeException()');\n            }\n            var pt = ((this.types[index]));\n            pt = (pt | PathPointType.CloseSubpath);\n            this.types[index] = (pt);\n        }\n    };\n    return PdfPath;\n}(PdfFillElement));\nexport { PdfPath };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { PdfPen } from './../pdf-pen';\nimport { RectangleF } from './../../drawing/pdf-drawing';\nimport { PdfFillElement } from './../figures/base/fill-element';\n/**\n * `PdfRectangleArea` class Implements graphics rectangle area, which is a sequence of primitive graphics elements.\n * @private\n */\nvar PdfRectangleArea = /** @class */ (function (_super) {\n    __extends(PdfRectangleArea, _super);\n    /* tslint:disable-next-line:max-line-length */\n    function PdfRectangleArea(arg1, arg2, arg3, arg4, arg5, arg6) {\n        var _this = _super.call(this) || this;\n        //Fields\n        /**\n         * public variable to store the rectangle.\n         * @public\n         */\n        _this.bounds = new RectangleF(0, 0, 0, 0);\n        if (typeof arg1 === 'undefined') {\n            //\n        }\n        else if (arg1 instanceof PdfPen) {\n            _this = _super.call(this, arg1, arg2) || this;\n            if (arg3 instanceof RectangleF) {\n                _this.bounds = arg3;\n            }\n            else {\n                _this.bounds = new RectangleF(arg3, arg4, arg5, arg6);\n            }\n        }\n        else if (arg1 instanceof RectangleF) {\n            _this.bounds = arg1;\n        }\n        else {\n            _this.bounds = new RectangleF(arg1, arg2, arg3, arg4);\n        }\n        return _this;\n    }\n    Object.defineProperty(PdfRectangleArea.prototype, \"x\", {\n        //Properties\n        /**\n         * Gets or sets the X co-ordinate of the upper-left corner of this the element.\n         * @public\n         */\n        get: function () {\n            return this.bounds.x;\n        },\n        set: function (value) {\n            this.bounds.x = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfRectangleArea.prototype, \"y\", {\n        /**\n         * Gets or sets the Y co-ordinate of the upper-left corner of this the element.\n         * @public\n         */\n        get: function () {\n            return this.bounds.y;\n        },\n        set: function (value) {\n            this.bounds.y = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfRectangleArea.prototype, \"width\", {\n        /**\n         * Gets or sets the width of this element.\n         * @public\n         */\n        get: function () {\n            return this.bounds.width;\n        },\n        set: function (value) {\n            this.bounds.width = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfRectangleArea.prototype, \"height\", {\n        /**\n         * Gets or sets the height of this element.\n         * @public\n         */\n        get: function () {\n            return this.bounds.height;\n        },\n        set: function (value) {\n            this.bounds.height = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    //Implementation\n    PdfRectangleArea.prototype.getBoundsInternal = function () {\n        return this.bounds;\n    };\n    return PdfRectangleArea;\n}(PdfFillElement));\nexport { PdfRectangleArea };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { PdfPen } from './../pdf-pen';\nimport { RectangleF } from './../../drawing/pdf-drawing';\nimport { PdfRectangleArea } from './rectangle-area';\n/**\n * `PdfEllipsePart` class Implements graphics ellipse part, which is a sequence of primitive graphics elements.\n * @private\n */\nvar PdfEllipsePart = /** @class */ (function (_super) {\n    __extends(PdfEllipsePart, _super);\n    /* tslint:disable-next-line:max-line-length */\n    function PdfEllipsePart(arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8) {\n        var _this = _super.call(this) || this;\n        // Fields\n        /**\n         * public variable to store the start angle.\n         * @public\n         */\n        _this.startAngle = 0;\n        /**\n         * public variable to store the sweep angle.\n         * @public\n         */\n        _this.sweepAngle = 0;\n        if (typeof arg1 === 'undefined') {\n            //\n        }\n        else if (arg1 instanceof RectangleF && typeof arg2 !== 'undefined' && typeof arg3 !== 'undefined') {\n            _this = _super.call(this, arg1) || this;\n            _this.startAngle = arg2;\n            _this.sweepAngle = arg3;\n        }\n        else if (arg1 instanceof PdfPen) {\n            if (arg3 instanceof RectangleF) {\n                _this = _super.call(this, arg1, arg2, arg3) || this;\n                _this.startAngle = arg4;\n                _this.sweepAngle = arg5;\n            }\n            else {\n                _this = _super.call(this, arg1, arg2, arg3, arg4, arg5, arg6) || this;\n                _this.startAngle = arg7;\n                _this.sweepAngle = arg8;\n            }\n        }\n        else {\n            _this = _super.call(this, arg1, arg2, arg3, arg4) || this;\n            _this.startAngle = arg5;\n            _this.sweepAngle = arg6;\n        }\n        return _this;\n    }\n    return PdfEllipsePart;\n}(PdfRectangleArea));\nexport { PdfEllipsePart };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * arc.ts class for EJ2-PDF\n */\nimport { PdfPen } from './../pdf-pen';\nimport { PdfLayoutFormat } from './../figures/base/element-layouter';\nimport { RectangleF, PointF } from './../../drawing/pdf-drawing';\nimport { PdfEllipsePart } from './../figures/ellipse-part';\n/**\n * `PdfArc` class Implements graphics arc, which is a sequence of primitive graphics elements.\n * @private\n */\nvar PdfArc = /** @class */ (function (_super) {\n    __extends(PdfArc, _super);\n    /* tslint:disable-next-line:max-line-length */\n    function PdfArc(arg1, arg2, arg3, arg4, arg5, arg6, arg7) {\n        var _this = this;\n        if (typeof arg1 === 'undefined') {\n            _this = _super.call(this) || this;\n        }\n        else if (arg1 instanceof RectangleF) {\n            _this = _super.call(this, arg1, arg2, arg3) || this;\n        }\n        else if (arg1 instanceof PdfPen) {\n            if (arg2 instanceof RectangleF) {\n                _this = _super.call(this, arg1, null, arg2, arg3, arg4) || this;\n            }\n            else if (typeof arg6 === 'undefined' && typeof arg7 === 'undefined') {\n                _this = _super.call(this, arg1, null, 0, 0, arg2, arg3, arg4, arg5) || this;\n            }\n            else if (typeof arg6 !== 'undefined' && typeof arg7 !== 'undefined') {\n                _this = _super.call(this, arg1, null, arg2, arg3, arg4, arg5, arg6, arg7) || this;\n            }\n        }\n        else if (typeof arg1 !== 'undefined' && typeof arg5 === 'undefined' && typeof arg6 === 'undefined') {\n            _this = _super.call(this, 0, 0, arg1, arg2, arg3, arg4) || this;\n        }\n        else if (typeof arg1 !== 'undefined' && typeof arg5 !== 'undefined' && typeof arg6 !== 'undefined') {\n            _this = _super.call(this, arg1, arg2, arg3, arg4, arg5, arg6) || this;\n        }\n        return _this;\n    }\n    PdfArc.prototype.draw = function (argu1, arg2, arg3, arg4) {\n        if (arg2 instanceof PointF && typeof arg2.width === 'undefined' && typeof arg3 === 'undefined') {\n            return this.drawHelper(argu1, arg2.x, arg2.y);\n        }\n        else if (arg2 instanceof RectangleF && typeof arg2.width !== 'undefined' && typeof arg3 === 'undefined') {\n            return this.drawHelper(argu1, arg2, null);\n        }\n        else if (typeof arg2 === 'number' && typeof arg3 === 'number' && typeof arg4 === 'undefined') {\n            return this.drawHelper(argu1, arg2, arg3, null);\n        }\n        else if (arg2 instanceof PointF && arg3 instanceof PdfLayoutFormat) {\n            return this.drawHelper(argu1, arg2.x, arg2.y, arg3);\n        }\n        else if (typeof arg2 === 'number' && (arg4 instanceof PdfLayoutFormat || arg4 == null) && typeof arg3 === 'number') {\n            var widthValue = (argu1.graphics.clientSize.width - arg2);\n            var layoutRect = new RectangleF(arg2, arg3, widthValue, 0);\n            return this.drawHelper(argu1, layoutRect, arg4);\n        }\n        else {\n            return this.drawHelper(argu1, arg2, arg3);\n        }\n    };\n    // Implementation\n    /**\n     * `drawInternal` Draws an element on the Graphics.\n     * @param graphics Graphics context where the element should be printed.\n     *\n     */\n    PdfArc.prototype.drawInternal = function (graphics) {\n        if ((graphics == null)) {\n            throw new Error('ArgumentNullException : graphics');\n        }\n        graphics.drawArc(this.obtainPen(), this.bounds, this.startAngle, this.sweepAngle);\n    };\n    return PdfArc;\n}(PdfEllipsePart));\nexport { PdfArc };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * PdfTrueTypeFont.ts class for EJ2-PDF\n */\nimport { UnicodeTrueTypeFont } from './unicode-true-type-font';\nimport { PdfFont } from './pdf-font';\nimport { PdfFontStyle } from './enum';\nimport { PdfDocument } from './../../document/pdf-document';\nimport { PdfTextDirection } from './../enum';\nimport { RtlRenderer } from './rtl-renderer';\n//https://www.giftofspeed.com/base64-encoder/\nvar PdfTrueTypeFont = /** @class */ (function (_super) {\n    __extends(PdfTrueTypeFont, _super);\n    function PdfTrueTypeFont(base64String, size, style) {\n        var _this = _super.call(this, size) || this;\n        /**\n         * Indicates whether the font is embedded or not.\n         * @private\n         */\n        _this.isEmbedFont = false;\n        /**\n         * Indicates whether the font is unicoded or not.\n         * @private\n         */\n        _this.isUnicode = true;\n        if (style !== undefined) {\n            _this.createFontInternal(base64String, style);\n        }\n        else {\n            _this.createFontInternal(base64String, PdfFontStyle.Regular);\n        }\n        return _this;\n    }\n    PdfTrueTypeFont.prototype.equalsToFont = function (font) {\n        var result = false;\n        //let result : boolean = this.fontInternal.equalsToFont(font);\n        return result;\n    };\n    PdfTrueTypeFont.prototype.getLineWidth = function (line, format) {\n        var width = 0;\n        if (format !== null && typeof format !== 'undefined' && format.textDirection !== PdfTextDirection.None) {\n            var returnValue = this.getUnicodeLineWidth(line, /*out*/ width, format);\n            width = returnValue.width;\n        }\n        else {\n            width = this.fontInternal.getLineWidth(line);\n        }\n        var size = this.metrics.getSize(format);\n        width *= (PdfFont.charSizeMultiplier * size);\n        width = this.applyFormatSettings(line, format, width);\n        return width;\n    };\n    /**\n     * Returns width of the char.\n     */\n    PdfTrueTypeFont.prototype.getCharWidth = function (charCode, format) {\n        var codeWidth = this.fontInternal.getCharWidth(charCode);\n        var size = this.metrics.getSize(format);\n        codeWidth *= (0.001 * size);\n        return codeWidth;\n    };\n    //Implementation\n    PdfTrueTypeFont.prototype.createFontInternal = function (base64String, style) {\n        this.fontInternal = new UnicodeTrueTypeFont(base64String, this.size);\n        this.calculateStyle(style);\n        this.initializeInternals();\n    };\n    PdfTrueTypeFont.prototype.calculateStyle = function (style) {\n        var iStyle = this.fontInternal.ttfMetrics.macStyle;\n        if ((style & PdfFontStyle.Underline) !== 0) {\n            iStyle |= PdfFontStyle.Underline;\n        }\n        if ((style & PdfFontStyle.Strikeout) !== 0) {\n            iStyle |= PdfFontStyle.Strikeout;\n        }\n        this.setStyle(iStyle);\n    };\n    PdfTrueTypeFont.prototype.initializeInternals = function () {\n        var equalFont = null;\n        if (PdfDocument.enableCache) {\n            // Search for the similar fonts.\n            equalFont = PdfDocument.cache.search(this);\n        }\n        var internals = null;\n        // There is not equal font in the cache.\n        if (equalFont !== null && equalFont !== undefined) {\n            // Get the settings from the cached font.\n            internals = equalFont.getInternals();\n            var metrics = equalFont.metrics;\n            metrics = metrics.clone();\n            metrics.size = this.size;\n            this.metrics = metrics;\n            this.fontInternal = equalFont.fontInternal;\n        }\n        else {\n            if (equalFont == null) {\n                if (this.fontInternal instanceof UnicodeTrueTypeFont) {\n                    this.fontInternal.isEmbed = this.isEmbedFont;\n                }\n                this.fontInternal.createInternals();\n                internals = this.fontInternal.getInternals();\n                this.metrics = this.fontInternal.metrics;\n            }\n        }\n        this.metrics.isUnicodeFont = true;\n        this.setInternals(internals);\n        //this.ttfReader = (this.fontInternal as UnicodeTrueTypeFont).ttfReader;\n    };\n    /**\n     * Stores used symbols.\n     */\n    PdfTrueTypeFont.prototype.setSymbols = function (text) {\n        var internalFont = this.fontInternal;\n        if (internalFont != null) {\n            internalFont.setSymbols(text);\n        }\n    };\n    Object.defineProperty(PdfTrueTypeFont.prototype, \"Unicode\", {\n        /**\n         * Property\n         *\n         */\n        get: function () {\n            return this.isUnicode;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    // public get Font() : UnicodeTrueTypeFont {\n    //     return this.fontInternal as UnicodeTrueTypeFont;\n    // }\n    PdfTrueTypeFont.prototype.getUnicodeLineWidth = function (line, /*out*/ width, format) {\n        // if (line == null) {\n        //     throw new Error('ArgumentNullException : line');\n        // }\n        width = 0;\n        var glyphIndices = null;\n        var rtlRender = new RtlRenderer();\n        /* tslint:disable-next-line:max-line-length */\n        var result = rtlRender.getGlyphIndex(line, this, (format.textDirection === PdfTextDirection.RightToLeft) ? true : false, /*out*/ glyphIndices, true);\n        var resultGlyph = result.success;\n        glyphIndices = result.glyphs;\n        if (resultGlyph && glyphIndices !== null) {\n            var ttfReader = this.fontInternal.ttfReader;\n            for (var i = 0, len = glyphIndices.length; i < len; i++) {\n                var glyphIndex = glyphIndices[i];\n                var glyph = ttfReader.getGlyph(glyphIndex);\n                if (glyph !== null && typeof glyph !== 'undefined') {\n                    width += glyph.width;\n                }\n            }\n        }\n        return { success: resultGlyph, width: width };\n    };\n    return PdfTrueTypeFont;\n}(PdfFont));\nexport { PdfTrueTypeFont };\n","/**\n * PdfPageTemplateElement.ts class for EJ2-Pdf\n */\nimport { PdfDockStyle, PdfAlignmentStyle, TemplateType } from './enum';\nimport { PointF, SizeF } from './../drawing/pdf-drawing';\nimport { PdfTemplate } from './../graphics/figures/pdf-template';\nimport { PdfPage } from './pdf-page';\nimport { RectangleF } from './../drawing/pdf-drawing';\n/**\n * Describes a `page template` object that can be used as header/footer, watermark or stamp.\n */\nvar PdfPageTemplateElement = /** @class */ (function () {\n    /* tslint:disable */\n    function PdfPageTemplateElement(arg1, arg2, arg3, arg4, arg5) {\n        if (arg1 instanceof RectangleF && typeof arg2 === 'undefined') {\n            this.InitiateBounds(arg1.x, arg1.y, arg1.width, arg1.height, null);\n        }\n        else if (arg1 instanceof RectangleF && arg2 instanceof PdfPage && typeof arg3 === 'undefined') {\n            this.InitiateBounds(arg1.x, arg1.y, arg1.width, arg1.height, arg2);\n        }\n        else if (arg1 instanceof PointF && arg2 instanceof SizeF && typeof arg3 === 'undefined') {\n            this.InitiateBounds(arg1.x, arg1.y, arg2.width, arg2.height, null);\n        }\n        else if (arg1 instanceof PointF && arg2 instanceof SizeF && arg3 instanceof PdfPage && typeof arg4 === 'undefined') {\n            this.InitiateBounds(arg1.x, arg1.y, arg2.width, arg2.height, arg3);\n        }\n        else if (arg1 instanceof SizeF && typeof arg2 === 'undefined') {\n            this.InitiateBounds(0, 0, arg1.width, arg1.height, null);\n        }\n        else if (typeof arg1 === 'number' && typeof arg2 === 'number' && typeof arg3 === 'undefined') {\n            this.InitiateBounds(0, 0, arg1, arg2, null);\n        }\n        else if (typeof arg1 === 'number' && typeof arg2 === 'number' && arg3 instanceof PdfPage && typeof arg4 === 'undefined') {\n            this.InitiateBounds(0, 0, arg1, arg2, arg3);\n        }\n        else if (typeof arg1 === 'number' && typeof arg2 === 'number' && typeof arg3 === 'number' && typeof arg4 === 'number' && typeof arg5 === 'undefined') {\n            this.InitiateBounds(arg1, arg2, arg3, arg4, null);\n        }\n        else {\n            this.InitiateBounds(arg1, arg2, arg3, arg4, null);\n            // this.graphics.colorSpace = this.page.document.colorSpace;\n        }\n        /* tslint:enable */\n    }\n    Object.defineProperty(PdfPageTemplateElement.prototype, \"dock\", {\n        // Properties\n        /**\n         * Gets or sets the `dock style` of the page template element.\n         * @private\n         */\n        get: function () {\n            return this.dockStyle;\n        },\n        set: function (value) {\n            // if (this.dockStyle !== value && this.Type === TemplateType.None) {\n            this.dockStyle = value;\n            // Reset alignment.\n            this.resetAlignment();\n            // }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageTemplateElement.prototype, \"alignment\", {\n        /**\n         * Gets or sets `alignment` of the page template element.\n         * @private\n         */\n        get: function () {\n            return this.alignmentStyle;\n        },\n        set: function (value) {\n            // if (this.alignmentStyle !== value) {\n            this.setAlignment(value);\n            // }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageTemplateElement.prototype, \"foreground\", {\n        /**\n         * Indicates whether the page template is located `in front of the page layers or behind of it`.\n         * @private\n         */\n        get: function () {\n            return this.isForeground;\n        },\n        set: function (value) {\n            // if (this.foreground !== value) {\n            this.isForeground = value;\n            // }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageTemplateElement.prototype, \"background\", {\n        /**\n         * Indicates whether the page template is located `behind of the page layers or in front of it`.\n         * @private\n         */\n        get: function () {\n            return !this.isForeground;\n        },\n        set: function (value) {\n            this.isForeground = !value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageTemplateElement.prototype, \"location\", {\n        /**\n         * Gets or sets `location` of the page template element.\n         * @private\n         */\n        get: function () {\n            return this.currentLocation;\n        },\n        set: function (value) {\n            if (this.type === TemplateType.None) {\n                this.currentLocation = value;\n            }\n            else {\n                //\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageTemplateElement.prototype, \"x\", {\n        /**\n         * Gets or sets `X` co-ordinate of the template element on the page.\n         * @private\n         */\n        get: function () {\n            var value = (typeof this.currentLocation !== 'undefined') ? this.currentLocation.x : 0;\n            return value;\n        },\n        set: function (value) {\n            if (this.type === TemplateType.None) {\n                this.currentLocation.x = value;\n            }\n            else {\n                //\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageTemplateElement.prototype, \"y\", {\n        /**\n         * Gets or sets `Y` co-ordinate of the template element on the page.\n         * @private\n         */\n        get: function () {\n            var value = (typeof this.currentLocation !== 'undefined') ? this.currentLocation.y : 0;\n            return value;\n        },\n        set: function (value) {\n            if (this.type === TemplateType.None) {\n                this.currentLocation.y = value;\n            }\n            else {\n                //\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageTemplateElement.prototype, \"size\", {\n        /**\n         * Gets or sets `size` of the page template element.\n         * @private\n         */\n        get: function () {\n            return this.template.size;\n        },\n        set: function (value) {\n            if (this.type === TemplateType.None) {\n                this.template.reset(value);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageTemplateElement.prototype, \"width\", {\n        /**\n         * Gets or sets `width` of the page template element.\n         * @private\n         */\n        get: function () {\n            return this.template.width;\n        },\n        set: function (value) {\n            if (this.template.width !== value && this.type === TemplateType.None) {\n                var size = this.template.size;\n                size.width = value;\n                this.template.reset(size);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageTemplateElement.prototype, \"height\", {\n        /**\n         * Gets or sets `height` of the page template element.\n         * @private\n         */\n        get: function () {\n            return this.template.height;\n        },\n        set: function (value) {\n            if (this.template.height !== value && this.type === TemplateType.None) {\n                var size = this.template.size;\n                size.height = value;\n                this.template.reset(size);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageTemplateElement.prototype, \"graphics\", {\n        /**\n         * Gets `graphics` context of the page template element.\n         * @private\n         */\n        get: function () {\n            return this.template.graphics;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageTemplateElement.prototype, \"template\", {\n        /**\n         * Gets Pdf `template` object.\n         * @private\n         */\n        get: function () {\n            // if (typeof this.pdfTemplate === 'undefined' || this.pdfTemplate == null) {\n            //     this.pdfTemplate = new PdfTemplate(this.size);\n            // }\n            return this.pdfTemplate;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageTemplateElement.prototype, \"type\", {\n        /**\n         * Gets or sets `type` of the usage of this page template.\n         * @private\n         */\n        get: function () {\n            return this.templateType;\n        },\n        set: function (value) {\n            this.updateDocking(value);\n            this.templateType = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageTemplateElement.prototype, \"bounds\", {\n        /**\n         * Gets or sets `bounds` of the page template.\n         * @public\n         */\n        get: function () {\n            return new RectangleF(new PointF(this.x, this.y), this.size);\n        },\n        set: function (value) {\n            if (this.type === TemplateType.None) {\n                this.location = new PointF(value.x, value.y);\n                this.size = new SizeF(value.width, value.height);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * `Initialize Bounds` Initialize the bounds value of the template.\n     * @private\n     */\n    PdfPageTemplateElement.prototype.InitiateBounds = function (arg1, arg2, arg3, arg4, arg5) {\n        this.x = arg1;\n        this.y = arg2;\n        this.pdfTemplate = new PdfTemplate(arg3, arg4);\n        // this.graphics.colorSpace = this.page.document.colorSpace;\n    };\n    /**\n     * `Updates Dock` property if template is used as header/footer.\n     * @private\n     */\n    PdfPageTemplateElement.prototype.updateDocking = function (type) {\n        if (type !== TemplateType.None) {\n            switch (type) {\n                case TemplateType.Top:\n                    this.dock = PdfDockStyle.Top;\n                    break;\n                case TemplateType.Bottom:\n                    this.dock = PdfDockStyle.Bottom;\n                    break;\n                case TemplateType.Left:\n                    this.dock = PdfDockStyle.Left;\n                    break;\n                case TemplateType.Right:\n                    this.dock = PdfDockStyle.Right;\n                    break;\n            }\n            this.resetAlignment();\n        }\n    };\n    /**\n     * `Resets alignment` of the template.\n     * @private\n     */\n    PdfPageTemplateElement.prototype.resetAlignment = function () {\n        this.alignment = PdfAlignmentStyle.None;\n    };\n    /**\n     * `Sets alignment` of the template.\n     * @private\n     */\n    PdfPageTemplateElement.prototype.setAlignment = function (alignment) {\n        if (this.dock === PdfDockStyle.None) {\n            this.alignmentStyle = alignment;\n        }\n        else {\n            // Template is docked and alignment has been changed.\n            var canBeSet = false;\n            switch (this.dock) {\n                case PdfDockStyle.Left:\n                    canBeSet = (alignment === PdfAlignmentStyle.TopLeft || alignment === PdfAlignmentStyle.MiddleLeft ||\n                        alignment === PdfAlignmentStyle.BottomLeft || alignment === PdfAlignmentStyle.None);\n                    break;\n                case PdfDockStyle.Top:\n                    canBeSet = (alignment === PdfAlignmentStyle.TopLeft || alignment === PdfAlignmentStyle.TopCenter ||\n                        alignment === PdfAlignmentStyle.TopRight || alignment === PdfAlignmentStyle.None);\n                    break;\n                case PdfDockStyle.Right:\n                    canBeSet = (alignment === PdfAlignmentStyle.TopRight || alignment === PdfAlignmentStyle.MiddleRight ||\n                        alignment === PdfAlignmentStyle.BottomRight || alignment === PdfAlignmentStyle.None);\n                    break;\n                case PdfDockStyle.Bottom:\n                    canBeSet = (alignment === PdfAlignmentStyle.BottomLeft || alignment === PdfAlignmentStyle.BottomCenter\n                        || alignment === PdfAlignmentStyle.BottomRight || alignment === PdfAlignmentStyle.None);\n                    break;\n                case PdfDockStyle.Fill:\n                    canBeSet = (alignment === PdfAlignmentStyle.MiddleCenter || alignment === PdfAlignmentStyle.None);\n                    break;\n            }\n            if (canBeSet) {\n                this.alignmentStyle = alignment;\n            }\n        }\n    };\n    /**\n     * Draws the template.\n     * @private\n     */\n    PdfPageTemplateElement.prototype.draw = function (layer, document) {\n        var page = layer.page;\n        var bounds = this.calculateBounds(page, document);\n        layer.graphics.drawPdfTemplate(this.template, new PointF(bounds.x, bounds.y), new SizeF(bounds.width, bounds.height));\n    };\n    /**\n     * Calculates bounds of the page template.\n     * @private\n     */\n    PdfPageTemplateElement.prototype.calculateBounds = function (page, document) {\n        var result = this.bounds;\n        if (this.alignmentStyle !== PdfAlignmentStyle.None) {\n            result = this.getAlignmentBounds(page, document);\n        }\n        else if (this.dockStyle !== PdfDockStyle.None) {\n            result = this.getDockBounds(page, document);\n        }\n        return result;\n    };\n    /**\n     * Calculates bounds according to the alignment.\n     * @private\n     */\n    PdfPageTemplateElement.prototype.getAlignmentBounds = function (page, document) {\n        var result = this.bounds;\n        if (this.type === TemplateType.None) {\n            result = this.getSimpleAlignmentBounds(page, document);\n        }\n        else {\n            result = this.getTemplateAlignmentBounds(page, document);\n        }\n        return result;\n    };\n    /**\n     * Calculates bounds according to the alignment.\n     * @private\n     */\n    PdfPageTemplateElement.prototype.getSimpleAlignmentBounds = function (page, document) {\n        var bounds = this.bounds;\n        var pdfSection = page.section;\n        var actualBounds = pdfSection.getActualBounds(document, page, false);\n        var x = this.x;\n        var y = this.y;\n        switch (this.alignmentStyle) {\n            case PdfAlignmentStyle.TopLeft:\n                x = 0;\n                y = 0;\n                break;\n            case PdfAlignmentStyle.TopCenter:\n                x = (actualBounds.width - this.width) / 2;\n                y = 0;\n                break;\n            case PdfAlignmentStyle.TopRight:\n                x = actualBounds.width - this.width;\n                y = 0;\n                break;\n            case PdfAlignmentStyle.MiddleLeft:\n                x = 0;\n                y = (actualBounds.height - this.height) / 2;\n                break;\n            case PdfAlignmentStyle.MiddleCenter:\n                x = (actualBounds.width - this.width) / 2;\n                y = (actualBounds.height - this.height) / 2;\n                break;\n            case PdfAlignmentStyle.MiddleRight:\n                x = actualBounds.width - this.width;\n                y = (actualBounds.height - this.height) / 2;\n                break;\n            case PdfAlignmentStyle.BottomLeft:\n                x = 0;\n                y = actualBounds.height - this.height;\n                break;\n            case PdfAlignmentStyle.BottomCenter:\n                x = (actualBounds.width - this.width) / 2;\n                y = actualBounds.height - this.height;\n                break;\n            case PdfAlignmentStyle.BottomRight:\n                x = actualBounds.width - this.width;\n                y = actualBounds.height - this.height;\n                break;\n        }\n        bounds.x = x;\n        bounds.y = y;\n        return bounds;\n    };\n    /**\n     * Calculates bounds according to the alignment.\n     * @private\n     */\n    PdfPageTemplateElement.prototype.getTemplateAlignmentBounds = function (page, document) {\n        var result = this.bounds;\n        var section = page.section;\n        var actualBounds = section.getActualBounds(document, page, false);\n        var x = this.x;\n        var y = this.y;\n        switch (this.alignmentStyle) {\n            case PdfAlignmentStyle.TopLeft:\n                if (this.type === TemplateType.Left) {\n                    x = this.convertSign(actualBounds.x);\n                    y = 0;\n                }\n                else if (this.type === TemplateType.Top) {\n                    x = this.convertSign(actualBounds.x);\n                    y = this.convertSign(actualBounds.y);\n                }\n                break;\n            case PdfAlignmentStyle.TopCenter:\n                x = (actualBounds.width - this.width) / 2;\n                y = this.convertSign(actualBounds.y);\n                break;\n            case PdfAlignmentStyle.TopRight:\n                if (this.type === TemplateType.Right) {\n                    x = actualBounds.width + section.getRightIndentWidth(document, page, false) - this.width;\n                    y = 0;\n                }\n                else if (this.type === TemplateType.Top) {\n                    x = actualBounds.width + section.getRightIndentWidth(document, page, false) - this.width;\n                    y = this.convertSign(actualBounds.y);\n                }\n                break;\n            case PdfAlignmentStyle.MiddleLeft:\n                x = this.convertSign(actualBounds.x);\n                y = (actualBounds.height - this.height) / 2;\n                break;\n            case PdfAlignmentStyle.MiddleCenter:\n                x = (actualBounds.width - this.width) / 2;\n                y = (actualBounds.height - this.height) / 2;\n                break;\n            case PdfAlignmentStyle.MiddleRight:\n                x = actualBounds.width + section.getRightIndentWidth(document, page, false) - this.width;\n                y = (actualBounds.height - this.height) / 2;\n                break;\n            case PdfAlignmentStyle.BottomLeft:\n                if (this.type === TemplateType.Left) {\n                    x = this.convertSign(actualBounds.x);\n                    y = actualBounds.height - this.height;\n                }\n                else if (this.type === TemplateType.Bottom) {\n                    x = this.convertSign(actualBounds.x);\n                    y = actualBounds.height + section.getBottomIndentHeight(document, page, false) - this.height;\n                }\n                break;\n            case PdfAlignmentStyle.BottomCenter:\n                x = (actualBounds.width - this.width) / 2;\n                y = actualBounds.height + section.getBottomIndentHeight(document, page, false) - this.height;\n                break;\n            case PdfAlignmentStyle.BottomRight:\n                if (this.type === TemplateType.Right) {\n                    x = actualBounds.width + section.getRightIndentWidth(document, page, false) - this.width;\n                    y = actualBounds.height - this.height;\n                }\n                else if (this.type === TemplateType.Bottom) {\n                    x = actualBounds.width + section.getRightIndentWidth(document, page, false) - this.width;\n                    y = actualBounds.height + section.getBottomIndentHeight(document, page, false) - this.height;\n                }\n                break;\n        }\n        result.x = x;\n        result.y = y;\n        return result;\n    };\n    /**\n     * Calculates bounds according to the docking.\n     * @private\n     */\n    PdfPageTemplateElement.prototype.getDockBounds = function (page, document) {\n        var result = this.bounds;\n        if (this.type === TemplateType.None) {\n            result = this.getSimpleDockBounds(page, document);\n        }\n        else {\n            result = this.getTemplateDockBounds(page, document);\n        }\n        return result;\n    };\n    /**\n     * Calculates bounds according to the docking.\n     * @private\n     */\n    PdfPageTemplateElement.prototype.getSimpleDockBounds = function (page, document) {\n        var result = this.bounds;\n        var section = page.section;\n        var actualBounds = section.getActualBounds(document, page, false);\n        var x = this.x;\n        var y = this.y;\n        var width = this.width;\n        var height = this.height;\n        switch (this.dockStyle) {\n            case PdfDockStyle.Left:\n                x = 0;\n                y = 0;\n                width = this.width;\n                height = actualBounds.height;\n                break;\n            case PdfDockStyle.Top:\n                x = 0;\n                y = 0;\n                width = actualBounds.width;\n                height = this.height;\n                break;\n            case PdfDockStyle.Right:\n                x = actualBounds.width - this.width;\n                y = 0;\n                width = this.width;\n                height = actualBounds.height;\n                break;\n            case PdfDockStyle.Bottom:\n                x = 0;\n                y = actualBounds.height - this.height;\n                width = actualBounds.width;\n                height = this.height;\n                break;\n            case PdfDockStyle.Fill:\n                x = 0;\n                x = 0;\n                width = actualBounds.width;\n                height = actualBounds.height;\n                break;\n        }\n        result = new RectangleF(x, y, width, height);\n        return result;\n    };\n    /**\n     * Calculates template bounds basing on docking if template is a page template.\n     * @private\n     */\n    PdfPageTemplateElement.prototype.getTemplateDockBounds = function (page, document) {\n        var result = this.bounds;\n        var section = page.section;\n        var actualBounds = section.getActualBounds(document, page, false);\n        var actualSize = section.pageSettings.getActualSize();\n        var x = this.x;\n        var y = this.y;\n        var width = this.width;\n        var height = this.height;\n        switch (this.dockStyle) {\n            case PdfDockStyle.Left:\n                x = this.convertSign(actualBounds.x);\n                y = 0;\n                width = this.width;\n                height = actualBounds.height;\n                break;\n            case PdfDockStyle.Top:\n                x = this.convertSign(actualBounds.x);\n                y = this.convertSign(actualBounds.y);\n                width = actualSize.width;\n                height = this.height;\n                if (actualBounds.height < 0) {\n                    y = actualSize.height - actualBounds.y;\n                }\n                break;\n            case PdfDockStyle.Right:\n                x = actualBounds.width + section.getRightIndentWidth(document, page, false) - this.width;\n                y = 0;\n                width = this.width;\n                height = actualBounds.height;\n                break;\n            case PdfDockStyle.Bottom:\n                x = this.convertSign(actualBounds.x);\n                y = actualBounds.height + section.getBottomIndentHeight(document, page, false) - this.height;\n                width = actualSize.width;\n                height = this.height;\n                if (actualBounds.height < 0) {\n                    y -= actualSize.height;\n                }\n                break;\n            case PdfDockStyle.Fill:\n                x = 0;\n                x = 0;\n                width = actualBounds.width;\n                height = actualBounds.height;\n                break;\n        }\n        result = new RectangleF(x, y, width, height);\n        return result;\n    };\n    /**\n     * Ignore value zero, otherwise convert sign.\n     * @private\n     */\n    PdfPageTemplateElement.prototype.convertSign = function (value) {\n        return (value !== 0 || (value === 0 && 1 / value === -Infinity)) ? -value : value;\n    };\n    return PdfPageTemplateElement;\n}());\nexport { PdfPageTemplateElement };\n"],"names":["defaultToString","item","Object","prototype","toString","call","Dictionary","getValue","key","pair","this","table","toStr","value","setValue","k","nElements","remove","previousElement","keys","keysArray","namesOfKeys","index1","length","pair1","push","values","valuesArray","namesOfValues","index2","pair2","containsKey","clear","size","toStringFunction","defineProperty","PdfName","get","status6","set","enumerable","configurable","isSaving6","index6","position6","internalValue","val","normalizeValue","save","writer","write","stringStartMark","escapeString","clone","crossTable","newName","stringValue","result","i","len_1","ch","delimiters","indexOf","c","replacements","Operators","obj","endObj","r","whiteSpace","slash","newLine","stream","endStream","xref","f","n","trailer","startxref","eof","header","beginText","endText","beginPath","appendLineSegment","stroke","fill","fillEvenOdd","fillStroke","fillStrokeEvenOdd","appendbeziercurve","appendRectangle","saveState","restoreState","paintXObject","modifyCtm","modifyTM","setLineWidth","setLineCapStyle","setLineJoinStyle","setDashPattern","setFlatnessTolerance","closePath","closeStrokePath","closeFillStrokePath","setCharacterSpace","setWordSpace","setHorizontalScaling","setTextLeading","setFont","setRenderingMode","setTextRise","setTextScaling","setCoords","goToNextLine","setText","setTextWithFormatting","setTextOnNewLine","selectcolorspaceforstroking","selectcolorspacefornonstroking","setrbgcolorforstroking","setrbgcolorfornonstroking","setcmykcolorforstroking","setcmykcolorfornonstroking","setgraycolorforstroking","setgraycolorfornonstroking","clipPath","clipPathEvenOdd","endPath","setGraphicsState","comment","evenOdd","setMiterLimit","setColorAndPattern","setColorAndPatternStroking","forTest","DictionaryProperties","pages","kids","count","resources","type","mediaBox","parent","root","decodeParms","filter","font","type1","baseFont","encoding","subtype","contents","procset","colorSpace","extGState","pattern","xObject","width","height","bitsPerComponent","image","dctdecode","columns","blackIs1","s","predictor","deviceRgb","next","action","link","a","annot","p","rect","uri","annots","ca","CA","xyz","fit","dest","BM","flatedecode","rotate","bBox","form","w","cIDFontType2","cIDToGIDMap","identity","dw","fontDescriptor","cIDSystemInfo","fontName","flags","fontBBox","missingWidth","stemV","italicAngle","capHeight","ascent","descent","leading","avgWidth","fontFile2","maxWidth","xHeight","stemH","registry","ordering","supplement","type0","identityH","toUnicode","descendantFonts","background","shading","matrix","antiAlias","function","extend","shadingType","coords","domain","range","functionType","bitsPerSample","patternType","paintType","tilingType","xStep","yStep","viewerPreferences","centerWindow","displayTitle","fitWindow","hideMenuBar","hideToolBar","hideWindowUI","pageMode","pageLayout","duplex","printScaling","PdfDictionary","primitiveItems","status7","isSaving7","index7","object","position7","getArchive","archive","setArchive","setEncrypt","encrypt","modify","getEncrypt","freezeChanges","freezer","bChanged","onBeginSave","beginSave","sender","onFontDictionaryBeginSave","fontDictionaryBeginSave","onDescendantFontBeginSave","descendantFontBeginSave","onTemplateBeginSave","pageBeginDrawTemplate","pageBeginSave","onBeginAnnotationSave","annotationBeginSave","onSectionBeginSave","saveEvent","sectionBeginSave","state","bRaiseEvent","prefix","Count","saveItems","suffix","index","dictionary","isResource","items","status","dictionaryProperties","SaveSectionCollectionEventHandler","SaveDescendantFontEventHandler","SaveFontDictionaryEventHandler","SaveAnnotationEventHandler","SaveSectionEventHandler","SaveTemplateEventHandler","PdfNumber","integer","status5","isSaving5","index5","position5","intValue","floatToString","number","returnString","toFixed","min","x","y","z","Math","PdfArray","internalElements","status9","isSaving9","clonedObject9","position9","index9","pdfCrossTable","add","element","markedChange","contains","tempElement","inputElement","getItems","startMark","len","endMark","newArray","fromRectangle","bounds","insert","tempElements","markChanged","removeAt","tempArray","array","isFont","elements","tempNumberArray","pdfNumber","extendStatics","d","b","setPrototypeOf","__proto__","Array","hasOwnProperty","__","constructor","create","PdfStream","_super","dataStream2","bCompress","clearStream","internalStream","text","Error","writeBytes","data","String","fromCharCode","onCmapBeginSave","cmapBeginSave","onFontProgramBeginSave","fontProgramBeginSave","compressContent","byteArray","charCodeAt","dataArray","Uint8Array","sw","CompressedStreamWriter","close","getCompressedString","addFilter","filterName","PdfReferenceHolder","name","dicPrefix","dicSuffix","bytesToString","output","_this","clonedObject2","bCompress2","SaveCmapEventHandler","SaveFontProgramEventHandler","PdfString","ForceEncoding","InternalEnum","bHex","status1","isSaving1","clonedObject1","position1","bConverted","bForceEncoding","bytesToHex","bytes","builder","undefined","encode","Ascii","pdfEncode","stringMark","escapeSymbols","currentData","CrossTable","newString","isColorSpace","toUnicodeArray","bAddPrefix","code","byteToString","hexStringMark","hexFormatPattern","bDecrypted","isParentDecrypted","isPacked","isFormField","isHexString","PdfReference","status3","isSaving3","index3","position3","objNumber","genNumber","Number","status4","isSaving4","index4","position4","primitiveObject","pdfReference","objectIndex","initialize","obj1","position","cTable","document","isSaving","getReference","obj2","PdfAction","pdfDictionary","PdfUriAction","uniformResourceIdentifier","PdfHorizontalAlignment","PdfVerticalAlignment","PdfTextAlignment","TextRenderingMode","PdfLineJoin","PdfLineCap","PdfDashStyle","PdfFillMode","PdfColorSpace","PdfBlendMode","PdfGraphicsUnit","PdfGridImagePosition","PdfTextDirection","PdfColor","assignRGB","g","filled","cyanColor","magentaColor","yellowColor","blackColor","grayColor","redColor","greenColor","blueColor","alpha","maxColourChannelValue","assignCMYK","red","green","blue","black","cyan","magenta","yellow","isEmpty","str","Rgb","rgbToString","GrayScale","grayScaleToString","Cmyk","cmykToString","ifStroking","gray","colour","grayStringsSroke","grayStringsFill","rgbStrings","m","toArray","color1","color2","color3","color4","PointF","SizeF","RectangleF","arg1","arg2","arg3","arg4","pointf","sizef","Rectangle","right","left","bottom","top","topLeft","PdfBrush","PdfSolidBrush","pdfColor","monitorChanges","brush","streamWriter","getResources","saveChanges","currentColorSpace","diff","setColorAndSpace","resetChanges","color","PdfFontStyle","PdfFontFamily","PdfFontType","PdfWordWrapType","PdfSubSuperScript","FontEncoding","TtfCmapFormat","TtfCmapEncoding","TtfPlatformID","TtfMicrosoftEncodingID","TtfMacintoshEncodingID","FontDescriptorFlags","TtfCompositeGlyphFlags","PdfStringFormat","textAlignment","direction","verticalAlignment","Top","isRightToLeft","internalCharacterSpacing","internalWordSpacing","clip","pdfSubSuperScript","None","internalParagraphIndent","firstLineIndent","internalLineLimit","trailingSpaces","isNoClip","wordWrapType","scalingFactor","initialLineIndent","Word","StringTokenizer","currentPosition","getCharsCount","symbols","numSymbols","curIndex","readLine","text2","pos","substr","peekLine","line","readWord","textValue","peekWord","word","read","end","num","peek","readToEnd","symbol","spaces","tab","whiteSpacePattern","PdfStringLayouter","layout","arg5","arg6","arg7","isOverloadWithPosition","clientSize","doLayout","format","rectSize","pageHeight","rectangle","reader","PdfStringLayoutResult","lines","lineIndent","getLineIndent","lineResult","layoutLine","returnedValue","copyToResult","success","numSymbolsInserted","numInserted","finalizeResult","firstLine","paragraphIndent","getLineHeight","lineSpacing","getLineWidth","layoutLineHeight","lineWidth","lineType","LineType","FirstParagraphLine","round","addToLineResult","NewLineBreak","curLine","curIndent","ln","curLineWidth","getWrapType","WordOnly","textRemainder","substring","wordWrap","Character","LayoutBreak","LastParagraphLine","layoutLines","breakType","info","LineInfo","actualSize","max","size1","allowPartialLines","lineLimit","maxHeight","expHeight","lineHeight","trimLine","rightToLeft","trim","empty","content","PdfFont","metrics","fontSize","getHeight","fontStyle","style","Bold","Italic","Strikeout","Underline","fontMetrics","pdfFontInternals","measureString","temparg2","layoutArea","temparg3","equalsTo","equalsToFont","getInternals","setInternals","internals","setStyle","applyFormatSettings","realWidth","characterSpacing","wordSpacing","charSizeMultiplier","syncObject","Regular","PdfWriter","pdfDocument","buffer","overload","ObjectStatus","PdfMainObjectCollection","objectCollections","isNew","objInfo","ObjectInfo","primitiveObjectCollection","Registered","lookFor","reference","wasNew","trySetReference","found","setReference","destroy","_i","_a","pdfObject","objectCollectionIndex","mainObjectCollection","PdfDocumentBase","objects","currentSavingObject","pdfCatalog","setMainObjectCollection","setCrossTable","setCatalog","catalog","filename","encoding_1","SW_1","Encoding","SW","StreamWriter","Promise","resolve","reject","blobData","Blob","docSave","isStreamCopied","PdfDocument","ObjectType","PdfBoolean","objectStatus","saving","boolToStr","PdfViewerPreferences","_centerWindow","_dictionary","_dictionaryProperties","_displayTitle","_fitWindow","_hideMenuBar","_hideToolBar","_hideWindowUI","_pageMode","_catalog","_mapPageMode","_duplex","_mapDuplexMode","_pageLayout","_mapPageLayout","_pageScaling","PageScalingMode","AppDefault","mode","DuplexMode","Simplex","DuplexFlipShortEdge","DuplexFlipLongEdge","PdfPageMode","UseNone","UseOutlines","UseThumbs","FullScreen","UseOC","UseAttachments","PdfPageLayout","SinglePage","OneColumn","TwoColumnLeft","TwoColumnRight","TwoPageLeft","TwoPageRight","_splitWindow","PdfCatalog","sections","tempDictionaryProperties","_viewerPreferences","PdfCrossTable","merging","internalTrailer","pdfObjects","objectCount","saveHead","mappedReferences","markTrailerReferences","saveObjects","saveCount","xrefPos","registerObject","saveSections","saveTrailer","saveTheEndess","objectCollection","prevXRef","objectNum","prepareSubsection","saveSubsection","Free","getItem","offset","generation","isFree","addOffsetLength","addGenNumberLength","total","split","version","generateFileVersion","bNew","getSubReference","tempkey","tempvalue","tempObj","objnumber","nextObjNumber","tempIndex","bForceNew","saveIndirectObject","currentSavingObj","doSaveObject","free","RegisteredObject","maxGenNumIndex","dereference","offsetNumber","tempReference","Normal","PdfPageSize","letter","note","legal","a0","a1","a2","a3","a4","a5","a6","a7","a8","a9","a10","b0","b1","b2","b3","b4","b5","archE","archD","archC","archB","archA","flsa","halfLetter","letter11x17","ledger","PdfPageOrientation","PdfPageRotateAngle","PdfNumberStyle","PdfDockStyle","PdfAlignmentStyle","TemplateType","PdfMargins","leftMargin","topMargin","rightMargin","bottomMargin","setMargins","margin1","margin2","margin3","margin4","pdfMargin","PdfPageSettings","pageSize","setSize","pageOrientation","orientation","updateSize","pageMargins","pageOrigin","rotateAngle","isRotation","Portrait","Landscape","getActualSize","margins","RotateAngle0","PdfStreamWriter","dictionaryName","writeOperator","executeObject","useEvenOddRule","fillStrokePath","fillPath","closeFillPath","textScaling","strokePath","restoreGraphicsState","saveGraphicsState","startNextLine","writePoint","showText","checkTextParam","writeText","setLeading","setTextRenderingMode","renderingMode","setCharacterSpacing","charSpacing","setWordSpacing","showNextLineText","setColorSpace","op","opcode","start","updateY","arg","string","writeComment","forStroking","setLineDashPattern","patternOffset","setLineDashPatternHelper","tempPattern","miterLimit","setLineCap","lineCapStyle","setLineJoin","lineJoinStyle","returnValue","appendBezierSegment","setColourWithPattern","colours","patternName","PdfPen","dashOffsetValue","penDashPattern","pdfDashStyle","Custom","Dash","Dot","DashDot","DashDotDot","Solid","pdfLineCap","pdfLineJoin","internalMiterLimit","penWidth","setBrush","sBrush","pdfBrush","currentPen","dashControl","lineJoin","lineCap","pen","getPattern","dashOffset","dashPattern","PdfTransformationMatrix","transformationMatrix","translate","offsetX","offsetY","scale","scaleX","scaleY","angle","PI","cos","sin","multiply","degreesToRadians","degreesX","degRadFactor","radiansToDegrees","radians","radDegFactor","Matrix","metrixElements","transform","point","x2","y2","tempMatrix","dispose","ProcedureSets","pdf","imageB","imageC","imageI","TemporaryDictionary","mKeys","ReferenceError","mValues","RangeError","splice","PdfTransparency","PdfAutomaticFieldInfoCollection","automaticFieldsInformation","fieldInfo","automaticFields","PdfGraphicsElement","drawHelper","graphics","bNeedSave","gState","translateTransform","drawInternal","restore","PdfAutomaticField","internalBounds","internalFont","internalBrush","internalPen","internalStringFormat","performDrawHelper","location","scalingX","scalingY","internalTemplateSize","getFont","stringFormat","draw","location_1","PdfAutomaticFieldInfo","getSize","getBrush","defaultFont","getPageFromGraphics","page","currentPage","pageNumberFieldLocation","pageNumberField","field","ByteArray","mPosition","readByte","getBuffer","writeFromBase64String","base64","arr","encodedString","input","chr2","enc1","enc2","enc3","keyStr","resultIndex","totalLength","replace","charAt","chr3","byteLength","readNextTwoBytes","dataView","DataView","ImageFormat","ImageDecoder","mHeight","mWidth","mbitsPerComponent","mImageData","internalBuffer","mFormat","Unknown","checkIfJpeg","TypeError","Jpeg","parseJpegImage","reset","mStream","imgData","isLengthExceed","skip","readExceededJPGImage","mJpegHeader","getImageDictionary","imageData","imageStream","tempString","decodedString","imageDataAsNumberArray","compress","getColorSpace","getDecodeParams","decodeParams","isContinueReading","getMarker","sof1Marker","sof2Marker","sof3Marker","sof5Marker","sof6Marker","sof7Marker","sof9Marker","sof10Marker","sof11Marker","sof13Marker","sof14Marker","sof15Marker","skipStream","noOfBytes","temp","marker","markerLength","mPngHeader","GIF_HEADER","BMP_HEADER","PdfUnitConverter","convertUnits","from","to","convertFromPixels","convertToPixels","proportions","updateProportionsHelper","pixelPerInch","horizontalResolution","verticalResolution","dpi","PdfImage","imageWidth","imageHeight","imagePhysicalDimension","getPointSize","ucX","ucY","dpiX","dpiY","ptWidth","Pixel","Point","ptHeight","PdfBitmap","loadImage","initializeAsync","decoder","imageStatus","TtfTableInfo","checksum","TtfNameTable","TtfNameRecord","TtfHeadTable","TtfMetrics","macStyle","TtfHorizontalHeaderTable","TtfOS2Table","TtfPostTable","TtfLongHorMetric","TtfCmapSubTable","TtfCmapTable","TtfGlyphInfo","charCode","compareTo","TtfLocaTable","TtfAppleCmapSubTable","TtfMicrosoftCmapSubTable","TtfTrimmedCmapSubTable","TtfGlyphHeader","BigEndianWriter","bufferLength","length_1","internalPosition","writeShort","flush","writeInt","writeUInt","writeString","buff","capacity","int32Size","int16Size","int64Size","TtfReader","macintoshDictionary","microsoftDictionary","internalMacintoshGlyphs","internalMicrosoftGlyphs","readFontDictionary","nameTable","readNameTable","headTable","readHeadTable","initializeFontName","checkPreambula","numTables","readInt16","tableDirectory","tableKey","readString","readInt32","lowestPosition","isTtcFont","fixOffsets","minOffset","MAX_VALUE","tableKeys","shift","isMacTtf","tableInfo","getTable","formatSelector","readUInt16","recordsCount","nameRecords","record","unicode","platformID","encodingID","languageID","nameID","readFixed","fontRevision","checkSumAdjustment","readUInt32","magicNumber","unitsPerEm","created","readInt64","modified","xMin","yMin","xMax","yMax","lowestReadableSize","fontDirectionHint","indexToLocalFormat","glyphDataFormat","readHorizontalHeaderTable","ascender","descender","lineGap","advanceWidthMax","minLeftSideBearing","minRightSideBearing","xMaxExtent","caretSlopeRise","caretSlopeRun","metricDataFormat","numberOfHMetrics","readOS2Table","xAvgCharWidth","usWeightClass","usWidthClass","fsType","ySubscriptXSize","ySubscriptYSize","ySubscriptXOffset","ySubscriptYOffset","ySuperscriptXSize","ySuperscriptYSize","ySuperscriptXOffset","ySuperscriptYOffset","yStrikeoutSize","yStrikeoutPosition","sFamilyClass","panose","readBytes","ulUnicodeRange1","ulUnicodeRange2","ulUnicodeRange3","ulUnicodeRange4","vendorIdentifier","fsSelection","usFirstCharIndex","usLastCharIndex","sTypoAscender","sTypoDescender","sTypoLineGap","usWinAscent","usWinDescent","ulCodePageRange1","ulCodePageRange2","sxHeight","sCapHeight","usDefaultChar","usBreakChar","usMaxContext","readPostTable","formatType","underlinePosition","underlineThickness","isFixedPitch","minType42","maxType42","minType1","maxType1","readWidthTable","glyphCount","glyph","glyphWidth","advanceWidth","lsb","floor","readCmapTable","tablesCount","subTables","subTable","readCmapSubTable","getCmapEncoding","Macintosh","Microsoft","Apple","readAppleCmapTable","readMicrosoftCmapTable","Trimmed","readTrimmedCmapTable","maxMacIndex","glyphInfo","getWidth","macintosh","addGlyph","collection","Unicode","microsoft","segCount","segCountX2","searchRange","entrySelector","rangeShift","endCount","readUshortArray","reservedPad","startCount","idDelta","idRangeOffset","codeOffset","glyphID","j","id","Symbol","firstCode","entryCount","fontFamily","postScriptName","glyphCode","Undefined","Roman","microsoftGlyphs","macintoshGlyphs","initializeMetrics","horizontalHeadTable","os2Table","postTable","cmapTables","bSymbol","isSymbol","factor","winAscent","macAscent","winDescent","macDescent","ceil","fontBox","widthTable","updateWidth","subScriptSizeFactor","superscriptSizeFactor","getGlyph","byteToProcess","space","getString","getDefaultGlyph","readLocaTable","bShort","offsets","updateGlyphChars","glyphChars","locaTable","glyphCharKeys","nextKey","processCompositeGlyph","glyphOffset","glyphHeader","numberOfContours","skipBytes","glyphIndex","MoreComponents","Arg1And2AreWords","WeHaveScale","WeHaveAnXyScale","WeHaveTwoByTwo","generateGlyphTable","newLocaTable","newGlyphTable","activeGlyphs","glyphSize","sort","glyphSizeAligned","align","oldGlyphOffset","oldNextGlyphOffset","nextGlyphOffset","nextGlyphIndex","glyphTableSize","updateLocaTable","bLocaIsShort","newLocaTableOut","newLocaUpdated","newLocaSize","getFontProgram","locaTableSize","tableNames","getFontProgramLength","fontProgramLength","entrySelectors","writeCheckSums","writeGlyphs","tableName","usedTablesSize","nextTableSize","calculateCheckSum","byte1","byte2","byte3","byte4","i_1","setOffset","createInternals","bIsLocaShort","isMacTTF","isFontPresent","getGlyphChars","chars","charKeys","getAllGlyphs","allGlyphInfo","readFontProgram","result1","missedGlyphs","result2","convertString","getCharWidth","isUnicode","fontData","i1","i2","i3","i4","low","written","metricsName","__extends","PdfFontMetrics","getAscent","getDescent","getLineGap","subSuperScript","SubScript","SuperScript","WidthTable","internalWidthTable","StandardWidthTable","widths","UnicodeTrueTypeFont","ttfReader","Initialize","fontString","ttfMetrics","fontDictionary","fontProgram","cmap","descendantFont","subsetName","getFontName","createDescendantFont","createCmap","createFontDictionary","createFontProgram","isBold","random","nameString","formatName","ret","createFontDescriptor","systemInfo","createSystemInfo","descriptor","getDescriptorFlags","getBoundBox","descFonts","usedChars","getDescendantWidth","generateCmap","isCompress","generateFontProgram","chLen","firstGlyphIndex","lastGlyphIndex","firstGlyphIndexWasSet","widthDetails","first","last","middlePart","toHexString","nextRange","cmapPrefix","cmapEndCodespaceRange","cmapEndRange","cmapBeginRange","cmapSuffix","FixedPitch","Symbolic","Nonsymbolic","isItalic","ForceBold","abs","isCaseChange","toUpperCase","setSymbols","isEmbedFont","base64String","ArabicShapeRenderer","getCharacterShape","hamza","bwhb","arabicMapTable","lwawm","lwa","shape","level","str2","doShape","previous","ArabicShape","present","shapeCount","ligature","getShapeCount","Shapes","Value","append","Ligature","Type","vowel","fathatan","hamzaBelow","superScriptalef","shadda","alef","alefHamzaBelow","lwawhb","hamzaAbove","alefHamza","lwawh","waw","wawHamza","yeh","alefMaksura","farsiYeh","yehHamza","madda","alefMadda","lam","zeroWidthJoiner","arabicCharTable","shapeValue","shapeType","shapeVowel","shapeLigature","shapeShapes","Bidi","doMirrorShaping","indexLevels","mirroringShapeCharacters","res","getLogicalToVisualString","inputText","isRtl","rtlCharacters","RtlCharacters","getVisualOrder","setDefaultIndexLevel","doOrder","resultBuilder","indexes","sIndex","eIndex","odd","even","reArrange","pstart","pend","update","types","getCharacterCode","textOrder","LRE","L","doVisualOrder","levels","characterCodes","rtlCharacterTypes","setDefaultLevels","setLevels","R","updateLevels","getEmbeddedCharactersLength","preview","preType","checkNSM","checkEmbeddedCharacters","RLE","LRO","RLO","PDF","BN","startType","endType","charType","NSM","checkEuropeanDigits","EN","AL","AN","checkArabicCharacters","checkEuropeanNumberSeparator","ES","CS","checkEuropeanNumberTerminator","ET","l","getLength","checkOtherNeutrals","ON","checkOtherCharacters","pst","checkCommanCharacters","validSet","t","WS","B","S","byte","lt","tt","rt","charTypes","RtlRenderer","rtl","wordSpace","customLayout","splitLayout","customSplitLayout","getGlyphIndex","glyphs","custom","fontInternal","Uint16Array","textDirection","layouted","txt","words","addChars","openBracket","closeBracket","PdfLayoutType","PdfLayoutBreakType","PathPointType","PdfGradientBrush","mbackground","sh","aa","mfunction","mcolorSpace","csValue","colorSpaceToDeviceName","mbStroking","mpatternDictionary","mshading","patternDictionary","mmatrix","resetFunction","name_1","getName","resetPatternDictionary","cloneAntiAliasingValue","cloneBackgroundValue","PdfTemplate","templateSize","pdfGraphics","gr","GetResourceEventHandler","PdfGraphics","initializeCoordinates","PdfResources","addType","addSubType","tempSize","writeTransformation","getNames","sName","primitive","names","generateName","PdfTilingBrush","pdfNames","fonts","requireProcedureSet","procedureSetName","procSets","removeFont","Guid","getNewGuidString","xobjects","savable","transDic","parentXObjects","hasSameImageStream","oldReference","values_1","baseDictionary","properties","mPage","mLocation","mTransformationMatrix","tempBrushStream","brushStream","tempResource","mDictionaryProperties","setBox","setObligatoryFields","tileTransform","mBox","box","mGraphics","mResources","mStroking","name1","PdfPage","pdfStringLayoutResult","canvasSize","internalMediaBoxUpperRightBound","clipBounds","pdfStreamWriter","pageLayer","internalAutomaticFields","bStateSaved","currentBrush","currentFont","bCSInitialized","previousTextRenderingMode","previousCharacterSpacing","previousWordSpacing","previousTextScaling","currentStringFormat","procedureSets","drawPdfTemplate","template","bNeedScale","getTranslateTransform","getScaleTransform","newLocation","drawString","arg8","arg9","temparg4","temparg5","temparg6","temparg7","temparg8","temparg9","checkCorrectLayoutRectangle","drawStringLayoutResult","isEmfTextScaled","emfScalingFactor","isNormalRender","isUseFontSize","drawLine","stateControl","drawRectangle","xOffset","yOffset","layer","temparg1","drawPathHelper","drawRoundedRectangle","radius","arc","diameter","_pathPoints","_pathTypes","startFigure","_addArc","CloseSubpath","_drawPath","Alternate","startAngle","sweepAngle","points","_getBezierArcPoints","_addArcPoints","Bezier3","pointType","_addPoint","Start","_getLastPoint","Line","lastPoint","x1","y1","s1","e1","tmp","fragAngle","numFragments","xcen","ycen","rx","ry","halfAng","kappa","pointList","theta0","theta1","cos0","cos1","sin0","sin1","Winding","isBrush","isEvenOdd","isPen","drawImage","physicalDimension","name_2","setResources","resource","getLineBounds","lineIndex","layoutRectangle","lineCount","getTextVerticalAlignShift","hShift","getHorizontalAlignShift","shouldJustify","textSize","layoutedRectangle","alignment","Center","Right","lineAlignment","Middle","Bottom","setLayer","pageSave","performDraw","applyStringSettings","horizontalScalingFactor","resultHeight","remainingString","startCutIndex","drawLayoutResult","underlineStrikeoutText","isEmfPlus","getNextPage","section","getPages","setClip","tm","getTextRenderingMode","cs","ws","textHeight","boundsHeight","vAlignShift","lineInfo","hAlignShift","drawUnicodeLine","drawAsciiLine","isPointOverload","justifyLine","blocks","useWordSpace","Justify","rtlRender","rightAlign","ttfFont","RightToLeft","drawUnicodeBlocks","breakUnicodeLine","tokens","token","convertToUnicode","getUnicodeString","xShift","spaceWidth","tokenWidth","converted","boundsWidth","hasWordSpacing","whitespacesCount","justifyStyle","goodWidth","hasSpaces","goodLineBreakStyle","underline","strikeout","linePen","createUnderlineStikeoutPen","vShift","underlineYOffset","strikeoutYOffset","FillStroke","Stroke","Fill","ClipFlag","layoutBounds","firstParagraphLine","Left","colorSpaceChanged","lastDocumentCS","lastGraphicsCS","initCurrentColorSpace","penControl","brushControl","fontControl","colorspace","currentColorSpaces","lgb","curSubSuper","prevSubSuper","setTransparency","transp","td","istransparencySet","trasparencies","TransparencyData","name_3","clipTranslateMargins","clipArea","scaleTransform","rotateTransform","getRotateTransform","mediaBoxUpperRightBound","cropBox","PdfGraphicsState","textRenderingMode","graphicsState","doRestoreState","pop","drawPath","path","pathPoints","pathTypes","fillMode","buildUpPath","drawArc","constructArcPath","cnt","typeValue","p2","p3","getBezierPoints","checkFlags","pathTypesValuesMask","startAng","getBezierArc","pt","numX1","numY1","numX2","numY2","fragAngle1","pointsList","thetaValue0","thetaValue1","transparencyObject","isEmf","isBaselineFormat","isImageOptimized","internalTextScaling","pdfPen","pdfFont","pdfColorSpace","internalTextRenderingMode","elements_1","forEach","alphaPen","alphaBrush","blendMode","PdfPageLayer","pdfPage","layerid","layerName","isVisible","initializeGraphics","PdfPageLayerCollection","sublayer","sign","oPage","isSame","sc","origin","clipRect","getActualBounds","pageSettings","clipPageTemplates","streamClipPageTemplates","contentLength","PdfCollection","list","firstArgument","secondArgument","addLayer","insertLayer","parseLayers","loadedPage","saveStream","restoreStream","saveData","parentLayerCount","optionalContent","PdfPageBase","pdfSection","pageDictionary","layers","defaultLayerIndex","layerCollection","defLayerIndex","PdfAnnotationCollection","internalAnnotations","annotation","doAdd","destination","setPage","lists","layoutResult","lastPosition","setColor","alreadyExistsAnnotationError","missingAnnotationException","defaultLayer","parentDocument","annotationCollection","annotations","setSection","resetProgress","isProgressOn","getClientSize","doc","drawPageTemplates","frontLayer","containsTemplates","backLayer","drawTemplates","PageAddedEventArgs","PdfSectionPageCollection","PdfDocumentTemplate","leftTemplate","checkElement","topTemplate","rightTemplate","bottomTemplate","evenLeft","evenTop","evenRight","evenBottom","oddLeft","oddTop","oddRight","oddBottom","getLeft","isEven","EvenLeft","OddLeft","getTop","EvenTop","OddTop","getRight","EvenRight","OddRight","getBottom","EvenBottom","OddBottom","pageCollectionIndex","templateElement","PdfSectionTemplate","leftValue","topValue","rightValue","bottomValue","stampValue","PdfSection","sectionCollection","settings","pagesReferences","pageTemplate","pagesCollection","pdfPages","pointToNativePdf","setPageSettings","PageSettingsState","pageCount","foreground","documentHeaders","getDocumentTemplates","sectionTemplates","getSectionTemplates","templates","applyDocumentTopTemplate","applyDocumentBottomTemplate","applyDocumentLeftTemplate","applyDocumentRightTemplate","page_1","checkPresence","pageAddedMethod","rh","args","onPageAdded","top_1","document_1","getLeftIndentWidth","getTopIndentHeight","getRightIndentWidth","getBottomIndentHeight","includeMargins","templateWidth","docTemplateWidth","templateHeight","docTemplateHeight","temproaryPages","applyPageSettings","container","parentSettings","PdfSectionCollection","rotateFactor","sectionHeaders","drawTemplatesHelper","pageAdded","initialSettings","pageRotate","sectionCount","pdfSectionCollection","section_1","checkSection","countPages","PdfDocumentPageCollection","pdfPageCollectionIndex","getLastSection","getPageByIndex","getPage","sectionStartIndex","pageIndex","numPages","PdfCacheCollection","search","group","getGroup","createNewGroup","referenceObjects","tGroup","representative","removeGroup","slice","pdfFontCollection","defaultStandardFont","PdfStandardFont","Helvetica","defaultMargin","documentPageCollection","cacheCollection","isCacheEnabled","checkPagesPresence","cache","isMerging","isMerge","PdfStandardFontMetricsFactory","getMetrics","getHelveticaMetrics","Courier","getCourierMetrics","TimesRoman","getTimesMetrics","getSymbolMetrics","ZapfDingbats","getZapfDingbatsMetrics","subSuperScriptFactor","helveticaBoldItalicAscent","helveticaBoldItalicDescent","helveticaBoldItalicName","arialBoldWidth","helveticaBoldAscent","helveticaBoldDescent","helveticaBoldName","helveticaItalicAscent","helveticaItalicDescent","helveticaItalicName","helveticaAscent","helveticaDescent","helveticaName","arialWidth","courierBoldItalicAscent","courierBoldItalicDescent","courierBoldItalicName","courierBoldAscent","courierBoldDescent","courierBoldName","courierItalicAscent","courierItalicDescent","courierItalicName","courierAscent","courierDescent","courierName","fixedWidth","timesBoldItalicAscent","timesBoldItalicDescent","timesBoldItalicName","timesRomanBoldItalicWidths","timesBoldAscent","timesBoldDescent","timesBoldName","timesRomanBoldWidth","timesItalicAscent","timesItalicDescent","timesItalicName","timesRomanItalicWidth","timesAscent","timesDescent","timesName","timesRomanWidth","symbolAscent","symbolDescent","symbolName","symbolWidth","zapfDingbatsAscent","zapfDingbatsDescent","zapfDingbatsName","zapfDingbatsWidth","pdfFontFamily","checkStyle","convert","getCharWidthInternal","fontFamilyEqual","lineReducer","equal","styleEqual","initializeInternals","encodings","WinAnsiEncoding","charOffset","fontFamilyPrototype","PdfAnnotation","internalColor","textFont","textBrush","nativeRectangle","initialHeight","tempLoacation","darkness","PdfLinkAnnotation","PdfActionLinkAnnotation","getSetAction","pdfAction","PdfDocumentLinkAnnotation","pdfDestination","ElementLayouter","layoutElement","getElement","param","layoutInternal","Layouter","getPaginateBounds","usePaginateBounds","paginateBounds","PdfLayoutFormat","layoutType","layoutPaginateBounds","boundsSet","baseFormat","break","PdfLayoutParams","layoutFormat","PdfLayoutResult","PdfBorders","leftPen","rightPen","topPen","bottomPen","defaultBorderPenLeft","defaultBorderPenRight","dashStyle","defaultBorderPenTop","defaultBorderPenBottom","PdfPaddings","leftPad","hasLeftPad","rightPad","hasRightPad","topPad","hasTopPad","bottomPad","hasBottomPad","PdfLayoutElement","beginPageLayout","endPageLayout","onBeginPageLayout","onEndPageLayout","newBound","bEmbedFonts","default","TextLayouter","currentBounds","pageResult","TextPageLayoutResult","remainder","layoutOnPage","getLayoutResult","PdfTextLayoutResult","lastLineBounds","checkCorrectBounds","stringResult","textFinished","FitElement","PdfTextWebLink","getTextPageBounds","verticalShift","remainderText","lastLineTextBounds","PdfTextElement","elementValue","drawText","hasPointOverload","stringLayoutResult","previousPosition","calculateResultBounds","lineSize","maximumWidth","startPosition","isPdfTextElement","PdfUriAnnotation","pdfUriAction","uriAction","uniformResourceLocator","previousFontStyle","recalculateBounds","calculateBounds","uriAnnotation","url","defaultBorder","drawMultipleLineWithPoint","drawMultipleLineWithBounds","PdfNumbersConvertor","intArabic","numberStyle","Numeric","LowerLatin","arabicToLetter","toLowerCase","LowerRoman","arabicToRoman","UpperLatin","UpperRoman","retval","retvalM","generateNumber","retvalCM","retvalD","retvalCD","retvalC","retvalXC","retvalL","retvalXL","retvalX","retvalIX","retvalV","retvalIV","retvalI","arabic","stack","convertToLetter","appendChar","magnitude","numberstring","letterLimit","acsiiStartIndex","PdfTemplateValuePair","pdfTemplate","PdfMultipleValueField","drawLocation","PdfPageNumberField","internalNumberStyle","internalGetValue","PdfCompositeField","internalText","automaticField","arguments","PdfSingleValueField","painterGraphics","PdfPageCountField","PdfDestinationMode","PdfDestination","zoomFactor","initializePrimitive","destinationMode","destinationLocation","Location","simplePage","FitToPage","PdfFunction","mDictionary","PdfSampledFunction","checkParams","sizes","samples","setDomainAndRange","setSizeAndValues","PdfExtend","PdfLinearGradientMode","ShadingType","KnownColor","PdfBrushes","sBrushes","AliceBlue","AntiqueWhite","Aqua","Aquamarine","Azure","Beige","Bisque","Black","BlanchedAlmond","Blue","BlueViolet","Brown","BurlyWood","CadetBlue","Chartreuse","Chocolate","Coral","CornflowerBlue","Cornsilk","Crimson","Cyan","DarkBlue","DarkCyan","DarkGoldenrod","DarkGray","DarkGreen","DarkKhaki","DarkMagenta","DarkOliveGreen","DarkOrange","DarkOrchid","DarkRed","DarkSalmon","DarkSeaGreen","DarkSlateBlue","DarkSlateGray","DarkTurquoise","DarkViolet","DeepPink","DeepSkyBlue","DimGray","DodgerBlue","Firebrick","FloralWhite","ForestGreen","Fuchsia","Gainsboro","GhostWhite","Gold","Goldenrod","Gray","Green","GreenYellow","Honeydew","HotPink","IndianRed","Indigo","Ivory","Khaki","Lavender","LavenderBlush","LawnGreen","LemonChiffon","LightBlue","LightCoral","LightCyan","LightGoldenrodYellow","LightGray","LightGreen","LightPink","LightSalmon","LightSeaGreen","LightSkyBlue","LightSlateGray","LightSteelBlue","LightYellow","Lime","LimeGreen","Linen","Magenta","Maroon","MediumAquamarine","MediumBlue","MediumOrchid","MediumPurple","MediumSeaGreen","MediumSlateBlue","MediumSpringGreen","MediumTurquoise","MediumVioletRed","MidnightBlue","MintCream","MistyRose","Moccasin","NavajoWhite","Navy","OldLace","Olive","OliveDrab","Orange","OrangeRed","Orchid","PaleGoldenrod","PaleGreen","PaleTurquoise","PaleVioletRed","PapayaWhip","PeachPuff","Peru","Pink","Plum","PowderBlue","Purple","Red","RosyBrown","RoyalBlue","SaddleBrown","Salmon","SandyBrown","SeaGreen","SeaShell","Sienna","Silver","SkyBlue","SlateBlue","SlateGray","Snow","SpringGreen","SteelBlue","Tan","Teal","Thistle","Tomato","Transparent","Turquoise","Violet","Wheat","White","WhiteSmoke","Yellow","YellowGreen","colorName","getColorValue","PdfBlend","mFactors","mPositions","positionarray","mCount","generateColorBlend","positions","cBlend","PdfColorBlend","clrs","c1","c2","interpolate","colors","clonePdfBlend","factors","gcd","u","v","iU","precision","iV","gcdInt","mcolors","getFunction","step","samplesCount","colourComponents","getColorComponentsCount","maxComponentValue","getMaxComponentValue","setRange","func","mbrush","intervals","getIntervals","getSamplesValues","cloneColorBlend","maxValue","sampleCount","getGrayscaleSamples","getCmykSamples","getRgbSamples","getNextColor","positionLow","positionHi","getIndices","indexLow","indexHi","colorLow","colorHi","currPos","prev","PdfLinearGradientBrush","mColours","mColourBlend","initShading","mBlend","mBoundaries","extStart","extEnd","End","addPoints","point1","point2","subPoints","mulPoints","mulPoint","choosePoint","setPoints","mPointStart","mPointEnd","blend","interpolationColors","centre","coef","BackwardDiagonal","ForwardDiagonal","Horizontal","Vertical","radAngle","tan","p1","cp1","PdfRadialGradientBrush","mColour","mColourBlends","extend1","extEnd1","pointStart","pointEnd","radiusStart","radiusEnd","rBrush","mRadiusStart","mRadiusEnd","centerStart","centerEnd","colorStart","colorEnd","PdfBorderOverlapStyle","PdfGridStyleBase","gridBackgroundBrush","gridTextBrush","gridTextPen","gridFont","gridBackgroundImage","PdfGridStyle","gridCellSpacing","gridHorizontalOverflowType","bAllowHorizontalOverflow","gridCellPadding","gridBorderOverlapStyle","Overlap","PdfHorizontalOverflowType","LastPage","PdfGridCellStyle","gridCellBorders","PdfGridRowStyle","gridRowBackgroundBrush","setBackgroundBrush","cells","getCell","backgroundBrush","gridRowTextBrush","setTextBrush","gridRowTextPen","setTextPen","textPen","gridRowFont","gridRowBorder","setBorder","borders","setParent","gridRowBackgroundImage","setBackgroundImage","PdfGridCell","internalIsCellMergeContinue","internalIsRowMergeContinue","internalIsCellMergeStart","internalIsRowMergeStart","remaining","isFinish","gridRow","objectValue","PdfGrid","row","grid","isSingleGrid","ParentCell","isChildGrid","rowCount","rows","getRow","colCount","gridRowSpan","rowSpanExists","hasRowSpanSpan","cellStyle","cellHeight","measureHeight","colSpan","columnSpanExists","cellWidth","isComplete","measureWidth","webLink","layouter","getTextFont","cellPadding","cellSpacing","drawCellBackground","getBackgroundBrush","backgroundImage","getBackgroundImage","adjustContentLayoutArea","returnBounds","rowSpan","cancelSubsequentSpans","allowHorizontalOverflow","rowOverflowIndex","adjustOuterLayoutArea","childGrid","childGridResult","imageBounds","getTextPen","getTextBrush","strFormat","getStringFormat","innerLayoutArea","allowRowBreakAcrossPages","_rowHeight","splitChildRowIndex","fontSpilt","rowFontSplit","repeatFlag","layoutRect","PdfGridLayouter","PdfGridLayoutFormat","LayoutFormat","Paginate","setSpan","checkSpan","rowBreakHeightValue","rowBreakHeight","NestedGridLayoutResult","drawCellBorders","borderOverlapStyle","Inside","Square","isHeader","currentColIndex","columnSpan","isCellMergeContinue","span","totalWidth","getColumn","currentRowIndex","rowCollection","totalHeight","headers","getHeader","rowMergeComplete","cellIndex","calculateWidth","currentValue","hasColSpan","hasRowSpan","tempval","internalWidth","tempWidth","finsh","rowSpanRemainingHeight","PdfGridCellCollection","cell","tempcell","PdfGridColumn","columnWidth","isCustomWidth","PdfGridColumnCollection","internalColumns","measureColumnsWidth","initialWidth","isPageWidth","getDefaultWidths","subFactor","PdfGridRow","bRowSpanExists","gridCells","pdfGrid","rowStyle","border","gridRowBreakHeight","gridRowOverflowIndex","isRowHeightSet","rowHeight","rowWidth","gridResult","bColumnSpanExists","isRowMergeComplete","cellIn","rowin","isHeaderRow","rowWid","isrowFinish","isRowSpanRowHeightSet","noOfPageCount","isPageBreakRowSpanApplied","PdfGridRowCollection","addRow","temprow","PdfGridHeaderCollection","beginCellDraw","endCellDraw","bRepeatHeader","breakRow","gridColumns","gridRows","gridHeaders","gridInitialWidth","gridStyle","ispageWidth","ischildGrid","gridSize","measure","parentCell","onBeginCellDraw","raiseBeginCellDraw","onEndCellDraw","raiseEndCellDraw","hasChanged","currentRow","gridLocation","currentCellIndex","maxSpan","isRowMergeContinue","isCellMergeStart","isRowMergeStart","maximumRowSpan","cellrowSpan","cellmaxSpan","cellcolSpan","hasColumnSpan","childGridColumnWidth","padding","columnCount","parentCellIndex","colCount_1","colCount_2","RowCount","ColCount","childGridColWidth","colWidth","isGridSplit","isRearranged","pageBounds","listOfNavigatePages","getFormat","gridLayoutFormat","currentPageBounds","currentGraphics","FitColumnsToPage","Grid","startLocation","hType","horizontalOverflowType","determineColumnDrawRanges","columnRanges","startColumn","endColumn","cellWidths","availableWidth","subWidths","layoutedPages","startPage","cellBounds","returnObject","cellStartIndex","cellEndIndex","raiseBeforePageLayout","drawHeader","headerHeight","headerResult","drawRow","repeatRowIndex","OnePage","getNextPageformat","repeatRow","flag","originalHeight","rowResult","rowIndex","tempResult","raisePageLayouted","cancel","isPaginate","isRowBreaksNextPage","i_2","repeatHeader","j_1","headerRepeat","j_2","tempResult1","i_3","checkIsFisished","i_4","i_5","recalHeight","ReCalculateHeight","startIndex","endIndex","pageGraphics","location_2","totalwidth","childGridCell","i_6","bottomPadding","isPdfGrid","maximumCellBoundsWidth","largeNavigatePage","rowLayoutBoundsWidth","NextPage","reArrangePages","FinishedDrawingCell","nextPage","pageindex","CheckIfDefaultFormat","defaultFormat","measureTrailingSpaces","noClip","RaiseBeforeCellDraw","PdfGridBeginCellDrawEventArgs","raiseAfterCellDraw","cellstyle","PdfGridEndCellDrawEventArgs","count_1","isChanged","PdfGridLayoutResult","newHeight","raiseBeginPageLayout","PdfGridBeginPageLayoutEventArgs","startRowIndex","PdfGridEndPageLayoutEventArgs","raiseEndPageLayout","result_1","RowLayoutResult","rowHeightWithSpan","currRowIndex","isFit","calculatedHeight","FitPage","drawRowWithBreak","repeatRowNumber","isFitToCell","slr","location_4","cancelSpans","tempValue","currentHeight","column","calculateHeight","gridHeight","gridColumnWidth","cellstyle1","rowBreakPageHeightCellIndex","childheight","currentLocation","GridCellEventArgs","gridRowIndex","gridCellIndex","gridBounds","bSkip","PdfCancelEventArgs","isCancel","BeginPageLayoutEventArgs","EndPageLayoutEventArgs","nextPdfPage","startRow","bIsFinished","layoutedBounds","ShapeLayouter","shapeLayoutBounds","getBounds","shapeBounds","ShapeLayoutResult","endArgs","getNextShapeBounds","curBounds","sBounds","fitToPage","checkCorrectCurrentBounds","fitsToBounds","shapeFinished","getDrawBounds","drawShape","getPageResultBounds","drawGraphicsHelper","bottomCellPadding","splitDiff","borderWidth","olderPdfForm","totalPageSize","PdfShapeElement","getBoundsInternal","drawShapeHelper","apply","PdfDrawElement","mpen","PdfFillElement","obtainPen","PdfPath","mfillMode","mpoints","getLastPoint","mpathTypes","widthValue","addArc","getBezierArcPoints","addBezier","addEllipse","closeFigure","addLine","addPath","addPie","addPoint","addPolygon","addRectangle","mStartFigure","closeAllFigures","startPath","isXps","pointCount","xmin","xmax","ymin","ymax","isBeziers3","PdfRectangleArea","PdfEllipsePart","PdfArc","argu1","PdfTrueTypeFont","getUnicodeLineWidth","codeWidth","createFontInternal","calculateStyle","iStyle","equalFont","enableCache","isEmbed","isUnicodeFont","resultGlyph","glyphIndices","PdfPageTemplateElement","dockStyle","resetAlignment","alignmentStyle","setAlignment","isForeground","templateType","updateDocking","InitiateBounds","dock","canBeSet","TopLeft","MiddleLeft","BottomLeft","TopCenter","TopRight","MiddleRight","BottomRight","BottomCenter","MiddleCenter","getAlignmentBounds","getDockBounds","getSimpleAlignmentBounds","getTemplateAlignmentBounds","actualBounds","convertSign","getSimpleDockBounds","getTemplateDockBounds","Infinity"],"mappings":"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AU,IAAU,IAAU,IAAU,KACzC,CAAC,IAAU,IAAU,KACrB,CAAC,IAAU,IAAU,IAAU,IAAU,KACzC,CAAC,IAAU,IAAU,IAAU,IAAU,KACzC,CAAC,IAAU,IAAU,IAAU,IAAU,KACzC,CAAC,IAAU,IAAU,IAAU,IAAU,KACzC,CAAC,IAAU,IAAU,IAAU,IAAU,KACzC,CAAC,IAAU,IAAU,KACrB,CAAC,IAAU,IAAU,KACrB,CAAC,IAAU,IAAU,KACrB,CAAC,IAAU,IAAU,KACrB,CAAC,IAAU,IAAU,IAAU,IAAU,KACzC,CAAC,IAAU,IAAU,IAAU,IAAU,KACzC,CAAC,IAAU,IAAU,IAAU,IAAU,KACzC,CAAC,IAAU,IAAU,IAAU,IAAU,KACzC,CAAC,IAAU,IAAU,IAAU,IAAU,KACzC,CAAC,IAAU,IAAU,IAAU,IAAU,KACzC,CAAC,IAAU,IAAU,IAAU,IAAU,KACzC,CAAC,IAAU,IAAU,IAAU,IAAU,KACzC,CAAC,IAAU,IAAU,IAAU,IAAU,KACzC,CAAC,IAAU,IAAU,IAAU,IAAU,KACzC,CAAC,IAAU,IAAU,IAAU,IAAU,KACzC,CAAC,IAAU,IAAU,IAAU,IAAU,KACzC,CAAC,IAAU,IAAU,IAAU,IAAU,KACzC,CAAC,IAAU,IAAU,IAAU,IAAU,KACzC,CAAC,IAAU,IAAU,IAAU,IAAU,KACzC,CAAC,IAAU,IAAU,IAAU,IAAU,KACzC,CAAC,IAAU,IAAU,KACrB,CAAC,IAAU,IAAU,IAAU,IAAU,KACzC,CAAC,IAAU,IAAU,IAAU,IAAU,KACzC,CAAC,IAAU,IAAU,KACrB,CAAC,IAAU,IAAU,IAAU,IAAU,KACzC,CAAC,IAAU,IAAU,IAAU,IAAU,KACzC,CAAC,IAAU,IAAU,IAAU,IAAU,KACzC,CAAC,IAAU,IAAU,IAAU,IAAU,KACzC,CAAC,IAAU,IAAU,IAAU,IAAU,KACzC,CAAC,IAAU,IAAU,IAAU,IAAU,KACzC,CAAC,IAAU,IAAU,IAAU,IAAU,KACzC,CAAC,IAAU,IAAU,IAAU,IAAU,KACzC,CAAC,IAAU,IAAU,IAAU,IAAU,KACzC,CAAC,IAAU,IAAU,IAAU,IAAU,KACzC,CAAC,IAAU,IAAU,KACrB,CAAC,IAAU,IAAU,KACrB,CAAC,IAAU,IAAU,KACrB,CAAC,IAAU,IAAU,KACrB,CAAC,IAAU,IAAU,KACrB,CAAC,IAAU,IAAU,KACrB,CAAC,IAAU,IAAU,IAAU,IAAU,KACzC,CAAC,IAAU,IAAU,IAAU,IAAU,KACzC,CAAC,IAAU,IAAU,IAAU,IAAU,KACzC,CAAC,IAAU,IAAU,IAAU,IAAU,KACzC,CAAC,IAAU,IAAU,IAAU,IAAU,KACzC,CAAC,IAAU,IAAU,IAAU,IAAU,KACzC,CAAC,IAAU,IAAU,IAAU,IAAU,KACzC,CAAC,IAAU,IAAU,KACrB,CAAC,IAAU,IAAU,IAAU,IAAU,KACzC,CAAC,IAAU,IAAU,IAAU,IAAU,KACzC,CAAC,IAAU,IAAU,KACrB,CAAC,IAAU,IAAU,IAAU,IAAU,KACzC,CAAC,IAAU,IAAU,KACrB,CAAC,IAAU,IAAU,KACrB,CAAC,IAAU,IAAU,KACrB,CAAC,IAAU,IAAU,KACrB,CAAC,IAAU,IAAU,KACrB,CAAC,IAAU,IAAU,KACrB,CAAC,IAAU,IAAU,IAAU,IAAU,KACzC,CAAC,IAAU,IAAU,IAAU,IAAU,KACzC,CAAC,IAAU,IAAU,KACrB,CAAC,IAAU,IAAU,MAEzBjhD,KAAKigD,KAAO,IACZjgD,KAAKqgD,UAAY,IACjBrgD,KAAKkgD,eAAiB,IACtBlgD,KAAK8gD,UAAY,IACjB9gD,KAAK+gD,IAAM,IACX/gD,KAAKw+C,MAAQ,IACbx+C,KAAKghD,gBAAkB,IACvBhhD,KAAKogD,WAAa,IAClBpgD,KAAK8/C,WAAa,IAClB9/C,KAAKwgD,SAAW,IAChBxgD,KAAK4gD,SAAW,IAChB5gD,KAAKugD,IAAM,IACXvgD,KAAK0gD,YAAc,IACnB1gD,KAAKygD,IAAM,IACXzgD,KAAK2gD,SAAW,IAChB3gD,KAAKggD,OAAS,IACdhgD,KAAK6gD,MAAQ,IACb7gD,KAAK4+C,IAAM,IACX5+C,KAAKsgD,MAAQ,IACbtgD,KAAKmgD,OAAS,IACdngD,KAAK2+C,MAAQ,IACb3+C,KAAKy+C,KAAO,IACZz+C,KAAK6/C,SAAW,IAChB7/C,KAAK+/C,gBAAkB,IACvB//C,KAAK4/C,MAAQ,EAGb5/C,KAAK0+C,eAAiB,IAAI9+C,EAC1B,IAAK,IAAIoD,EAAI,EAAGA,EAAIhD,KAAKihD,gBAAgBpgD,OAAQmC,CAAC,GAC9ChD,KAAK0+C,eAAet+C,SAASJ,KAAKihD,gBAAgBj+C,GAAG,GAAIhD,KAAKihD,gBAAgBj+C,EAAE,EAsOxFxD,OAAOiC,eAAey9C,GAAYz/C,UAAW,QAAS,CAOlDkC,IAAK,WACD,OAAO3B,KAAKkhD,YAEhBr/C,IAAK,SAAU1B,GACXH,KAAKkhD,WAAa/gD,GAEtB2B,WAAY,CAAA,EACZC,aAAc,CAAA,EACjB,EACDvC,OAAOiC,eAAey9C,GAAYz/C,UAAW,OAAQ,CAKjDkC,IAAK,WACD,OAAO3B,KAAKmhD,WAEhBt/C,IAAK,SAAU1B,GACXH,KAAKmhD,UAAYhhD,GAErB2B,WAAY,CAAA,EACZC,aAAc,CAAA,EACjB,EACDvC,OAAOiC,eAAey9C,GAAYz/C,UAAW,QAAS,CAKlDkC,IAAK,WACD,OAAO3B,KAAKohD,YAEhBv/C,IAAK,SAAU1B,GACXH,KAAKohD,WAAajhD,GAEtB2B,WAAY,CAAA,EACZC,aAAc,CAAA,EACjB,EACDvC,OAAOiC,eAAey9C,GAAYz/C,UAAW,WAAY,CAKrDkC,IAAK,WACD,OAAO3B,KAAKqhD,eAEhBx/C,IAAK,SAAU1B,GACXH,KAAKqhD,cAAgBlhD,GAEzB2B,WAAY,CAAA,EACZC,aAAc,CAAA,EACjB,EACDvC,OAAOiC,eAAey9C,GAAYz/C,UAAW,SAAU,CAKnDkC,IAAK,WACD,OAAO3B,KAAKshD,aAEhBz/C,IAAK,SAAU1B,GACXH,KAAKshD,YAAcnhD,GAEvB2B,WAAY,CAAA,EACZC,aAAc,CAAA,EACjB,MAjFDm9C,GAkFOA,GAjFP,SAASA,KAELl/C,KAAKkhD,WAAa,GAClBlhD,KAAKmhD,UAAY,GACjBnhD,KAAKohD,WAAa,GAClBphD,KAAKqhD,cAAgB,EACrBrhD,KAAKshD,YAAc,ECjUvBC,GAAK9hD,UAAU+hD,gBAAkB,SAAU7rC,GAEvC,IADA,IAAI5S,EAAS,GACJC,EAAI,EAAGA,EAAI2S,EAAK9U,OAAQmC,CAAC,GACK,IAAP,EAAtBhD,KAAKyhD,YAAYz+C,KAAkBhD,KAAK0hD,yBAAyBrgD,YAAYsU,EAAK3S,GAAGuT,WAAW,CAAC,CAAC,EACpGxT,EAAOC,GAAK+S,OAAOC,aAAahW,KAAK0hD,yBAAyB7hD,SAAS8V,EAAK3S,GAAGuT,WAAW,CAAC,CAAC,CAAC,EAG7FxT,EAAOC,GAAK2S,EAAK3S,GAAGtD,WAI5B,IADA,IAAIiiD,EAAM,GACD7O,EAAI,EAAGA,EAAI/vC,EAAOlC,OAAQiyC,CAAC,GAChC6O,GAAY5+C,EAAO+vC,GAEvB,OAAO6O,GAEXJ,GAAK9hD,UAAUmiD,yBAA2B,SAAUC,EAAWC,GAQ3D,IAPA,IAAIC,EAAgB,IAAIC,GAIpBrsC,GAHJ3V,KAAKyhD,YAAcM,EAAcE,eAAeJ,EAAWC,CAAK,EAChE9hD,KAAKkiD,uBACLliD,KAAKmiD,QAAQ,EAAGniD,KAAKyhD,YAAY5gD,OAAS,CAAC,EAChCb,KAAKwhD,gBAAgBK,CAAS,GAErCO,EAAgB,GACXp/C,EAAI,EAAGA,EAAIhD,KAAKqiD,QAAQxhD,OAAQmC,CAAC,GAEtCo/C,GAAiBzsC,EADL3V,KAAKqiD,QAAQr/C,IAG7B,OAAOo/C,EAAc1iD,YAEzB6hD,GAAK9hD,UAAUyiD,qBAAuB,WAClC,IAAK,IAAIl/C,EAAI,EAAGA,EAAIhD,KAAKyhD,YAAY5gD,OAAQmC,CAAC,GAC1ChD,KAAKqiD,QAAQr/C,GAAKA,GAG1Bu+C,GAAK9hD,UAAU0iD,QAAU,SAAUG,EAAQC,GAKvC,IAJA,IAAI36B,EAAM5nB,KAAKyhD,YAAYa,GACvB/vC,EAAMqV,EACN46B,EAAM56B,EACN66B,EAAO76B,EACF5kB,EAAIs/C,EAAS,EAAGt/C,GAAKu/C,EAAQ,EAAEv/C,EAAG,CACvC,IAAI8S,EAAO9V,KAAKyhD,YAAYz+C,GACjB4kB,EAAP9R,EACA8R,EAAM9R,EAEDA,EAAOvD,IACZA,EAAMuD,GAEV0sC,GAAO1sC,EACP2sC,GAAQ3sC,EAEZ,GAAmB,IAAP,EAAP2sC,GAGL,GAAkB,IAAP,EAAND,GACDxiD,KAAK0iD,UAAUJ,EAAQC,EAAS,CAAC,OAIrC,IADAhwC,GAAO,EACOA,GAAPqV,GAAY,CAGf,IAFA,IAAI+6B,EAASL,IAEA,CACT,KAAOK,GAAUJ,GACTviD,EAAAA,KAAKyhD,YAAYkB,IAAW/6B,IAGhC+6B,GAAU,EAEd,GAAaJ,EAATI,EACA,MAGJ,IADA,IAAIC,EAAOD,EAAS,EACbC,GAAQL,GACPviD,EAAAA,KAAKyhD,YAAYmB,GAAQh7B,IAG7Bg7B,GAAQ,EAEZ5iD,KAAK0iD,UAAUC,EAAQC,CAAI,EAC3BD,EAASC,EAAO,EAEpBh7B,EAAAA,IAGR25B,GAAK9hD,UAAUijD,UAAY,SAAU1/C,EAAG8vC,GACpC,IAAIjyC,GAAUmC,EAAI8vC,GAAK,EAEvB,IADA,EAAEA,EACK9vC,EAAInC,EAAQ,EAAEmC,EAAG,EAAE8vC,EAAG,CACzB,IAAIlO,EAAO5kC,KAAKqiD,QAAQr/C,GACxBhD,KAAKqiD,QAAQr/C,GAAKhD,KAAKqiD,QAAQvP,GAC/B9yC,KAAKqiD,QAAQvP,GAAKlO,IAG1B2c,GAAK9hD,UAAUojD,OAAS,WACpB7iD,KAAK0hD,yBAAyBthD,SAAS,GAAI,EAAE,EAC7CJ,KAAK0hD,yBAAyBthD,SAAS,GAAI,EAAE,EAC7CJ,KAAK0hD,yBAAyBthD,SAAS,GAAI,EAAE,EAC7CJ,KAAK0hD,yBAAyBthD,SAAS,GAAI,EAAE,EAC7CJ,KAAK0hD,yBAAyBthD,SAAS,GAAI,EAAE,EAC7CJ,KAAK0hD,yBAAyBthD,SAAS,GAAI,EAAE,EAC7CJ,KAAK0hD,yBAAyBthD,SAAS,IAAK,GAAG,EAC/CJ,KAAK0hD,yBAAyBthD,SAAS,IAAK,GAAG,EAC/CJ,KAAK0hD,yBAAyBthD,SAAS,IAAK,GAAG,EAC/CJ,KAAK0hD,yBAAyBthD,SAAS,IAAK,GAAG,EAC/CJ,KAAK0hD,yBAAyBthD,SAAS,KAAM,IAAI,EACjDJ,KAAK0hD,yBAAyBthD,SAAS,KAAM,IAAI,EACjDJ,KAAK0hD,yBAAyBthD,SAAS,KAAM,IAAI,EACjDJ,KAAK0hD,yBAAyBthD,SAAS,KAAM,IAAI,EACjDJ,KAAK0hD,yBAAyBthD,SAAS,KAAM,IAAI,EACjDJ,KAAK0hD,yBAAyBthD,SAAS,KAAM,IAAI,EACjDJ,KAAK0hD,yBAAyBthD,SAAS,KAAM,IAAI,EACjDJ,KAAK0hD,yBAAyBthD,SAAS,KAAM,IAAI,EACjDJ,KAAK0hD,yBAAyBthD,SAAS,KAAM,IAAI,EACjDJ,KAAK0hD,yBAAyBthD,SAAS,KAAM,IAAI,EACjDJ,KAAK0hD,yBAAyBthD,SAAS,KAAM,IAAI,EACjDJ,KAAK0hD,yBAAyBthD,SAAS,KAAM,IAAI,EACjDJ,KAAK0hD,yBAAyBthD,SAAS,KAAM,IAAI,EACjDJ,KAAK0hD,yBAAyBthD,SAAS,KAAM,IAAI,EACjDJ,KAAK0hD,yBAAyBthD,SAAS,KAAM,KAAK,EAClDJ,KAAK0hD,yBAAyBthD,SAAS,KAAM,IAAI,EACjDJ,KAAK0hD,yBAAyBthD,SAAS,KAAM,IAAI,EACjDJ,KAAK0hD,yBAAyBthD,SAAS,KAAM,IAAI,EACjDJ,KAAK0hD,yBAAyBthD,SAAS,KAAM,IAAI,EACjDJ,KAAK0hD,yBAAyBthD,SAAS,KAAM,IAAI,EACjDJ,KAAK0hD,yBAAyBthD,SAAS,KAAM,IAAI,EACjDJ,KAAK0hD,yBAAyBthD,SAAS,KAAM,IAAI,EACjDJ,KAAK0hD,yBAAyBthD,SAAS,KAAM,IAAI,EACjDJ,KAAK0hD,yBAAyBthD,SAAS,KAAM,IAAI,EACjDJ,KAAK0hD,yBAAyBthD,SAAS,KAAM,IAAI,EACjDJ,KAAK0hD,yBAAyBthD,SAAS,KAAM,IAAI,EACjDJ,KAAK0hD,yBAAyBthD,SAAS,KAAM,IAAI,EACjDJ,KAAK0hD,yBAAyBthD,SAAS,KAAM,IAAI,EACjDJ,KAAK0hD,yBAAyBthD,SAAS,KAAM,IAAI,EACjDJ,KAAK0hD,yBAAyBthD,SAAS,KAAM,IAAI,EACjDJ,KAAK0hD,yBAAyBthD,SAAS,KAAM,IAAI,EACjDJ,KAAK0hD,yBAAyBthD,SAAS,KAAM,IAAI,EACjDJ,KAAK0hD,yBAAyBthD,SAAS,KAAM,IAAI,EACjDJ,KAAK0hD,yBAAyBthD,SAAS,KAAM,IAAI,EACjDJ,KAAK0hD,yBAAyBthD,SAAS,KAAM,IAAI,EACjDJ,KAAK0hD,yBAAyBthD,SAAS,KAAM,IAAI,EACjDJ,KAAK0hD,yBAAyBthD,SAAS,KAAM,IAAI,EACjDJ,KAAK0hD,yBAAyBthD,SAAS,KAAM,IAAI,EACjDJ,KAAK0hD,yBAAyBthD,SAAS,KAAM,IAAI,EACjDJ,KAAK0hD,yBAAyBthD,SAAS,KAAM,IAAI,EACjDJ,KAAK0hD,yBAAyBthD,SAAS,KAAM,IAAI,EACjDJ,KAAK0hD,yBAAyBthD,SAAS,KAAM,IAAI,EACjDJ,KAAK0hD,yBAAyBthD,SAAS,KAAM,IAAI,EACjDJ,KAAK0hD,yBAAyBthD,SAAS,KAAM,IAAI,EACjDJ,KAAK0hD,yBAAyBthD,SAAS,KAAM,IAAI,EACjDJ,KAAK0hD,yBAAyBthD,SAAS,KAAM,IAAI,EACjDJ,KAAK0hD,yBAAyBthD,SAAS,KAAM,IAAI,EACjDJ,KAAK0hD,yBAAyBthD,SAAS,KAAM,IAAI,EACjDJ,KAAK0hD,yBAAyBthD,SAAS,KAAM,IAAI,EACjDJ,KAAK0hD,yBAAyBthD,SAAS,KAAM,IAAI,EACjDJ,KAAK0hD,yBAAyBthD,SAAS,KAAM,IAAI,EACjDJ,KAAK0hD,yBAAyBthD,SAAS,KAAM,IAAI,EACjDJ,KAAK0hD,yBAAyBthD,SAAS,KAAM,IAAI,EACjDJ,KAAK0hD,yBAAyBthD,SAAS,KAAM,IAAI,EACjDJ,KAAK0hD,yBAAyBthD,SAAS,KAAM,IAAI,EACjDJ,KAAK0hD,yBAAyBthD,SAAS,KAAM,IAAI,EACjDJ,KAAK0hD,yBAAyBthD,SAAS,KAAM,IAAI,EACjDJ,KAAK0hD,yBAAyBthD,SAAS,KAAM,IAAI,EACjDJ,KAAK0hD,yBAAyBthD,SAAS,KAAM,IAAI,EACjDJ,KAAK0hD,yBAAyBthD,SAAS,KAAM,IAAI,EACjDJ,KAAK0hD,yBAAyBthD,SAAS,KAAM,IAAI,EACjDJ,KAAK0hD,yBAAyBthD,SAAS,KAAM,IAAI,EACjDJ,KAAK0hD,yBAAyBthD,SAAS,KAAM,IAAI,EACjDJ,KAAK0hD,yBAAyBthD,SAAS,KAAM,IAAI,EACjDJ,KAAK0hD,yBAAyBthD,SAAS,KAAM,KAAK,EAClDJ,KAAK0hD,yBAAyBthD,SAAS,KAAM,IAAI,EACjDJ,KAAK0hD,yBAAyBthD,SAAS,KAAM,IAAI,EACjDJ,KAAK0hD,yBAAyBthD,SAAS,KAAM,KAAK,EAClDJ,KAAK0hD,yBAAyBthD,SAAS,KAAM,KAAK,EAClDJ,KAAK0hD,yBAAyBthD,SAAS,KAAM,KAAK,EAClDJ,KAAK0hD,yBAAyBthD,SAAS,KAAM,KAAK,EAClDJ,KAAK0hD,yBAAyBthD,SAAS,KAAM,IAAI,EACjDJ,KAAK0hD,yBAAyBthD,SAAS,KAAM,IAAI,EACjDJ,KAAK0hD,yBAAyBthD,SAAS,KAAM,IAAI,EACjDJ,KAAK0hD,yBAAyBthD,SAAS,KAAM,IAAI,EACjDJ,KAAK0hD,yBAAyBthD,SAAS,KAAM,IAAI,EACjDJ,KAAK0hD,yBAAyBthD,SAAS,KAAM,IAAI,EAEjDJ,KAAK0hD,yBAAyBthD,SAAS,KAAM,IAAI,EACjDJ,KAAK0hD,yBAAyBthD,SAAS,KAAM,IAAI,EACjDJ,KAAK0hD,yBAAyBthD,SAAS,KAAM,IAAI,EACjDJ,KAAK0hD,yBAAyBthD,SAAS,KAAM,IAAI,EACjDJ,KAAK0hD,yBAAyBthD,SAAS,KAAM,IAAI,EACjDJ,KAAK0hD,yBAAyBthD,SAAS,KAAM,IAAI,EACjDJ,KAAK0hD,yBAAyBthD,SAAS,KAAM,IAAI,EACjDJ,KAAK0hD,yBAAyBthD,SAAS,KAAM,IAAI,EACjDJ,KAAK0hD,yBAAyBthD,SAAS,KAAM,IAAI,EACjDJ,KAAK0hD,yBAAyBthD,SAAS,KAAM,IAAI,EACjDJ,KAAK0hD,yBAAyBthD,SAAS,KAAM,IAAI,EACjDJ,KAAK0hD,yBAAyBthD,SAAS,KAAM,IAAI,EACjDJ,KAAK0hD,yBAAyBthD,SAAS,KAAM,IAAI,EACjDJ,KAAK0hD,yBAAyBthD,SAAS,KAAM,IAAI,EACjDJ,KAAK0hD,yBAAyBthD,SAAS,KAAM,IAAI,EACjDJ,KAAK0hD,yBAAyBthD,SAAS,KAAM,IAAI,EACjDJ,KAAK0hD,yBAAyBthD,SAAS,KAAM,IAAI,EACjDJ,KAAK0hD,yBAAyBthD,SAAS,KAAM,IAAI,EACjDJ,KAAK0hD,yBAAyBthD,SAAS,KAAM,IAAI,EACjDJ,KAAK0hD,yBAAyBthD,SAAS,KAAM,IAAI,EACjDJ,KAAK0hD,yBAAyBthD,SAAS,KAAM,IAAI,EACjDJ,KAAK0hD,yBAAyBthD,SAAS,KAAM,IAAI,EACjDJ,KAAK0hD,yBAAyBthD,SAAS,KAAM,IAAI,EACjDJ,KAAK0hD,yBAAyBthD,SAAS,KAAM,IAAI,EACjDJ,KAAK0hD,yBAAyBthD,SAAS,KAAM,IAAI,EACjDJ,KAAK0hD,yBAAyBthD,SAAS,KAAM,IAAI,EACjDJ,KAAK0hD,yBAAyBthD,SAAS,KAAM,IAAI,EACjDJ,KAAK0hD,yBAAyBthD,SAAS,KAAM,IAAI,EACjDJ,KAAK0hD,yBAAyBthD,SAAS,KAAM,IAAI,EACjDJ,KAAK0hD,yBAAyBthD,SAAS,KAAM,IAAI,EACjDJ,KAAK0hD,yBAAyBthD,SAAS,KAAM,IAAI,EACjDJ,KAAK0hD,yBAAyBthD,SAAS,KAAM,IAAI,EACjDJ,KAAK0hD,yBAAyBthD,SAAS,KAAM,IAAI,EACjDJ,KAAK0hD,yBAAyBthD,SAAS,KAAM,IAAI,EACjDJ,KAAK0hD,yBAAyBthD,SAAS,KAAM,IAAI,EACjDJ,KAAK0hD,yBAAyBthD,SAAS,KAAM,IAAI,EACjDJ,KAAK0hD,yBAAyBthD,SAAS,KAAM,IAAI,EACjDJ,KAAK0hD,yBAAyBthD,SAAS,KAAM,IAAI,EACjDJ,KAAK0hD,yBAAyBthD,SAAS,KAAM,IAAI,EACjDJ,KAAK0hD,yBAAyBthD,SAAS,KAAM,IAAI,EACjDJ,KAAK0hD,yBAAyBthD,SAAS,KAAM,IAAI,EACjDJ,KAAK0hD,yBAAyBthD,SAAS,KAAM,IAAI,EACjDJ,KAAK0hD,yBAAyBthD,SAAS,KAAM,IAAI,EACjDJ,KAAK0hD,yBAAyBthD,SAAS,KAAM,IAAI,EACjDJ,KAAK0hD,yBAAyBthD,SAAS,KAAM,IAAI,EACjDJ,KAAK0hD,yBAAyBthD,SAAS,KAAM,IAAI,EACjDJ,KAAK0hD,yBAAyBthD,SAAS,KAAM,IAAI,EACjDJ,KAAK0hD,yBAAyBthD,SAAS,KAAM,IAAI,EACjDJ,KAAK0hD,yBAAyBthD,SAAS,KAAM,IAAI,EACjDJ,KAAK0hD,yBAAyBthD,SAAS,KAAM,IAAI,EACjDJ,KAAK0hD,yBAAyBthD,SAAS,KAAM,IAAI,EACjDJ,KAAK0hD,yBAAyBthD,SAAS,MAAO,KAAK,EACnDJ,KAAK0hD,yBAAyBthD,SAAS,MAAO,KAAK,EACnDJ,KAAK0hD,yBAAyBthD,SAAS,MAAO,KAAK,EACnDJ,KAAK0hD,yBAAyBthD,SAAS,MAAO,KAAK,EACnDJ,KAAK0hD,yBAAyBthD,SAAS,MAAO,KAAK,EACnDJ,KAAK0hD,yBAAyBthD,SAAS,MAAO,KAAK,EACnDJ,KAAK0hD,yBAAyBthD,SAAS,MAAO,KAAK,EACnDJ,KAAK0hD,yBAAyBthD,SAAS,MAAO,KAAK,EACnDJ,KAAK0hD,yBAAyBthD,SAAS,MAAO,KAAK,EACnDJ,KAAK0hD,yBAAyBthD,SAAS,MAAO,KAAK,EACnDJ,KAAK0hD,yBAAyBthD,SAAS,MAAO,KAAK,EACnDJ,KAAK0hD,yBAAyBthD,SAAS,MAAO,KAAK,EACnDJ,KAAK0hD,yBAAyBthD,SAAS,MAAO,KAAK,EACnDJ,KAAK0hD,yBAAyBthD,SAAS,MAAO,KAAK,EACnDJ,KAAK0hD,yBAAyBthD,SAAS,MAAO,KAAK,EACnDJ,KAAK0hD,yBAAyBthD,SAAS,MAAO,KAAK,EACnDJ,KAAK0hD,yBAAyBthD,SAAS,MAAO,KAAK,EACnDJ,KAAK0hD,yBAAyBthD,SAAS,MAAO,KAAK,EACnDJ,KAAK0hD,yBAAyBthD,SAAS,MAAO,KAAK,EACnDJ,KAAK0hD,yBAAyBthD,SAAS,MAAO,KAAK,EACnDJ,KAAK0hD,yBAAyBthD,SAAS,MAAO,KAAK,EACnDJ,KAAK0hD,yBAAyBthD,SAAS,MAAO,KAAK,EACnDJ,KAAK0hD,yBAAyBthD,SAAS,MAAO,KAAK,EACnDJ,KAAK0hD,yBAAyBthD,SAAS,MAAO,KAAK,EACnDJ,KAAK0hD,yBAAyBthD,SAAS,MAAO,KAAK,EACnDJ,KAAK0hD,yBAAyBthD,SAAS,MAAO,KAAK,EACnDJ,KAAK0hD,yBAAyBthD,SAAS,MAAO,KAAK,EACnDJ,KAAK0hD,yBAAyBthD,SAAS,MAAO,KAAK,EACnDJ,KAAK0hD,yBAAyBthD,SAAS,MAAO,KAAK,EACnDJ,KAAK0hD,yBAAyBthD,SAAS,MAAO,KAAK,EACnDJ,KAAK0hD,yBAAyBthD,SAAS,MAAO,KAAK,EACnDJ,KAAK0hD,yBAAyBthD,SAAS,MAAO,KAAK,EACnDJ,KAAK0hD,yBAAyBthD,SAAS,MAAO,KAAK,EACnDJ,KAAK0hD,yBAAyBthD,SAAS,MAAO,KAAK,EACnDJ,KAAK0hD,yBAAyBthD,SAAS,MAAO,KAAK,EACnDJ,KAAK0hD,yBAAyBthD,SAAS,MAAO,KAAK,EACnDJ,KAAK0hD,yBAAyBthD,SAAS,MAAO,KAAK,EACnDJ,KAAK0hD,yBAAyBthD,SAAS,MAAO,KAAK,EACnDJ,KAAK0hD,yBAAyBthD,SAAS,MAAO,KAAK,EACnDJ,KAAK0hD,yBAAyBthD,SAAS,MAAO,KAAK,EACnDJ,KAAK0hD,yBAAyBthD,SAAS,MAAO,KAAK,EACnDJ,KAAK0hD,yBAAyBthD,SAAS,MAAO,KAAK,EACnDJ,KAAK0hD,yBAAyBthD,SAAS,MAAO,KAAK,EACnDJ,KAAK0hD,yBAAyBthD,SAAS,MAAO,KAAK,EACnDJ,KAAK0hD,yBAAyBthD,SAAS,MAAO,KAAK,EACnDJ,KAAK0hD,yBAAyBthD,SAAS,MAAO,KAAK,EACnDJ,KAAK0hD,yBAAyBthD,SAAS,MAAO,KAAK,EACnDJ,KAAK0hD,yBAAyBthD,SAAS,MAAO,KAAK,EACnDJ,KAAK0hD,yBAAyBthD,SAAS,MAAO,KAAK,EACnDJ,KAAK0hD,yBAAyBthD,SAAS,MAAO,KAAK,EACnDJ,KAAK0hD,yBAAyBthD,SAAS,MAAO,IAAI,EAClDJ,KAAK0hD,yBAAyBthD,SAAS,MAAO,KAAK,EACnDJ,KAAK0hD,yBAAyBthD,SAAS,MAAO,KAAK,EACnDJ,KAAK0hD,yBAAyBthD,SAAS,MAAO,KAAK,EACnDJ,KAAK0hD,yBAAyBthD,SAAS,MAAO,KAAK,EACnDJ,KAAK0hD,yBAAyBthD,SAAS,MAAO,KAAK,EACnDJ,KAAK0hD,yBAAyBthD,SAAS,MAAO,KAAK,EACnDJ,KAAK0hD,yBAAyBthD,SAAS,MAAO,KAAK,EACnDJ,KAAK0hD,yBAAyBthD,SAAS,MAAO,KAAK,EACnDJ,KAAK0hD,yBAAyBthD,SAAS,MAAO,KAAK,EACnDJ,KAAK0hD,yBAAyBthD,SAAS,MAAO,KAAK,EACnDJ,KAAK0hD,yBAAyBthD,SAAS,MAAO,KAAK,EACnDJ,KAAK0hD,yBAAyBthD,SAAS,MAAO,KAAK,EACnDJ,KAAK0hD,yBAAyBthD,SAAS,MAAO,KAAK,EACnDJ,KAAK0hD,yBAAyBthD,SAAS,MAAO,KAAK,EACnDJ,KAAK0hD,yBAAyBthD,SAAS,MAAO,IAAI,EAClDJ,KAAK0hD,yBAAyBthD,SAAS,MAAO,KAAK,EACnDJ,KAAK0hD,yBAAyBthD,SAAS,MAAO,KAAK,EACnDJ,KAAK0hD,yBAAyBthD,SAAS,MAAO,KAAK,EACnDJ,KAAK0hD,yBAAyBthD,SAAS,MAAO,KAAK,EACnDJ,KAAK0hD,yBAAyBthD,SAAS,MAAO,KAAK,EACnDJ,KAAK0hD,yBAAyBthD,SAAS,MAAO,KAAK,EACnDJ,KAAK0hD,yBAAyBthD,SAAS,MAAO,KAAK,EACnDJ,KAAK0hD,yBAAyBthD,SAAS,MAAO,KAAK,EACnDJ,KAAK0hD,yBAAyBthD,SAAS,MAAO,KAAK,EACnDJ,KAAK0hD,yBAAyBthD,SAAS,MAAO,KAAK,EACnDJ,KAAK0hD,yBAAyBthD,SAAS,MAAO,KAAK,EACnDJ,KAAK0hD,yBAAyBthD,SAAS,MAAO,KAAK,EACnDJ,KAAK0hD,yBAAyBthD,SAAS,MAAO,KAAK,EACnDJ,KAAK0hD,yBAAyBthD,SAAS,MAAO,KAAK,EACnDJ,KAAK0hD,yBAAyBthD,SAAS,MAAO,KAAK,EACnDJ,KAAK0hD,yBAAyBthD,SAAS,MAAO,KAAK,EACnDJ,KAAK0hD,yBAAyBthD,SAAS,MAAO,KAAK,EACnDJ,KAAK0hD,yBAAyBthD,SAAS,MAAO,KAAK,EACnDJ,KAAK0hD,yBAAyBthD,SAAS,MAAO,KAAK,EACnDJ,KAAK0hD,yBAAyBthD,SAAS,MAAO,KAAK,EACnDJ,KAAK0hD,yBAAyBthD,SAAS,MAAO,KAAK,EACnDJ,KAAK0hD,yBAAyBthD,SAAS,MAAO,KAAK,EACnDJ,KAAK0hD,yBAAyBthD,SAAS,MAAO,KAAK,EACnDJ,KAAK0hD,yBAAyBthD,SAAS,MAAO,KAAK,EACnDJ,KAAK0hD,yBAAyBthD,SAAS,MAAO,KAAK,EACnDJ,KAAK0hD,yBAAyBthD,SAAS,MAAO,KAAK,EACnDJ,KAAK0hD,yBAAyBthD,SAAS,MAAO,KAAK,EACnDJ,KAAK0hD,yBAAyBthD,SAAS,MAAO,KAAK,EACnDJ,KAAK0hD,yBAAyBthD,SAAS,MAAO,KAAK,EACnDJ,KAAK0hD,yBAAyBthD,SAAS,MAAO,KAAK,EACnDJ,KAAK0hD,yBAAyBthD,SAAS,MAAO,KAAK,EACnDJ,KAAK0hD,yBAAyBthD,SAAS,MAAO,KAAK,EACnDJ,KAAK0hD,yBAAyBthD,SAAS,MAAO,KAAK,EACnDJ,KAAK0hD,yBAAyBthD,SAAS,MAAO,KAAK,EACnDJ,KAAK0hD,yBAAyBthD,SAAS,MAAO,KAAK,EACnDJ,KAAK0hD,yBAAyBthD,SAAS,MAAO,KAAK,EACnDJ,KAAK0hD,yBAAyBthD,SAAS,MAAO,KAAK,EACnDJ,KAAK0hD,yBAAyBthD,SAAS,MAAO,KAAK,EACnDJ,KAAK0hD,yBAAyBthD,SAAS,MAAO,KAAK,EACnDJ,KAAK0hD,yBAAyBthD,SAAS,MAAO,KAAK,EACnDJ,KAAK0hD,yBAAyBthD,SAAS,MAAO,KAAK,EACnDJ,KAAK0hD,yBAAyBthD,SAAS,MAAO,KAAK,EACnDJ,KAAK0hD,yBAAyBthD,SAAS,MAAO,KAAK,EACnDJ,KAAK0hD,yBAAyBthD,SAAS,MAAO,KAAK,EACnDJ,KAAK0hD,yBAAyBthD,SAAS,MAAO,KAAK,EACnDJ,KAAK0hD,yBAAyBthD,SAAS,MAAO,KAAK,EACnDJ,KAAK0hD,yBAAyBthD,SAAS,MAAO,KAAK,EACnDJ,KAAK0hD,yBAAyBthD,SAAS,MAAO,KAAK,EACnDJ,KAAK0hD,yBAAyBthD,SAAS,MAAO,KAAK,EACnDJ,KAAK0hD,yBAAyBthD,SAAS,MAAO,KAAK,EACnDJ,KAAK0hD,yBAAyBthD,SAAS,MAAO,KAAK,EACnDJ,KAAK0hD,yBAAyBthD,SAAS,MAAO,KAAK,EACnDJ,KAAK0hD,yBAAyBthD,SAAS,MAAO,KAAK,EACnDJ,KAAK0hD,yBAAyBthD,SAAS,MAAO,KAAK,EACnDJ,KAAK0hD,yBAAyBthD,SAAS,MAAO,KAAK,EACnDJ,KAAK0hD,yBAAyBthD,SAAS,MAAO,KAAK,EACnDJ,KAAK0hD,yBAAyBthD,SAAS,MAAO,KAAK,EACnDJ,KAAK0hD,yBAAyBthD,SAAS,MAAO,KAAK,EACnDJ,KAAK0hD,yBAAyBthD,SAAS,MAAO,KAAK,EACnDJ,KAAK0hD,yBAAyBthD,SAAS,MAAO,KAAK,EACnDJ,KAAK0hD,yBAAyBthD,SAAS,MAAO,KAAK,EACnDJ,KAAK0hD,yBAAyBthD,SAAS,MAAO,KAAK,EACnDJ,KAAK0hD,yBAAyBthD,SAAS,MAAO,KAAK,EACnDJ,KAAK0hD,yBAAyBthD,SAAS,MAAO,KAAK,EACnDJ,KAAK0hD,yBAAyBthD,SAAS,MAAO,KAAK,EACnDJ,KAAK0hD,yBAAyBthD,SAAS,MAAO,KAAK,EACnDJ,KAAK0hD,yBAAyBthD,SAAS,MAAO,KAAK,EACnDJ,KAAK0hD,yBAAyBthD,SAAS,MAAO,KAAK,EACnDJ,KAAK0hD,yBAAyBthD,SAAS,MAAO,KAAK,EACnDJ,KAAK0hD,yBAAyBthD,SAAS,MAAO,KAAK,EACnDJ,KAAK0hD,yBAAyBthD,SAAS,MAAO,KAAK,EACnDJ,KAAK0hD,yBAAyBthD,SAAS,MAAO,KAAK,EACnDJ,KAAK0hD,yBAAyBthD,SAAS,MAAO,KAAK,EACnDJ,KAAK0hD,yBAAyBthD,SAAS,MAAO,KAAK,EACnDJ,KAAK0hD,yBAAyBthD,SAAS,MAAO,IAAI,EAClDJ,KAAK0hD,yBAAyBthD,SAAS,MAAO,IAAI,EAClDJ,KAAK0hD,yBAAyBthD,SAAS,MAAO,IAAI,EAClDJ,KAAK0hD,yBAAyBthD,SAAS,MAAO,IAAI,EAClDJ,KAAK0hD,yBAAyBthD,SAAS,MAAO,KAAK,EACnDJ,KAAK0hD,yBAAyBthD,SAAS,MAAO,KAAK,EACnDJ,KAAK0hD,yBAAyBthD,SAAS,MAAO,IAAK,EACnDJ,KAAK0hD,yBAAyBthD,SAAS,KAAO,KAAK,EACnDJ,KAAK0hD,yBAAyBthD,SAAS,MAAO,KAAK,EACnDJ,KAAK0hD,yBAAyBthD,SAAS,MAAO,KAAK,EACnDJ,KAAK0hD,yBAAyBthD,SAAS,MAAO,KAAK,EACnDJ,KAAK0hD,yBAAyBthD,SAAS,MAAO,KAAK,EACnDJ,KAAK0hD,yBAAyBthD,SAAS,MAAO,KAAK,EACnDJ,KAAK0hD,yBAAyBthD,SAAS,MAAO,KAAK,EACnDJ,KAAK0hD,yBAAyBthD,SAAS,MAAO,KAAK,EACnDJ,KAAK0hD,yBAAyBthD,SAAS,MAAO,KAAK,EACnDJ,KAAK0hD,yBAAyBthD,SAAS,MAAO,KAAK,EACnDJ,KAAK0hD,yBAAyBthD,SAAS,MAAO,KAAK,EACnDJ,KAAK0hD,yBAAyBthD,SAAS,MAAO,KAAK,EACnDJ,KAAK0hD,yBAAyBthD,SAAS,MAAO,KAAK,EACnDJ,KAAK0hD,yBAAyBthD,SAAS,MAAO,KAAK,EACnDJ,KAAK0hD,yBAAyBthD,SAAS,MAAO,KAAK,EACnDJ,KAAK0hD,yBAAyBthD,SAAS,MAAO,KAAK,EACnDJ,KAAK0hD,yBAAyBthD,SAAS,MAAO,KAAK,EACnDJ,KAAK0hD,yBAAyBthD,SAAS,MAAO,KAAK,EACnDJ,KAAK0hD,yBAAyBthD,SAAS,MAAO,KAAK,EACnDJ,KAAK0hD,yBAAyBthD,SAAS,MAAO,KAAK,EACnDJ,KAAK0hD,yBAAyBthD,SAAS,MAAO,KAAK,EACnDJ,KAAK0hD,yBAAyBthD,SAAS,MAAO,KAAK,EACnDJ,KAAK0hD,yBAAyBthD,SAAS,MAAO,KAAK,EACnDJ,KAAK0hD,yBAAyBthD,SAAS,MAAO,KAAK,EACnDJ,KAAK0hD,yBAAyBthD,SAAS,MAAO,KAAK,EACnDJ,KAAK0hD,yBAAyBthD,SAAS,MAAO,KAAK,EACnDJ,KAAK0hD,yBAAyBthD,SAAS,MAAO,KAAK,EACnDJ,KAAK0hD,yBAAyBthD,SAAS,MAAO,KAAK,EACnDJ,KAAK0hD,yBAAyBthD,SAAS,MA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"}